(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3756403,      83759]
NotebookOptionsPosition[   3717732,      83134]
NotebookOutlinePosition[   3719216,      83177]
CellTagsIndexPosition[   3719141,      83172]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Textually Describing Wolfram Language Expressions", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
   3.770055604008165*^9, 3.7700556066618843`*^9}, {3.8026206112486477`*^9, 
   3.802620665254437*^9}, 3.802620959982905*^9, 
   3.8028772382599983`*^9},ExpressionUUID->"7f5a763c-439b-409d-85d9-\
b001eb779415"],

Cell["Renan Germano", "Author",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.802620672270149*^9, 
  3.8026206745809307`*^9}},ExpressionUUID->"17c07b4e-577f-4fd8-bb63-\
78ea3b522bfe"],

Cell["Mackenzie Presbyterian University", "Affiliation",
 CellChangeTimes->{{3.802186209582007*^9, 3.802186214327465*^9}, {
  3.802620699271461*^9, 3.802620702919016*^9}, {3.802696462881497*^9, 
  3.8026964650060863`*^9}, {3.8027433827476187`*^9, 
  3.8027433998208113`*^9}},ExpressionUUID->"96c2b484-c964-462d-9af7-\
4e5a7606bcb7"],

Cell[TextData[{
 StyleBox["Goal",
  FontWeight->"Bold",
  FontSlant->"Plain"],
 StyleBox["\n",
  FontWeight->"Bold"],
 StyleBox["The objective of the present project is to create a function to \
textually describe Wolfram Language expressions. This is done by developing \
an algorithm that is capable of better describing the input, based on its \
symbolic structure, where the output is a human readable String. Thinking \
about accessibility for visually impaired, this text could be used as an \
automatically generated alternative description for graphics and related \
content.\n",
  FontSlant->"Plain"],
 StyleBox["Main Results in Details",
  FontWeight->"Bold"],
 "\n",
 StyleBox["Future works",
  FontWeight->"Bold"],
 "\n"
}], "Abstract",
 CellChangeTimes->{{3.802186680026499*^9, 3.802186711462531*^9}, {
   3.80262070715917*^9, 3.8026209186854143`*^9}, {3.8026209743391247`*^9, 
   3.8026209785512533`*^9}, {3.802621091699583*^9, 3.802621104635149*^9}, 
   3.802877231698427*^9, {3.803635756923841*^9, 3.803635769328648*^9}, {
   3.8036358336320877`*^9, 3.803635835192028*^9}, {3.803645044363784*^9, 
   3.803645046747116*^9}},ExpressionUUID->"bd44fc5d-a918-4ecb-a444-\
9098256d0564"],

Cell["Wolfram Community Post (material for blog post)", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 3.8021873367169733`*^9}}],

Cell[CellGroupData[{

Cell["Complete project work", "Section",
 CellChangeTimes->{{3.802186221820878*^9, 3.8021862228082314`*^9}, {
  3.802187309884531*^9, 3.8021873367169733`*^9}, {3.802187387379855*^9, 
  3.802187429405521*^9}}],

Cell[CellGroupData[{

Cell["Manipulating Wolfram Language symbols", "Subsection",
 CellChangeTimes->{{3.802869805220189*^9, 
  3.802869823626292*^9}},ExpressionUUID->"b3dc356f-ccd5-49db-af46-\
d9134c1928e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "WolframLanguageData"}]], "Input",
 CellChangeTimes->{{3.8026281658367777`*^9, 3.802628181957111*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"30f38725-fcc6-4450-bdc8-c71611c60c81"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/WolframLanguageData",
              ButtonNote->"paclet:ref/WolframLanguageData"],
             "\"paclet:ref/WolframLanguageData\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WolframLanguageData\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"entity\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"property\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the value of \
the specified \\!\\(\\*StyleBox[\\\"property\\\", \\\"TI\\\"]\\) for the \
Wolfram Language symbol \\!\\(\\*StyleBox[\\\"entity\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"WolframLanguageData\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"entity\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"entity\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"property\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
list of property values for the specified Wolfram Language symbol \
entities.\\n\\!\\(\\*RowBox[{\\\"WolframLanguageData\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"entity\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"property\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"annotation\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
specified \\!\\(\\*StyleBox[\\\"annotation\\\", \\\"TI\\\"]\\) associated \
with the given \\!\\(\\*StyleBox[\\\"property\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/WolframLanguageData", 
                    "paclet:ref/WolframLanguageData", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
WolframLanguageData.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
WolframLanguageData.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`WolframLanguageData\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/WolframLanguageData",
              ButtonNote->"paclet:ref/WolframLanguageData"],
             "\"paclet:ref/WolframLanguageData\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WolframLanguageData\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"entity\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"property\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the value of \
the specified \\!\\(\\*StyleBox[\\\"property\\\", \\\"TI\\\"]\\) for the \
Wolfram Language symbol \\!\\(\\*StyleBox[\\\"entity\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"WolframLanguageData\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"entity\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"entity\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"property\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
list of property values for the specified Wolfram Language symbol \
entities.\\n\\!\\(\\*RowBox[{\\\"WolframLanguageData\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"entity\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"property\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"annotation\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
specified \\!\\(\\*StyleBox[\\\"annotation\\\", \\\"TI\\\"]\\) associated \
with the given \\!\\(\\*StyleBox[\\\"property\\\", \\\"TI\\\"]\\).\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"WolframLanguageData\", \"[\", \
RowBox[{StyleBox[\"entity\", \"TI\"], \",\", StyleBox[\"property\", \
\"TI\"]}], \"]\"}]\) gives the value of the specified \
\!\(\*StyleBox[\"property\", \"TI\"]\) for the Wolfram Language symbol \
\!\(\*StyleBox[\"entity\", \"TI\"]\).\n\!\(\*RowBox[{\"WolframLanguageData\", \
\"[\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"entity\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"entity\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}], \",\", StyleBox[\"property\", \"TI\"]}], \"]\"}]\) gives \
a list of property values for the specified Wolfram Language symbol entities.\
\n\!\(\*RowBox[{\"WolframLanguageData\", \"[\", RowBox[{StyleBox[\"entity\", \
\"TI\"], \",\", StyleBox[\"property\", \"TI\"], \",\", \
StyleBox[\"annotation\", \"TI\"]}], \"]\"}]\) gives the specified \
\!\(\*StyleBox[\"annotation\", \"TI\"]\) associated with the given \
\!\(\*StyleBox[\"property\", \"TI\"]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/WolframLanguageData", "Web" -> 
      "http://reference.wolfram.com/language/ref/WolframLanguageData.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`WolframLanguageData"], False]]], "Output",
 CellChangeTimes->{{3.8026281708836613`*^9, 3.802628182552608*^9}, 
   3.803132635989464*^9, 3.8032097330878477`*^9, 3.803211285724177*^9, 
   3.803222971478424*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"8fcd09c7-7c6a-4539-b55c-9b03ab7a9e9d"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wlSymbols", "=", 
   RowBox[{"WolframLanguageData", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802881621582563*^9, 3.802881628114791*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ac58b9f9-568a-4c6b-8d3d-60fa4a0bd0eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wlSymbols", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8028816632930727`*^9, 3.802881671560861*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6d304a63-7964-4a4c-8082-279c56e2c600"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.80288167188708*^9, 3.8030437430368843`*^9, 3.803132638554762*^9, 
   3.8032097356707697`*^9, 3.80321128579038*^9, 3.803222415150462*^9, 
   3.8032229759532146`*^9, {3.803602569967869*^9, 3.803602573581802*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"14be82fa-8048-4972-9692-e1f7fed1179f"]
}, Closed]],

Cell[BoxData[
 RowBox[{"wlEntityProperties", "=", 
  RowBox[{"WolframLanguageData", "[", "\"\<Properties\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.802702740618145*^9, 3.8027027492176733`*^9}, {
  3.802708891560318*^9, 3.8027089365707006`*^9}, {3.802709098266426*^9, 
  3.8027090983618717`*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"97ee1644-8aba-44bd-9a19-38e3535ffd62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"functionalityAreasOfAllWLSymbols", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"wlSymbols", ",", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"wlSymbols", ",", 
         TemplateBox[{"\"functionality areas\"", 
           RowBox[{"EntityProperty", "[", 
             
             RowBox[{"\"WolframLanguageSymbol\"", ",", 
               "\"FunctionalityAreas\""}], "]"}], 
           "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
          "EntityProperty"]}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8027278344928017`*^9, 3.802727834768711*^9}, {
   3.80272787127521*^9, 3.8027279198195267`*^9}, {3.802727966197461*^9, 
   3.8027280114638653`*^9}, {3.8027280683183193`*^9, 3.8027280696126328`*^9}, 
   3.8028800726096697`*^9, 3.8028802257544622`*^9, {3.8028898078345757`*^9, 
   3.8028899070387297`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"74eb2e28-3ea5-44f2-8f37-38c201523192"],

Cell[CellGroupData[{

Cell["Function to get every property of a symbol", "Subsubsection",
 CellChangeTimes->{{3.8032226378450117`*^9, 3.803222657425653*^9}, {
  3.803222709523055*^9, 
  3.803222710148406*^9}},ExpressionUUID->"44ae5e13-3614-4aed-8b51-\
fe8edee06676"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllPropertiesForSymbol", "[", "symbol_Symbol", "]"}], ":=", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"WolframLanguageData", "@", 
     RowBox[{"ToString", "@", "symbol"}]}], ",", 
    RowBox[{"WolframLanguageData", "[", "\"\<Properties\>\"", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8028698746716003`*^9, 3.802869927372859*^9}, 
   3.8032228815060873`*^9},
 CellLabel->
  "In[360]:=",ExpressionUUID->"e4481b9a-87d4-430a-abd5-18819deed004"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Function to get the relationship and community graphs of a symbol\
\>", "Subsubsection",
 CellChangeTimes->{{3.803222677557021*^9, 
  3.803222720662116*^9}},ExpressionUUID->"3296d3ed-5195-4056-a979-\
a920641804f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RelationshipGraphs", "[", "symbol_Symbol", "]"}], ":=", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"WolframLanguageData", "@", 
     RowBox[{"ToString", "@", "symbol"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"relationship graph\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelationshipGraph\""}],
           "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipGraph\\\"]\""},
       "EntityProperty"], ",", 
      TemplateBox[{"\"relationship community graph\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"WolframLanguageSymbol\"", ",", 
            "\"RelationshipCommunityGraph\""}], "]"}], 
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipCommunityGraph\\\"]\""},
       "EntityProperty"]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[361]:=",ExpressionUUID->"aa5e39a8-816e-4353-82d7-0355b791ea59"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Already build-in functions to describe Wolfram Language expressions\
\>", "Subsection",
 CellChangeTimes->{{3.802806801415259*^9, 
  3.802806842973011*^9}},ExpressionUUID->"bd9edf12-1dd9-4a81-906c-\
a029dbe4e068"],

Cell[CellGroupData[{

Cell["SpokenString", "Subsubsection",
 CellChangeTimes->{{3.802807297795121*^9, 
  3.802807311486424*^9}},ExpressionUUID->"8d62c640-1c32-4136-9082-\
ea0db1828192"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"redSphere", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{"Red", ",", 
     RowBox[{"Sphere", "[", "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8028068810890627`*^9, 3.802806885576486*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"ceeef140-6552-497b-9e16-9012304fb134"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}]},
  ImageSize->{93.64453125, Automatic},
  ViewPoint->{1.3034579605221825`, -2.395541945763956, 2.0030916432447095`},
  ViewVertical->{-0.00022912512145037154`, 0.001165321122287529, 
   0.9999992947639317}]], "Output",
 CellChangeTimes->{3.802806937878763*^9, 3.803209795678418*^9, 
  3.803211286093499*^9, 3.8032992141597013`*^9, 3.803644367827281*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"80b65c7d-15a0-4c9e-8250-5585c57a5c5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"complexGraph", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{"n", ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802808574495213*^9, 3.80280857790352*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"63c9727e-3621-4277-872e-7abb537cc3e6"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxEvHk81N/7/2/fZd/FjFHWlFJS6lx2oZSiCJWskSSlUukVWbIrSxQqokRl
KSRP+77MGFv2tSJlz873+f7dfs3HP25uN/Occ13nnMfjcXGHaHfFzIGBjo5u
io2O7n+fn9+zY1G1Dzl8/f/77HP4RX3y1V/SdUjpRPXODbpClP0+uMdNpRtp
HxOMVn1Vh5wQ5emk5wgaV3dyC45sRe5jCiN52ePod8KRX1aZnYiD6C83sH8a
ub/I9zt0rReF8zYovjg/hypvpn3kYh9Edj2nMMbGv6hObbJKyWcIXa3yt7si
t4IU38+YFFgMo48eXCdFj6yjkINS+leThtELH9eJXafpID0/akXw7DB6kLx2
Yn6SHjR0t3/xjB9CdNRBKL7NCBTozLBxHETbvRxvnlJkBu6e7dc3TfrQ6EKc
BedXFpBn3akSavoNGY1duht9lQ1Udawe9p9tQ8dGI5WkpDjg5p5izVjRZjRR
YXe/NosTjjbtHFsurkAqfB1bdc5xgwv3n50CzR8QB1q40Du3BVpGNDHft+GY
wW+rRRlzXnC3PLqzubcA6yq3p7dS5oOD+aJvdhRVYflBlbaEBT4w0GRKVNvb
hDkyXx9sbuYHzO9bh+oIBbvo6ZPPlSAAQZxsa3Tb2rCdTkrNJhcEAYzPbwsN
bcda+JU5r2sIgYQk5zXlbR3Yl+wHicqMwgC2ZrzGne2YD73i8cY+YXgUbH3F
JakN4+i9beieJwKn4SDL8fhWbOw18UnyHVHocO3wO8FHxp7IizEVmovB8jEr
0VG/OiwywbHmAkEcPr10SDEPLsesntg0c/0QB5a3WQlBHp+wJd205eQSCXCc
SrHcERCPjYxp3ywPlISt3t8GftS9QC8PqUo0XdgK72U5tAdOFaCsh9f5nHZI
wThTIbtMbjkKNL9ozLggBVJW94OCUC3a2/viTWCTNPiIPvMYEm1C8QqJWU3G
BCh4Ee+/tJOMfEvD4o0LCeD72oHf+AAFHZUwT6uXJYKMLNPKwm0K0nKvOcsX
TIQXG9XsXOwUlCxpJ9u4QIRztouubz62INmK9NhjZ2WAl4Px7gXdRhS5o1yx
tUQGNIyE5ff8rkGOc0yUOkUSDI8t2lacLEd2H2cJwREkkCeLu/9eKUAlc9uX
NzdJ4Cw3zMSn/Rqx9gzL/ZYuRL3qDtd2ir5BZQJiTzV4f6Phq0/aVxS7UWO8
nEJp4wwyqggf9bbtR0sLPNfNhBdQ9VO0m7NtEF0iT0YW3lpC/Yqin9VWhxBf
Ym23TsEqMhtxOf710TBayZ0R+Lq6gfJvBz/0iBhG0dxqSfwy9NCWVntenX0Y
aRW6H+nKZYD00e7TbNxD6PGrV9ZBZkzQH3NB/K/8AGLe6/vj/Rwz1P9NOehj
14Oq0wR3fY3kA959zDsgpQ7bUvMsefECP0gJOJbrWpGx0YNL9ZfVBCCqdeaU
tBQVq3Ojlr1bF4C1dHbHgdk2bLM4c/J8kyBso7c9W73YjlWdP009niQE3n//
SpwV7cAkznRcv+MhDJNLOXtvn27Hyt3NTLYeEQFFoo/vSC4Vu6l17E+AqCh8
x7SUBhwpWLHTVhPlcVEI1WoajJ1vxBIuu6nsjZIChYcDDK/jqlB//IPbehek
wV3xJS+hox5949xXZihGAMK5qIKe0WbEdV3wVegDAizcmLqu1kxG3y/PSHFO
ESAyfCRM4BoF1eiG0/2xIMJneXWttxYU5FElWOqOEUFe/TBjRCAZDU/524TJ
ywDZp52FWaoZWS3lnecNk4FuKfrDSnvrUWQrV1hlDQlkSBkazdI5iLrq/GRa
+g06dOU4Hb3UUxR/h3jY+9wv9Dr6tHTNTBf61Wue0cIwg6jXPQQSr/QhHb/f
LbcOzqO4ueeaM56D6Hs7IaP/5SIaYVLi+IQNIa0Pr5O+Ta2gAANZr0qvYWTB
75t7SWYDfTzHpfA6cRglVJpWviimA47L6TcE9g0ju3f5Rx2PM4DAfMXUQYsh
ZHSw/NjL74zg5ca4KUA/iGLbZncyRDBDVG0BJ59NLzLNK44PseUDCwnlyqlP
Ndhw+q7NECV+SC+3TZNjaMHSUj6ZJ9ELQN7DYhuewFYs9kr6l94GATiVn+Hl
Gt2GiUS79lnECcKOk1UhP+vasfpCralhVyHgLHcKtsX1xtXvXVCbhjCEtus9
zEtqx6T2H272EhCB22PFtr4727CycPvE299FwFCfvNeMqRU7Hig9PZYjCkc3
95+NftKMpS5PSx87JwVRe0XSE5Qr0e7FWTtZJWl4t210z9yTOrRyh9GYhY4A
76rvpdexNSOzltPyO5wIMBc2eMvkIRntjsPOKrUR4LBcwVSzNQVxfJgx6z1E
BD19m1vs7hTUJfaHG1KJcDjV01sEPx8QMFeqzCMD79W+K49NNyPMJttnp5cM
2KTZsWnoNqDlss2O15kkODluuCb3OB9lnVp+8yF2Fs1k8ue5oQGU5bxbXGlm
Ac0YtJ9UVh5Cf+oLbj05voyK9bHiyB3DaOjhhHD2/TVk3s7/MyV+GCWZ23vx
tG8iy5fb2odvDaNHFqI3/QLpQSHGJSqlbQgRquX0jEQY4dvsrQHGr4PowHc2
uBjPD0kOn9kqt1Ew2U4NOOQkAOlGtdcVM6jYmstmzZ2dglAdY7VdT78d+/Hj
1+olRiFYz/qVryzcgZWyXv5cQhaCbVbmWvob7ViDMt1F2XRhsDWc+vybvh1z
THOsr7onAkolU7cZlKnYowP80Y5x0sDTezf0JEMjKkhwVg/ZTYC6Bmvnj+9a
ULU4ZevkcwJoH+IdiuSgoARd0vAEOxGa0kQSJO9SkP83xezNK0TYW7/9z7wa
BbFdPej5vJsIzi9izuXvJSM/S+GV31oyYKbR8+qlRhOSGxHTGR4hAafe7FZB
gyzkduj65UXpp0is4vVDH+lgxPgxjVc4cAJ9kar/vON4F1rZmHTqfD6NjNR3
vBGa60U/j1jf5W6eQ42nPu4SQoMotatoz1X1RWRhlZUfmTSEvhXF3E8NWUHV
moIPSh2HkX+Znl9Z/joyZb+xrIHnBakUm9PjwXSgcczsQtSRYTS77ZtplhQD
XA5aCdW4OYS2BVIM3n9ghKGvjKLpaoPINlX5VKY1M2z5xP7JoaMXPfnC2+Sp
xwdvG5Un/hRVYybxKyoWvPyg8yPFbVaqGWOhCiXu+8kPutuOh33a14qteUQV
zOcIADdrscFJmzbs1Z2G9hN3BIGC/TqomNWOmXzft55pJgTbi40V/mzvwASe
ikTflxKGCZVJhm/F7VijpFpEypIwVM5QZaKc2zDH/KmrXk0i0Nxj7hRg2oqJ
xxHKy+NEIaT147NfNi1YBsqNt9KXAot2s9rkqxXIertSpwCvNBwwkzIsnKxF
gq5t0vXfpeGvcbbHkcdN6Pqd5Ut3LQnwyLIpc4c1GXVlbr/9pZoAFheUKIJH
KeidA+nOSVUiSBTeTmq5TkFcld15GbFEsNJskGD7TUYelLeedxhkIKR8aePx
yRbkyavEjjnJgDdvJ1mtugFlayyvxj0ngcHvwg/php9R8Y1IlwLVWdT0sPdW
Prkfme18UVPit4BEV/pDDtEPoXdNZsxyY0vIdNzGOEhoGN2K/LZ0U3INVXiq
F3+MHkaNTEq6js6biCqz5QT14TDasns7Z8MperD8vqE0NDWEPiBjg6gxBvCz
Cz/TN4afj47WKzvu8sOG4UhLaRkZ82d/+rD9qADwcn96U2tPxexcxyufCAvC
4tIi2ivVjl1rNZ53+CkInemUVz/YOjBtNbuqwM9CoDnsd2qaqwO7pu3qRg4R
hpnbF+pvqrRjgo+sQ2YuikDA/cEIr6tULM/FiMXijjSkjDhKjLo3IMOTpmvj
2whwj0eP8ZRxCxqv8TyvGUmA9ZmOrwt4/8DyEZ3PGgGkdRmXk25R0PYI684b
F4kwDLnmogYUpCkhL8bSRISkFz2DrOfJKCe1KfPQXhk4u7AmtZLVhHqtBJyp
7SRIMH+VlWT3AclTAyRNtiwhgsbSxfj+IfQm7XPxllOrqNX2gl/F/WEkf7Fg
RCBiAxk4bX/xOXYYCY9rqVpN0UHQu9rOJMIw2uX+taRyVADiBK6M6FW2YSHp
nGNncwQhXqJpS81wO2YYZjIk9lAIOLZJuP1H6MAqLmv5ypsLg5Wp1uz3O+3Y
TplPY71eBHi5yb39eCYZhT44cyhxiAD/nbqw9ZYLBTmvYAoORkSYLTUKf32R
glKv0Dt1fiRC0cboF613ZLSrVuoPffEyejmdsGqsM4yO+KyqjYyuIccrvntD
ng2j/dRjZr0EOni93UzjpeswinUWarA3FIS895uI27UdO7sewughJQRHLiqv
xEl3YId7vN8sjAvhfsF9126yHXt5eWdPYiYB5MfZzRhlKWh+Z3GFlQgR3Pnv
7wzH9WyYtOwfdIcIYQ/XH+kSKMjTlSA1M0OCzpAv2xur3qDnpWHSzIRglGyo
te279C20v+HHrTHxCWQX8kVJcaMTMUQWGJx1nUaKzsG8j3N70cEsgVOn4+YQ
fRZFxEJ2EDF2B94qol9Ev8c2FreF4XoDYTPBlisoJ8lhZM12GImLKfxy811H
ub/jj7zA9WowbJQQ5kEHce6330ebDaOi4QkymZkBLhGqGSKChhD/DsvK/BhG
MB09dqvk6CDSDj3y3VeHGWRzsE0O/j60Dzvg9H0/H+yxEA+VPViN3Y8c0P/C
wA90VL7G4bdN2D63qq8Pevjhj8K9XZbcrdiHqyyf778WgBwmS7korTZs/Orq
iRZ3QTj8ZEXm9PN2LPyOqj+vvhAkZjPmeON69YPUFNvBKwwfLiX9CKpvx2R5
3l/Z90sYJB1qtcb82rACw702M6UicKXaxFLDqxWjkyYqqT4ShUG6qL99pS3Y
WzvB9kENKfjb2ZTfwl+BZg8ZRIUwSIPGQ7JSSWwtSiV9GZXvlgazzxsPPlo0
IZaTRqFpZgTQ33846ro+GSnvswpmLCWAc2VsD58uBd2BYl4eJSLk1IzMfLqJ
3yexE2x9EUTgU82Wcl4lIzbvAGPZNXxeEK3b3O3XghpcxlsCLsiAz8mZc9XM
jSho4Xp4ZCwJptejRNRlClAlq/URzc0ZZLDdpZAlvh+lRZ9JYju6gFqSuu9N
TgwizhZpY4/3Swi9Pl6WzjaMqoQoLrYTq0ho25jqUvgwumi95R3f7k30OMbC
bxLP82TprDb3g/TQLsrdXbc2hG6uWdfmNTKAXLwZ85vlQfSt+XNg9BV+mPMY
k7kaTsbyXhpmELUEwNZgMqJXi4oJu9lWEDgEQc3UfWqWrR0rrPHxGOkWBI72
odetdB2Yf721yeRbIXC8yrnILdCBGTQRrm6/Jwxcau+dXXXaMdc7na6BFiJQ
cWPJjPsxFTvyn2Npkzve7x3Vx5RIDSjyfbntU2k8T7OmPywSbUG3kyr+sw/G
9UmJ7cOtfjJ6PPKVp2KBAAOq9wS+3KCgvy4LrrttiFB38SS2x5SCLDyS3A5U
EyHLxPbqNi8yMjJ64z+mIgPlqgquj743oU/CkSsNzSSIq97tcVPrIwpsO2kX
07WIEo221l1pGUILiu93zBNXkaV/TDKTzzDCihKNsTMbKN2uS+L202HU1VG7
st5OB5frvMrilIbRiPvur8e7BGAxz/JpaWYbRnl28MK3VEGoOCpXRu1ox4JJ
Bs73bgqB4fRlZ0tSBxa39NfvnoEw3Ovl09EOb8dKl1hYmd0JkF2puvoxnowG
uEJNRroJEN8cwBSA65NG+5kSgi4Rthk/dlbC9auk0ruIM5MIrO5NX4O+klFE
3a89xgHL6JacIqFg/zCKoZtLq81ZQ+7q6y86EoYRky+w5DDTgYmXsznXNVzP
XB7VTR8UhIuEH3r8lu3Yi9kvvr95hUCJS8PBRqID873qucuqTwjcxM6qf1lo
x9R0769VpOLnXVb45HsRCjIommp9yUsEwjGtqk+4XuVuRInp3iDCvvEzvH8U
KchE7vmH8QkSmL8R1qoLyERhe5N4sK8ryLR5bQuj+zD67WInITy5ju5pMQYe
fD6MbAITLduCBWHPn+LzzHje4DyuecPgnBDQ88CRSPx+PyTOXbrWRACGqaTe
k+YU1PPo0Y84dSLoJsufBk8K2sE5HPj42BoK0Q9dGI8ZRnuzDHqLkjZRikS0
8Tbcb3b0Sdz8uSAIwQKlkcy8HRh9ktNhUqUQvN5zoo+BpQM7M0NEgnEEUIw5
BBlrZPS72WJmNyMRok4tu2A+FGSeV6H9xYUIMBIfcuYwBdkQSo0VAlaR/ask
IfqAYRTF2e7jXLWBLp9VpDv3eBjp5fQ492OCYK/gEFr+ux1jWTxhlR8lBKER
x4idkh2YxpKsysmfBCifHtLNwOeDeGm5mDfHiWDqxWjlY0NB6wuMlevC62i/
aXNBCd4fITbrwFklIfheP/ytV6YDS0kLyuOXIsLjXxuyr+7gr3//KmRpiQS7
29K1djNloM3qEj8C4RYKm+GpEiW4oJNdQSpNo+PoAeF0Z09bJwo4k6S+1Wwa
1Vs9C33wuBeN2l5Baz5z6JO97Ity4UGUY+UuOfD9L4rA+KsP+A+hBgb2t3dg
BZG3WOdPWA2j75Xiydr266hYZsfeZ7g/lDJlMA9cpIOMWYniEQs835Zdi7Jb
pgce3ghCROQQYqd7zqARxAgGIdzyW60GkRrdmZ0T+5hh+cCxG4k7+xBrmala
ym4+EBU0vtq8UoUlcLW2/l7lA2KnnjHyaMKa929tkW/H/UJEMNd2iYJxzMIn
/RQB+CgxUG+3pw0LdRPg3eIsCEdYXJJ5Y9qx7JrsmnIkBF4eB3Mm8fnwxLjc
U3oOYajb/reSldKOHQ+aPPffqDAcrAi9ohXVhl3g72p9XyQCb3Plzc4EtGKz
di/OOfuJwkWdHq/vMy2Y8rzu3Ks9UpDnH35ecKQcFR8xd69ZlYIhdmtvI9da
NOmrYtBFlQY93f7z0+pNyLRk9pmGKQHus11JMj1IRharc5HpxQTQuf9pSh9R
0GgWW8+kHBG6dGL9f+F5K0+Ha7d3KBHsP7iknWCgoLYj8+pLS0QI7I5zfZzQ
gm7GGuZespUBccPl77u3NaLrJ/M6uR6TwIbxA3d2eAEyJGtpbIzNIK7h9f1n
ffrRMd284CzVBcRa/b09bGAQFZmy/HnyZAkVyTgF0jEMI9cuE5kTlFXUu9Ng
ciJ0GKmw0Z3/IbyJ6KY4dmmFDaOPsR6FpSr0wPd2nYOXcRj1do8F6ZcyQKyT
u54j4xCaN3orUOXMD0MPbnrc8CJjJldSCmsOCMCRdgkO0V1UzGMyvvw7oyDI
2e85yrjRhlmXP1aRaRMEyfzb7q5r7ViqUHdEUqoQMBHvvWoW6sA+RvtcO+Et
DLoJZ85FHG3HYhcErVtNcX9w9+2KfEXFBMO8nrM7SwNltZjSslaP8mzWeK5K
EiA8+svHuY1mVMHuFr30kACmRRq7PTrIqDjjtIjTLAHC5sRqNr0oyLZTax+v
FRGq6W+kMZ6koJEEy9i2ciJsGVJonL5LRsJbRa4WKslAMLNO3CWGZvTKq1nH
sIEEZk/2+eZ9+Ij2mR9gLvq6iDIjmNjSaoZQ4m/F79/ZVlFnBUfOvDc+TzuG
bT45tIHav9nOv8T1tvBo6IBpHR1IlRw1Gts1jDSn3IqFWwXgvOPE6s7kNswr
7qS0aJIgxEgFyt4lt2Nv3Sszd3kKwe2tfdY3ZHF9KjkR8AaEQeth1dP42HaM
3f69yNNLBFAVpkiKRuD5oXXbqcBOPG8wLCxrn6egl9ppQRtABEel0ePvXSnI
eGr3aFo6Ee6VN+35UUVGh41aO664LiM3q7mefXuG0cEKd9svT9fQ9lO8vxpw
P6O+8SzVmN5ETG/KeB7dGEYvxytrP+0VhGyJ2cUq03ZM9zf1kDKHEBwLaekY
EcX1p3jqGlenEMjfdbwnvtKO3X0vz33mBQECqY72GnwU5OEb3K3PTYT/jA5y
PcD9QdKtf4R4jQgcBkN9zLso6MDDnmWHHyRg1T59jMXpHdqzJFb7MXUF1Ytr
TF69NIwKhE61/CKvI3vKgRdNuP7RPcgVEfAThNj3l5s+5bVjyomFhctn8H51
DBd/w/0h+3uop0g9AdyfHW43OUFBuksdH6+rEcFT5tmcJL7/1CYbCNi7hhLe
3WCwfYI/z1IjMtJvE6k+zRne4ofnoc49++SmBCFRZNM7Bp+vZMZH/2v/KgQP
bDKDHrPj9VrXm2Y8JoBHPs8+5wX8vDyZXurYJEBZA/Pzmtu4HxN5uZ86EkHw
PMt8ozYFMY4cZJK8vIqeKct7e+LPt/5cvfPw2w30fLKGVwr3p5/v5rZvLRSE
FIeSqos/2zE57ZbnTiFCoHblSmC1VAdm97Vk7+IoAba8O66i4EZBdGHXzgUe
JQKb9J6CNHy/XxX43pleX0PB6y9E9uL9KWDw0lPdht+nZ+tilsQOrP6STPEn
cSKIv62Y24X3/yH3cJvXAgketlvc4BvLQKaX1dXjEtbRhClr8H1cvy+r5oGt
iRDkslf4NuH9FKRe0VdVIYJ1nb7JGW8Kkj5p/tGVcQ15NWQQxyLxea3pYk7q
kCAoqdzlXGPqwC76DrAd+CgEf7uFlMRwf70kJcsmvUyAGLVibz08/85veRs3
fm0D+cX3pivFDyPnrjrZxntC0K/A9ZUV97NPBrO6qJ8A0b4rPPGOFDR1yPt3
e8Ma6ucCnrLEYbSx+KosW0QIgtLH3J5u7cCkFswbNgSIwCk42VSE1ydT4uEE
rBtIoaTtox8+n00wYbtjHPD8EhHWx4fXE2jo2JLitIaSdfpjzeOGUSX71/Fw
FiJoasY6BuD++T2zTZgxXgjuN7mb5Ip3YLx7Qra//0UAy4c5F/96UNDpPUGc
nLvWEenXJUl5vF+e3Lp1ubuFYNFow4CE39cbg3/euROJMHB5tWkUzwuZJxy0
76yRQPgMj7oqKR1VUgkmp3Ef7j/qbG1OsESDtt/YyurGkejMj2xiaSeq1Yza
eU9vGu2V0Ypx9OtFhepb84+5zyF339a/v3gGEUfi0OWr3/6ievO2ks++Q0hq
VJ/l754VJOy2L6j9zDBqTBC4lWWxjjrWjt8Kwde3q5R9KdCGDsIMp8zpLIfR
8V0FV5Xm6GHV0sfX/8kQ8h8veXH7P0awzdTbpXV+EO04MHAyeRczTP/pYDt5
uA9Na3WL393JBycHY88GdldhGUYNooFLfKCeWEipNmvCxKXrOlcp/NC8ozK8
+TcF27e7P1/huQBkb8s9vl+5Det3kb6SZS8In6o2CR2R7djhy5fHEzWF4FPx
hYOPcT9mMTEXj2MRhilLzoFdbe3Yd13Oru1DwsBpo7/UE9eG7fN+wx3xWQSe
uWyKWEa0YpP+Q8uM90VByCRZRo6ZjE1q2jx4uEsKruXS88g0lKOXpr3WDktS
0IgVwDXzWsSr4rz0niwNsXTVSZ7yTWh+Tj/N7ygBqMLMe9/uJaOJvtIny0UE
CL21LtWiieenUZXSs9uJwPw0jvEGfp9Xusb1Kx8RgX3t1dc8Zlyv9iip2C0S
QfVz5Fe51y2oWXkptddaBjQf2S5Q1BqR24OTa0ZRJIDp91VtlQXoUZ6a6rlv
M2iP3M6Aabd+RNpqt7lJWkCJhXwMlG+DiD/yFpILXEJq9pdVkzeGUEnho3v1
latISltWoStkGAn2L2mYsW8iz4PnAmzw+U3GrDXTRZ4eosIso+VYhtEWI0UX
niIGuFdfl3+AbQjRB7+ytHXgByO52uv2TmQs3tykPEFdAGz0e/fIyFGxZ8r7
yuvoBIH77Ysh76U2LBtLDisjC8LZhMwUAq7fal/iP3q/EIKOrjtOEiIdmONC
xvz3a8Kwr95gJsQM19ucPW3eJiJwaNbCuDSTii1Hr4ak20vDp+PSXg/G61G1
2tOfveIEWLH61jEz04ycUWmCtj8BVNr5E8+0ktGJEFmJwmkC2L+yreXB9Zh/
i7OE7xkiVBWnbu09RUGKu9QziWVEELZ1CK96QEZ3WI45kRRl4JNUYgjwNqOE
V5edA+pIMMhuX6z38yMKj8myMPmwiBLof/DkVAyhP83O2ufXVpBUEsvz87h/
eWgGfNvcuYF4Q3J1FHD9UGT/Q1kqpwNMet3kPu5/Ljs5ipebBaDG5oNaW3wb
Vv3k3L3PCYLwm60q7kBTO3ZA0K+J/YoQHPygwD2D3+9PBF9WdEgYHi5ZD2Ql
4PnyKSNhxJmA+23rg/2PyOh53uzpb+0E8H3WIhhhi8+ftxouX0ZEGJ7+/XwI
1+9of97l2TQi7Ekc38pcT0axj/TkGWyX0V0dXSdnPB+Ep74rUgtbQ3qR6tcO
4H5c4OuakDq8ibKjf/EdvDmMWhTsap/uFoTOuv3SXMZ4PpoYeNbAIgRhJXbL
Efh+7bLLjhmjCgHfcg9lH56vZMbuCL1Mxufn6mqvX9wUxGxn0R/PSYSvmm2X
zHG9JL9kqou8SoRUw757D3ZT0K6821KpYyQweF1sKND5DgV8Oy2rFL+C9lt9
R8+dh1HSL5M3FhXraGGQKYAN1xczX+xGjq8gmPs56i59aMeK4WZPq7kQ7Psw
+WQC11udOssbLrUE2DWQNbsPn8eXVNZjR3cTgUV+KXAV3//t7xOfbcqvoS4i
eTwEn5e+q+y+tHp9E33vLMau++PnvR3FVP8SBH/1Mb1qjg4sJ/zVq+wiIXhX
/N3VkLMD042WOjMbRQDdA6wG+TNklHnj65r8Bu7/rSaOGvj99Tyzb5bVgQhN
l5urF3Xx/ai8dT7m/CoSCR5mlX4wjLTDMPY3zzaQ6Nu44Cncjw+83XxYnC8I
+Z8j5Z+PtWMFP8IwCBICxt/iIW+lO7DF5BCNIyMEUPI4otd5Cc/rFU91/xoT
Ybu8srmSHQX9ffq1y2VmDR12GlEZxf2Hg+5+KpkoBH7Zf/bdJ3Rg545OYWxi
eP+vvU11wPt/R/O/5Zw5EgxTl4Kvmb9Bajq7+BjC1tHiZtSrGLy/Gx2edupH
hMCfxejwG7yfteyxSinKRJBWqBvkwv3UU+0x99jfVVTqfitvNgL30/orfLr9
gkA8piYwxdCBzcsmKQpkC4Gjer5AAl8HtkE3w3l1kQC3xc3sAnA/7x59efWU
4wbK88eedOJ+vHQ3SD/NRwhcWwPlP+N+bKSIGUb1EiD2irCikAMFaUvnHzHF
1pDDytshU/w+HV94TzgmKAQlUtvE/PB5NqdTpuU4PxFWengHSvD62J64aGUu
r6Ms8dMn/9eP22/vnnK3w9fz7urH03g93QqpSuJn11Bixynyq9hhdGYy+Pcg
ExE2V4boFXA/vnHi8f7eJ0JgXRpQ0SDRgc8LZxTpJwiQYS5wrf0KBb0VrHby
J62j6++EPBfx/FPJcVz+5E4h+PZKqyiQ1IFxVnz5UCpNBFZrKrsR/ryX95mc
ilZI8EF+T2P+43R8ziFWdV5dR7zEc7df/e/3MTLTaePaQtByQuPbfnx9u7yH
F+4qEEEMad+zwOcz+epHAkLzBBDPSno0cp2CxOuYH52+LgQaL2Nu/8Hf7+fQ
Lgbt12uoYXrE1BzP/73Pijvmt+B6Nn7G9yXej1Z0duF+/zpKN5k2DsbX+2xh
JY5gLQTORWyvvuDv9+AjacGfngh8a0vPj+D54XinFsGbYx2tMslM38W/35HZ
+XuUvBBEknjSZPD92RtkXmAvSQRKhajUNF7fpbjDNsoZ66jR/MvKBbye3pAF
qYemQuAZp3xzFH9+MH9wzTshIryJ2ox+i69H86d3WLvgBroSeumVGL4/Vufo
+IqdhaCo41FLCe7PO+WmxzTZ8HwVTf+0E38+k5nR+yjNdRTVqVtwHH8+gXf/
JcF9QpA+Ou//HtfH4XXiG0kSEeSDRj2v4evPk6neeniDBLpVLF2pOa/RP36n
YP+tyyaei5r/+J2H1y1+Nb25RuN3sptO9qVIx9D4HRt98xG6ydc0fkfyNTer
RGAujd95osC94K1YQuN3zvsdJR0tqqTxOz2aWzhqzBpo/M5LUddVyU0yjd9x
HLtvacPTRuN36gy2Ghvt7KTxO+vPj//MrftG43c6giz/OznVQ+N3fN+V24zn
/h+/I9B1KI+/pJ/G7yg4sP9XLzNA43ews9F3CV/7afyO3zFXlScZfTR+57Lv
Q+nVoh4av6PRFnLMSecb+sfvCH3Z739ouh3943fs3JyTVra2on/8zo4HPo/P
nWpE//gdSf0encmdFegfv/PVofzNg6o89I/fKXww5VBmGYr+8TtZqrBfgyuL
xu941VUKseuV0Pgd5lav3S9rq2n8Ds8TuxvGck00fod8CGV9nv0/fqfJuT6n
rL6Vxu+cSaAUGdRRafxObFaj9QZPG43fsTq8fDgrlkrjdxQi/kZwe7Vi//gd
tWnXtV+BZOwfvzNFzGCbMm/E/vE787sKzxtRq7F//I6HZmYFg2Qp9o/f+cMQ
aVRQn4P943dybAP6GLrCsX/8TuMJ/wOWe9No/M7nKLbaUw6fafyOarWXldxG
GY3f8d09Pqm5pYbG75TX1vxNEG6g8TtvpS5+6dRvpvE73yqaGweYyTR+p9ZW
dK7XmEzjd66bxDMt5J9EvvXKRqrnqCgEnXaP0Q9EyZwNfnx6g0jIRTOqcVcK
uhR9t4Qc+R3VxcsqzQRk03ifu6s7JUtSCmg8TsOp3rtTE900Hmfv0Q/EX2O9
NB6n9tErtRmTfhR3mX7iWBwrLEnu0PvIPoAaR++e6jJgh3BjTF8R/1qybdl8
bowDjjndPZ9l2I9CL0m2PAzggunJs2kX6nuRZMYYFqGwBW7TkyaGo7tRY6i5
PF8LD2zQtVbTZ3eif/xNhv+Xbe+k62n8zdX6zs2vWS00/oZRhXXnz0UKFj2E
OXB/EYOokXjFyfNU7LrIsNFnP3E4FXmPpZ6hDXvjRm/fYSYBhtxnL2dPUjF3
ofn9qiRJSJefLGMQp2LlfEV1NfOScF9gl/2nxxQs48JJ4YSarcDwX64bHbUZ
+8fbTMl4Cru8rKTxNr5u51K27a5DPpEj603zMpCQumC7o6sR2beu3lSwIcGO
bpVn4aYtNB4n5MT+bZJaZBqP47TX/zxT4R5Efr/GIDfVgtbYfLrF83zRjZGI
GQPrPvTmB1+c7M0E9NNZ7l0//Ri6dPxDwOeEtzR+Z12x98Ffpk80vibttWxy
sU03ja8J+9vPdf9KL42vkbvGl2vM3I9KPpoQdiiygvjZ6kXxiX7E6TDvnN/L
Bt8fjfeA5ADaa11VyvaAA7JXmwvtgvrRwThMTk6cC2zuMa0Voj6U1tvn7lLJ
DdrvP8WuKvWgXw7bqm5c4IEe5Qc7F+92oX88Dfmeb8rbu7U0nibu+cR/El7N
NJ6GaDv7yteHggk8nFS7GCQGR+5VegZKUDEGS9lgLjNx8HFZfhDzi4o9uL/z
6YykBLwbCTmJMbVhe7JMnv6clgBH3Zlzz2yoWKvPBkGvRBK+BtFduM/eiqWZ
lsfnPtkKU5equ9qWW7B//IxkozzLhkUFjZ95+Usyu1+uFrEMmAmSv8nA2A84
FETfiMbs6NKWdUgg1tGe+q6tmcbX8H0qaQxTICP+Z7UMM53lKJLK2LC53REJ
H+rhb6nuwOdk7fhwjkjkt615y2bPEArp1JYhuL2i8TKkiXNBvzx6UC/nw0vu
JUxAfel2RMWsD3nFcCbbnGGBp+fXyhMf9SMPhU+5HkxsYDGfppqK70eYPSus
5rCD+dnHJ73H+xGjicqvviOcwMemwci90Yf6Dt26MTrLBSOvPM2KDHuRyry6
1mMjUZg2EqvpcCFj8oYSGZ7SYuDFfIiu0KkV4zv8OPbzbzHo3PU3vieBiv1s
T+ayyxeH8/oxieNb2jDyGarKlyAJ6D941miqhopl3E3sumUuCdKHhLYKNbZi
OenXPY2UtgLr8aU5bgEKthD9RW8mTQaUOh7ZhinXo2ktrx8NPLifJ45OCiY0
oRGtRRPLGySo2hZoaPK5hcbThFfzugSbkGk8TUZDcDalUADtP3TsQHBgI9LY
0SPof+oWiq4LdbSq6kFi84zHQwvjkPyptZcOB0aR+V8l+sAvGTT+JjGlhUWl
PI/Gx7zOYG8IFeym8TG/9IxOJO7qpfExQZKmnM19fYhy0vPgszkWeGi/N+tF
ez9STNs5R0png2WVBhZh4gDSJijdEDjOAc5LDySIqf0oegdf2+IIJ3T0DfkU
Xu9DE38t9TuiuKFzzmFvuVcPum0W9viNIg/EBTLasQx3oX88TFW1k92ttBoa
D6MYvHGFl9xE42Humk+Uv9pPwdo6HkhuuSIGruT7qhHzrVjdLT15dQ1xKHnP
QaX04Pr1qHrPJr0EsM1tbK5wtmHCyzePVHZKgH/Y7OpNHyrW/SGlkfGVJMSb
nlVTg1YstXrZEny2gsXSddl7OmTsH//yZGT+rdq7chr/8lTulP/0sxpkHPBI
+kSjDFizY0XR4Q1oeybDlwvq+Dy94Mm2NbKZxscUr1LNDojh8yl7UewPJwxJ
p021fq21RfWM/ip0Au1I2WU0ZPm/EBQVb3IkiHcInTZ9+qO86gWNd0kyiDHs
VulBBaefXPQJYoLls6j39NY+pOmgV8GynQWm99MFsF/uR/4NPc0DTazgrlk+
WSY4gN6late73GWHN19r6cZW+hEv75OUnyKcsE/MJqxQth+ptdXL5Bdzwade
pqeCIb2IKl4hEqYqCrWfiewJRDI2e1rytimTGPif3Kh0VG3FWiMU7tm1icE1
+4+RJ32pWPbf0szQZ+IwJpw/dZCjDSu2u1RXe1kCWHJ5JIfx/ofU1QSZa0qC
7v5rf8zw/SnqFZFi590KP+7YtH4+hfuH3n7q/acyUJ8ccMzmYx3aN545a8JA
gufvHV5gB5uQ7KNluzIXEtyaS05pe9hC42HaNBIyLAzJ6OY7zsLZzhz0l35V
IU9FH6lFtTvYZVJQhYuCfv5FP9TMVMhpWcYMIn4pvFaK/egtjxxzyXlWMFZN
TvVe7UeTsoX9+vzswGQabm6I90s+/hznRi4HfJTMs/ru0o/M9lgcLXghBtwF
cpbpiIpp7mecGLokDo6Xn9ZHL1Gx2BvxGyPqErBKl8xrukLFjl8gjHNxSAJb
ptC9rYeoWKr4RnjUcRLwPus87SvYgnSNWHLyC0mgzB2i8W0fGVntUTvwZ7UK
ia34O7YS3dG7KsrtvEcswLbnJMOLtH5kExgZT3+QDcQseFRO4vfLXbYxP/Qn
OwxPjIUNtvWj45Nr2Vys4tAlwJH/IJeKEfPvXVZvFgcHs0c+bbxt2OgxzSdZ
ryRgx/39KT0fqNjL5fl9Mw9IcHFGX3lmpIXGvzBOb4/PP0qm8S+5l/zbRIrm
Dk8yLpoXUeuRTIxioY/zDZSiyfliZLkbHdcx1FlxikW1dY5SbzpGEF24uXI9
JZ3Gy0jnZOm8JeXReJYLknQ5p6a+0XiW2we3zGrz9tJ4lhLPj9zydX2oW5a5
7mQXC0RdiPbUrO9HB/SO7j8bygaufJcUT+F535ChnyyqzgEaLUMFSx9wf17S
UBys5QQjHrrikIg+xMUkmhN6kxuMt5S07orvQeWGZSvaPDxwIUfgErfAN/SP
X5FrXSpLUa+h8SsZCrd5dO800fgVXc27h3iEKVje5tHIi3Zi0D2zdZRhsBVT
5ujwblQWh4DnZyLHWqmYPQ8/fcC8OMi7skxdxP2AVTqCuLtBAva6mwQ4B1Mx
24arMhdjJIHDzXbgjlUrRnoQUxTgvhV2Uxj8VxzI2D9epSS9gyPGvJzGqxhy
LBzZYlGD/lhuT4uqkgG3c9qi+042IP0WxmohVRLc1Lr5nNetmcazMIeU9fzm
IaNjnsfOTegUo5qdakWT02eQrNOZYlGNNvSAqjmmbRmMRFtDvje+HUQntsw3
Ci+n0PiU/I0nltLcPej1usTgf5eZoGryduAcfR8iHLUz7+HC569BStZRm34U
/szdOi6HFazEa/iSeQZQse55nhd27IDNvUxxYxhAwrP6q7838P15qpDDod6P
zifP3Xz+gguqlL/s2ZrZi7ZnszFybBOF3/xtqSJ43ugckBz5+lcUDs0/esUl
hPtlwfzM5xoxYBeNfOfjQcX4A0+sEiPF4YapTmwPSxuW8yM/1vS8BDx7cPdS
1igVuzPVd75ipySsnA7gvMtKxQ4v/rzmzLAVPgTPHg3zomD0yX+fGj6WgSE6
QS8tzzrUVWxwM2xVBuzVeo8952hCutkrl69fxPX5kquksWsLjV9pXvzuJq5H
RnaKwPjL6T26Z73Fbyf5MAqffzN3m0JGKmZtme8f/4dyJtuf78hght+/hE2I
ov0ob7Aw+roeK6ytdRvvmOtHa5UdpHuLbBCrM6XwRnQAqdzmd2RM5ADZ1+z7
7tzqR7utiWXcMWLw+JJh8uwOKpZc+1jD21YcLunvnXabpWKhqyMNlxQlYDuL
u//vTSqmHbiv7Pa6BBDShKgfjlKxysObT/WMSHCHfgubykIzkmLx083Owe/z
OYuIJ7vI6JPTvaQpl0okSLp75fq6C4rM+sMVfJUF9L55XfaI70eOZ0jbC6XZ
wPKrqJ2d9AC6Vzm+UtHEDnrK42JRA/1ol1CtjN2KGGxQ/7MMSadi/no8XxvL
xEEq+pyROq4v3dTAC2qxEsB7QUS1rhifD7b+1Uq7QwJHlhNmGs0tNF4Ffd5/
4D6uL7pNUdv+dr5ER29/ScnYtR3VPhjIGt3CCqcy4bbWYD8SZ+bPnixjA8VZ
7nwefD2O43ldL/TE4Yu3+m0ufL9vMvs43uSRgPMOIqsVbG1Y2907LsmpJDA9
m8lURSQjdzK/06xeGYpoSzKPS7JDt1cMteTHWaH3AP0OMbEB9Ixp28Pd8eyw
aErSezzbj4wdd1kvZohD8t/z+39xtWHVfVJrWj4ScJSQpHQUv98MybHt3b0k
kJi+MEM2IqNSHe/pqdV8FPVD8IngrmMo5fATb5Y7rODJdWT/Mn7+e/0Tn/Ls
YIfXuiJbpfD70ZXumWDiLQ71c88IrBtULGXGRNVGTwKmbtU9GJ2jYpfCg6W/
lpIg76lu2VlNMjr1aZ3DyIINdgU+5r6B612J7J+tL7vx+cwrwbUM7/c/HmXs
zkCJAt7PfzzK29Id9KZF1MP6Tg0jrct1SO9G1w1vxutI7obRYfkn3SjjiPeb
tPIYFM8k2VufOoJCqVbBjrbpNH4lSN/iFak9l8aXjDzqOxLV+43Gl0T+tqDr
3+yh8SWKLHVFiSV96FxYc8T7ehYouzctCJX9SFuot/vvPTYQ9Fs2zMDXb3xN
/V6iIgdUcATFyXzuR6dsj5mf+sIJUaKE/QrP+tBzjsUfP1y54WeNWNTbNz3o
u87Z7Ah6HjDTvi92XOkb+seTuNx8taFHV0PjScxzbbb9PtFE40lK5OSqfZgo
mOyTPUZbrMWAf2l08GZ7K2ZrliQdt10cxKoVO5WbqdgA5bNT3W9xYOG/tWbE
04bR7U7gHq/E8/saGBIi8f05Y9UUHS4Jnt9sTKzx/D98bmRCwXkrDFc25zJ5
k7F//MiSpXPVokI5jR/Z+rrorM7uGoTpzP9QLZcBG6Gwvbx7G5DFBf+GqR0k
iC27mPnUspnGlzBaCDNtcpDR29fxFb8+FqGpFnXzVmSBWuO1Gbc1UtHgjT93
FI4GoV53pb1T3oPItM5kzv5JCo0XaZsrnBFa60bPyOekmM8zQZm3egnjfC/i
L/NI0qNjATWWxht7zPsRP/N+0lwqPhMN1N0r4xpAlYJTHzXN2UGm+uaHUeYB
JHYxJcNjlgNC7lr1zqB+9JeJLZXvCRc8mvqx0VnUi1q8M2/WSolCpgLFMpra
gtWTnossTInCzg769McsrZjM0e5MuzIx6Ciw6al3pmK6LWKvJoPFIeWh0eJP
fP5UeXt2PdpSAt47vkU1P6nYdYZxk9sKkmB3+PN/bbxU7L4/RSp+VRIs2vzv
qftTsOwG87vKkTJwY3jR5aRZHd4foS87lmRgMqtqKnymEZ0Cn2um50lAlb2n
+timhcaTtFvXhuzRISPxx20Nv3XeoY+bzG3khf3o4PYnBwLtyagztKqbN+8+
Sj0/+j0ukRmaGA5w1G/pRxpH/Cwp6qzQKn9U8OuffsQU41AtNsEG59xbZMLF
B9DuX64CAeEcIPg31oH5v370cprFpyBcDDC7bgpVloqRea2HtM6Iw6dfyW4i
U1SMtSR4dzZJAoqXptg8GNqwAwlaWaqLuJ6cOJX8xZyKtZF9k6UNSLAjusRY
YKwZcdmXhSm+J8FVs60eCjvIaPS/V8enUypQjqSkjg+bM3pAXDefs2cBkd7S
sISofvSrdHJSkJ8NcqSf/ZaUGkABT24+P1fKDtOEmPvPR/tRypusXq55Mdj9
xsfP6AUV+xTWaR/3RRxeux4KeI2fd/PYHbXeERIgfGNw//VyKtb6/oaB7y0S
OJv/ch0vb6HxI2LE64xbcX1ZcTXpnXFKRjsmJH+KtEohk18ZXkDPCtVNxaYc
Pf1Ipj3leFAeGwQsXxtXIgygeNW7992QONi321kxD1KxuRpC0xc2CUi8p61x
C58PynqKciRekCDXD9+HrWT0bEJdbO5OKZqIHtqSu3gebdrxs/n3sMKN3Jsc
rCIDKLUtV675ETvwr4Fz+99+dCd7ibH8pThsnovKfYPPc1oplXYPvSSAj3V3
065OKja11iZ1+hsJPEY82d8dISPJm2WnZlzyUDb13kNeNiO0Ld3msJ07K1yZ
tXt8YrMfjZ5S1MyUZgf3pBcujXwDiGP6gLbIVXE4ysiy7eIqFZPIm41LOSwB
fR/XdPYsUrHTkzXOGl9JkP6OrjxHg4y6pGooaYZsYPA25OIGns+n3T5VubWJ
w+HdeYuDuF7/40OC35o1B+L97NuStLHWGY0KIr4M7lFlQbuvl8RgT9kAu+4j
2oy/ftzELUF7FfeLBZLWEe42jF0tLeZgKSt8wg7+PMI/gAYPB588HSsO345F
/niB+19dwYmPpq0kYE0fqSfrk1HboPnWeb2PSPmswyZbqjaanzf4b5iJHcp+
mP+MEsbnh/sNUe/sxSEscn1L7AIV49M47CCnKgGVr1I61NepmGqG7qrqJxIY
uJ+Ub9nzv7+fszxns4MN0jZO3fXC99dsXV+IoVYcen8xTCXi9Z2rs3W6/IcE
exg5BXPx+kLt163nVtNQqV/Etuw9Koh/rx/niRY2eP4527Zs6wBa127fVBOW
AJ1l0qn/5bmFKN/bjX9ZgVnkASzh901cyjlP+b043H73xY8Oz9OCWmdCbQdJ
MFH9w77KmIxajqrp/rnIBieP3ZAswv0ltHfbjc5BcXjmnDNwHV/PPz5E7v0b
z0QTMo0PGYhZ5c8oyj08H5+vOBBah271t4mrm3uhCf6JUKML3eiHXvnObx4x
iO7l36KekBEUH3FwTGBbOo0nue34PIAnO5fGezT6CrVvo36j8R5fHTmuPF/s
ofEej1/bGBsU9qGXWnuu9VWwgOAzQb+dZf1I/y7pne5NNrjyaCMFw9ffqDTa
Zi3LAS7XytnlivqRdFTXpfA8TnDOlmZ2eNmHvod9fxDjwA22x5jpzuT0oJta
8myfVrbA/vCL2y+of0P/+I77Ge67745W0/iOsPr+F2maTTS+wyS6sSF5lYxZ
225PHzkjBseoJn9kyK2Y940H1+6QxOHahF471kDFJHM5JFwnxOFFDRcpE9eL
O1+S/SrLJICzyU3K7TGeP5ObXyqGSMLvtPX8osutWPkxDr9V+61wPaH98x1f
MvaP59iF3v8REiyn8RyJeT0RBoQalLH/LPuDUnyecXK4O7CtAdm+1W22ViZB
UIQYn/bxZhrvwZ+6dO06G36/Sr9en/xZiGZKf79aXTiFMj5+3p4ZQ0WI2SNB
pS4QHT7kY33fdhBd2evjd90uhcZveLubWwTMdSPRov++6lsygeyEfuDaZC/i
Wl0sX1lmhrxbeuYiJ/A8UviMhZjECk1fXfMR5wCqvbPP79Exdoinv1UfxjqA
EiSObqpOcsD0tfcC5rr9qEw9utA4jAtajS2XXpb3otTeO7npEqKA9nzhyClt
wSr0+j5GToqCa3zHft1NCmYl0sS2v0QM7sy7HB6yp2LWc+t/KQHisLvRhn2A
sQ1zC8n+oGYhAZ0c+cplE1RsNuRPufl2SWAMPlHvIYTP8w168zuXJEEnt95m
LYSCMdkxX0kKl4FnL7fd0tWuQ9GJd3rv/pWBVA+VRz9HG5F18MEbxbYkaKE2
306waKHxHYYbR8d3aJPRjRqpXVMf3yLxQEGfzzr7ED9it+VWISNz1syIs/r3
0fMEV86jMczgePQoxsOB6+36D83NXawAUkxanpP9iG39XZzTCJ7vCGXVlyUG
UN4r0UsGQRzw7fqVkEL/ftRdtNwZFiIG0d+bT+4hULFxNdgrZy4OR64lM1n/
xvNBcu+YKQH3w1u+wkl4/Z9IBiTuefx8fcnU/mhJxXrF4GWoHgmU7aaujfc2
I4bH53Ocs0gQ0dKQfUGJjFa3fHrjoVmBfpfscDgq5IR8zvrfzrBlAZOLwrqE
8H6kcv0EWZuTDbIS3Rcdcb15tIa5ZxWyg9Utr2LeH/2o61qKxvC0GLzT8iaL
JlGxlo9fCu4UiMPo3+2xR/HzHu1930csVAL87/34b38VFete2mc06U2C8U8D
92W/ttB4juQISZ1vuL7ktg2mzus8Q0ux8mGCi6IoPJn7jPsKCzBl5SlZd/Wj
7Yd+Ejuy2GB28OiBdFw/P5hfaDuhKQ5d2SmkmT4qtuvNtfs2zBKQzekVCrif
FXBYdVomk+C98VmlKxJklOdt5HlNtBTVeOYXxCqdR9oi3r8+trHCuyul3yaE
BlCG5uqShD9en83LhyNL/Simtfd0erI4FH3qtlzC/fbefyLCclcloEjYsjTi
GxX7ruSlE9NJAk9TR2dW3B+Nor+zzKbkIta86cpQPkPkfLacGOnECs9cCkYu
rfejn8VXuZdF2aFJVD2TV2AAkQSlY9cu4/lOtdWPboWKnYnRM9Y+KAH0PYyP
apao2DEJpzDvL7j+2v/cYrIfz2NUpXyqFhsY1R/UeI/7G1tUgpgZBc/jt5QO
/s8f//EaKnS3ilNx/1Cesg/fdIpAPqFNj960bhze18fsxP2YDSaw9PMiuF5u
V8GOji7i/TtykrMP90eTn+y3XApZwePPr/YV3gG0bHc5XfOxONzfb2lYydqG
lf6Ybg8jk8BHRPrdKj7PM6zebpm/8wFNcxQk7V8DtGQdYbZrgw3s6StbX+F5
IyD1/VjUBXG4riLBxTqP1yMeJVq3QwL+HHjJ9xSf3+Q7R6Q98nC/O1owqb6b
jGRTS7RDtrPBQ5m/PTP4vOpKVHL5USkO4bw7CFfw+iyW1kMyJ0lgnmiak4zX
9zPeoGzeJRX9SNq4inEoIuHn9b1JtWzgoFHT7I7nuQOy8rkd/BLwzr1GoANf
/379UZuVKVbI2tIjxvO/PKptwsb/ThwWuwbsffD6OT0WPzzrJ4G9v73GCdwf
+RmeyknasEHt2XPBSXi/0ug46ov7xAE7IbTtBb6ef7xG5ue65J/4+d0S/ekD
R9cDJLDrwi9P1e+HD2c9YX/zkA0YUs28/fHXv5y2z5Obwf01JXGiD/fjDK4g
9h+i+P1XHuerxtf73GWON6dEHIpnPrjN4/dHx0KzXW4c15sTI29P4fWm0PcG
L+q9QGKqb/jc0mSQ1GVL3wNf2OCpUxt/Kt4v+0eCH3rTxOGYm9+6KT5/LzXt
XRHtIUFNv3aoLj5vx16y++NtygaS5mtvAV9Pp2Hr1cBOcWCOVczpwOsJ79f+
sG+RBEmXyptt8ff7389VVlZjUNZZxS1paluQCrd35dUUNmhvsD5+Ez9/KQcX
fHaqscE9Iz7dCfw+HvhmVybZIA6Us+TPX/HnOSdg2junSTCQZnG+CH8e/Yrf
eYMccXCqy4+5jdcvxV/oRBgmgf7rKK8deP9Cn7acL73EBiyai5W1+PquFWjJ
zI7g+/86/BnCn/eP12B7+mG/Nv79/3gNuv//4x+vYTh2afHPU1karyE5ZPel
Wfr0//2/FfocuhMFnjReY9FZZ+8vlYc0XmPLK5bciM4nNF5jWj7Eah7v+z9e
Q+RWW+h7YiaN14idCnr/Kj2XxmscU3lpYulUROM1/EyiatcvlNF4DXh6c+nM
hyoar6GQer7IXKWexmvEFdil1e1rofEatXq+87zzFBqvwUQ2eP/X8f/+30r0
JXKB/PMOGq8h0nzB6bJrF43XEOyYFn/K0E3jNZQXHlTFCPTQeI3n2kVnhPJ7
aLxG3A+p+3tLemi8RtqFpcX7Gj00XsNqqODrfa5uGq9xMVhqSNKui8Zr1A1V
+ice7qDxGlPPgryuOVPRP15D53h6t9JpMvrHa9SoizO9NK5D/3iNX/+vsfsO
p/qN/weuMkrhoKxkHMmMBhF17neDSIMGqewSUZkZ2St7q6yIyCwhLXpb2eOc
Yx5HpKwyCqWi8nt/r+tz313X97q+1/X700Vn3Oe87/v1vq5Hz+deh0ZyYA2A
XmOVw96D5r/KAPQasmvmHBTcIwH0GrS7NS+etuQir0H1OsHaqPsSeY2PhkKP
1t2uQ14j0ve5D6d0M/IagYNsP+0VOpDXMONYiU0cpCKvke/PltHORkdew0dj
KaEnmY68hjVN9pylDx15jX1xCjJnSmjIaxwvyH97iELFodco/3I1duh1Gw69
huY7haivxY049BquYleXJNVrceg1Hr+743b19Qsceo209kBSb20uDr1GyTjX
6aDnzshrZEXxHx37WIy8hrxNqadX9jcK9BqPWXqdqugHkdd4dY7FYAufNfIa
b0+mKJ9Y5Y28xsxbvn0dxtEon8U2LsbYQyEV5bP83FDZYzySg/JZfmvGd3K6
liCPoY3f1/OL6kMeg2fyxcX0wwzkMUZZhvhJyf88RnDTuHztTSYg9Zt5vakm
YR2VH4272v7lsSzpCZOUopgA5rEU2WrUXn0+AGAey/lHAv1BOgwA81gmznPv
bTPrAzCP5fTmb4llH7sB9Bj+2zCr544NyGMouL1uOd/RijzGWZV+mbz1VJS3
Mr561detQTQc5q2INhu8bLCm4zBvpe5MvOFKBh2HeStlP/x9arfTcZi3skOA
q0lmPQ2HeSttvYIqBa86cJi3Ir5P+0ruqRYc+g2PdOuKDqNM5DcKAm3aJnLq
KdBvWEebbMoUU0V+Y5MBz8zmQ+bIb9hKnbpa4+uG/MZ7p3TZLP8wlL9y1Xca
T3x/F+WvCD7x99/qm43yV1L+3u3YNF+MfEZx/InyW4J9yGcsrq3/BZj9yGdU
2RwJVDEYQD7jYPoah3xdJiiyfPfyazgJW3phNlD8lonyVo6ZcD5kKWACmLfi
xn3+YeKfAQDzVl7skSh695gBYN7K2bkXtLHRPgDzVnz19EzOJfUA6DO2Ns5p
L61+i3xGn/z00lhAC/IZ2tqT36/Jd6I8lerFZKf1qjQc5qkoSm4RXr2PjsM8
lcsnA/FPD+g4zFOx22U9WHOBjsM8lefPKlp6LGk4zFORdRW38c7uxGGeyuIz
l+3iMa049BwKTZzJWsPxyHPIWz5iT7TmRZ5jJxuLm8jtE8hz3H3qaukgdA1M
v+6i1opPgp8BySNz2f7gcwHp23L1LNDLcfl4figO5a/c8novGPXyPvIZMjqb
vyg+YoAE5xlSRTQ39sq3NmaWMQB6GbVvz4qRMLegitPZKUzgcvwDJXKRhB1c
zx9p3sIElLv2jbO1vNiwqN9SyRUmylvhv/X5IueVAQDzViYkuekxjH4AfYai
Ybh2FXs7XuA8muC3RKz3hmJqrzsVjx2Z2CdaJ4axxZzVr2umoTwVyj7XjTwh
dBzmqQR7F81LJtJxmKdynJ/aGvWNhsM8lfi9+23C86k49BySV/Nl6+UfIc9R
NWfoEJebSIGeI+dm6bMTW5WQ50g9yzUQH3MBeY7QcZ5tnmyuyHMI8nLozh25
jfJUNibOXpw5fQflqQwtHbRzNMlCeSrNYp3bp4KKkNeItGtS7BvoRV7jtdy7
J+IP+5HXuG74p/+V/ADyGu3z5/68UmaCJZm0/nUOJCwrM9Ihijh/YX6Km5MC
bTtxPsP8lLI9jqV0USaA+SnnRWYNG4cYAOanPJhSF/Lb2g9gfooyJSaBc6oH
QK9xsHaoP127HnmNdsA2tbe3GXkNoca6EPniDpSPcpwzKvvXOhoO81E2C4a0
nSHTcZiPkniYe7UEsd/BfJTRFb2jftfpOMxH8U9bqRgKp+EwH8XqzuDq1euo
OMxHkcr9oxgo04ZD36Gy11Ffs/s28h0VQ/SscWlW5DuUDOYPhqjqIN/haGxV
X2xvCxQe5TXqnpsAJRH73R+x+QHD4cSGlMkZQPkRGtXuFYvyVEqswm5xfk5D
XiPX4eqx+psM0B9lO0m+yI3Vnz5QYPlqAIhRFxW/rCZhvrRC3XdhTFDL98Ak
h0nCvgaoiXYS51HA/erlnnxeLLPn7s3gW0yUn2J5ZKLEL3YAwPyUXTiJX5SP
AaDXuJny4/5P+zY8//Pms1wjW7Awtl3Uq4eoeJJMwTPZAjHMe8+wsnQeDeWj
bI39OzfgRsdhPsqnpmyBE6l0HOajrLHC5iP46DjMR9l5Jbo+nknFoe+IKVBP
0KjPRr7jgtLiegm7EQr0HfebhwQ87+0D5//Ee6kuDAGPdhW5y2xWIN/71DOj
5jFQdnH3mnhZT3DRo2rx0D3i+6pzjt/YgglM08VS+3JI2IJP53VHYr/gLLa5
9NCNF+u88uxHYRoTuD+37qzR5sNsLjUKNzIHQEaZ0qMD7mJYUmlrz1sTGr62
6dWsirY45sey4UzXKTp+tV405NEGCWzLrEDd7iw6ykeZq1NLUdCm49B3gHrR
3P33NwPLm7t+pHv2g90s96w+Tp8C0R+jTSv3krAbbdW+XPlMsC1USsKZlxf7
wXDrDSSu+6UYoQSOQV7sZZvX0ycGTBCZKl3PMyhG3A8JGP+epOHm6we2uJWK
Y6An9aFlHB2X/eDvpAgkMPbmAEXvcDrKQyktZD3R0UXDofdQ3ahwpj+8AHmP
xMkpa0buJeQ9ftr1Fm/ik0PeQ5pjb6j2EWPkPZZnwwfOMZyR9xh1uuB2SS0E
5aPEGrNavkhIQvkoPiq+v+ypD1A+irvn8U089ELkOZb5QxIlKnuR59gnBjb+
vN2PPIfGK9qtIYEB5DkiopwrZiWZIDN8+codSxJmtb+MVfQVE+Wh6NcUqS6+
ZAKYh/JISLbzlgLx+//yUOryPmp+/s4AMA+F54HJzehD/QDmobRG0asEN/UC
6Dlq+gUs9k7UIc9xRnTnrp0+zchzXJ1OIQ/Yd6C8Ezbrw/vjFqg4zDtxPp5y
1H4jHYd5J7zlh2da0ug4zDv54Jom2X6TjsO8kxy676npdBoO806cDjHufZSi
4jDvpNxoT/RupzYc+g8v9YAP6Qw/5D8m2UavxVn8oUD/4VKqfPnGFS3kP0b/
qAe5PLsCWkT5D0V9GwfLtJpWkp8PiPzVq3zVawYMHYuNPZMTg/JRlrUmF3LW
piHPcdQrbn7ChAGWUmTOMA5yY4LvLlTP5RP7xx3JGrfPPJgQfcNMsh8T2Lqy
zOzsIGFTNxoOi7Uzwdasz0m66bzY851aShlBTJSHsqHlyYUjDwcAzEPREOOS
TNrOANBzJNT8uXtIrA2XzX3+7HT3Fuxaxp2FLhkqfu/o+vnH6WKYLGYk6XiH
hvJOwisutxXdoOMw72Rr9SqVxXQ6DvNOrF1SIvwk6DjMOxF7MbuviPi8oP+Y
u/Du8XPuLOQ/nIv27YqT66ZA/yFjEx0WUKgObBx4n7+RGQLS7u8ZcqkWQGeh
ckfq5THw9UTmzoMd7uDhjTmTd148WImmWnLzWSZgY/GRv3SPhNXcvRV9oYmY
L0vi/wra8WKX+7ZdSM1mguInehPb9vJh5eF/3q5MD4Cs3piPjXZiWL+xFq1M
l4anD/fmFamLY8vb7ho1HKHjpRKxk4bsElha8lCOKbH/wLyTqbo6GwMDOg79
x1MxJ4qWmACoZLAHV2T2AbEsnpAkDgNQOiTLt06RhPHfbjmxNYsJ2j8HPFlZ
w4v1Tr5UxojXl5ZwcPutTl5snuGz/P0iE0S/CWG50ymG9TUpPSxi0PDv5MW+
2YfEPLTp2PzGSDruQPnezVSXwA6Phnndj6GjfBOBp06dwaM0HHoQv9EKUi4z
D3kQvt9TAXr2TylBN3PEzml2gFUcYRTBmZ3g9Nt9ut7eJCzpZPoXm1ommH8+
vmvFgBczEuHaMPiECRq5ebakbRHH1vKGdIco0/Gg0pnzdgvi2Kir1afuTDo+
mpOne9ZcAguz1zD2ukzHoQ8Zv7oztKOTEzhkPsmcmO4BO+7X0vWBHljqvuiR
RSLOzzCaWUQ8E2wuOdAh9ImEmaY8MRlrZQLxU0rHhsLEsYn20yQDXzrO8oOZ
rKEogek2/qJw3CPW/z8f8jFVaStX3hRlYPuqft1gOljX2Wwp5oqB5xr4er0y
EgZ2eH6cJR6PbJMv9ZOPmMdT/hy0Jeb1v38/9UxHNYJ1E16yzCUJcHXyW8GN
IyRs6/o0EVPi/fpK18eOi/Fi3c+y+RWI9WhZqLJawcWx9rrV238m0fH3wdwk
by0JbJdmntGbIDryImvXetbrqBchL5JYMuaz7ZEK8iJM5eN5xnXbkBdR0Aux
8lE+h7xIyYVTeS5HnJEXMdLd+G5baTDKOykJ5R4nqyahvBPOp/ix4fAHKO+E
76hceYxHIfIgV+xiXhcV9SIPYhg2sxb36Ece5KJ7OrNpwwDyIBkJIbVdIkzw
TbPwyeAFEsazpkqv8DkT5Zvs1Uj8ta2SCWC+iUsKfSR+FxPAfJO2Zl7uI6sG
AMw3YbxSKhs71Q9gvslSaNjQZ7leAD2IuatojcbzOuRBbmresK0xaEYehHtP
8LojxzpQfkn/pzlr6UkqDvNLnDWqyndz0XGYX8Jmbn/0EjH/wPySS2bSLx97
0nGYX+Ki3L9G9RENh/kldsGx01I7qTjML/nMlJ+Vu9uGQz8ChE4IbavwRH7E
2c/9D6P6JwX6EU2Tv0xugcPIj2z+9c709Ig1SDFqYnlSOw7wfQNFZNwb5LK7
jxpoz4Cmxlspnn+jUd5JxhulhdDkVORB5EWCjfUNGCDiAXu4yh5ubMWtYCH6
wQDIi3vtUj/Ig+1WswmvJubJym0lKu6NJEyHcWndBmK//569YrnmLi+mIev3
40coE+WbnL1t6jlTPABgvsnuzGIlMU0GgB7EKFbd33WxFZ8MZBtfbN+Cvcsr
yKAKU3HhQU2S010xTHWLE7tpFA3llyQpF7zRt6PjML/Ee7d7Hjcx38P8kkt9
t8bUZOg4zC9Zb6JN816h4tCP0OT2tl3f/QD5kZthR/snL7dToB8p3yh7+Dxj
D/iSr39mTe07EPrES2502hwIKTnNVu4eA79PWZSGS7uDpqsRvPI3eDDDot/h
rSeZ4NzT7U4FcSSs7/vuHMFGJvApfdRKu8SLlV+zBcO5TNCkQHE23kXcD/nv
LTH9PgCkbKpXRVwWw667OVx2AjTcZmo0eHKnOHZdkG3L8gE63tvRnKy0RgLj
jjFVUif2e5hf4s0+YJRpSOx3//kR0atBJUYF/MB2/Vxr7e4+sO/HZL2npD44
PPjdTlmahO2Xj6m6eZ8JJNJ2/dD6Q8Ludfj3WjUzwbUkoyWVZl7sjxvPx0uW
TMCj/1zMuFkM87Gulm2l0fBqJdZn8vfFMYuPuWvlwuh44rRSSJmqBPbn7vcf
C8T8CfNKlGfiWzOmaTj0JFu1PWds1+QhTzL81/XmbfmHlCGGR5GDRTuIW2Je
FXLdAXJvTsfW3SRh/ue1fkZVM0Hdy+WVF3q82AzvrNidUiaIF9my1CcgjmVs
CHrIKkfH27gtqkRmxLHgnFoPbmK/V+Q1OP/pogT2VFtLcdNVOg59SeMWdR/D
UxxgCz15YsG3B9xkL9elluqCSLpcV9M6EsblYrv+SDQTXLeY22T2gYSZceTc
vUbcL3022ScnEiiO7Xltu6b4Fh3fmrNJj09OAjPOHvR+k0zHoS8pdnhmu0F6
nHLbbErMUIgO5HfNjNwspwDO6eun44pI2Db9j+AQsd9rC3zs7uSRwJpj65w/
EPu9ojBP6Ex9A+CXz2gUeCwGfo/VsN7BiPNmt9e0ThET0Hud+xWFeDEh3a61
U3VMkLTSimm+FMeqFoqv1SfQcVYVnZozByWwwCcK157epiNvcs2rcrLZohB5
k4cHr65+ZO9POc7Qk9C3JWGXFaKuXSH2y4uNRwI83otjr1dN+qy7TyfmVdbl
yZ4qMC5v4J+vvQoI1OvnTHUT8wppz/I64nq2XxVWXEOWwAxP1LFUEPMr9CZa
/EeOl/UMUEpPdHzYkkHC5jUqAzyI71O0k6Ga7zoJ7K7sKgUT4vsaetx4enbX
W7Ba6/ubw/VCwHNv15WXnLyYwOsHYd8bmEBecHKptJCYlwW+UenRdBx6EivV
zXWRBa8pLBujVqkFkbClP20HxOqZYJ+h58/Xv8Sx37JZZ5yJ9cQqZsrnuGuB
6nCoplQWN2j6GxdC/0LCClWGTfcQ63+JZ3vkbNRzcGr0g3DjqjnKpTCeetZX
JEzWx+6IC/F5/315w0lCQAJbdOZWayK+TyyTT0LqGsQxBd33H//cpSNfsiit
kHOKuxj5ktrjLMtPHrEiX2Jt0GTOVSCNfMkL3Xt6OblGyJdonK+TiFhxQr7k
2+YLSzoOwSivJMFbk7SXPQnllVioCvudtXmA8krIDeteRBwvRH4k7/Vi5fTD
XuRHvhiv10l26kd+5Kzvsf3lHAPIj6i+2SC1V5AJ7m8M7PI9R8KurhP+eamC
ifJJald9CdxVxQQwn6Te1HYDzx4mgPkkd/60H51kHwAwn8QjUfx48Pl+APNJ
VutsCDyi0gugH9nBNustm1GH/Ai9zZt+XbMZ+RGJTLXBD5odKH8kMawlxeID
FYf5IyTqduOQdXQc5o8IJjbPPUih4zB/ZGS6Qifai47D/BGS/Orm5kIaDvNH
7J2cPj9Xo+Iwf4RD5Zx3ZH4bDr1Jrtvd22xqbsibmA6P8mpmLVKgN3Ebm5zI
czqEvMk3wXttmz2swervWcN4/jgIfp0Q3WPmDVSimt5oKcyA9b3i74cKo1Fe
SXLilwAzy1TkRzwOvz+8dJQBurcubv2gzI2t2X+M9XT6ANCICe343MOD9Zy+
+VPLgwmsV26f21xPwtxeCPp+I76fQ1vDdd8n8GKqfTHGghFMlE9yIt5779PS
AQDzSSIz26g9BxgA+pEe3+Zyxw+teJOTok9Tyxbs4shr9ho+Kj6w9UzG6UQx
bNi6e29DKA3lj/D4PPHktaXjMH/EnNHwM4I4T2H+yMeDoa0B8nQc5o8ItHvW
GrHRcOhNHD1uB+S/zUTepHM3pUCsvokCvckGkcwRoV+qoFT7a5Z0zDvALcTU
dLxrDvxaj7W3ixD3T/S8TB26Gzhvc85O34YH26Er9efNMSZYHc5253g0CXPy
qfa8QuwX1rt3lT624MVYVTUOuOQxQY+t2st5JT4siH9Xs8+vATBa0h9rbymG
JVAnUw9p0PDjc3YuIUri2IxS3WlWQMcnc6ydUlYR9wcLsoubiP0J5o9Qj+U1
7TGm49CbfPRmSscE8AFsq/UXnT+9oOaHheYqq5OA68LgvVpJEiasyV8bl0bM
4y6cmz/9ImFv1SK5J4j9z1Dgw3veBl7MZyxdh+cyE1DvdRZrNIhhF096crS1
0/AclYjsphRxzOhod+cDYv/OrWs1FVeRwIZG2Md5iP0d5o2IL9KOpX2l4dCf
cHc/F9l69xHyJ0UW0Z68V9IpEesvLXh9awO8ajb2PAHKQP9kfbm1MwnrsZK+
HI8T95saIeNJOrzYUdG0Q+NlTOAm8XDSlV8ce/76q32pNB3/Wplyff6TOKaN
k0Ea8XlTtXMsd1+QwEy1WZ317Yn56j+P8lFUe1CjlA18+8y93lO3B2w6eZhL
d14HnDUgsVxkJ2EPRb17BSKZQEijee/qYRJ2qDJDOZv4/nZa1Qm+8BXHfkZu
ed3sQcf3eJVK+chIYMnno0EEcT1Dj2L0OPz25ycfKabu5gcHR2ggVq/qlU72
flBer+2mkk/CZOQ/bh5uIearGd9iTW4JrGb6tyCJ+PwO5UqOXDNvAFPtdU0n
xbeAt5fydsrtJ2HkFavfTwqYwOuJ3u/OjbyYwaqm05XE+eHJdlqZ8Uwc686x
P5ocT8cF1o8lV2PEfBWgry5KzDfQp1gtXzAwWyxAPuVpOZf4oLwLZfGp1OGF
yyTscIT/Je3XTODn6r/b4J04pniDX/1GOh2XOCdX/GlDFeCUbWC5M7ZCqU6T
bY6mkbBSndw5IeI89emXDtkuKYFdX4vzXiD+HvoU/aN/ZdYY9VEuyuSy16QS
55Oso84X4n48U3eBZ4pDAstysxm3JN5vxoCd1o2OehCRd0Nr9Kog2MpXGHGR
gxdLXHOzKoOYN0lbbnzSzxPHQnxXZ3tEEd/3//yJ+dRPtaZtFZSC6UvSA34k
7Lh99gkdYr4wZy3PT1gUx45X6ovLEeep0SEWbqeCGsAdIcIj8XgDcOqzLXCd
JmGuw73P44nzNF7uFOVLfQUwP3lmueHlLIXbcmLiUQUJ+1YdYrqH+LxJcRv0
IjdKYBnn17zYQjze2MweV4s6cSyw4UozC3GeQo9yja7jfjG7CHmUEB9xyWF7
A0oT7VsSS584lnBV5r4oMW/wnegn9bSQsO7qvEVhYv2yQszU2MSI/Ukpzvo2
Mb+8MQ2/Mt1TDDitMzP9dGmUx/1nT3AkkbD0HweN3hDrUf9DsaaWlZhfeCtt
9In1u1l3viuLhRfTuyD7ofd/1vc/r3I4MzFDo6+Akmcus+HQV3Hs2IWLpTeJ
eaA+VHj+9RgJk9fQP6VEvL9Zk7Ssr7ueAZmzb+yd2yYp5vx3lWefkLBr4wH9
6cT6qADt31a8Eting4p9BcT7hz7l7NFJg0OFERT7KXd/nX7i+liwMZsjHi+3
YYfdAncpuIANKvnkD1G8Ul+a8q+XwMounHU5TrzeHTvKfs5FPQIsqSWzoWtq
KEJ52JHR3+LY3vGBsDLi8cW2vbJUXiBhazQn9KnE9fGqRC3TooqEfXjwNTWP
ePzpD/TkckEJLHbN92ob4v1An/JFfNMaBY/i/9On8I0/Pt2hRKVAn3L0YI5s
zHc+5FPiVhs+dBzcg3zK+m0577qkDJBPsYnq3f7Y5jLyKV74NpYn+q7Ip9wQ
mW/R6gtEPqUk5+34lwexyKfs2Rlf/wBLRj7FkT+/LrI+C/mUI7dM0tRXFSCf
osh2/nO27lPkUzrPNTJ0ie8p9Cm01Mo7SpmVyKe8LT1DFmLWIJ+inFLIR3v4
FvmUmmnGRRaLZuRT9g0VDa2Lakc+JYJtupX6kop8ygtvc8eqBjryKdzkSPeg
R93IpxSGibC7qfcin/Le7eEN95w+5FOScgJ0jPL/+RT1slUHdU4ykE9xkVyt
W5HAQD6lKHvhnbQlA/kUY6fRwZyCfuRTrKNT+SUd+5BP8dYxfJXT1/PPp7RZ
rAvM6kI+ZcqaduiEAg1An3Lt242TZ/rbAPQpYqEc+9l1GwD0KV9bhemXA3DU
B5Sszp55vLcE9QGFe3xzmQahqA9IxKu7/LDnQ+RTzioN0NfNPkc+JeFKsef2
vhrkUyZksnjWuDYin1I6NZqZztmGfEqAYZel38VO5FMkWiO5VSepyKcc3NhL
ybhFQz5lkX7ib4IfDfmU0g88pvZTVORTDj7TtVgu6MShTyGpRQjPbW7DoU+J
FrRzp6rEIp+it2r45xfqIgX6lKIyiV9cQduQT9HX9DLdkHQY+RTW+bPrqAMX
kE/Jer/5RH35deRTUvPMPB94eSOfsgUb9V6ZD0P9QTI37LjHshJRfxAusNmP
6+991B/EcbmHf2FXLsor8Zf6OsS2+THyJ82XVr2T/NWL/Ill0lQ5/65+5E/4
1ddzsa5lIH/SJ2d/ssSPAWAf0OZoCbt1YQwA+4C0ZP4e8RdkoDwS7pUkIROx
fgDzSFaTX0XuK+0FMI+keFl1UbOtG8A8klcBJj9yneio74dy4Pmz5Zp65E8Y
9fKazcPNyJ9EhCsU1tDbkT8paYx/v2RKRfkjDi+k7nYcouEwf0Tu6dcOixga
DvNHwp0ebmrRpeEwf6SwnLfjgQMV+ZV7hV9YHnN04NCvfA1+yWG8Rx/5Fbtb
pRnPBMco0K+op+gqp09tQX6Fvb7wwEU2gPyKjaoMw5jNEPkVPU2BLma1LfIr
wg6fiz7LeSC/0p4ldEy7OgT1B921olg6xsSj/iAW1wsKFPY01B80kvnhwOSN
h//yTX4w5A1XFyGfIiBy5cGu1F7kU/gVn/sYzvYhn2LOeSkymNmPfMoPl/Ta
MjsGgH1AXSI6I8w4BoB9QAZ7co9tIu4vYH7JjlQ+kYc2/QDml2yv5mlV3tQH
YH7J/XXiIbSzPQDml1hvNDt2n6sL9f38+JBrp3y6DvkUbg7fGJHSJuRTxnGT
2BOLbcinvLePTfBcT0V5JYyNk7dcRGg4zCt5uPHpRHcYDYd5Jbdq9fyVr9Jw
mFey67qx7bZSKvItgUJ89k8/dODQt8xwKK0t9C2nQN8yZ/xT1LyODfkW/2cB
NseP70C+Zd5Y//uH5qPItzxkvy/0y8wC+ZbOu9NXLWWdUL+QwOC5SntZf9Qv
NKvr7bPWOQr1C/Wlv74T/e4O8ivJLyqzlg36kF/JJelEeDr0A9gXtGf64vAj
JQaAfUG/+3xv8EczAOwLih108ZP1YADYF5SfJWZuOtYPYF+QVZawZH9rH+r/
cVcxvODxpwWH/T+ShiupyRkdOOz/MfPgy0/Oo+Kw/2fNvvaLqpf+5Zuo3DWP
142k4TDfBBt+ddRHnIbDfJOCQ3atbDL/PIzBVvZ3ESLtOPQw15e48lr2kJCH
4RFbRar4OECBHuZm1Vm3pF+CyMNUqSxW9T7TQB6muDVyrsXtNPIwMrE+OG/A
FeRhHMaXSPeV3JCHWRpx3N98MBj1C1nwSG/nSIxD/UIvl7NvU9JTUL/QVl+f
Ud272Sg/ZaTzxoPevwXIuyj95q62vdqLvIvZe6psaEsf8i4l48YZknX/vMvp
Nl4BW1MGgH1Bc59a4nKJ8x32BfEcI4sVn2KgfJRcOcXPxeHE5/dfPoqgqUbX
usN9AOajrEvttKy42wNgPorOfWn23nNdqA+oqm07a/OdWuRdcmYU9zttakLe
RUtodYVRQBvyLn0ZYbNSlZ0oD0X20aKlw2oaDvNQ/iQFanYG0nCYh9KYaXc8
+yYNh3kozHunArs6qcjL7K9YaNuj24lDL3Phfd9mwcZsCvQyiw4PWgRmVyjQ
y5yMjQmJ3aOAvMxAVsP+ttAjyMsM24XhuXJmyMtsG84W8a5wQP1D77fhRly9
vqh/KE98xlMyPwL1D10tjL0JXichD3MrYPir6rY+5GE0fSd3fTfoB7BPiF/R
ZoxflAFgn1CCZl+sUSgDwD6hHL2M9b/9id//1ydk2BWgHrDSD2CfUEz93peS
i32oH+h30HbpAocWHPYDPfjlkLRNswOH/UALIyvla4OpOOwH6tK5IiR59l9+
iu0vp7lP0TQc5qfYa8mKDKvScJifwrg/INp97J+vyU30eGSY0I5DXzOwlMtY
DHRBvuaZAHUHe9oXCvQ18UnDZq7OZORryAM9Sx8+HQCKOul2/WrT4IKuYef7
znNg8NWbycYrc0Byxm8wYZs96hvKM3f0857vB7BvyOrnmYdkNwaAfUMXx75J
nCb2K9g3pLmvNeLidgbqD3o2jCe67KHivJr7eN5tJmOfGA+VwA4avqFw52yG
H3G+G+KnSqJoeLXa5nUnJ8iYcXOSpeYFGvI3GE1zA99yLQX6Gw276v7FVVzA
tfRkt+ujD8DuS9TBPea7QTH1L0NzYhKMdpYoKZmcQP1DImd1v70CDAD7h7L3
O20fJs5D2D/0udzdM/I6A5zhNtO5f4KMbR0/bcjpSMMPvqe8sCglYxVvXrT5
36bhhSn7Bo9ukcKiP1kNFrL/8zjDd5hvLNPbcOhx5PasZ2FXo+6HHsd/II15
m6OHAj2OacnXKvcLm5DHObzyouHTK3XkcRJ2WrbQtE8hj2M2zOHd6mCNPA7v
jtQpzn03kcd5nLC7oDM8CPUVkU7K0ruE41BfUeMCi5/1TDLqK6pZHBtR3p6N
8l32JgUW6vkWIG8T9JZrXZJBL/I2NkFrOWVf9CFvM+nybdym4p+3qWbJ3shv
xACwf+i28eHkMWL/g/1DXstBoPj8v/yWGyabtk6n9AOY3/I16OdM+/k+APNb
qDILXDPPewDMbxHdlLtvyLsL9Qs9ljE2NlerRd5GWRHTKn3biLzN8MR3nXnt
NuRtXqmLvpmK7ER5La259Z7J36k4zGsxCrkT/NuXhsO8lvExtV3TxP0GzGtZ
qjn55sM7KvI67+2PHC/17MSh1+H8mrtY9S0ZeZ3ezApgKLBMgV7HwiBxeXOT
LPI6Cqn8itFs2sjrsN6TmA/2MPnXZ9Ru31PL5oD6jCx/zhpq5vigPqOuewuD
91vDUZ9RpJXnpt7tScjjjAp/kurh6UMeR/XQRKzywX4A+4mWAvdIafIxAOwn
OjZ7hLsmiAFgP9FO81Hj18EMAPuJxj/o6zWsJ+bH//qJJDMUjvhz9qO+oaXN
H1peybbgsG+oW7jtiSMxf8O+IVlDU7KBExWHfUPxXOUR+LF/+S78sW4rV4n5
Hua7ZKsqxUthNBzmu7T7ZJgtm/7zPWM66lx8He049D1lJVkhy81WyPdE/PWN
2v/tEwX6nmvSY08VsyWQ72l99+Uj32MMWFoOdz9qnQKc5oJFjZZGYFQvvElP
dQ5cPvgyoGb2Kuov8pxTN1Ge6Aewv8jo9AjrI0cGgP1FDoUpTidjGQD2F73A
RaW91Rioj+jRMcprLUkqnvdecDJoExnTmVyUfCBN3L+yfi2/4knGOK42j3AQ
85bV+ufRMe/JGBeX1DE2KxryP2PcPLWJGpUU6H8ULOa/f9uxDvyeinZ8deAD
GLfO05Jo2QmOadue9Q2cBMn1kpwLocdQn9EpQ5ee//n/xrDPaEu2YJoa8Xph
n5HVZO0TfhcGmC7TkNTWIV5Pyl/qBDFvp+394yNXRHweA3yh8uE0/MT1fosI
ASmszPUuixX/Pw80crgE9x9sw6EHcitf/CkQrII80DR9l1jE/HtKkCG3Ii12
EDxKPLt+e5cI6jeyuNUQqXuZAWC/0d4tlNaf8Qwg9Nz+4I9rZKzzstZFQWL/
zSudTSZ1EfcLQuaZLx1oyAN5PNZufrpQRIEe6Pu8Y+Sx0tWA04yr6NDNEcCt
JedxibYd9R0JmTTvdY5gANh3NJj8cGerNwOIrMzRkzSJ50uo37hwkXi/0x4b
XmaQsY0P/tQM/c/59J8PsojbveDOEoh8UMWupeGfvAsU2G+UGLj/u7QXA8B+
o2lcNm6ceL4yA2eZ/hAyNmA4r91BnPfQCw0E+/6YXdVMWctvaht8hngdhlM/
Gu6TUL9RXzYlaR2xn1baBN5YPEPGlHuO9KYR89mnEL+55BdkbJOSVPTJIBry
Qiaro5N3mrTh0Atxfmx4dkotdj/0QtO2Vdz1XnQK9EL6OgzFp5IbkRfiDuHd
uKNJDXmhR2bn16WUGSAvJNrR+SZl6jLyQmP6HLzub12RF6o8qlLivSMI9SPt
n1o5dO9dLOpHcm9dJmXdSUb9SO0s2VFPfmah/Bqb6tvK/FgB8kAfB03EeLR6
kQcaTDMXG3jchzyQk+Bmuakn/zyQS+ybvftOMwDsOzI6fvsZk1g/2Hd0wKTO
09P0Xz6N/uDvWEZWP4D5NLqT17PZrPsAzKd5ZRS3ndHYA2A+Dejt2Lw/tgv1
Gcl79P8146hFHsjCX/aqe3oj8kCBAU9rx2TbkAdib083HXTpRHk0LT6Urz9n
qTjMo8F9R3YPexP3w//l0XD1ymBnfGg4zKNhdvEffTFKRZ7IZ+ebI3/iO3Ho
iUZ2mSpzPkpEnujv1i1Owh9+UqAn4ivabTCRKYM8kaYdi8bKUS3kiaxMt79i
zbuIPBH7JvIzGvFZw/6k9Gc9Vp94fFB/0hxT/lGZaTjqT7on0t/NPZmIvFCn
fllVMGsf8kJ904Imihr9APYh6UkfOafAxQCwD+nBgO10YwAxP/7Xh7RFRjjY
4TYDwD4kjsgrn8t5GQD2IbWXCxT4buxH/UYqaXXSlqwtOOw3srt0Zll9ph2H
/UZWoX4dL22oOOw3MjtUtnxO519+TYBNcYkbcR7B/JrVh6VTOLVoOMyvaa+a
fT105Z8/GjbfKMY61Y5DfyT+O8am+4cx8kfdortKe65NUKA/ck6erfCIFUf+
yFGdXfiiAAa8b/iFxSQR59EvLTVyqSGw2ejwgkt0DpxlOyyfaHgV9SXF12UO
Xx7pB7AvSTZM43glMb/CviTWap9MKWK+hX1JrkOfDp3fx0D9R9PqM7nOAlTc
pSy4+xwfGfO6d/S+qAQN59t58p6eGxlTf+pdsULs9yrfg2jK78gY+yl/q8fW
NOSTdtCKJyckX1CgTzp3Xp20/ToHqA5Vqh7k/gC2vXE9krF2JxD1F+N/YDAJ
7K/vju7M1UP9SSJNt6dIuxkA9ie17ZQlqcYwAOxP2vrRwbzoJgO8CMnjEtEi
9l8hxYTMKzRcx/qiJVc+8frucWvrRdBw8XO5DxX4pbD073/kgoT/eaX7mifv
5C+34dAr+b/UaqlrkUJeqfZ0clfM/iHK+tjjzZsUBkFB8YboSlNh1KdUI6jB
PWnBALBPycT2TaQJsX+8/dgqzbxKxlKzc+4HBdNwz7TKwZJOMtbKKAqvdaYh
rxTrovmmal0eBXqlJ8MJquePrgIdy0VLlw+NACEb24wTPoqoXymXrNLyLYwB
YL8Sd+XH7jlfBhinmeG26mQsyXOZU9SYhi8LMb6kpRH3558+p7oS5wf0SzIh
NQOBB7yQX3JL2dBw0mKOAvuUni/ssijzYADYp9SSemVcPooBzH3onJWBZOzr
Ff9UfeLxoGdafSDra1nvW8qzwzolccTcc0n3yoclXh7Up5S/WpcniDifQzXn
LrQYkLGH51TvjRHv/07ZcLf3M+J8S+8Y+EWsD/RMop1XDtt7t+HQM42G9Ip6
BH/bH59JbnpQ3AqKfnOWS3T1UWDf0ssI9okuYr3F9odPZ10iY/1r2Hf/8Kch
3/SVQWXdK5pJcVO97rohtxtkry8qkrnxhwL7l+5hrA9SQ4j7Oae7FZfukDF5
ieg3msT1DL2Tif7fuPaf9pSRWrzoOoUGGk84pjgWT1Ng/1KS6rSeGfF9fNkX
Swv0JmNF7a+vzhDzGfRPvVLuCfm21RTYv7QvXnbVZuJ6+7LhfqrWEzIWdabO
ZCKUhvzTmpb2fe9WHaLA/iWxy32YO7F+9uFcZvyOZKxt0sflNvH30D9llG6V
SDv6lBL+Yc2r/N8bMfZqvzZ6JANk4SJyPVlkbLD8+xVpYh6BHkr20UFhYc4w
Crv0xsPfwsiYppmWkRzxfqmj9VLThk2gkvXQ2VMBbRTYz9QVTX58g1hf6KGc
zQYFy/a14dBDnXAQzRlR098PPdRS7fbk6ydoFOih3orfYMyF8SMPZbVtf4yz
gRryUC/HXBJ07QyQh8KYjgaD+ZeRhxobyIsZCHdFHorrW9S9N2uCUH9Txo+V
l0/xWNTf1DYc5xhml4z6myROnfWMH8pCeT7nORbkUiQKkHe6xXr37FtKL/JO
D6JyqxQK+pB36ml7sZxd9M87sbCseq9lwACwjym4LPRGG7E+sI+JbNxhfcb8
X15Pg5YQsy63H8C8HrO4wtE7dn0A5vUUXPC+UtfZA2Bej+4ZjV1WyV2obylz
qmr52Jca5J08YttktMIakXfiS1tNbhZuQ97pGtupuec2nSif59bHfNvUKSoO
83myOZ5F1XkR8/F/+Ty7JJvlPIj7WZjP4/tGIEhgkoq8FOuRb9/YMjpx6KX6
4ritBM/EIy/lx1bKq9HzgwK9VFLriMBuXhnkpW4wb7g5fzmMvNSBKlA2gl1E
Xsox0S3h5robqN/pjdrna6wN3qjfyUr0QHupbDjqd2L9vf2Y9dtE5KFsnGzO
9/7tRR7Kr/jTM/KefgD7mo69vPwghZOY7/7ra5KI3DCN+zMA7GuauSnmh4Uy
AOxrilcRs8jYSOzn//U1Sdmr+DkJ96P+pUy2B+Vb5ptx2L+U2jorxfa+HYf9
S9XChbrDVlQc9i/pjmUdEtL+l+cT8dSUz5G43mCej5j4paM3jtBwmOeT/jTh
5GF7KvJVfcr6Ipa/2nHoqzx2ifXsyz+DfJXUZK3h6L5xCvRV2/xWtsy/FkO+
ann/1wOc9wDgXKRaBXpOgYeZF7BDFwxBwU/Lkus8c8Dd5mu17fqrqM9pPYtx
jPtQP4B9TmqDU9Wa1xgA9jklDjfvDyT2L9jnVP0ng7OSwkD9TCJhXcvLJCo+
kFbZUksiY+5bnFiOb6HhNo1/w6pcydjjC3ezrxPzwpbPU/O+TOJ+/vGFeWcb
GvJX6zSU+uIOVlCgv0oONFjbk8QOyEY+E9e+j4BPQ0bhuwp2gCCxX3NP1SfB
qYzPD8rU9FC/0+dlH5vhHcS891+/06CttmReNAPAfqcXEX9WzboR54XD8Jqg
Q2TMILXv5pfLNPz+7/VnfB8RrycRf9VBzAtrj3M13OKVwrK5YkRDRP95LLsK
bkep9e049FjHPm0TLPkpjDxWeelwlsrtQUqH4oyg+k8m8NO6F61dIIT6nq69
mAaKxP4A+54iN3GGBBP7h6jnLcHjtmTMjbP+wGPi/swyTuovSwcxX5bmz6m5
0pDH0jc2ifHuzqFAj1U3u1Fd4T4L2NHyW/KH3AhwG8vIWMtQQP1PjNlwNnli
XoD9TwdjNbyX/Bjg2Os7z7r2kLFDagHcUkY0/NST0BHuVDKG5XgLlhPnO/RZ
7A1xbVYy7shnyV95+5Q/8SsF9j09iotquO5OzF//9T3NfzgdUkvMCxUbA35v
DyBj74SnWliJx4NeK7/w9by2WT0l0qSqS/BpP9CgzlQlsXOjvqdFg/pQVeK8
m90qe0pFn4xNjiW7eTnR8GndmIYvZWRMQs9XvDaEhryWeCHG5RDVhkOvJdGy
jm9j68f9gL6B5zHWCjSPZM39uNRLgX1QMaIVu98T6+3StXdooxUxzx77uOOv
Hw35rQ/0FX+JxTTKiRMf78XfIOYFZ3yFn/KbAvuhVOWa5EuDifl57ZG83kQy
5vSmtsSIuJ6h57o4UX4hjcuG8oKpQv3GQQMj47jM2aNTFNgP9a510/AAMS+Q
rmN132+RsRcl7ks+xLwAfdcku8yX0zffUGA/1OJoqkpxLANoZx+Pel5MxpaS
tmBRYTTkuwr+WDrqH9pHgf1QLt3TK6+J9auVqNIPvkGc73GcVV23ach3vS5T
n7hZ9IQyOMwjrPtrIzbc92V4GzEv/DzbInLkARm7/eLZpRBiXoDeqyGRc7Pp
u2DKxdd1qtahZEykwZjMQrzfCcc+L/v5RnDWdbRd4nkLBfZHPb5uFYsR6wu9
V/SDr+1Lx9pw6L2EnS0G3gaX74d9USySp4VHib/3inTmnfJ8DYZLJtx6dtyl
nFPNjXgVR8Y2OFIKXInng95L8U2W6Xkxcwrsj1rePs1RRaxPZUpGLsOd+Dzr
AiRCiet3/kvjUCQXMY+3D+x99T/3C/95rwqen5WyS4oU2B+1cd3Zh0rE8web
SFc7jVSDT6sKtDtsCigPA+T+yt8n5ueu/b5KxPcX+q8NNZHLq677UTgnycJH
g8mYuUVtfQLxe9gv9cS5+00Lsf7Qf90P/LZeb/UaCuyTUm6487SaeL6/zIn6
+btkzGbtMTlB4v1BD9Yst/zp63FHiuWBkWFeXzJ2R6Z212ni84AeLLZO8uWO
DboU2Dd1l9stcjvxfHu+cwzMGL4AKdKhswciIykl0ZdOBUQQ199ftnFd4vFh
3xR3ptn0HeL5oQdLvJsecF6xDS/cPVy4cl4Mgx4Mehj4c8Du/KH5YGH08844
joNPg6X+z79/kzQUVhqxEf3c+uiP4vceCfTz//Zn//vfv3ty1rYijxv9POez
y66UJPr//e//H4Rngnw=
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jtIlXEYwOEvlwQ1hOx4KfOoaCAZCELQkJe8NDt693TZvIxqKtSSk4Km
lUIQBIJQmi2VXbRGdTIrh8pupqCDtZRm9HzDw/t73z8H5XCyY+01bXFBEBzg
CdvxQbBFij5ChMceS/igh2jgLKnhZ9xL+aiHaaSEZbdafuv7dJLGU7cyPukb
NFHKG7c6/ugHdJHOrFs5a3qEZtbtrSQwZy9jRdezq6foZsfeSYQFewbP9Dk+
61F29VWyaLH/MNtIZN5+0JczoE+G/4f9rdnAnj7sbUxP60Bf13lcsf40u0gl
w9tdc9E9UQ/rIrPIzDUnzTPmUe/PdQUn7F/syeZNe3E47Xv6GqfsUTPTvGee
NmPeN3Q7Bfak8O+bd8xX3uL1oC4kqifC78L9ndnIX53iPq4fhr8J3a/z6bH/
MrtJY8l+jBe6kq/6FhfYtHdwiNf2Ct7rJvb1DL1k8tKtim/6NhepZNWtmX/6
EX0cZ86tmu96jEtUkcW8+3nW9TiXqSZKNjnk8h/qEVqM
         "]]]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0slLVWEYB+BTadehMjWFwIQyWiSCcJ2H/ggth3LVrhKjQV3mpnl2IbgQ
BLFyaLKyTdPSoqzUJmuVtgvTZjfa80GLh9/vfc/5LvfeczbvPVjTsjKKohU8
+Z9zSVH0lUw9g3TWk0Y1TVzmEzscuM86vYo9XOJjuNd+lLV6O8P8odFugkp9
NxeZDuft7rFGb2OI3zTYvaZCf0yK3swXGs0X+ECl+S6p+jOy9HbmaTVvlSdY
ZtD8i3r9FeV6vjzPan/II3OPnq0nywPM0mBfYten58hcWSA75GI473rc3KWn
yffmbbLCfIcUc7l5QN8iC2Wh7AzfWz51vVffqG+Q+bJNfuOoa/0y1y5PHmeJ
AftumWH/U6/TX1Kmb5fnSHTtoTlJ388M9eZN8hh/w33md+H76SMk62Nkhv+P
OY6Yr/GDXeZxSvUHxPR9fKbOfJa3lJlv45WKDnOV7+y0e0FJ+CzO8IZSu1vE
9ENcYYFau+cUh7OcZio8D7ub4bnpReE+TjFJsf2N8Pv1BFYR3vc4NZxkIpxz
z3X+ATNqWbo=
          "]], PolygonBox[CompressedData["
1:eJwl0klL1GEABvB/40IFZQZCZRATmqOm1kQQ1AfIPf0GWbmWtt3ay4LqUlDQ
wTY3hDqWttzMJQ2srmXbKXPJDi0Xo34vHn48z/O+ozP/YeJ1bbWtsSiKljDG
3NIomiep73Lx0EWu3CZvslJ/6269fpo/XLKfk6438oUa+zA9/KDW2Su26lso
YQ9tdDNPjftxivWLPCPNbuAz1XYrXXwPf+9sjCK9naek2vV8osoeZbV+nDkO
2Z3hOam2X7JZf0O2forfXLDz5VVSPfMTO0U/wEcqwzPI6yx3P2Jn6seY5aC9
Ubbzl/v2LZnptbN6QlbZoxTaO+0Heo5MyqS8IVfI1+63y047W64Ln1melL84
736H3atvkAlZIq/IFDngvkPP0mMyX+6XH6hw1yfjzorlNZbpw87v6mv0VfIo
M7Q4j4fvhwXu2TNU6iMU6BOs1U/wk3N2nrxMzP/rD783fR+TlNtDZOhHmKY5
vD/TVNjD4XPrZ3kcLf5g63hPmdnEHb5R7myIhH6GR/xjr7N3lOqN3GaKMmcv
yNN30xC+L75S6nyQTXouOfwHCiFgfQ==
          "]]}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0E0s1nEAB/CfstINIV2yttpEObDZpK1DdbC60BZCRXGpUJ1RobhTi/Jy
0SUHntLWOmhzMNGLO5X3zt56WS+f/+Gz7/f7+/2fZ//nOVjTUFK/I4QQR4zv
CSGsUeqwjHLmdoZwnUSm7Cc0cZF5ZzdI4r3dQzObdiuZLNgjVPDFvkky03Yv
LWzZbRxh0R6lkq92PXuZsZ+yKz6ELruAdfsu23o7WSzZMRI912ef4o9dxTe9
gRQ+2OmeGdLP8szebXfrx8nVx+WG80P6qF7KPfuHfEA2Oe7eymXnB/QXepEs
lifklDwvX7pPkv32GXla5ssJWSz/us+UY/Y5WSFPyhl5QV5yv6A3Rr/JTpVH
5Rv50d1+/Xn02ej99UnZ5zxBf6QXkqe/k5vOD+sxvYz79k/5MPpOVuwM98N6
Ca/sZHsgenf+2ZdZ1G+Rxie7nz2eexz9drbsVn7pHRxj1R7jCkv2bfbx2R6g
jd92Z/Tfsma/pppl+w7pzNqDtFPDVa5RSx3/AcsrX4U=
         "]]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzsvQ2EAx+G3GERHFkWii8RURGKqmEgkXUoiEpNF3Re3T+BuZ2xdYjJJ
3GKRmCQWt2+A09oZ3J4zPPm9//ecJj3p8fn8XFUIIUGBqDaECvHlSE0I99Uh
9OmY5vRM2zWheb3VHh3Qfi1pg175/bDe2Vkd0kE90Vb98PzaOePcpTv8sel+
VE9p8+zLvnHudu7VPZLOR+5zzsek7Be7xXmFMrPxR8X/iSL13rl0V6HT3uaX
DfuTrPMudd47tJ9ptpeJmLEvKNNhb/HDun3AE032Eu9M2+dEZOLv4ps1e59H
UvYib0zZq5R4oNHdAq9M2gUm+Acj3zhn
          "]], PolygonBox[CompressedData["
1:eJwV00dsT3EAB/DXRY22JxzMtmhCJIQaEao1W6MUPUjs7aD2rHk1WmrFOCFG
0TpIiK1mIrHpsm6CluJiHHx+h8//+/2+95L/y/u/f+qcooKlsVEUxdDMxxDj
c2IUfaJQn8oUJlPAJIo5xCNS4qJoCfVMtDdykIckO7aYOvLtSj6SYW/nFxvs
AzwgyV5ELRPsCj7Q3d7GT9bbPxiol5EQH0X77fu0thdSw3j7Hzn6MVJcd8Ge
qJfT0X5vd9O38oN1dqG8SLrzTfZNvY8+QO4lXt8X7lcfpOfJMfKkbCfvOZcv
r9g9ZSuZIxfIasaFZ2o/1ofKaXKsvCQz5N9wj7LKzpTZcoQ8KpPl+fDc9cF6
vjxLB/2d41f1XnpXuYUm1obvk5WkOffd7q/vIc4us3P1E7S179ot9fm8Cfdm
/2GYfoQk15yz35Jub+Y7a+xvZOqlxLpur11FC3ser8mzy6knzd7EN1bbe7hD
oj2XV+TaZ6kj1S6mkVV2Kbdpbs/hZfgt7NGMYiQjGB7eA1ZSwi2auXY2L8i2
V7A7/N4kODaL5wyzz1BLF3sjDSy3d3GDeHsmz8iyT1ND5/B+85VldiP99BJi
PJ+d9nXi7Bk8De+E/Zss/TCtXXfKnqCfob1dbXcK/wW+UBT+o7KCVOcbwn3p
vfW+cjeRviP8T/SB+hg5Wh6XbeS18B3yst1DxobnIqfLJ/wHPv6Asw==
          "]]}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0LdPVmEAhfFXpHxYwMQyqYjiLFaai7JoxMZgQkRMiC0xgokY/UTsyo4F
pKigLqDiSrcyoYkC6qCDiSVRsAB/AL87PHnOOe+9N/fezPLK4oqEEMIMDOBH
LITvOJ0YQhxnkJIcQl1SCGvxW+9CM6oRc3bdvg5jejdakGFvt23DTLyznUWq
/Ya+HuN6D+5gmb3DVoREvLfVYJb9pr4Bf/RerLJ163sxH3dtmbZH8nYkYdiW
a3spH8BinLPNtt2Sc/BX36QPycfQp2frPXIpFuCebbntsbwDydiiD3MVRpzn
6a/kg9gv/+Il2C1/5hockSf5vOvnyPXyUc7lPfyV/znbLL+RT3AFl/N49Azu
d76ae/XjvC96T/7J1bww+n7+xKc4zod5gi9wq/tX8JPoe3knl/A3TsFWeYRP
YtS1+fpr+RCWolj/Ev3H6HnO5+oNch7+64X6W7kSA/oavU8uwyK02bJsnfIu
xPDBVmAbjN4VGbhoS7PdlvMxoT/Dfay0P43+LVLx0XYJ6fZGvQCT+nM8wGXM
c9Zk34gp/QUe4gqu4hpqMQ2M2GHt
         "]]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{2278, 2279, 1161, 1665, 1524, 1641, 1407, 1502, 1619, 
          1312, 1384, 1479, 1596, 1240, 1290, 1362, 1457, 1574, 1190, 1219, 
          1269, 1341, 1436, 1553, 1160}}], PolygonBox[CompressedData["
1:eJwV1GVsVmcYBuDTIiGB4c4gwd1h/MJdAmQwKA7FobQUKRrcobgv6HDbcPiD
BXeWsAVnONuC/MD1en9cvZ/7Oe+XfHJOC8cn/ZwYG0VRDO39iUsbRY8zRNEI
mcJwhjGUIfzKIf6lSrooWkD69FGUrK/kIM+pbD+fdK4N1q8SqzdjK4XsV9gd
4BmV7OaR1j5Jv0KM3pQtFLRfbpfd3JHDVLDbb/eUivpc0tgl6gXMPTlBDbvL
dpG5CZv50W6ZXTZzBw5R3m6fXYL5AnX0J3oFcyqx+iB9rPkWrfX88jldzfEy
WR6XP8lLzo6TL/VecqgcJv+UjeU310fJh3qcbCwT5CZZQC51fbx8rfeRI2WK
/Fu2kFnlEzqZ42SSPCjLyb1e+7+5h3mgPE9t82P7++ZfzOXlHGLMCfZjzDdp
pecLr+UY1fWL4fc3X6OR/lVvZN5Ifn2JnsXcngOUtdtj94hy+myi8F70C3yh
od0G8tkv1nfzkLJ2s/jGAP08n2mg/0Ze5xfpf/CAMnYz+Up/fSG/8w+l7Wbw
hX56X/rQm170JJ4edGcBu8J3RCmvmc5nuunz2ck9StpN41P47fVzfKK+vp48
3uM8fQd3KWE3lY900c/ykXr6OnI7P1ffzh2K203hA531M3ygrr6WXM6n6pnN
7dhPGbttdrcppk/mfbg/9NO8p46+hpzOztF/CPcC+yhtt9XuFkX1SbwLz5ue
V3bnKNWcO2WXbL5KQ/2dXtu8mhz6bH2E+S+a65lkW/ZSSt/i+gDzOWrpN/Ui
5om8Dc+kPlreoKXreeSz8N2Zu8kjVDWfdO5FeNbD/xl5hQbmt+HeCPejuZZc
RXbzLPtX5t7mFDlcXpfNZEY5Ojwj4TPLNjIx3MeypNwcnn35X/guZH85RJ6V
NeUN10fKe+GzysLh/pUT5Bu+A2nWtOc=
          "]]}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuBf2sVJYYIJrhV0YGAwgIWYOFkGB0siKuiMolIsuwK2gE6g
gyYKooKaYGIwAY2J0QuoMSR2RBcVsWDdeP7hyfd+77l/Ts65J1mzZ2NtWghh
FgPcygrhY3YIH+iSu7nCNvuLRAh7KeST7hE9VLn2UldHks+6x9Trf9qbKSON
q/rt+lfyPubxRZeiQT9tb6GcdK7pd+hfy/uZz6TuqC6DDvtahnWN9l9yKxVk
cF2/U/9GPsACvuqO6TLptK9jRNdk/y0fZzkX7AX0y5m0yXO4JG+KzyIXMyj3
Ol8tv5XruSmXsFDuMPPolQfNFUz5fbOZxSjnXLtjLovPynp7VzzPGAP2B+Zq
xuMZ5w+af/Qp84TZb5bG/yLew37RLOQ5t+33zcp4T7ndnMtl+a5Zzub4vs0l
DMl97lEjv5MbWESnPZ8++ZvrLXKC8/YNPNEdsv+VT7KSBGd0OfGbkrdww+92
xWeRG1nMd91TDuv/2U+xiuz4PvW79e/lJor4oXvGEf1/+2kqmc1ZXS7d8tb4
HchLuSc/NNcwwQwmfWqU
         "]]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1HmUjmUYB+BvdE7J1mKrLB3ltCKEdOrUqWStMGihVbuKtn/aCyEVxjIj
bbbRol0qhBYM7cUw0qaxte+btev3xzX3ff/e75vzve/7PE+LwcOKh9YoFApF
PO3P8L0LheqahcJT6hzKmc0sZrKKbRy6T6EwjCoG+fwM2Uq20lw2lHUMdG26
rIItNJPdwFoucO1JWZG+M2P4jVvlK+SbaWq+nkrOlz8hK+hPYDS/cot8ubyn
fhp7mUexSdbEfB1rOE/2uGyAvpx65hL2yOabm+c+6KQfxS/cbF7m+iJ9yzwX
eug7qQt4RP+RWoP7qfbZr9STWcoLrn+mNmYah5jXq214mSHm99TV6rnqY76/
Ue1CRf5HnqN6FHPpbz5RfZPZ+k/Uukxgt++eqr7Dq641y7Ono769Oj+/Uf8z
N+nf9fmF+sP1c+iun0qRfiTfuv68uVHuk4P11+Z+GGB+1PV++lnUMY9nl6yD
eSQ/cWN+j6ybvoyCeQQbZQeZr+FT+uf5yHZyvHkEP2aNyd+WfUNj89W5Z/rl
N8l20N48nB+y7uRvyb6mkfkqPqZYPlVWRilTmMwkJlLCBMYzjqV5jzT03Svz
junrfzwsW8KXNJBdwYf0ce0h2WK+oL7scj6gt2sPyrbTznwf32cf5D3KNnCg
eTDvc458rOw/2prv5bvsA/ki2eccYL4sa4ez5Q/I/uU48z1sy7qXL5StZ3/z
paziLPkY2T+0Md/NVoZkTcu66kvZk+cqq5Ltp7+ElfSSjZb9TWvzXWzJ2pC/
ITtTP4XduVfZOlk9/cVU0DP7U1asn0lt8zj+krUy38nmrA3Z67Iu+snsyrOQ
rZXV1V/ECnpkXcv66mdQK++JP2XzzE1zznCs/g42ZR2ZX3P9DP0kdua5ySpl
z+kbZr1QR38hy+mefZH3rz9S/yx99NPZN++fP1x/xdwkZxXH6NtlP3K7vjpr
MnvR5xboD9OXc7q+Y54fE/U78l70a3xurr6Bvoza+tbqSwzSL6Nb9lTuJecm
i2VHqM/QW9856ybPQF8za5Hfff6U7K2cQ/LVOZtyPnK0ua06j9uyJnMWZB/k
PrK31NNyLub3yivVFjmPkps3qB3y7ijJ/lC3Z53knMveUU9iSZ5h9r9an1Jq
mavUVrzIwKzZnFVqV/V/6izwfQ==
         "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwd1WWgFWUUBdBHSKeUdJd0I43SqISIgJR0SUspIaKkNEh3SKiggEp3d5d0
d4Ok6/PHYu9z5j2YO3FJ36RDzfaRIiIiSkWOiAj5iz8KclAfSE0K4HBEFKLy
Fr/6mUIc0gfxCQWJxm/2hTmsD6YWhdht9wn39Xl0IjpL7IpwRB/CpxRmj10t
Hujz6UwMltoV5ag+lNpcMLcmOqvNRdirf8pD/We6cMf8FYnYbo7J7/p7HNOH
8UzvS2o+M1+UbYjBmvD5XYxh+rvhPMz7ZG0e6W87NlFfoL+W35ORNPZzZVf7
u7IbOewSy+RyhtzhWGx9tJ5X5pUZ5IJwfjKW43/oxchiPm6OL8ebC8gfzf/q
/chlTiNTydnhfsg6jl/S2xKTpHZT5dpw38Lvh3MK/5Z5f/jsPNYX8kb/gUzh
+pnvye4kYWc4b5bpxTmhD6cul83tiMU6czEO6HV4oi+iG3FYbleCk/oI6lGc
g3Z1eaovpjtxWWFXklP6SD6nBPH4074Up/VR1KdkuF4kIGG4VyTilocqsUxC
Uv7ye6X5Rx9Ng/B+kIy/7ctwRh9DQ0pzyK4ez8I7RA/eYaVdWc7qY2lEGQ7b
fc6/4V2iJ8lZZfc+5/RxNOaK+Utis95cliN6fZ6H941e3Df3CPeVXeYUrNY/
4Lw+nuf6t6TlC/NVGb4A4rAhvI+eg+F6znAe5qOyAS/CtXJskr5ED18IA/XM
fG18IHuSjBSOzZS7w33Vx+j5ZL7wLsiF4RmWKR1fo5cjq/lCuDfyJ3PBkOYX
en9ym9OFd1LOCd8Xsonj1/QO4V00xw3/vpwmN4bvCn1EeBdIp88P18L+mGzI
Sz2x/WR9qR5JHxTeLb4xP5S9eIc95lSs1ctzUZ9AU66bOxKPTeZyHNcb8Sp8
v9Cb1Kyzq8AlfSLNKM8Ju8a8Du84fUjDeruKXNYn0ZwKpGWDfSWu6JNpQUXS
kZ4MZOS25zuTzEwWNvqdylzVp9CSSmRlk30VrulTaUVlTobnhTf6MvqSjc12
VbmuT6M1VThl1yRSxP//qSwX/cjOFvOH3NCn04Yb5k7EZ7O5Kqf1pkRiRXjc
3JvB4TkJz6/5UXjuSM5e87ts1T/ipj6Dl/p3pKet+absTIJwT/190+UW+5j6
yPCMhZ/Vfw7naP+PbEZ2u8gyiZwi/3Qsij5EzyOzhfdJzpNFZX/HH4dnKLxH
5hQypZwlC8l9jseVY835ZX6ZSS6SxWUOx7fpH5PNfMucUE4wz9RfyQFkoJ35
luxCQraaY/nZUeHcwvUwn5HNicJf5qiODw2fK1wf8xPZO5wj+8052a5X47Y+
iy/Dc2TuyttsM3/MWb0FUfnbPIBc7DBX544+m/ZU45xdS95ipfl7crPTXIO7
+hw6UJ085CUfuxyvyT19Lh2pwXm7VkRjlfkHnup9SMUBczyfeZxegMz6Ylki
XHvH/gNm6AuM
         "]]},
       Annotation[#, "Charting`Private`Tag$93412#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1GW4VFUYBtChG6S7UywQFItGurulW0IFpFFSQbq7u5FUQkC6u0uREKWR
xrV/rOf93r333Dkz95zJ3KRD1fZRIpFI+qiRSEEORYtEGlA0eiQSVeaW62VF
+av95HK2XkqWlh/JnXKIvYh5mDkfecyb5T/WM5uXm6vTQf9bdiMDp/W09heG
92C+Hl+fZC7MU70Qh80NicYmfShRnBuu5+dfvSO3zd3JyBl9AYU5on9BdDbr
P9GJf/QeZOKsvpAiHNUbEYMt+jC+oijHrDUmJlv14XxNMYpTgs8pSSlKc9zZ
JsTiN30E3/Cv3pPMnNMXUYYTelNis00fSWfu6L3Iwnl9MWU5qTcjDtv1UUT1
/YzQP+CO3oW75t5k5YK+hATOTdaL8Ewvxylzc+KyQ0/hzBxzGUbr0fSR5g+5
q2fRV5hr0FW/J/uQjXfs/SIvWk9nXmSuxKfmPXKp9YTmKeYSsmi4ZrldVpbP
7eeUa/Rysq4sJPeH95Pl7Z82t6CYHk++JTeE95G/208p5+qlZVn5sdwlx9iL
bh5lLkBe8xZ5z3pW80pzTb7V78u+ZOeSnt7+4nCNLNMT6VPDNfBCr8AZc0vi
s1MfSwznRodnh/t6Nx6YvyMHl/XlVOSs3ooE7NLH0Z2H+vfk5Iq+gkqc01uT
kN36eHpQmfPW2pCIPfoEelKFqlSjOjWoyY3YkUgtWZs6XPC6trzBXn0ivajL
RWvtSMw+fRK9eaT3IxdX9ZXU45L+JUnYr0+mD4/1/rzJH/oq6nNZb09SDuhT
iOl7HBP+lzzQ+/KfeQC5+VNfzRvOTdOL81JvwBVzB5JxUE/lzLxwfzFVj6WP
NX/C++at8qH1bOZV5lrh/6U/kQPD/ca74TdSXrOewbwkPC+yivxM7pXV5M/2
E8vp+ueyRHiO5A5ZRb6yn0uu1cvLerKwPBDuRdnQ/lVzx/CZ9OTybblRHrKX
2jw/vDZcv3m3nGY9tnlceO7IZ/5NPrKe3bzaXDvcU/pTOSj8Tf7SM9pfaq7K
Gj2JPiNcO6/1L/jD3IkUHNanE8e58eGz81jvxzPz4PCbwHV9LY34U/+KlBzR
Z9Cf5/oP4bvlhr6OxlzTvyYVR/WZDKAJTWlGc1pw033cUraiNX95zTek5pg+
i4G04bq1zqThuD6bQbzQf+Q9burraRueEb0LaTmhz2EwL/Uh5OGWvoF24Vr0
rqTjpD6XuL6nCXpB/tN/4JV5KHn5W99IUudm6iWJhOfH2i35Lek5padxZoG5
AvP0ePpEcyHym7fJJ9ZzhPvQXCd8Lv21/Cnc6+Ez2tskb1vPZF5mLiurhWuU
+2T18JtuP5mcFa5JlpIFwu9tuFdklPAcy3XhemR9WUQeDM+PbO/1/wOl1RB3

         "]]},
       Annotation[#, "Charting`Private`Tag$93412#2"]& ], 
      TagBox[
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhQzoFpLtDEKQbRQUFRZQGaSWlQWlFuiQVpKS7Q7oEKSkB
6ZTuBu/147me733X2mdmz6w9J2PjtjXaRIlEInmiRiK1o0ciD2NEIr3RKmYk
kpE/5TPclf+xXop3yR24JTfk69yTf7eenZfKbbgmf8mXuDu/wVX5CHfiztyU
7/BPrk1i/sVcGp+bz/MjfUXzfnM7NDHf4m36t81/mBugnvkqp0S18F7Da+IL
+x5xH2TCCbm09d3hHjFbziEvC/eKePhAPspdMNh6UvlXcxk8livJB8ztsV0u
LG8MnwXeDPese8x9kRkn5TnIad9y+TPExxBdMt0Uc1k8kXegDp7I/ZAFp+S5
yGXvCrkWEmCoLrluqrkcnso7URdP5f7Iin/leRiGFPb/piuPZ/Iu1MMzeQCy
4bQ8H8OR0v5pugp4Lu9GfTyXByI7zsgLMAIN8EL3A3LgrLwQI9EQjdAYTfAV
mqIZmqMFXrrmR+TEOXkRRqElXukGIRfOy4sxGm96j9N1FfFC/hOt8DqcK+TG
BXkJxiCV/TN0lfBS3oPWiOgH6/LgorwUuXUrw3lEQozVpdbNNFfGK7myfDA8
E9grF5E3mRshFarLJ7gHvrYeRR5izhvOgvksX9KXMf9pbh2uNd/gZfo85lXm
tlyb6/BlToQPzce4M3flZnyXv+efXZuGZ4XX5Spcmy9wN35tvQofkr/ljvwV
3+bv+C/r7/DmcNa5Mdfna5waH5tPhmcf39gbVR5qzofLcll5T3htLJfzyqvD
M4nEGKd7K/xumN9DBPt0RXVbwrOONGiji6YbZs6PK/IK5NOtCc8bkmC8Lq1u
tvl9RMF+XVtE1w+XC+CqvBITkE4/R1cVUXFA1w4x9CPkgrgmr8JEtEdMayP1
hfCfvBqT0AEd8S06oTO64FJs3w13Q3fEcv0o176N6/IaTEYPxLY2Wl8YN+S1
+AXp9XPDbxOi4aCuJ+Lox8hFcFNeh1+RQT8vnA9ExyFdL8TVj5XfwS15PfLr
1oZzhaSYosuom2/+CDHwt66Ybms4I3grnBHdG+GcmYvitlxO3hvOAzbIBeR1
5rpIhqm6TLoF5mqIGb57+e9wBnHY+rvyNnNTNDD/x2nxifkU90IL8/1wzu2P
Zx4XnhsuxrX4HN+xVj6cY3NHbsON+Wb4G+F/h/WCvF5ux/XC++Qr4Vnl5OH+
+Th34W7cnO9x7/A76vrMvDDcL1cPZ5svcqxwBs2HuROO2Ftc3h6eUaRDDfnf
8DmGv2c9vjze/C7uyhXkfeG5x0a5kLwhPINIgWm6LLpF4VlEbBzVldDtCO8V
6dFHl0A3wVwc9+RNmI6s+sXhs0UcHNP1RUL9RLkE7subMQP9kMjaJH1JPJC3
YCb6YwAG4gdcdu5/5MT2T7a3FB7KWzEL2fRLwueAuDiuK6nbGb5fZEBN+XT4
ntHS/CDcDw+y939P5x9F
         "]]},
       Annotation[#, "Charting`Private`Tag$93412#3"]& ], 
      TagBox[
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1XfcTnUYB+DHCmVlizKztyIUIiPZW/Zrb8ose8te2Xvvmb33DpG9laxK
KSLp+v1xfe7v/T3P6e05zzlH+qiO1TpEi0QiUdEjkQGvRSJl4kQi+2JHIkfM
z83VZk4u8Lr9WzMJp1lm32kW5So/OL+3+Vx/whxnbjLf4zIf2xeY6TnHZvv+
0HOdDc5vbt7SHzN7muvNvGSTZ5pvhb/DWvsesxh/OG+EGYfZ+m3mB1SWl5qZ
2SEfNEsx0OfLmvt19Vgj5+INebKZlOXyWZ/rI7+Qx7NZfp+S8kIzA1vk73yu
hXxb/ooNcj6yy7PM1KyT//S5kXJc5tirsEzOwk55kOPl5ANyfeIxxZ6MFfI5
x/vK/8oTKMVGXUvdHflrcjDbnob18hPHR4Xfjrn2qgzWfWo/KDcgPj/q+ule
yhP5JPx2ula6n+Re5OQv3ehwrZhnr8YQXXn7IbkhCTiv66/7T55E6XD9dK11
P8u9ycXfuqF8pj9sb0RCLugG6F6Fe44ybNG10d2V+5Cbp7phVNAfsTcmERd1
W2mr/8Xelzw80w2nov6ovQlvckm3jXb6e/Z+5OUf3TdU0h+zR5GYy7rttNff
t/cnH8/DvUhl/XF7U5JwRbcj/P5UceyErhlJuarbGX4nqjp2UtecZFzT7QrX
nDGMZRzjmcBEJvEtk5lCNf+N753bguRc1+2mg/6BfQD5eaGbSnX9KXtLUnBD
t4eO+of2gRTgX900aoTn396KlNzUDdRFmGwvy15dJ/ujcF/zHi/Dd9DFY769
OtN1Ne1n5NakYqo9OSvlW44PkqMxxV6ORXJGtsr7HO8s/xru6/AsyvnDcyrP
Md8O75Xw/2MWD/djuIZm/PCdWeDYdrMwNeTlZlbOs8t+yPyEm8xwbq3w/tEf
NduYa83cXAzvJvs0M0X4Pqyy7zI/5Fp4Pzh/sBk9/MZMDfe0WZBP5cVmJrbJ
+332C/m38HxRkLn2d/hOfhXuAzkBC+01mamrbT8rtyU1d3RDdDGYZi/PAd2X
9t/loRQiwix9Hf05uR1p+El3kC76x/ZhfEC08J7R19X/KLfnbX7WHWIOn4fr
qOvAO9zVHWYu9Ry7oOtIWn7RHWEe81nAQhaxmNs+v8RcyjLqh2vuvE6k457u
KMtp4NglXWfSc193jK7h3wr7cAoTnRX6hvrL8hdk4IHuON30f9q/oQgxWKlv
pL8if0lGHoZ3mC4m0+2fcULX3f5EHkFRYrJK31h/Ve5CJh6Fd5guVrjH7BU4
qeth/0seyYfMs6dloxyL8XJCFsm1wneRs7FbXu38JuG+k7uyTs7Du+GZM1Oy
Wt5tfhSen/BeNF8L7w5mOrbVLBS+KxXtS8L54fdme7iPzJLcCOc4v6f5t/64
OcrcaBYIv0X4G/b5Zrpwf7IpPLtmifA35QlmIhbLO8wi1A7X28zOHnmNvxEl
X5e7kZkZ9lSskX8L72o5NrPslTil+8r+VB5NMWIzUfdmuKfkOuE59rmm4bvI
3cnC77rTfK1/Zh9DceKE66lvFt4Lcg+y8lh3hl76f+xjKUFcJukSs1SuG+4D
OQd75cNmaW6x3vn/A2oKVpA=
         "]]},
       Annotation[#, "Charting`Private`Tag$93412#4"]& ]}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{200.6796875, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.80280857880271*^9, 3.8032097961663094`*^9, 
  3.803211286225193*^9, 3.803299214440996*^9, 3.8036443682153187`*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"84c7d8ca-9006-45cf-ac42-40c93dd8bc05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"someGraphs", "=", 
  RowBox[{"GraphPlot", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "\[Rule]", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "^", "2"}], ",", "102"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "102"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802810010764751*^9, 3.802810013722221*^9}, {
  3.802810048687553*^9, 3.802810050520299*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"413ef0ec-46e7-469f-aaab-7f9bbf419c6e"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxFV3k8VO37lhIxlpkpYzDDDBlmKXorkpobla2iUshOKCVLskSKN0tlSW8L
oRRpEVpICecp46VekRZlSSiRpYjs6nt+P5n+Op/785z7fu7res5z3ddhuPlu
9RAVERFRmSMi8n/PkLpmh6tVHIhTK2k3u6+A5M08w8u9ycAwXr3mZqYyKuu6
fUvLVQnK6dnGg3QC4ppKqKQYKsFwzzHd3kRxlNJgb6mosBh+Hhroa2/9gR1b
rXZ4eZ4GiH5vdatpGMPG1C73J5wiQ+d7Q18tZzGkKqk+8HDuIH9wMmog+Lwy
aqq7c0HXZYJvOaCyYtsvOnL4Hlnm5vyV3/3iGf/TUh7aUFf2zWLXJD/7qODY
oytc9N/8gS8qvqrgDGfJpxqU0OWl4UXjS1Vhf65VpMczOrp09rPokSQJuPkr
MURpAQHt6zTJkx4SB3pLmd+ia+Jo/ZmyJeOBmqDBKMl87CeKVFa9Or3jDQOy
687MH9z+E9vjvay4cbkqeAU4mMjT5yDtinOGSVEq8LCXUJ56Vx3BvMqs7HQV
0OxEZSwdNXT2pKmV0SEl8A5k7pfR4aGOi14i6fsUwItXniyexUXrxu8RChrE
wYm6yOiGJAN1hkR4LT9NBk9vFWZevCrKtB8yv6vYz/cLveSu4jYXMVc4zJl2
muB/+Da4JuvSHFSe13z4XvtSyG+bML3VNIYNM49rkqlL4BDPp7LaXxQ58OhS
3rJkGMhMcErPGcNmzpMLWYP/ThR/YKCZmC2M2/O3UGo3yIKgSbcp85AWatGo
8a4wUQIr3+pWbxkGetG77hNNvodvei4q53LuLyxkMFyUb8KBUf3w7dsQzge9
6BJPapgveCHhnxQihz7+MMFq6SLA3160Zu0GOdTqvpQVWqIKoe2JZqpZ6sJ6
9q922FgRtdCnD6fvxBeP8xU39ZsF+2oh11YBzWm3GCR6dV1J1pyHvqWVnWw0
1IYUkeOkh+o9WDhxeLGDowqMeftP7qWTUaHnq5BXkSqwg7DlvjRVDtUWs//q
lBjj7xoWsYwgKaPCz3T5CyaLgP2etnzdABvNf9efEmAiC4tr5J7sqmAjugfF
xFtrgh+dZqXveE8dmW8fPkKK/cVfcmubcoyuGkonnIxfeEAZ5p4brbMSn4fu
OBVlOOH4N4uKGkTqj2Oz9+Xv+tvzLHaxUH3tB9p1t4WQEP8w9n4dFcWv3R4t
82sucLbqMBn4/sqB06WTrGH+MepWd0eeOrq7lZTFCVwIESkaw0sG5qA1hMM1
+/w0gPB8ZVK3nSxaZFnr7d+uAUEdUhv1Vi9A6ozDrls3MmCgL7JqFY63b65o
/QpXBrR231ds36qMxJPT7tlcY0DpZI5uwwNRpDG+tr0yVRuUAy18TXyk0Aub
5eSYW0vhrEJ9xmv9BWiJMXnZTrUf/PpcsVaLzSRU2nFZiitGhu2HCI86Chno
UrjcqME8ZWjQ3PSDiJ+X3pURq/5GBViQ+qPQDT8vD4MU+6BaMvw+1xk+cH7c
7lyQae3mouHYuKtdR5Vhw+pzFRJ/qSKZfK6LJV0Rfuo1jqiOsJBk/Mhgl8sk
P3XLdZml5mRkHTyfIiGrDWeratJMdsqiwOs0ZWcHBnh/y2qodx/DjHLec3mT
4uD4ZEg5S4OJAh7bkZ7VMGDel6Eotf9oiJYWEVm8jAH7lYOuxTYQEcEwmFK4
czFMVbRUbfWVQufYcl0x6SKwKReZnzuj/vs+aAnPb2FCwEib3xC/d27kOVUj
NaTg2yWiqt3PL5QvdYh7qYIOl6XoDCWrwl11i55PomTE/cRbkfJIG1pvjBex
O35ghkxrvekUMQiojYlOoqqiKzZibj3Zw/zPv3xyw3G8F3YcyXWxYIDoo/jF
/1LVkCFDxX3KYA70pG7DJgZJaNdKg471baP8blOfEz3Ro5jtiKdNiLUSvIts
H/JfzkQ6VafCSx8RoWWUFMKx6cNuSfYPGdUP8KsPSDTUF49jL8q6a+e5LILb
+9NcLuSoouXXnhDVN1OhamjSPo+9BN3LptwBcwbkH+mYbvqlhuqwXdELg1Uh
ImGjzLvYEWyVrnbcwkwG0OxuptqcVEGaQb51nS2j/COZ0x4+eP7s/bUyHv/y
nygdlfy6W6OL67mOtazvbookqn0qUTMmpQE1v7+HB3fet+takCBvVceXzA6q
kO/Z+bJ4/aWAPPz+nEvuj193VwHVUg3ynZ9zwOB16d5cbwVkP3TzVVsLB+r+
3iWrpqWARMTFjn0f5oDRxlSV/u8U5IqCo3LIXFCcOlzlVkNBml2/bGNW4vHt
or1pDyho4LVTT+VOLsjZv1nKe0hBJcMfOsIPc2Hav8CNUEtBNhT/fR1pXKji
ee+P/0FBOUYKDjH3uBCxh74qiquAggoLjP5+woV0tvzy6P0KaFZPZ/ufXT+g
7JQk81NBmJ/8fvsJIlCF9U2pktvFg6no0e/9yW8ELrEXqWjwd3+/ei/+43mP
Kux/5Fy5zRgez+IbNR+Z1M6kCvHXTTRl5YRShfwYVcgW+hlThfy9CSi26Z5D
FfIbVhSz0rJEAfW17zMS20yGn6+Ph3WRaWgs+pDNRz0yKMV+rJ80pyHdc24m
RAoZbv/VxN0aRkNfIo9nn+ohAV3Z6zjhCg3JRzqsFLtPgq2r5rxoLaUhOjvs
Y3w4CSqnu+7rPKOhxXq+jqcMSXDM9mOP/lMaepCd45AkQQLytnTZBSU0JHrz
SUTvayL4KVm1R2XQUJAU4WvhDSJIaEpH2x2koR9a2Puw40SIr7B8+9WYhrwL
j2VoBRHh1qA6X4dAQzfNNP/56EeEwGIWx7deGRXssXg1HkoENeN1Leq4f6Ds
sHftOEWE0M+5IVUuyuhBfq+TYSERnjXcPHFKRxnt8+HkT7cTYcDvpsQmgjJy
VaTVulBIEH90/PmyISUUsVdAgC0kaJJnSWJdSkj87+IMbjwJRIczsy/1KKH7
uxtLrglIgPS+9V6fVELk3bnFNqMkkB3U4b2jKiM5fX67PoMMaw2iCe7Gyuhk
wsMHpydJsKsy+eCR8AnM7GHz3sc4n+KhB46FOE1iX6PtbJ/WkKBOcsv1CK0p
rGzvNZp/FgmKIF3mRP0URpho7OX4kyBK0Bd9deM0dkbKyW5YjwTtYhnx0f9M
Y9SJomUqP4kg2eQ+MXJ5Guvc/WhQU0AEx0md+/TgaWyXYKrpaCIRwtub7sQs
msZeqoZ8tHYhwrvWs56jUVNYRs6ig64GRLiQfFZRtXoSC7NO7K9SJ8JV8Rgm
eWACm1psv+mrIhHy2CH9GeIT2MZv3SLeKkR4QJOsi1Eex56iNrFRHSIIrvQu
KDUYwzztGr6HbSGCLTM1/OjBUYxuqZ+tGE6EwiTpoCsvRzBFamryxgIiRJxX
vFjtOIIFkOxoC7qJkLZfO/EDbQS7c/hZ6hCTBCviwqpuy49gCjU+ZokOJPD4
hvg3TEew+VUV1r7JJLBtDOl7eXsE05trfDqwHOc3kJo/x2wU+89OwSQD9zfp
+ryrJe0MxIwOk+p9zAaz1MoVsWJMdDaX8HnPXTYcfTzoboHPj4Hzd1fYXmDD
Bse39p6GTJTUytfNDmPDTrHO2FxrJqouLnYR2OIx5+mKJCcmEnlmW3dsORs+
bH+4bQMer7z5tuE5kQ27zTeWNGxjotTYDZt2D+HzpG9/oTwwkbnDJUdBsxZc
r11Yl6bORId6xIOrarSA+jVly4W5TKEezvqx2XXej+GsN48YwvyLC0M1Xl9g
COtXjNAN7Y4whPu3phiuTt3LEPbnlfD6spYrQ9h/X7EAa3NhCPH1vb/uI/Bm
CPGLxNxPXRDBEPLzLyM9WT31D3/TZtVY90MGmuX35nUXq6L3DBQ1XbqnYq0s
GC1umJeK+0cB88XmxAIZ2O56z7g3UAtNLFn05iBXBpLhnu5+Dy0UEr2kdxqT
Bgn3pF7nTVooeMfF1sYAaQj3CtqRv0QLhfPkC1dZSAOl6nNpnZQWWqMhTbXY
KA1W/neZp7o00VRLqsrYQWlgOBu3vBVoojgmJvJFIA2f7wQ2+eZooo/fCY+r
l8lAc8fIoepETfTXFtmVVfdlgL476kDVEfx91q2fm3C/K5ap15J5SBMZL3Pp
aXwjC5mHl4WW4+uJE2cLhrhyUNt8e20xnv/dcdL9m7sc/FXALLfB69/7wZcM
PikHK6Kmakvw/XU5O/ucMuVA7+K8UD+8v5elSk/G8bitf0rkNt7/6oN01dUJ
cvC9c5CcjOPT3vIs6IGnHLQ4GoeZ4PiZbiIJcdpyULn6QJIDzs/Kv73UJVrx
fu6Qattx/oxk6krfbZYFy0rSsRSc3y4/hWH79RwotVsoysf9J/1U07ckBgf2
G8hlJBPGsc4bu/nPRThg+mRore+pMUw3++f5wk42dJ1x/lRTN4rFPbvmHPCS
DfkxnSr0phHsE0YhnK5mg0CsuZ5S8QOLHed7t+Jx/TrTo0qXhzGi5aTdllf4
+566gr0nhzDtAw0WC7vY+PlZ3dic8h27Fd4alCzKgSMfdlmuax7ERjTlPM6o
ceDV+XOHg9wHsb35BP1g3A+WPA5ZH6k/iFmvdibZ7cXXAx4V5OHrI3pv6Xbx
HLBNMd2Qj+e3eRqV11/jwB5ruc4OvD5v3dDbxEcceK025UKPH8KuWY8rTlZy
wFB7H7sV7+8EdeAo/MuBqmWKfU14/4S1dSF2pRzA5v+c+xLHZ+qsZ0e8wYGX
3t7q7i9GMcFmCnE4gQOUzoLnzTg/hd4RHkt88Prx9pX/4fxxDNtMXc04QPzy
gGqE8zs7P0/Eme80dWMJ5+t7rbtPw9ayhPM3Z05MWjGNJZzPbR6ZWemiLOH8
rik7HWzzTUM432vO5z890Kkh9CcmPuW5pXg860/KQzjruQMaQv+Q1SBh0TeX
9cefDLtpe6mwhP5D+k1r3m5gCf3JrJ+dXR9/HmXPi/uTH5f/892SGyxhffca
2/IbApbQn5iyVwr2vGMJ/Qm2IsuxsYMl7F9f6h6f+fEPPv3O2uS1jX/wa6x5
7DFe+Ycfl8vNPq03//CnFVrAVzzBEvqTcEVKwSZP1oy+4N+L/YTIw7Ye7oz+
GHJAwi7VLE+GN6NPyzjAj6wM9l/Km9EvRQ6I0XJ94815M/o2yQZq5YO0ekfe
jP69w+PedLMiL96MPhay4eKiBK99ePz/+pnMBpakau2UA29GXw+wweiWUbWB
GW9Gf+1xPU3s7njM483o80Y2vMvb54EIvBm+TdjC/53Z9b7C6uJJAVeY7/h6
o/4E/v8/Wz/q/nfrI3Fc4f4ZtosssUCusD+NTdeLLL25wv5zg1NezcfjWXy5
GeGRPQe4QvzY+hN5S2O5Qn6i232vml/5w1/pgvRXMhVcIb97di/f1fyZi/4H
nE2JCg==
   "], {
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{1, 107, 110, 112, 118, 120, 123, 1},
       SplineDegree->7], 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{1, 103}, 0.08247256438740623]}, 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{2, 130, 133, 135, 141, 143, 146, 2},
       SplineDegree->7], 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{2, 24}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{2, 53}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{2, 102}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{3, 4}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{4, 7}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{4, 18}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{4, 44}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{4, 50}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{5, 6}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{6, 16}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{6, 101}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{7, 15}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{7, 29}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{7, 56}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{7, 100}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{8, 9}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{9, 23}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{9, 45}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{9, 82}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{9, 99}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{10, 11}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{11, 54}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{11, 98}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{12, 13}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{13, 33}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{13, 60}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{13, 76}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{13, 97}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{14, 15}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{15, 26}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{15, 37}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{15, 41}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{16, 35}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{16, 58}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{17, 18}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{18, 61}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{18, 74}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{18, 96}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{19, 20}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{20, 33}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{20, 38}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{20, 87}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{20, 95}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{21, 22}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{22, 46}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{22, 94}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{23, 24}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{23, 49}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{23, 75}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{23, 85}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{24, 33}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{24, 65}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{24, 93}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{25, 26}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{26, 34}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{26, 89}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{26, 92}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{27, 28}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{27, 42}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{27, 84}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{28, 35}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{28, 63}, 0.08247256438740623]}, 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{29, 153, 156, 158, 164, 166, 169, 29},
       SplineDegree->7], 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{29, 68}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{29, 91}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{30, 31}, 0.08247256438740623]}, 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{31, 176, 179, 181, 187, 189, 192, 31},
       SplineDegree->7], 0.08247256438740623]}, 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{32, 199, 202, 204, 210, 212, 215, 32},
       SplineDegree->7], 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{32, 47}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{33, 70}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{33, 90}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{35, 51}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{36, 37}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{37, 64}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{37, 72}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{37, 88}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{39, 40}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{40, 54}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{40, 86}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{43, 44}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{44, 59}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{44, 77}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{44, 83}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{46, 47}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{46, 67}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{47, 54}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{48, 49}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{49, 55}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{49, 79}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{49, 81}, 0.08247256438740623]}, 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{51, 222, 225, 227, 233, 235, 238, 51},
       SplineDegree->7], 0.08247256438740623]}, 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{52, 245, 248, 250, 256, 258, 261, 52},
       SplineDegree->7], 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{52, 80}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{57, 58}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{58, 78}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{62, 63}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{63, 73}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{66, 67}, 0.08247256438740623]}, 
     {Arrowheads[0.], ArrowBox[{67, 71}, 0.08247256438740623]}, 
     {Arrowheads[0.], 
      ArrowBox[BezierCurveBox[{69, 268, 271, 273, 279, 281, 284, 69},
       SplineDegree->7], 0.08247256438740623]}}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
     DiskBox[1, 0.08247256438740623], DiskBox[2, 0.08247256438740623], 
     DiskBox[3, 0.08247256438740623], DiskBox[4, 0.08247256438740623], 
     DiskBox[5, 0.08247256438740623], DiskBox[6, 0.08247256438740623], 
     DiskBox[7, 0.08247256438740623], DiskBox[8, 0.08247256438740623], 
     DiskBox[9, 0.08247256438740623], DiskBox[10, 0.08247256438740623], 
     DiskBox[11, 0.08247256438740623], DiskBox[12, 0.08247256438740623], 
     DiskBox[13, 0.08247256438740623], DiskBox[14, 0.08247256438740623], 
     DiskBox[15, 0.08247256438740623], DiskBox[16, 0.08247256438740623], 
     DiskBox[17, 0.08247256438740623], DiskBox[18, 0.08247256438740623], 
     DiskBox[19, 0.08247256438740623], DiskBox[20, 0.08247256438740623], 
     DiskBox[21, 0.08247256438740623], DiskBox[22, 0.08247256438740623], 
     DiskBox[23, 0.08247256438740623], DiskBox[24, 0.08247256438740623], 
     DiskBox[25, 0.08247256438740623], DiskBox[26, 0.08247256438740623], 
     DiskBox[27, 0.08247256438740623], DiskBox[28, 0.08247256438740623], 
     DiskBox[29, 0.08247256438740623], DiskBox[30, 0.08247256438740623], 
     DiskBox[31, 0.08247256438740623], DiskBox[32, 0.08247256438740623], 
     DiskBox[33, 0.08247256438740623], DiskBox[34, 0.08247256438740623], 
     DiskBox[35, 0.08247256438740623], DiskBox[36, 0.08247256438740623], 
     DiskBox[37, 0.08247256438740623], DiskBox[38, 0.08247256438740623], 
     DiskBox[39, 0.08247256438740623], DiskBox[40, 0.08247256438740623], 
     DiskBox[41, 0.08247256438740623], DiskBox[42, 0.08247256438740623], 
     DiskBox[43, 0.08247256438740623], DiskBox[44, 0.08247256438740623], 
     DiskBox[45, 0.08247256438740623], DiskBox[46, 0.08247256438740623], 
     DiskBox[47, 0.08247256438740623], DiskBox[48, 0.08247256438740623], 
     DiskBox[49, 0.08247256438740623], DiskBox[50, 0.08247256438740623], 
     DiskBox[51, 0.08247256438740623], DiskBox[52, 0.08247256438740623], 
     DiskBox[53, 0.08247256438740623], DiskBox[54, 0.08247256438740623], 
     DiskBox[55, 0.08247256438740623], DiskBox[56, 0.08247256438740623], 
     DiskBox[57, 0.08247256438740623], DiskBox[58, 0.08247256438740623], 
     DiskBox[59, 0.08247256438740623], DiskBox[60, 0.08247256438740623], 
     DiskBox[61, 0.08247256438740623], DiskBox[62, 0.08247256438740623], 
     DiskBox[63, 0.08247256438740623], DiskBox[64, 0.08247256438740623], 
     DiskBox[65, 0.08247256438740623], DiskBox[66, 0.08247256438740623], 
     DiskBox[67, 0.08247256438740623], DiskBox[68, 0.08247256438740623], 
     DiskBox[69, 0.08247256438740623], DiskBox[70, 0.08247256438740623], 
     DiskBox[71, 0.08247256438740623], DiskBox[72, 0.08247256438740623], 
     DiskBox[73, 0.08247256438740623], DiskBox[74, 0.08247256438740623], 
     DiskBox[75, 0.08247256438740623], DiskBox[76, 0.08247256438740623], 
     DiskBox[77, 0.08247256438740623], DiskBox[78, 0.08247256438740623], 
     DiskBox[79, 0.08247256438740623], DiskBox[80, 0.08247256438740623], 
     DiskBox[81, 0.08247256438740623], DiskBox[82, 0.08247256438740623], 
     DiskBox[83, 0.08247256438740623], DiskBox[84, 0.08247256438740623], 
     DiskBox[85, 0.08247256438740623], DiskBox[86, 0.08247256438740623], 
     DiskBox[87, 0.08247256438740623], DiskBox[88, 0.08247256438740623], 
     DiskBox[89, 0.08247256438740623], DiskBox[90, 0.08247256438740623], 
     DiskBox[91, 0.08247256438740623], DiskBox[92, 0.08247256438740623], 
     DiskBox[93, 0.08247256438740623], DiskBox[94, 0.08247256438740623], 
     DiskBox[95, 0.08247256438740623], DiskBox[96, 0.08247256438740623], 
     DiskBox[97, 0.08247256438740623], DiskBox[98, 0.08247256438740623], 
     DiskBox[99, 0.08247256438740623], DiskBox[100, 0.08247256438740623], 
     DiskBox[101, 0.08247256438740623], DiskBox[102, 0.08247256438740623], 
     DiskBox[103, 0.08247256438740623]}}],
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{154.078125, Automatic}]], "Output",
 CellChangeTimes->{
  3.802810015543541*^9, {3.80281005140598*^9, 3.802810055885386*^9}, 
   3.803209796306841*^9, 3.8032112863217173`*^9, 3.803299214578273*^9, 
   3.803644368342245*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"d77fc546-b48b-4b64-954a-1a9d0c1039a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "SpokenString"}], "\[IndentingNewLine]", 
 RowBox[{"SpokenString", "@", "redSphere"}], "\[IndentingNewLine]", 
 RowBox[{"SpokenString", "@", "complexGraph"}], "\[IndentingNewLine]", 
 RowBox[{"SpokenString", "@", "someGraphs"}]}], "Input",
 CellChangeTimes->{{3.802806896696203*^9, 3.8028069008914423`*^9}, {
  3.802806977880952*^9, 3.8028069793948402`*^9}, {3.8028085874457273`*^9, 
  3.802808590517414*^9}, {3.80281006882486*^9, 3.802810071818553*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"1267f36b-abb0-4ad0-a619-e9e8a27c3577"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/SpokenString",
              ButtonNote->"paclet:ref/SpokenString"],
             "\"paclet:ref/SpokenString\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpokenString\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a string of text \
corresponding to a spoken representation of the expression \\!\\(\\*StyleBox[\
\\\"expr\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SpokenString", 
                    "paclet:ref/SpokenString", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SpokenString.\
html"], None}, "http://reference.wolfram.com/language/ref/SpokenString.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    
                    RowBox[{"\<\"ArraySizeLimit\"\>", "\[Rule]", 
                    "\[Infinity]"}]},
                    {
                    RowBox[{"\<\"DetailedGraphics\"\>", "\[Rule]", "False"}]},
                    {
                    
                    RowBox[{"\<\"ExpressionDepthLimit\"\>", "\[Rule]", 
                    "\[Infinity]"}]},
                    {
                    
                    RowBox[{"\<\"IncludeParentheses\"\>", "\[Rule]", 
                    "False"}]},
                    {
                    
                    RowBox[{"\<\"IntegerLimit\"\>", "\[Rule]", 
                    "\[Infinity]"}]},
                    {
                    RowBox[{"\<\"PostProcess\"\>", "\[Rule]", "True"}]},
                    {
                    RowBox[{"\<\"RealPrecisionLimit\"\>", "\[Rule]", "3"}]},
                    {
                    
                    RowBox[{"\<\"StringLengthLimit\"\>", "\[Rule]", 
                    "\[Infinity]"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    
                    RowBox[{"\<\"ArraySizeLimit\"\>", "\[Rule]", 
                    "\[Infinity]"}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SpokenString\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/SpokenString",
              ButtonNote->"paclet:ref/SpokenString"],
             "\"paclet:ref/SpokenString\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpokenString\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a string of text \
corresponding to a spoken representation of the expression \\!\\(\\*StyleBox[\
\\\"expr\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"SpokenString\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives a string of text corresponding to a spoken representation of \
the expression \!\(\*StyleBox[\"expr\", \"TI\"]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/SpokenString", "Web" -> 
      "http://reference.wolfram.com/language/ref/SpokenString.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     "ArraySizeLimit" -> DirectedInfinity[1], "DetailedGraphics" -> False, 
      "ExpressionDepthLimit" -> DirectedInfinity[1], "IncludeParentheses" -> 
      False, "IntegerLimit" -> DirectedInfinity[1], "PostProcess" -> True, 
      "RealPrecisionLimit" -> 3, "StringLengthLimit" -> DirectedInfinity[1]}, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`SpokenString"], False]]], "Output",
 CellChangeTimes->{3.80280690138225*^9, 3.8028069801198177`*^9, 
  3.802808591130892*^9, 3.8028100725983763`*^9, 3.803209796530864*^9, 
  3.803211286413849*^9, 3.8036443684802513`*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"2004445b-2c53-4b02-baa1-280a5d0aecb5"],

Cell[BoxData["\<\"a three-dimensional graphic consisting of a sphere\"\>"], \
"Output",
 CellChangeTimes->{3.80280690138225*^9, 3.8028069801198177`*^9, 
  3.802808591130892*^9, 3.8028100725983763`*^9, 3.803209796530864*^9, 
  3.803211286413849*^9, 3.803644368492058*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"959e7108-8a13-4ce6-9f8f-6e5e769dd494"],

Cell[BoxData["\<\"a graphic consisting of 11 polygons, a line connecting 574 \
points, a line connecting 541 points, a line connecting 556 points and a line \
connecting 610 points\"\>"], "Output",
 CellChangeTimes->{3.80280690138225*^9, 3.8028069801198177`*^9, 
  3.802808591130892*^9, 3.8028100725983763`*^9, 3.803209796530864*^9, 
  3.803211286413849*^9, 3.803644368495925*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"36784e5e-2128-44b9-9416-a037d22147a7"],

Cell[BoxData["\<\"a graphic consisting of 103 arrows and 103 disks\"\>"], \
"Output",
 CellChangeTimes->{3.80280690138225*^9, 3.8028069801198177`*^9, 
  3.802808591130892*^9, 3.8028100725983763`*^9, 3.803209796530864*^9, 
  3.803211286413849*^9, 3.80364436849933*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"98231cc0-8cd2-4039-85cc-7918b8e1aa14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelationshipGraphs", "@", "SpokenString"}]], "Input",
 CellChangeTimes->{{3.802807891003338*^9, 3.802807896959491*^9}, 
   3.8028079668113537`*^9},
 CellLabel->
  "In[338]:=",ExpressionUUID->"e0400f49-0bd2-4d48-adf2-25b45e7071de"],

Cell[BoxData[
 RowBox[{"RelationshipGraphs", "[", "SpokenString", "]"}]], "Output",
 CellChangeTimes->{3.802807899649989*^9, 3.8028079673929653`*^9, 
  3.802808095014111*^9, 3.8032097966292887`*^9, 3.8032112864878387`*^9, 
  3.803644368509532*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"799b80af-2d45-4d98-beca-0f0119fcd173"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TextString", "Subsubsection",
 CellChangeTimes->{{3.802807333717588*^9, 3.802807343386282*^9}, {
  3.8028086562363253`*^9, 
  3.802808666242613*^9}},ExpressionUUID->"95e43bed-63bd-4d33-beb2-\
bb47b2ebebd8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "TextString"}], "\[IndentingNewLine]", 
 RowBox[{"TextString", "@", "redSphere"}], "\[IndentingNewLine]", 
 RowBox[{"TextString", "@", "complexGraph"}], "\[IndentingNewLine]", 
 RowBox[{"TextString", "@", "someGraphs"}]}], "Input",
 CellChangeTimes->{{3.802806955073106*^9, 3.802806968916148*^9}, {
  3.802807027790616*^9, 3.8028070287178097`*^9}, {3.8028086257105703`*^9, 
  3.80280863616689*^9}, {3.802810065441671*^9, 3.8028100824508953`*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"3d824142-bef4-4064-b175-38399fcb9253"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/TextString",
              ButtonNote->"paclet:ref/TextString"],
             "\"paclet:ref/TextString\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TextString\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a human-readable \
string representation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\).\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/TextString", 
                    "paclet:ref/TextString", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TextString.\
html"], None}, "http://reference.wolfram.com/language/ref/TextString.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AssociationFormat", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BooleanStrings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"True\"\>", ",", "\<\"False\"\>"}], "}"}]}]},
                    {
                    RowBox[{
                    "DateFormat", "\[RuleDelayed]", "$DateStringFormat"}]},
                    {
                    RowBox[{"ElidedForms", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ListFormat", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MissingString", "\[Rule]", "\<\"\"\>"}]},
                    {
                    RowBox[{"TimeFormat", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TimeZone", "\[RuleDelayed]", "$TimeZone"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AssociationFormat", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TextString\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/TextString",
              ButtonNote->"paclet:ref/TextString"],
             "\"paclet:ref/TextString\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TextString\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a human-readable \
string representation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\).\"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"TextString\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\
\) gives a human-readable string representation of \!\(\*StyleBox[\"expr\", \
\"TI\"]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/TextString", "Web" -> 
      "http://reference.wolfram.com/language/ref/TextString.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     AssociationFormat -> Automatic, BooleanStrings -> {"True", "False"}, 
      DateFormat :> $DateStringFormat, ElidedForms -> Automatic, ListFormat -> 
      Automatic, MissingString -> "", TimeFormat -> Automatic, 
      TimeZone :> $TimeZone}, "Attributes" -> {Protected, ReadProtected}, 
    "FullName" -> "System`TextString"], False]]], "Output",
 CellChangeTimes->{
  3.802806969634437*^9, 3.802807029254591*^9, {3.802808629567593*^9, 
   3.8028086369435053`*^9}, 3.802810082976173*^9, 3.803042052832369*^9, 
   3.8032097966951447`*^9, 3.803211286555427*^9, 3.803644368591749*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"20f2f1f4-926f-4ee4-b8b9-cdffd643e8f7"],

Cell[BoxData["\<\"Graphics3D[{RGBColor[1, 0, 0], Sphere[{0, 0, 0}]}]\"\>"], \
"Output",
 CellChangeTimes->{
  3.802806969634437*^9, 3.802807029254591*^9, {3.802808629567593*^9, 
   3.8028086369435053`*^9}, 3.802810082976173*^9, 3.803042052832369*^9, 
   3.8032097966951447`*^9, 3.803211286555427*^9, 3.8036443685934753`*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"4df93f5e-cd7a-40fe-9ab7-4b7bba350827"],

Cell[BoxData["\<\"Graphics[\[Ellipsis]]\"\>"], "Output",
 CellChangeTimes->{
  3.802806969634437*^9, 3.802807029254591*^9, {3.802808629567593*^9, 
   3.8028086369435053`*^9}, 3.802810082976173*^9, 3.803042052832369*^9, 
   3.8032097966951447`*^9, 3.803211286555427*^9, 3.803644368595223*^9},
 CellLabel->
  "Out[341]=",ExpressionUUID->"0cf7e3b4-e3cb-4a0a-a170-bd4e41edf0ee"],

Cell[BoxData["\<\"Graphics[\[Ellipsis]]\"\>"], "Output",
 CellChangeTimes->{
  3.802806969634437*^9, 3.802807029254591*^9, {3.802808629567593*^9, 
   3.8028086369435053`*^9}, 3.802810082976173*^9, 3.803042052832369*^9, 
   3.8032097966951447`*^9, 3.803211286555427*^9, 3.803644368596922*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"e382c4dd-07de-4bc2-bdc9-f27e48f112d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelationshipGraphs", "@", "TextString"}]], "Input",
 CellChangeTimes->{{3.802807993598577*^9, 3.80280799551753*^9}},
 CellLabel->
  "In[343]:=",ExpressionUUID->"a8404de3-643b-4d8e-91c1-14506021eb8e"],

Cell[BoxData[
 RowBox[{"RelationshipGraphs", "[", "TextString", "]"}]], "Output",
 CellChangeTimes->{3.8028079979740267`*^9, 3.803209796781929*^9, 
  3.803211286621563*^9, 3.803644368612947*^9},
 CellLabel->
  "Out[343]=",ExpressionUUID->"8cf1ea7e-808a-4cbb-830f-4c6c5696caae"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ToString", "Subsubsection",
 CellChangeTimes->{{3.802807321270796*^9, 
  3.802807327910231*^9}},ExpressionUUID->"9832a9d3-c6eb-47a0-be51-\
e0ca4647a732"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "ToString"}], "\[IndentingNewLine]", 
 RowBox[{"ToString", "@", "redSphere"}], "\[IndentingNewLine]", 
 RowBox[{"ToString", "@", "complexGraph"}], "\[IndentingNewLine]", 
 RowBox[{"ToString", "@", "someGraphs"}]}], "Input",
 CellChangeTimes->{{3.8028069467657337`*^9, 3.8028069506068*^9}, {
  3.802806997237277*^9, 3.8028070007156563`*^9}, {3.8028086440349894`*^9, 
  3.80280864599231*^9}, {3.802810086932295*^9, 3.802810093331539*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"3277bc4b-793c-41a8-b75e-0392fbe21463"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ToString",
              ButtonNote->"paclet:ref/ToString"],
             "\"paclet:ref/ToString\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ToString\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a string \
corresponding to the printed form of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\) in OutputForm. \\n\\!\\(\\*RowBox[{\\\"ToString\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the string corresponding to output in the \
specified form. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ToString", 
                    "paclet:ref/ToString", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ToString.html"]\
, None}, "http://reference.wolfram.com/language/ref/ToString.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{
                    "CharacterEncoding", "\[Rule]", "\<\"Unicode\"\>"}]},
                    {
                    RowBox[{"FormatType", "\[Rule]", "OutputForm"}]},
                    {
                    RowBox[{"NumberMarks", "\[RuleDelayed]", "$NumberMarks"}]},
                    {
                    RowBox[{"PageHeight", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"PageWidth", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"TotalHeight", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"TotalWidth", "\[Rule]", "\[Infinity]"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "7", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{
                    "CharacterEncoding", "\[Rule]", "\<\"Unicode\"\>"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "7", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ToString\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ToString",
              ButtonNote->"paclet:ref/ToString"],
             "\"paclet:ref/ToString\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ToString\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a string \
corresponding to the printed form of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\) in OutputForm. \\n\\!\\(\\*RowBox[{\\\"ToString\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the string corresponding to output in the \
specified form. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ToString\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives a string corresponding to the printed form of \!\(\*StyleBox[\"expr\", \
\"TI\"]\) in OutputForm. \n\!\(\*RowBox[{\"ToString\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"form\", \"TI\"]}], \
\"]\"}]\) gives the string corresponding to output in the specified form. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ToString", "Web" -> 
      "http://reference.wolfram.com/language/ref/ToString.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     CharacterEncoding -> "Unicode", FormatType -> OutputForm, 
      NumberMarks :> $NumberMarks, PageHeight -> DirectedInfinity[1], 
      PageWidth -> DirectedInfinity[1], TotalHeight -> DirectedInfinity[1], 
      TotalWidth -> DirectedInfinity[1]}, "Attributes" -> {Protected}, 
    "FullName" -> "System`ToString"], False]]], "Output",
 CellChangeTimes->{3.80280695093321*^9, 3.802807001810711*^9, 
  3.802808646502913*^9, 3.802810093847822*^9, 3.803042043631219*^9, 
  3.80320979697928*^9, 3.803211286734236*^9, 3.80364436867546*^9},
 CellLabel->
  "Out[344]=",ExpressionUUID->"89836212-89ad-46c5-87f4-0038f3436063"],

Cell[BoxData["\<\"-Graphics3D-\"\>"], "Output",
 CellChangeTimes->{3.80280695093321*^9, 3.802807001810711*^9, 
  3.802808646502913*^9, 3.802810093847822*^9, 3.803042043631219*^9, 
  3.80320979697928*^9, 3.803211286734236*^9, 3.8036443686776133`*^9},
 CellLabel->
  "Out[345]=",ExpressionUUID->"e2d738be-114f-436b-ba2f-a6ce79cd9197"],

Cell[BoxData["\<\"-Graphics-\"\>"], "Output",
 CellChangeTimes->{3.80280695093321*^9, 3.802807001810711*^9, 
  3.802808646502913*^9, 3.802810093847822*^9, 3.803042043631219*^9, 
  3.80320979697928*^9, 3.803211286734236*^9, 3.8036443686794357`*^9},
 CellLabel->
  "Out[346]=",ExpressionUUID->"6baa144d-61d2-4d73-bce7-a558610dd98b"],

Cell[BoxData["\<\"-Graphics-\"\>"], "Output",
 CellChangeTimes->{3.80280695093321*^9, 3.802807001810711*^9, 
  3.802808646502913*^9, 3.802810093847822*^9, 3.803042043631219*^9, 
  3.80320979697928*^9, 3.803211286734236*^9, 3.803644368681209*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"bb23baae-64c0-4ebf-8176-6dd6053f0f58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelationshipGraphs", "@", "ToString"}]], "Input",
 CellChangeTimes->{{3.8028079763717527`*^9, 3.8028079779325743`*^9}, {
  3.802808067224061*^9, 3.80280809088418*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"5fb0b431-9dde-4f4c-bfc0-7c427acfc1fc"],

Cell[BoxData[
 RowBox[{"RelationshipGraphs", "[", "ToString", "]"}]], "Output",
 CellChangeTimes->{
  3.8028079802361307`*^9, {3.8028080703429937`*^9, 3.802808091237854*^9}, 
   3.803209797092903*^9, 3.803211286796163*^9, 3.803644368695537*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"13091859-1cdb-4a2a-b892-77a82c5a480f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Description and TranslatedDescription functions for symbols", \
"Subsubsection",
 CellChangeTimes->{{3.8030575271307297`*^9, 3.803057554507764*^9}, {
  3.8030637562924213`*^9, 3.803063770206398*^9}, {3.803066907619712*^9, 
  3.803066918476581*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"15d67b75-09dc-48e2-8ce2-c6b2f9266f60"],

Cell[BoxData[
 RowBox[{"Clear", "@", "Description"}]], "Input",
 CellChangeTimes->{{3.8030698553076963`*^9, 3.803069857230815*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"25831599-9fc0-4065-aaff-bf113a43e3bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Description", "[", "symbol_Symbol", "]"}], ":=", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"entity", "=", 
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<WolframLanguageSymbol\>\"", ",", 
         RowBox[{"ToString", "@", "symbol"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Description", "[", "symbol", "]"}], "=", 
      RowBox[{
       RowBox[{"ResourceFunction", "[", "\"\<FromCamelCase\>\"", "]"}], "@", 
       RowBox[{"entity", "@", "\"\<Name\>\""}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Description", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.803057559681251*^9, 3.8030576255239363`*^9}, {
   3.803057655991715*^9, 3.803057896783589*^9}, {3.8030638059690228`*^9, 
   3.8030638342384577`*^9}, {3.803063971707798*^9, 3.80306398943734*^9}, {
   3.8030653271789*^9, 3.8030653357613173`*^9}, 3.803065400926978*^9, {
   3.803069820066107*^9, 3.8030698484515467`*^9}, {3.8032098146624126`*^9, 
   3.803209843108429*^9}, {3.803209873244244*^9, 3.8032098929652147`*^9}, {
   3.80321003750165*^9, 3.803210040143549*^9}, 3.803210630550192*^9},
 CellLabel->
  "In[350]:=",ExpressionUUID->"f1ef1d98-f7cf-414d-8c37-012ada8f65e1"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TranslatedDescription"}]], "Input",
 CellChangeTimes->{{3.8030698618478622`*^9, 3.803069862826147*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"09b4e2bb-07b5-4574-847f-b16db6beef16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TranslatedDescription", "[", 
   RowBox[{"symbol_Symbol", ",", "language_String"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"entity", ",", "lang", ",", "translations"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"entity", "=", 
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<WolframLanguageSymbol\>\"", ",", 
        RowBox[{"ToString", "@", "symbol"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lang", "=", 
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Language\>\"", ",", "language"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"translations", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"entity", "@", "\"\<Translations\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TranslatedDescription", "[", 
       RowBox[{"symbol", ",", "language"}], "]"}], "=", 
      RowBox[{
       RowBox[{"ResourceFunction", "[", "\"\<FromCamelCase\>\"", "]"}], "@", 
       RowBox[{"translations", "@", "lang"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TranslatedDescription", "[", "symbol_Symbol", "]"}], ":=", 
   RowBox[{"Description", "[", "symbol", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"TranslatedDescription", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.803064012991482*^9, 3.8030640742526283`*^9}, {
   3.803065339903844*^9, 3.803065348655637*^9}, 3.803065402425994*^9, {
   3.803069570062842*^9, 3.8030697714777327`*^9}, {3.8030725443634768`*^9, 
   3.803072545809103*^9}, {3.803210667256917*^9, 3.803210679542053*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"9b431b30-6a86-4e56-859b-c9cfd7a5a614"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803064140572258*^9, 3.803064142636059*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8c720917-632d-4443-bc6c-5f085d35a048"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"someWLSymbols", "=", 
  RowBox[{"{", 
   RowBox[{
   "List", ",", "Table", ",", "Range", ",", "Graphics", ",", "Image", ",", 
    "ColorQ", ",", "Number", ",", "Grid", ",", "Entity", ",", "Values", ",", 
    "Map", ",", "Thread", ",", "Function", ",", " ", "MapThread"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.803064181628323*^9, 3.8030642772950363`*^9}, {
  3.803064311284542*^9, 3.80306433255802*^9}, {3.803064417108357*^9, 
  3.803064417537116*^9}, {3.803064846348588*^9, 3.803064895834903*^9}, {
  3.803209946030147*^9, 3.803209948637046*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"b5e6c0be-2326-44d4-8ace-09e3f702e912"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "List", ",", "Table", ",", "Range", ",", "Graphics", ",", "Image", ",", 
   "ColorQ", ",", "Number", ",", "Grid", ",", "Entity", ",", "Values", ",", 
   "Map", ",", "Thread", ",", "Function", ",", "MapThread"}], "}"}]], "Output",
 CellChangeTimes->{3.803064899483389*^9, 3.8030653564499283`*^9, 
  3.803070095075371*^9, 3.803070459484518*^9, 3.803209797181435*^9, 
  3.8032099074843283`*^9, 3.8032099493750553`*^9, 3.803210639279426*^9, 
  3.8032106865938683`*^9, 3.803211174193988*^9, 3.8032112868764133`*^9, 
  3.803211454059243*^9, 3.803223314315401*^9, 3.8036417619332867`*^9, 
  3.803644368778495*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"fa992eee-6685-4866-8074-692b897a2b52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "/@", "someWLSymbols"}]], "Input",
 CellChangeTimes->{{3.803064905273789*^9, 3.80306490667091*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"b93f1839-0d69-4ff6-857d-9122332fa75b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Symbol", ",", "Symbol", ",", "Symbol", ",", "Symbol", ",", "Symbol", ",", 
   "Symbol", ",", "Symbol", ",", "Symbol", ",", "Symbol", ",", "Symbol", ",", 
   "Symbol", ",", "Symbol", ",", "Symbol", ",", "Symbol"}], "}"}]], "Output",
 CellChangeTimes->{3.803064907204205*^9, 3.8030653582764378`*^9, 
  3.803070097698502*^9, 3.8030704630952682`*^9, 3.803209797188274*^9, 
  3.803209907531612*^9, 3.8032099535056343`*^9, 3.803210639288042*^9, 
  3.803210686602633*^9, 3.803211174224312*^9, 3.803211286929331*^9, 
  3.80321145410955*^9, 3.803223317212628*^9, 3.8036417619437923`*^9, 
  3.803644368784643*^9},
 CellLabel->
  "Out[357]=",ExpressionUUID->"98bb6dc2-6f6a-441c-8799-92bc2874e367"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"symbolDescriptionTests", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"descriptions", "=", 
        RowBox[{"Description", "@", "someWLSymbols"}]}], ",", "spanish", ",", 
       "portuguese", ",", "japanese"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"spanish", "=", 
       RowBox[{"TranslatedDescription", "[", 
        RowBox[{"someWLSymbols", ",", "\"\<Spanish\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"portuguese", "=", 
       RowBox[{"TranslatedDescription", "[", 
        RowBox[{"someWLSymbols", ",", "\"\<Portuguese\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"japanese", "=", 
       RowBox[{"TranslatedDescription", "[", 
        RowBox[{"someWLSymbols", ",", "\"\<Japanese\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5"}], "}"}], 
         "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "someWLSymbols", ",", "descriptions", ",", "spanish", ",", 
          "portuguese", ",", "japanese"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.803064472561564*^9, 3.803064672272832*^9}, {
  3.803065167679809*^9, 3.803065182215145*^9}, {3.8030652238434258`*^9, 
  3.803065231407126*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"c26a6c14-c025-4bc9-b533-e455e0fc77e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"symbolDescriptionTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803064689056843*^9, 3.8030647094715633`*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"64d8e0be-3b32-486a-8a7b-6cb916fc7fc7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"List", "\<\"List\"\>", "\<\"lista\"\>", "\<\"lista\"\>", "\<\"\:30ea\
\:30b9\:30c8\"\>"},
    {"Table", "\<\"Table\"\>", "\<\"tabla\"\>", "\<\"tabela\"\>", "\<\"\:30ea\
\:30b9\:30c8\:3092\:4f5c\:6210\"\>"},
    {"Range", "\<\"Range\"\>", "\<\"rango\"\>", "\<\"intervalo de \
valores\"\>", "\<\"\:7bc4\:56f2\"\>"},
    {"Graphics", "\<\"Graphics\"\>", "\<\"gr\[AAcute]fico\"\>", \
"\<\"representa\[CCedilla]\[ATilde]o gr\[AAcute]fica\"\>", "\<\"\:30b0\:30e9\
\:30d5\:30a3\:30c3\:30af\:30b9\"\>"},
    {"Image", "\<\"Image\"\>", "\<\"imagen\"\>", "\<\"imagem\"\>", \
"\<\"\:753b\:50cf\"\>"},
    {"ColorQ", "\<\"Color Q\"\>", "\<\"\[DownQuestion]color?\"\>", \
"\<\"Cor?\"\>", "\<\"\:8272\:304b\:3069\:3046\:304b\"\>"},
    {"Number", "\<\"Number\"\>", "\<\"n\[UAcute]mero\"\>", \
"\<\"n\[UAcute]mero\"\>", "\<\"\:6570\"\>"},
    {"Grid", "\<\"Grid\"\>", "\<\"rejilla\"\>", "\<\"grade\"\>", "\<\"\:683c\
\:5b50\"\>"},
    {"Entity", "\<\"Entity\"\>", "\<\"entidad\"\>", "\<\"entidade\"\>", "\<\"\
\:5b9f\:4f53\"\>"},
    {"Values", "\<\"Values\"\>", "\<\"valores\"\>", "\<\"lista de valores de \
associa\[CCedilla]\[ATilde]o\"\>", "\<\"\:5024\"\>"},
    {"Map", "\<\"Map\"\>", "\<\"aplica a todos\"\>", "\<\"aplica-se ao \
primeiro n\[IAcute]vel\"\>", "\<\"\:9069\:7528\"\>"},
    {"Thread", "\<\"Thread\"\>", "\<\"atraviesa\"\>", "\<\"atrav\[EAcute]s \
das listas\"\>", "\<\"\:7e2b\:3044\:8fbc\:3080\"\>"},
    {"Function", "\<\"Function\"\>", "\<\"funci\[OAcute]n\"\>", "\<\"fun\
\[CCedilla]\[ATilde]o\"\>", "\<\"\:95a2\:6570\"\>"},
    {"MapThread", "\<\"Map Thread\"\>", "\<\"aplica a trav\[EAcute]s\"\>", \
"\<\"aplica \[AGrave] liga\[CCedilla]\[ATilde]o de elementos \
correspondentes\"\>", "\<\"\:7e2b\:8fbc\:307f\:9069\:7528\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8030646999764233`*^9, 3.803064710079483*^9}, 
   3.80306491221344*^9, 3.803064982200742*^9, {3.803065200419669*^9, 
   3.803065233248358*^9}, 3.803065362655429*^9, 3.803069750765991*^9, 
   3.803070102298292*^9, 3.803070559401004*^9, 3.8030725572100058`*^9, 
   3.803209819210288*^9, 3.803209907599031*^9, 3.8032099583639717`*^9, 
   3.8032104215761223`*^9, 3.803210639433948*^9, 3.803210686823619*^9, 
   3.803211174428342*^9, 3.803211287141121*^9, 3.803211454347851*^9, 
   3.803223357290904*^9, 3.80364178908924*^9, 3.80364436918042*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"aaf9e47e-a0b2-4f83-a71d-1725be3508d8"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["A parenthesis: the PrintDefinitions function", "Subsection",
 CellChangeTimes->{{3.802803101831505*^9, 3.802803106955522*^9}, {
  3.802806086805429*^9, 3.802806089487018*^9}, {3.803065595618608*^9, 
  3.803065608235427*^9}},ExpressionUUID->"07889918-12f3-4f6f-9000-\
3c13d7bf55a7"],

Cell["\<\
PrintDefinitions, a function from the Wolfram Function repository, creates a \
notebook object for a WL symbol, containing the symbol \
documentation/definition content.\
\>", "Text",
 CellChangeTimes->{{3.802805989447187*^9, 3.8028060667916927`*^9}, {
  3.802806110198435*^9, 
  3.802806111521874*^9}},ExpressionUUID->"e4339a94-e6a5-446e-acbd-\
1a5a3d16f9ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceFunction", "[", "\"\<PrintDefinitions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.802802994950541*^9, 3.8028029949741907`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"a78885b6-ba66-403f-bea7-62b65f32449b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{Typeset`open = False}, 
    FrameBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[GridBox[{
            {
             StyleBox[
              StyleBox[
               AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                BoxBaselineShift->-0.25,
                BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
               
               FontColor->RGBColor[
                0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
              ShowStringCharacters->False,
              FontFamily->"Source Sans Pro Black",
              FontSize->0.6538461538461539 Inherited,
              FontWeight->"Heavy",
              PrivateFontOptions->{"OperatorSubstitution"->False}], 
             StyleBox[
              RowBox[{
               StyleBox["PrintDefinitions", "ResourceFunctionLabel"], " "}],
              ShowAutoStyles->False,
              ShowStringCharacters->False,
              FontSize->Rational[12, 13] Inherited,
              FontColor->GrayLevel[0.1]]}
           },
           GridBoxSpacings->{"Columns" -> {{0.25}}}],
          Alignment->Left,
          BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
          BaselinePosition->Baseline,
          FrameMargins->{{3, 0}, {0, 0}}], 
         ItemBox[
          PaneBox[
           TogglerBox[Dynamic[Typeset`open], {True->
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "IconizeCloser"],
             ImageSizeCache->{11., {1., 10.}}], False->
            
            DynamicBox[FEPrivate`FrontEndResource[
             "FEBitmaps", "IconizeOpener"],
             ImageSizeCache->{11., {1., 10.}}]},
            Appearance->None,
            BaselinePosition->Baseline,
            ContentPadding->False,
            FrameMargins->0],
           Alignment->Left,
           BaselinePosition->Baseline,
           FrameMargins->{{1, 1}, {0, 0}}],
          Frame->{{
             RGBColor[
             0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 0.5],
              False}, {False, False}}]}
       },
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->GridBox[{
        {GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["PrintDefinitions", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"]], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"]]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
        {
         StyleBox[
          PaneBox[GridBox[{
             {
              RowBox[{
               TagBox["\<\"Version (latest): \"\>",
                "IconizedLabel"], " ", 
               TagBox["\<\"1.0.0\"\>",
                "IconizedItem"]}]},
             {
              TagBox[
               
               TemplateBox[{
                "\"Documentation \[RightGuillemet]\"", 
                 "https://resources.wolframcloud.com/FunctionRepository/\
resources/PrintDefinitions"},
                "HyperlinkURL"],
               "IconizedItem"]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           Alignment->Left,
           BaselinePosition->Baseline,
           FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
          FontFamily->"Roboto",
          FontSize->11]}
       },
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
            GrayLevel[0.8]}, False}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open],
      BaselinePosition->Baseline,
      ImageSize->Automatic],
     Background->RGBColor[
      0.9686274509803922, 0.9764705882352941, 0.984313725490196],
     BaselinePosition->Baseline,
     DefaultBaseStyle->{},
     FrameMargins->{{0, 0}, {1, 0}},
     FrameStyle->RGBColor[
      0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
     RoundingRadius->4]],
   {"FunctionResourceBox", 
    RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
    "PrintDefinitions"},
   TagBoxNote->"FunctionResourceBox"],
  ResourceFunction[
   ResourceObject[
    Association[
    "Name" -> "PrintDefinitions", "ShortName" -> "PrintDefinitions", "UUID" -> 
     "13e366a8-a19d-4f6e-b355-e797a886ef9f", "ResourceType" -> "Function", 
     "Version" -> "1.0.0", "Description" -> 
     "Browse a list of hyperlinked definitions associated with a symbol", 
     "RepositoryLocation" -> 
     URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
     "SymbolName" -> 
     "FunctionRepository`$d1494e50c31649e3b41065e927a737be`PrintDefinitions", 
     "FunctionLocation" -> 
     CloudObject[
      "https://www.wolframcloud.com/objects/a9e94192-6542-4bd5-a565-\
35bfa389d3a9"]], ResourceSystemBase -> Automatic]],
  Selectable->False]], "Output",
 CellChangeTimes->{{3.80280300532344*^9, 3.802803012808069*^9}, 
   3.803209820683867*^9, 3.80321128719895*^9, 3.803224447867579*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"2b03614d-2b83-4ec7-b240-428ef8ea5205"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<PrintDefinitions\>\"", "]"}], "@", 
  "Graphics"}]], "Input",
 CellChangeTimes->{{3.80280302187153*^9, 3.8028030297190742`*^9}, 
   3.803224460423559*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"f3c9cd6e-5acd-4ef1-9c56-a4f9b330735e"],

Cell[BoxData[
 TemplateBox[{
   FrontEndObject[
    LinkObject["4xqkf_shm", 3, 1]], 18, 
   "FrontEndObject[LinkObject[\"4xqkf_shm\", 3, 1]]", "18", 
   "\"System`Graphics\""},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{
  3.8028030310861597`*^9, 3.803209820779664*^9, 3.803211287475811*^9, {
   3.803224451868084*^9, 3.803224464681459*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"5af6c396-bb56-453b-960d-2147b4d687f5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Describing Colors", "Subsection",
 CellChangeTimes->{{3.802621421565856*^9, 3.802621424964889*^9}, {
  3.802800824871676*^9, 
  3.802800828175806*^9}},ExpressionUUID->"821c7ed0-db3b-4d32-898c-\
7fc1e42761a3"],

Cell[CellGroupData[{

Cell["Named Colors", "Subsubsection",
 CellChangeTimes->{{3.802702241278349*^9, 
  3.8027022528140783`*^9}},ExpressionUUID->"4af503c2-09c5-4bbd-9e34-\
3e1c7b219078"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"redNamedColorWLEntity", "=", 
  RowBox[{"WolframLanguageData", "[", "\"\<Red\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.802633054172407*^9, 3.802633060561604*^9}, 
   3.8027027366877193`*^9, {3.8027089711959133`*^9, 3.802708987351334*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"617f7c0a-2901-4754-87b5-73a69b5ac0b7"],

Cell[BoxData[
 TemplateBox[{"\"Red\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
   "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
   "\"Wolfram Language symbol\""},
  "Entity"]], "Output",
 CellChangeTimes->{{3.802633225069034*^9, 3.802633250633916*^9}, 
   3.802708988072328*^9, 3.803132657735538*^9, 3.8032112876205893`*^9, 
   3.8032233732263317`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"5bfaba88-9f52-43f0-bee6-186e6f8f01ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"entityPropertyValuesForRedColor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"redNamedColorWLEntity", ",", " ", "#"}], "]"}]}], "}"}], 
     "&"}], "/@", "wlEntityProperties"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8027090022235394`*^9, 3.8027091031956797`*^9}, 
   3.8027093609444847`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"fec91c96-0fe1-462b-9691-1287df327330"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"entityPropertyValuesForRedColor", ",", " ", 
     RowBox[{
      RowBox[{"Not", "@", 
       RowBox[{"MissingQ", "@", 
        RowBox[{"Last", "@", "#"}]}]}], "&"}]}], "]"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8027093693676167`*^9, 3.8027095095392027`*^9}, {
   3.802709711937481*^9, 3.802709767834723*^9}, {3.8027098476712418`*^9, 
   3.802709924639345*^9}, {3.802710113290689*^9, 3.802710136118264*^9}, 
   3.802710184921781*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"af85f2ca-3c68-4aa9-bde4-f2db1378dea9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"attributes\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Attributes\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Attributes\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      TemplateBox[{"\"Protected\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Protected\""}], "]"}], 
        "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Protected\\\"]\"", 
        "\"Wolfram Language symbol\""},
       "Entity"], "}"}]},
    {
     TemplateBox[{"\"character count\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CharacterCount\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CharacterCount\\\"]\""},
      "EntityProperty"], "3"},
    {
     TemplateBox[{"\"date introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateIntroduced\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 25 Oct 2004\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2004", ",", "10", ",", "25"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False]},
    {
     TemplateBox[{"\"documentation basic examples\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationBasicExamples\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{Cell[BoxData[
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]], "Input",
         ShowStringCharacters->True,ExpressionUUID->
         "91e212b5-85ce-44c8-81e2-790b2b6445cc"], ",", Cell[BoxData[
         GraphicsBox[
          {RGBColor[1, 0, 0], DiskBox[{0, 0}]}]], "Output",
         ShowStringCharacters->True,ExpressionUUID->
         "537f06aa-782d-443e-97bb-876237f750e5"], ",", Cell[BoxData[
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Sin", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
         ShowStringCharacters->True,ExpressionUUID->
         "00fc81ef-0b79-4e8a-b37a-22872099aa4f"], ",", Cell[BoxData[
         GraphicsBox[{{}, {}, 
           {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwt1nc4le//AHAjsjLOMco456CQiqYiH++btpQokqRCUmaiKA0lQjIioyIi
I6OhRHjskRSKiGTvc26bY/6e73X9/nFfr+t6Hud9v9c58lbOxhe4ODg4NMg/
/ztf3Lbi3WITqHPx/8+ynwyDk4xLYPBDNecEeS5XFN5nMDxBRGPDZknyfFEU
ROdh+INEa2N9K90fHP5zd5yhR0MjitplTJ4/5+3CR+mpkDp4suG0XCqsbO1S
ZtJzIaJ7y+pnErkQ/zXuyjC9Gk4/j7z1froKMrP8Wx3U/oBXTXWVgHsLXIT6
6BHXbnh6HdZz7u8CjoTpvNbAbmhouZhw1bwLolbItn1N7AaT5cnpP05dUFVt
S0tt6gZB3RyOh5FdoHJiIeGCVg/038r4z3ygCwbslNPbOXuB/3hC2i+/brgc
dquwLqQPLPl01WsLesCpd313duYgjFqI7dvL3Q8dli18xdWDoMuXdXylZD8c
b36oVtszCHoNYj25Kv2wq6bfs1d6CIaVyk4wj/QD97skUUm/IQiJKOZ6FNkP
UV7yOtfPDsNoVhT9hfIAFFPXRGuKMsHpwvixj1qDsD2oqnDfBiZcLG5+aXh4
EF7zevQY7WdCiNqb9t+nB+ERu0n9shcTvjd0Tb7zGgTTf+EVMQNMyOeS3htY
MAhDaaKT80UscCnzsKjaPQQC8j7K/3aNAt8Xz0Sa6jBUaYeq3943ChYr0uod
dw6Dr1nsTjnjUfD+eUEkfe8wcIV8PnDafhQ8j4U/m7IchrmlkYu/X4zCRp03
lPywYRhuM0n5wTUGJZOxt0RmhuFblPL6om9j4BZpHxDzfgQCsrdvOdsyBoYl
QvH5BSNwsE5Xc6l3DDrOnG78VjUCZSstDmkvj8GD/Hs3c9pHIP9ayKXPW8Zh
w9zMcjY/EzJOsFPfPh0Hc42dtMMWTHgsWqMaf24CuDu+JOdMMCF3p9zHo04T
ICX0X+WRRSb0WDrDws0J0Nm/aaGWlwW7M6gnTkZOQLVsUsCjNSwYOGRxa9X3
Cdg953WTU4cFe+4zf3junoRcIR5W2T0WOKWBufKhSdjRcGc/O4AFMfWhPb9M
J8H4QqeB1BMWjNI12Oquk7DlR+Zh0VcsiM2/rdCXMgmneM86TxWzYHZKxN1Y
cgoeJ+xz85tngaKc1fKy4hQkdKusPMGF4ejebP+MLVOgHJI7ys+PISnMLJbv
yBRoTZhkb5HEYKweX1l4fwqyjoKHizqG26YTRg6hU2B0r13LbweG1Fv72tbE
TcFZ2yI1v90YOL4NjrrlTcEf/p9RegcwZNhtld4wNgWZQgHLr89gaA72SWxe
moJxT0YjrzWGFTlNar5C0yDvn5tnaIfBnOfmnk7laRgMCH393BUDX0KpQ6Tl
NFxlN0Up+GLYVi0xs9dhGpyFBX2/BmCwHL3oPe45DbbXttqeDsbwUUfo6ZGI
aRgA6vjOKAxWrScI7m/TULWusb01BYPAs07HKy3TcGIhv+NzOob35k6y//qm
YQ3HbNidtxi4//h55nHOgFHYz8XqHAyJzXnbruycgaMtD14bl2MwiDrQ1b53
BnSkl7q9qjBMnvwVYmA8A16FWoUhNRj2/WYylR1n4IfyBeRej6GvkZHSnjAD
fEsZelvaMDyOyDA1eDsDtncENqW0Y9Aw0eLJK5iB6pqgRL5ODH6/jltFNM/A
y+222317MWwO7xDl7puBN+Ghh171k/k77ki4TMzA2kMhvamDGFR++soaCM+C
4jGr9KtMDHVh1JpcmVlI9Q/4pYExeBi/9FRePwt3+tVvd49iYFA2qURozMLw
9bUpnuMYqutzm7j2zgJS0DdiT2BwDd3/wMVoFpKTwzyspjBIG/3c1m45C39f
Lct+nMZwuW4kJNdzFnI/P2+RZGOghHiCst8s/DpOH103hyHPkJcVHj4Lv+3t
79LmyfyLPHnOlTALvMP1/hwLGAR/0A+7ZM1CafQHwW+ksx+ns//mzwI33ZvH
exGDxVHNlMNfZyGT48s1+hLZH8IVprm/Z2H+1ZhlMun0WmMe5d5ZII6UF6xe
xnAi6N+H8PFZeKfQF3aV9IKBgxUXBxvilMXbc0gnCrFFXVaxIVaXHtdL+si3
B8RfaTZs1OhvXCA9HUhxOqzChn1vTt9bJB17OE42dwcbnJW9EvtJ7xfcWKO0
hw1fxMy0v5Bmff3sGX6M9DthfQ/STwP2qXBZssFO/UctjbSOfkOTsz0beJ80
V2aS8fbxn33w14MNU2Weu1RIB1cPbzvsy4brQWKMQPK+u/w9uj4/YYNbuPCd
32Q+Og7yhCrFs2HdeWyyivRDvjAIz2RD4Sm9pI1kPjdX0Vic+WzgL01y3EHm
u9nvzXPnajbMEZVZymQ97h7YdfhvExs2Gdk6cM+S/bGynK3fw4aLJwwTq8j6
1VUYpXweYwOXzzmz62R9PXzbTZWW2WB8zc9fZJLsj/32POFCc7DwvHhXKNkf
V8p9rJyV5+BYWLaEEdlPtJ79vNPb5kAs9PKOTLLfarj407zQHOyLfVo6M4xh
HQoa8z81B6lEsPqxAQwNloYRorZzIL07RuRsH4Y7t8Q0I13nQDYswsq8B0NL
XsTdxMA52OF+xlayA4Nvy8m1G6LmIGlv5Zrff8l5n11T9S5xDr64WezzacUQ
tCNWhCiYgyW1SoHEJgy6b1/HtuA5WL7n7Mkm54/13U7v3MIcbF58t5pWjeEZ
U7Wvj28eUnf81FavwDClmrVpUn4eqsJZ0lJF5P5KyskXPjEP36nfrRffYzAt
8zwXcW4eng7PWPpmkfuge/cKWcd5CJjNYs2/wXCGUXR4vS/5/8p8fqUnYhB7
VvVnz+d5MIm4wl4XgaEwN+D217J5kNhwuZkaisG+2UDBqH4exmkxlqxHGMol
6i9ZDs1DgXbT5Us+GDxDWmY9ZBcg9UL9t+vkvut8MCSZeXcB9G5vVpvVJ/dF
Ynre9qAF8H19tebdPgy7S50sv0QvwOBbeR0zhCGCYyKp6v0CWGb2v7Un9/Gh
m/Pbu3sWIEegVjWDhuGdi9Dx1YcWQUxwIvAFkwXfYqieGaaLIPlEPC66jwV9
ZdJxejaLcHXwkuOdfyyQXrN+2OHOIqSqax7jq2eBT/G++8UfF6H72ptikQ8s
MKXc+XBZYQnihIwU5lzJ73Ft35Zl9SXQcmq5En6ZBQG2Qcvh/y1BffFU42or
FhB5zw4TZktgznKc/HeMBSrWn7upwUtwoN5O024TC+Y+jFEL5pdg9LBbsG0X
E8TbZzWN+ZdhYXK7SlIzE9T4OM71Sy6DQlK2zvfvTLC2EE4X27oMYfFnODvy
mPBtxYa9tnbLoHc3K5krjAmxJjZuIo3LEF0Qv6ivzYT4m/ZDm09yoLvIUZru
PQKbi/hn/c5wINa/R6+C3UegaEUKzz9rDrTdus2AdWkEOoJ6GEEuHKhR6ajc
NeMRoL08c3LQnwMplZX5vFUYgZgyw7L4fA7UNF4u9JsYhrBV22MpCpxINiNK
U4E5BPfiFowmRzhR9K802mOJQTi2+fOVDROcKLXsZrkk7yDQiq+GWrE50ad/
UUYh0wOQ1zVUV8fDhShh2mD6ewDG17UYZtC4UOnvKg+1qAGwSv94xPYYF1ql
7l65WmoAdHOdDjV/4ELCr7Q/rxHoB46fHSj/BjeankjZIFrZA0puth4nVHlQ
XntW0m63duiZijQVLOBFGhZPK+LaG0C/9/KtsCt8qP/rJWcG7yc42hOygUYT
QCzTFJlFZ4IYKrW6W5UhiD5WeLT95P1FqIk1ye05uwpx12vvqdzYQfQF9d2L
uLAKGa7zGXii10G8EJjp77dfhca07WxNzToIoRWr3z/yWIXUS95/zL/fQQxN
n9rfFLoKpes6KK/600Ektf11ulS2Cq0+lhLxzqeTkE3pJYLXC6MD+DZ+U99F
CMDU+bYJYSRdnnM76kAv4aGrwvdpThhd//YmaKVFL9G353RmMKcIGs1xmbB1
6SVKDhbP6YmIoM9jn/2mo3qJG8ZBT1JVRRB3Qdu2k4O9xPCFdeXXzoug1KHX
5WJ+fcS3RyYqYj9EULla//OVn/oJreCH34caRVCoAbpxoaqfSAn94lbWJoLS
dgb3v/vTT/g8lS++PiSClD65aEsu9xO0uumNmEsUOVuUmAseGCCaWkrKTWii
6Ol9rdFnPweIA0zzGQUTUfRigvvSYvsgESt+/+cdM1Ek8/XclWrWIDG5+01W
22lRtH7D13X3lwaJlwHzF59aiSKDXnNbQm6ImFN+3szvIoqYV65TzE8PEelW
f3NHA0TR3tYv8cI/hwjR5rNehUWiKDvvaNaG7GHCdtnPTKZMFH1/efNtVPEw
ka/0drtHpShKPf2VOv59mLjkzsHc8l0ULe2ltV4aHCZKKPFnklpFEU9f50UH
uRHC7UiXzqNpUfTpQJP3R+8RornEhtN8oxhKUNZvl97NJEZ1/0jfUhdDXE76
2gf3MYmVxYbbX24VQ6udULS1IZPQILQu9u0SQ4t/tHbaWDOJ8C+ita77xFDd
JNXsUQCTMMzOjwq0FEOdA7ozro1Mwnbb1veZ58XQ8Oyc6612JnH7fXJNvY0Y
GtjqGOzezyTS34YtSdmLoVPbroersZmEQIadTeJ1McQj47qzVIZFVCSJby4I
EUNepk0HXc+wiPa1AYc6noihl/cnjE9cYBFTr5atuCPJ55Nb0hQdWcTahKGI
Qy/EkL9m4+YALxZxL7ZovjFVDHW9+yt2LYZF6EQ6VLJKxBCLUbK5vIFFmEp2
dYhViKFiM+1RzxYW4Rhxcm57tRiyeCv8SaaDRTx/orfp5g8xpGJwba8Sk0XM
Ba9+srJNDJmXshdMeTHx8WGZJWNKDOl9DnyouAMTKfo1q/1myfz0hzXK7sZE
jFBDA3NeDO3Vqg1aRpi4G/Jv/xcuCuJj9ap5G2DCIGpOzVSUgnS+Pyhys8IE
mHMO5lMp6JVU2MTni5jYKsv3SlGKgv7ph1zpc8CE1EsJqTE5Ctph5AmL1zDR
lbx5OXAD+XySRuGaAEw0XtqZO65GQVfXR3UnP8ZE1Qadq6e2UhCvePlO+hNM
ZGQd7lfSpKAnI6/PVj/DhEeO7Y/i/RQktXPzScF0TNh7Ovqr6FOQvAj9eVcW
Jix3u+0JPkJBopENMwkfMLGH8M6xOEFB28sLB9rzMCFc+Txu5jwFJT+otdtT
hQlO/1enLC+Qn9ceLGNdg4lJ/TRquR0FnT++vd7+OyZavuf4hTlTkEKTo/au
X5j4FlKoy3aloKDIeuZ8EyYKjcvnz16jIJ7O7OiUFkwkNjU4b7pFQbH3j7bk
t2MiMqplffhdCrqWZ3ZpbScmAsw7uufuk/fdGTDi1o0J53bmyaoACrotUFJe
148Jq5eTYuqPKcg9LH512yAmTljN10SEUtDrCnOzumFMaPXxIesoCtosWRZ1
FWNiU4rIXPUzCpJoa3iqMIYJxmXJ7M1xFKSR5OGVN44JykY5p8gECjL3eXxw
9yQmeFiKKktJFCSMltiJU5iYzVLtskmlINvjJcEz05gYurLleU06BeWzevm2
zWLi77ZdplvfUtCFWR+bk2xM1E3piEZ/oCDDVd/ibeYwUZqz7+vyJwp66T1L
mM9j4pOngY9tHgXpnjcr1Fwg+2v3cZ3aAgo67aL/nHMRE88WT81uK6aghg06
p96Tfkycex9TRkGp1R8mDy+R/eZ90YGzioIsNbWdvpO+usdJya6Ggv5b61mu
uYwJWx73ju/fKSiRKTsXRFqaXv17vp6C/rShT5Wkv++S+6HSSEFFXusOMEnf
M75SYdJMQc30D+lLpDUcygvutVKQ+I/2vnnSQw/WfMxqp6C2Q2lTPaRj4xzT
2zopiJ93bUsuaePc4lf8vRTUq34x9AZp3p8SzzQGyP5Ke0ZTJp03cinMepiC
nFdN3yXIeJ14C/1DWBTEnZrzeQ9pBQbFu2CMgqq81So+kPdt0rT1GJqkIC/j
j6kipAOO5zlLzVKQU+AH65NkvnQchS/unSfnxfjFZACZz3FfK8srSxRk7z1h
kUbmO+nlJ5NYTiqySNnz4iNZD7M8gSM1K6goTUDlUzpZL6FflntnV1IRjjuQ
EjyDCbeVK7cZC1ORVClVZg1ZbxX506p3xKhIoejIC2ICE21aWfLp4lTkVft3
3ojsl71OJ0V5Zago9vlrIy2yv2b93qzcRqMiRfMG/RAmJtLjl5fOylPRVprW
2gayH8Ubk5m5ylTkoq3utWYAEz27Z786bqeiaKuQrk//MBFlYlASs5OK3CTW
Ltv/JfeH88vcSi0qKjrH4F3VionshIMp8rpUVPz+VAuFnCcf/ugHjUeoyP5s
WfEmch53KTK9uIyo6N9hTUs9cl5HtHXd1E9Q0XNfx3G9cnI+XAat/M2pyNMk
i5+PwMTa35rov4tkfAMxGxLeYaJ5NGjn5ctUFHg5u0AyExOPBLrUIh2paHhO
0Ox6Gjnv/wXIjV2lorbFV5kLCZgoS/wzl3iXitQKbiutJvePtevNj0IxVNSV
oX8v3Jnsn63tH9e/oKJIeMLXfRkTAuPo0/6XVNTyJMaXZouJt1d4c+6+pqIV
d267W1hgYsEl9PPkeyq6KWvoOnkAE0+dk7+01VBRCP/FN5EymLikLpDP/k5F
SOSkfI4EJrSxQ75kA/n+0diSUhFMdDttLTjWTEWhW1MjErkxsdmpoLCsh4ro
Txx7fYZYRLXDz+L0RSr6cajjcWk2uf83apRUc4ijA+I593MyWITLSFRJH7c4
UtrT2xX1mkVIOliWMgRIP3wyphjFIqzsB8vCJcXRQ3Gi5vQNFrFwabnSS10c
HYs85ma6m0WoX9zw3eC8OPr9sLsvOotJtF+iO2fYiCMOCa8yjyQm8ciBKips
J47EOlTv6D1jEoNX5o1+OImjvDh2ylNfJvHKq6bRyEscrTIdeqFnwSSkwuz/
mkaKo6V/iXlZ3ExiOf/NyLlacRQUcVBDas8IkUnEBRXXiaNbN5zGz2mMEBYl
T9QUfomjwDdWoU/XjxC5lTdduv+IIx4FneflIiPE1YbDkxcGxNHWnpiBba3D
RH//8PxlbgkUtcok/pTTMPGDslHQXVMCOWZuiRP2HSLny3HwmbYE4jpovmn4
+hCRWZlZWQISKP6Ct0HOpSHisdcWH9H9EqiCKnOedmSIMOjTWHxjLIE0H/S0
qVCHiK+5urjLXgLR96kJ7nw+SJSfO/nzWKwE4o6ReuuZMEB8ybz3bCO3JGrt
e/JfqXcfwWtgIh3JK4m0jemjR5z6CKNB5WhOAUlk2PJ5f5V5H9GvWPu0SVQS
hURIrHm0rY+gRkuF3aVJoo3NfD1GPb2E/f30h780JZGqW1d5l14vIWPW5O7l
IonOCFu98Z7sJm5yqh779lcS8U7tvyi1qZMQaLtx0ClbCn1wOdV77kwT0fta
PjzOazWirLtveTe8jAhXWbMi12QNsin3C+FtS4WQGNvK8wxptJFTjmbs+QPM
w898F+qXRnUSgv6dtq0wuzeJHVcog+xWZxcLXukGry9x98uKZdDro3uWFn26
gWNrzKrBMhnES9+q1hPVDSvpwfJba2SQrC9156OibpBkexwq+y2D/IW+PT0k
0gPbMgyiB0Zl0Br3LdNOaT3gJDG5a4uiLKJovV0l9rsXxgNZJSZKsqjGau/t
y4O94M41aHBjvSx6KLbR7tN8L3jhv+dK1WXRs5G6G+sYfRBYXfnQRFsWmaTs
OX/Wrg9Sbj1r9jSRRTqOurd2TfdBd6+eR4mfLBrjeiG4feUA6MV9T1ANlEXq
p345bFgzAC/NzGvDHssiidc5xmIbBsCy5oqCdYQssrGJ80g5OgB/3r78xv1K
Fql6B5RxRQxAw80lxr5CWcQRUbrHgjYIJWJ51ZWTsuio1rsKA8UhkK/ZN6k+
S8aj+y9kYesQ3PWpp0XNy6Ll6LBT0XpDoDMzcNWOSw55XT2UG31+CPLapGj8
onLoeivyyI4dgvfJ7q76G+QQhXLxxEGJYUj4b4tM7Xk5FMfxxCFuYhhKjgrc
n7eRQ18/r/OaWx6GrrPdQ+vt5FBQW3HjHqERULwXkefrJIf6vQUPxq8dgcQK
9il0Uw4J3l5l7HtiBJIMS6I+hMuhO0Oql8ffjkDFuWccXZFy6NcZ+8dq+SPQ
d8XNTvSZHLrRlfrArHIElMKVdjnGy6HoV8w6978j8Lo54LdSphySt86QauRj
Qsr545IxlXLoH8+iG8OCCVWuG29XfZVDqlGCTzRsmTBwn6dvulYO8bkGrtZy
YYLK65yPx3/JoazCcMTvw4TUIRmTVZ1y6JyXuWllGhPSrvY8uTsnh1atnTxc
MMmEjAfuYhc30dDXZwP2djdYMKJ95t6DzTTUWP86iO3Ngo2TeydebaOh2DqG
ooc/C9KsxBs7NGmoKXFN5H9RLEiBD1Hm+2koqNhIaTCbBYnsUfrRszRULvWK
QQyxoOdtc4iDFQ3Jtci4rRtjgaJdEWfgBRoKvJU74zHDgoSm4O5KexrysRa6
28+NIe6DWrKuBw0F127e2CWDIcbRQW1HKA1ZmSvW6x/E8Gftibjj4TQ0bOXp
eu8IhjVtu0VdI2lIo+ibYLIxhih9wfHMFzR0ZOfUmhwLDBHKaR9V0mioXzTG
cNwZw6/2UKUDGTSUWdF0OtQNg/hTz8gLb2ko5ovRQTlPDGErDnkmfKKhNM/l
T/PeGEI6+7VlS2lIOP/dy4YwDHVRPzK0KmjIyY/XpvkpBpFjObRT1TRUEVYy
/jUGw+NCX46nP2hI+0GX3bUEDI+erSsTaaOh2zTn631vMXwzXrVD7R8NNdw8
ZWKcjUFQYCrJoIuG9p4mRtJyMAR4lPn5D9CQwo4+UCjE4GdifZh7iobiNwfp
rv+KIcGwzeLCLA1J48oRjVoM+YdMnCrnaajruXXzpjoM4/8dCA3koiPTIGO7
340YhHYVJTB56Gh7fxRfQDMG5a2a2Yb8dPTuvFLnulYMFkobflNF6chH9u22
NR0YrjMSB9ypdORSJ5/m0kXmQ1pu7rckHWU+Ljd614OhUlhE7rkcHf27o6vG
GsDQxfdQbYlBR8ZvxM4NDWFY4OJE59bS0X+/uAt+jGDYOjNutXYDHQlnjY2b
jGI4Mmbv5qtGR0KcdtXTYxjshnseDGyho/thU+V3JzDc6z0Tqb+DjvYH3+2f
mMTw4l9TSvouOgrxWt54bBrD5xbDPGFtOsrW9IyImMHQ8LOqxgXoqI2Dh1E2
i4FZq/u3QY+OXl/8WtPKxsBXlcfavp+OSs9yRrXNYVAs2cYReYiO/HaO36+Y
x6CTny7GNqCjSzFTj6MXMJh9Wqd4+hgd3Qp1+2yyiOHq29jtBcfpqOv+wPIc
6cdpUvvpJ+lIdmerjf8ShpTEkJPe5nTk/KOvj2MZQ2ks/6XuM3S0ru7jg/Ok
26Pu3dh3no5qZLh135Bmh80HJtvQkfVk9Op20uJBbi/47egocN5EaI60mh8z
096ejsK2Ksoukz7kbVtU60RHwXOL//u9DTY3/9Wru9KRufhEcBnp2+5m3aHu
5Psv6ZM+pKOd6ycnPOjIkv7OTY109iV9XlMvOop26RUrJuP9YV0q9fkOHVn8
FPimTXrojPZ66ft0NNh751U8eb8VZh+1vHzJ+JI+RGEyH3RjNYN2fzrydFyX
rkRayyD5DAqiI+qsTft+Mn8n9jOcE0LoqNeCsvkYmV9nFH13RTgdLYi2x+uR
+Q/QooTZRtLRgb6H22lkfZK2B76qiqEjbsGegS6ynkVqKz6qxtKROn89ETKF
YUph+jcrkY6S7+5qSR7HICrnPHgshY7yGirlxMh+UZUamHv/ho6OZFL8rTGG
c4J/5K6/pyPve5+bS4cx3OA5rt7ykY4+iL8h6gfJ+V+uQbtz6Sjl/MOGqn4M
XycKrJcJOrrD2+ft2o1hR1t8ql8tHTm5T2zLbiE/T81uNquOnJdeC0LzN4aR
O2oHmn/SkVfyt6tvfmFIVPzSo/KHjup1VC2P/yDrZ/+L/rWPfP7wHbuPpRhG
82OcxgfpqOWYrf3zInLehc8XSDPp6M/E5STnAgw+75nm9hN09I1RWvHnE4Y5
L+7DvBwM1HdYhl2agmEgydY1hpOBqmR5sFAShqbv1dFq3AykUr5rk148hveM
kAFTXgayOr8YeCUaw+UyWd9kIQay8V2/uuchhhZBjeKDaxgoXfNdvrQNhort
0QNt0gzE1xfmuP4s2Q9nFkSuyDKQ5W39sLXm5H7LKrGMpjNQ93T1ng5DDAeP
Gy4MrmMg45aoeEctct5i7HYGbmUg2+Divd2CGF6X1ljStzNQ79Y/ZXk8GMJH
1Hw/7GCge/vujd5eZoGLztSv1l0MdFRF0rx2nAUqXd6uG4F8/+yKvnvNLIha
/yyj9jADuVPEfE+8ZMHkxP6k+0cYaEuKzhZz8vvEsHD8uaYhA30oNPc8FMIC
3uP6j5KMGejSJP9szx0WuHuxL986xUBRLx6aiVqywPjHSZVNFxloZuXzdTqS
LMiM5mZ02zHQu6BHfh1CLOC3yZKKvsxAN/hujDhws6BolncljxMDEbU8rXtG
maCu8Km3zY2BhEY9RIermCDkLv7q0T0GWrfApbPuGhPsoChGz4eB5IvTN9vb
M6GU3yFs9gEDtdZef/7sHBNuxJZ62/gzUE7duuUv+kwYrHQ9px3CQHa+/zXM
yzGhQrpebuQFA0nH+jJvF43AnaKgqMO5DMTIipesmxqGob9F4ew8BlIV6FXN
HhgG0/mJkOR8Bjq/ViLEp3UYNmqY+3MXkfcJ8HIdKhqG5jdKN75UMBCP+Y64
moBh2BpJnN7wi4Hm/v7iHpEehj7HMZogZqAB90na8MYhOCJjkvR1rTzyfCSz
CaQHIKpHrei0kjyKLNponMc/AD0ZfK0jyvKIHeT3SYndD14oX1RkgzyKT/11
4efvfki/oOh1fIs8ElLsuHUrvB8E3o4Zt/0njxzoL1PlBPuhcu9jDpapPKKv
N7VvZvaCrlPlaTF/eSSo8XRjcmA3xMlarf02JY/8p2+U6j5shbWlyU+PnlZA
6e9+6sxr/oCQTSWqDYUKSD3hU4BOchrYTqyor1ZVRDbzK+/d+q+MsHo3zvAP
VkQKzExm9IEmouor3/38BUUUePyAYY52J+GwpzOkmvQniuyBi/91EqL5ubFN
pH9ZULSldDoJs4zLeaOkv8tay12HTqI/+NvY2kVF1C4VVqCh10nwmoScCyIt
YSnk9vFAJ7Hnn5SO5ZIiirNM+vzWuJPoOzl62J70h2rXE+eOdxIBdVWnPEi/
k7JkipzoJBqKPd3DSFv2B0k6m3QSVomt6RWkbRQN928y6yTuXoqTUV9WRHW3
dWRSz3QSa7uur9cmLWPb9tDMspOoMj+28xBplsXTiZVnyfgNOI9bk760wrLI
9lwnEadmHRBJ+jy/5s611p2EXvLuqETSz3ZnB/0k3UcXf/2ONH6i33nPppNQ
EysvriHNq1d1p/MCGZ//ix/NpK+cyfoaYttJXOO69reXtIbqOwq62ElI3zw6
PE5aNbD2JCZdOKHEXiYtb70iJtauk/g/DxDigw==
             "]]}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->True,
          AxesOrigin->{0, 0},
          PlotRange->{{0, 10}, {-0.9999993680039507, 0.9999995755730018}},
          PlotRangeClipping->True,
          PlotRangePadding->{
            Scaled[0.02], 
            Scaled[0.02]}]], "Output",
         ShowStringCharacters->True,ExpressionUUID->
         "4a596f27-c532-481e-9db6-4c892172ce45"], ",", Cell[BoxData[
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Sphere", "[", "]"}]}], "}"}], "]"}]], "Input",
         ShowStringCharacters->True,ExpressionUUID->
         "727705c9-82a6-4bd9-8422-02a142a17b77"], ",", Cell[BoxData[
         Graphics3DBox[
          {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}]}]], "Output",
         ShowStringCharacters->True,ExpressionUUID->
         "265b7aa2-60f1-4da0-af0d-b20d11204c07"]}], "}"}], "}"}]},
    {
     TemplateBox[{"\"documentation example counts\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationExampleCounts\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleCounts\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", "1"}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", "0"}]}], "}"}]},
    {
     TemplateBox[{"\"documentation example inputs\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationExampleInputs\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleInputs\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "f90704d0-27e9-4a5a-b339-b444162cb9f1"], ",", Cell[BoxData[
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "8aff5047-e982-4023-b5a9-0e6cca1ae901"], ",", Cell[BoxData[
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"Sphere", "[", "]"}]}], "}"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "cf2e92bf-fa36-4b87-8877-81f6a50f2e55"]}], "}"}], "}"}]}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "}"}]},
    {
     TemplateBox[{"\"documentation example text\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleText\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleText\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}]}], "}"}]},
    {
     TemplateBox[{"\"entity classes\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EntityClasses\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EntityClasses\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      TemplateBox[{"\"Wolfram Language autoevaluating symbols\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Autoevaluating\""}], 
          "]"}], 
        "\"EntityClass[\\\"WolframLanguageSymbol\\\", \\\"Autoevaluating\\\"]\
\"", "\"Wolfram Language symbols\""},
       "EntityClass"], "}"}]},
    {
     TemplateBox[{"\"eponymous people\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"external links\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ExternalLinks\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"ExternalLinks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"frequencies of usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Frequencies\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Frequencies\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"All\"\>", "\[Rule]", "0.00043438204624676215`"}], ",", 
       RowBox[{"\<\"StackExchange\"\>", "\[Rule]", "0.002332589889001871`"}], 
       ",", 
       RowBox[{"\<\"TypicalProductionCode\"\>", "\[Rule]", 
        "0.001027798103809077`"}], ",", 
       RowBox[{"\<\"WolframAlphaCodebase\"\>", "\[Rule]", 
        "0.000014210820951722909`"}], ",", 
       RowBox[{"\<\"WolframDemonstrations\"\>", "\[Rule]", 
        "0.002184105795203869`"}], ",", 
       RowBox[{"\<\"WolframDocumentation\"\>", "\[Rule]", 
        "0.0016261890137618485`"}]}], "}"}]},
    {
     TemplateBox[{"\"full version introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"FullVersionIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionIntroduced\\\"]\""},
      "EntityProperty"], "\<\"5.1\"\>"},
    {
     TemplateBox[{"\"functionality areas\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}],
          "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "\<\"ColorSymbols\"\>", "}"}]},
    {
     TemplateBox[{"\"symbol background\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionEssay\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionEssay\\\"]\""},
      "EntityProperty"], 
     TagBox[GridBox[{
        {Cell[TextData[{
          Cell[BoxData[
          "Red"], "InlineFormula",ExpressionUUID->
           "b9f140e7-412f-40e2-be73-8666d3d6aa6f"],
          
          " is a symbol that represents the color red in graphics or style \
specifications. Color specifications in the Wolfram Language can appear \
explicitly inside a ",
          Cell[BoxData[
          "Graphics"], "InlineFormula",ExpressionUUID->
           "1e57dc47-0bbb-42cf-86dd-3aeb3369ad4d"],
          " or ",
          Cell[BoxData[
          "Graphics3D"], "InlineFormula",ExpressionUUID->
           "beba8eae-1c78-4c93-8e2d-9cf8cbea7d08"],
          " expression (e.g. ",
          Cell[BoxData[
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"Red", ",", 
              RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}]], "InlineFormula",
           ExpressionUUID->"bb2865ac-fc9c-4745-aedd-1ba85c21f4ef"],
          
          "), in which case they affect all subsequent expressions until \
another specification overrides them. They can also be used as part of an \
option specification, either singly (e.g. ",
          Cell[BoxData[
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Sin", "[", 
              StyleBox["x", "TI"], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               StyleBox["x", "TI"], ",", "0", ",", 
               RowBox[{"2", "Pi"}]}], "}"}], ",", 
             RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]], "InlineFormula",
           ExpressionUUID->"0a6d8038-9497-40da-9ba2-212e0f5d4604"],
          ") or as part of a ",
          Cell[BoxData[
          "Directive"], "InlineFormula",ExpressionUUID->
           "36d83db8-80dd-41b4-9b5e-5d5c211782ed"],
          " compound expression (e.g. ",
          Cell[BoxData[
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Cos", "[", 
              StyleBox["x", "TI"], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               StyleBox["x", "TI"], ",", "0", ",", 
               RowBox[{"2", "Pi"}]}], "}"}], ",", 
             RowBox[{"PlotStyle", "->", 
              RowBox[{"Directive", "[", 
               RowBox[{"Thick", ",", "Red"}], "]"}]}]}], "]"}]], 
           "InlineFormula",ExpressionUUID->
           "ed21e45a-9671-4b7d-af17-ffdbf55fa2b1"],
          "). Finally, they can appear inside ",
          Cell[BoxData[
          "Style"], "InlineFormula",ExpressionUUID->
           "2634266c-ed27-4c60-b9fb-6ae4637ed139"],
          
          " wrappers that affect the appearance of text, equations, and \
notebook cells (e.g. ",
          Cell[BoxData[
           RowBox[{"Style", "[", 
            RowBox[{"\<\"hello\"\>", ",", "Red"}], "]"}]], "InlineFormula",
           ExpressionUUID->"ba08235a-00e6-40fd-aea1-22abae6b7bcf"],
          ")."
         }], "FunctionEssay",ExpressionUUID->
          "e82e480b-a466-4de9-b0ae-1d4144049e38"]},
        {Cell[TextData[{
          Cell[BoxData[
          "Red"], "InlineFormula",ExpressionUUID->
           "f262b2e5-4f7a-41b8-826f-29259b1e5665"],
          
          " is a color located at one of the corners of the RGB color cube \
and evaluates to ",
          Cell[BoxData[
          "RGBColor"], "InlineFormula",ExpressionUUID->
           "6626ce8e-ce79-4c7c-913c-a3d2fb4dbdc2"],
          Cell[BoxData[
           RowBox[{"[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}]], "InlineFormula",
           ExpressionUUID->"b35ed817-2afa-451c-90a8-cc15ce2840e9"],
          "."
         }], "FunctionEssay",ExpressionUUID->
          "b654e0f9-d8c0-4c40-ae05-a9c1ee57409d"]},
        {Cell[TextData[{
          "Named symbols for other colors include ",
          Cell[BoxData[
          "Green"], "InlineFormula",ExpressionUUID->
           "29013c0b-4281-4a22-bf16-cb46d46b0d8e"],
          ", ",
          Cell[BoxData[
          "Blue"], "InlineFormula",ExpressionUUID->
           "1934a2d4-aa4d-4b82-b3db-6f6a78440859"],
          ", ",
          Cell[BoxData[
          "Black"], "InlineFormula",ExpressionUUID->
           "9a26ef39-674f-4cc4-ad5b-08e9d7dbd8d0"],
          ", ",
          Cell[BoxData[
          "White"], "InlineFormula",ExpressionUUID->
           "60660f28-0855-4910-8e06-9e3a7967790b"],
          ", ",
          Cell[BoxData[
          "Gray"], "InlineFormula",ExpressionUUID->
           "9fa56e5b-92d1-4719-8cde-fe621ae85887"],
          ", ",
          Cell[BoxData[
          "Cyan"], "InlineFormula",ExpressionUUID->
           "9a698dd2-5e74-4cbd-a808-858f9daafc44"],
          ", ",
          Cell[BoxData[
          "Magenta"], "InlineFormula",ExpressionUUID->
           "6e38d14c-fb50-409b-8509-4754db8fed90"],
          ", ",
          Cell[BoxData[
          "Yellow"], "InlineFormula",ExpressionUUID->
           "dc39509a-97c0-4a21-8e2f-84edc1724605"],
          ", ",
          Cell[BoxData[
          "Brown"], "InlineFormula",ExpressionUUID->
           "e3bbef59-95a9-4567-ad95-e30308958ec6"],
          ", ",
          Cell[BoxData[
          "Orange"], "InlineFormula",ExpressionUUID->
           "eea704a8-58c8-462a-8b06-5e85c145ddf8"],
          ", ",
          Cell[BoxData[
          "Pink"], "InlineFormula",ExpressionUUID->
           "50d34252-75f1-4cbd-9e52-ae3d1922212a"],
          ", and ",
          Cell[BoxData[
          "Purple"], "InlineFormula",ExpressionUUID->
           "6357a858-62a9-42f4-953b-c57140d67f10"],
          ", as well as their ",
          Cell[BoxData[
          "LightRed"], "InlineFormula",ExpressionUUID->
           "73c009a2-6a7a-4763-966a-e2ebe60d0237"],
          " etc. variants. Arbitrary colors can be input using ",
          Cell[BoxData[
          "Hue"], "InlineFormula",ExpressionUUID->
           "246d9f02-a6fa-4701-a6d9-dd0fb4814f0c"],
          ", ",
          Cell[BoxData[
          "RGBColor"], "InlineFormula",ExpressionUUID->
           "b7064db8-2846-4acb-94ec-7c02d23b0e29"],
          ", ",
          Cell[BoxData[
          "CMYKColor"], "InlineFormula",ExpressionUUID->
           "627d1c21-f9c4-46c9-af51-1570806d493c"],
          ", ",
          Cell[BoxData[
          "LABColor"], "InlineFormula",ExpressionUUID->
           "47b99e13-f009-4612-9030-4f1a2b3d0146"],
          ", ",
          Cell[BoxData[
          "LUVColor"], "InlineFormula",ExpressionUUID->
           "1cbea482-d1a9-49b5-8314-a117ee1e3e11"],
          ", or ",
          Cell[BoxData[
          "XYZColor"], "InlineFormula",ExpressionUUID->
           "fba162e1-ae85-4921-8ad0-97b8088bcc13"],
          ". Colors can be modified using ",
          Cell[BoxData[
          "Lighter"], "InlineFormula",ExpressionUUID->
           "2b1f2ab4-79f4-4724-a477-602ec34ea11f"],
          ", ",
          Cell[BoxData[
          "Darker"], "InlineFormula",ExpressionUUID->
           "7b60d197-1017-4269-9a54-a63cf9b8014b"],
          ", and ",
          Cell[BoxData[
          "Blend"], "InlineFormula",ExpressionUUID->
           "7b670f92-a978-4e76-9da3-558938e3ce98"],
          ". Colors may be converted between different systems using ",
          Cell[BoxData[
          "ColorConvert"], "InlineFormula",ExpressionUUID->
           "ae1425b3-c02b-466b-aad8-423705ee714f"],
          ". The appearance of colors appearing in ",
          Cell[BoxData[
          "Graphics3D"], "InlineFormula",ExpressionUUID->
           "acea8292-7e21-4fc3-be4c-3b2a5a136878"],
          " objects may be controlled using ",
          Cell[BoxData[
          "Glow"], "InlineFormula",ExpressionUUID->
           "337fea4b-c655-4ea8-9fbd-1758daf95010"],
          ", ",
          Cell[BoxData[
          "Specularity"], "InlineFormula",ExpressionUUID->
           "95b67c9a-ae47-4961-b9e5-7f26e4d65b72"],
          ", and ",
          Cell[BoxData[
          "Lighting"], "InlineFormula",ExpressionUUID->
           "ed829dd7-0449-46b7-84a3-5e3e327c3d60"],
          
          ". The transparency of colored graphics objectives can be specified \
using ",
          Cell[BoxData[
          "Opacity"], "InlineFormula",ExpressionUUID->
           "e3416498-f677-4a54-8c37-23fa3add1a1b"],
          ". ",
          Cell[BoxData[
          "ColorData"], "InlineFormula",ExpressionUUID->
           "09310701-b3fa-48a7-ba22-6df8f6bd1a4d"],
          
          " can be used to give a function that generates colors in a named \
color scheme."
         }], "FunctionEssay",ExpressionUUID->
          "cfd9c010-c810-4dba-9fd1-7cdaf3d26557"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxItemStyle->{"Columns" -> {{
            Directive[SpanMaxSize -> DirectedInfinity[1]]}}, "Rows" -> {{
            Directive[SpanMaxSize -> DirectedInfinity[1]]}}}],
      "Column"]},
    {
     TemplateBox[{"\"link trails\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LinkTrails\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"LinkTrails\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GraphicsOptionsAndStyling\"\>", 
         ",", "\<\"guide/Colors\"\>", ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ImageProcessing\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/ImageProcessing\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ChartingAndInformationVisualization\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ChartingAndInformationVisualization\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/DateAndTime\"\>",
          ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Finance\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeographicData\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Statistics\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/3DPrinting\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/3DPrinting\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ActuarialComputation\"\>", 
         ",", "\<\"guide/Finance\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ActuarialComputation\"\>", 
         ",", "\<\"guide/RandomVariables\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Calculus\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Calculus\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/DateAndTime\"\>",
          ",", "\<\"guide/DateAndTimeVisualization\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/EarthSciencesDataAndComputation\"\>", 
         ",", "\<\"guide/GeographicData\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Finance\"\>", 
         ",", "\<\"guide/DateAndTime\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/DateAndTime\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/LifeSciencesAndMedicineDataAndComputation\"\>", 
         ",", "\<\"guide/Statistics\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PeopleAndHistory\"\>", 
         ",", "\<\"guide/DateAndTime\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ProbabilityAndStatistics\"\>", 
         ",", "\<\"guide/RandomVariables\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/DescriptiveStatistics\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/RandomVariables\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/Statistics\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"guide/GraphicsDirectives\"\>", ",", "\<\"guide/Colors\"\>",
          ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Statistics\"\>", 
         ",", "\<\"guide/DescriptiveStatistics\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/TimeSeries\"\>", 
         ",", "\<\"guide/DateAndTime\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/TimeSeries\"\>", 
         ",", "\<\"guide/DateAndTimeVisualization\"\>", 
         ",", "\<\"guide/FinancialVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/TimeSeries\"\>", 
         ",", "\<\"guide/RandomVariables\"\>", 
         ",", "\<\"guide/StatisticalVisualization\"\>", 
         ",", "\<\"guide/DataVisualization\"\>", 
         ",", "\<\"guide/ColorProcessing\"\>", ",", "\<\"guide/Colors\"\>", 
         ",", "\<\"ref/Red\"\>"}], "}"}]}], "}"}]},
    {
     TemplateBox[{"\"memberships\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Memberships\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Memberships\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      TemplateBox[{"\"Wolfram Language autoevaluating symbols\"", 
        RowBox[{"EntityClass", "[", 
          RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Autoevaluating\""}], 
          "]"}], "\"EntityClass[\\\"WolframLanguageSymbol\\\", \
\\\"Autoevaluating\\\"]\"", "\"Wolfram Language symbols\""},
       "EntityClass"], "}"}]},
    {
     TemplateBox[{"\"name\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Name\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Name\\\"]\""},
      "EntityProperty"], "\<\"Red\"\>"},
    {
     TemplateBox[{"\"option names\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"OptionNames\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"OptionNames\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"options\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Options\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Options\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"plaintext usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlaintextUsage\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PlaintextUsage\\\"]\""},
      "EntityProperty"], "\<\"Red represents the color red in graphics or \
style specifications.\"\>"},
    {
     TemplateBox[{"\"ranks of usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ranks\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Ranks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"All\"\>", "\[Rule]", "91"}], ",", 
       RowBox[{"\<\"StackExchange\"\>", "\[Rule]", "41"}], ",", 
       RowBox[{"\<\"TypicalProductionCode\"\>", "\[Rule]", "87"}], ",", 
       RowBox[{"\<\"WolframAlphaCodebase\"\>", "\[Rule]", "398"}], ",", 
       RowBox[{"\<\"WolframDemonstrations\"\>", "\[Rule]", "48"}], ",", 
       RowBox[{"\<\"WolframDocumentation\"\>", "\[Rule]", "54"}]}], "}"}]},
    {
     TemplateBox[{"\"related entities\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedEntities\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedEntities\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      TemplateBox[{"\"red\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Color\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"WolframLanguage\"", ",", "\"Red\""}], "}"}]}], "]"}],
         "\"Entity[\\\"Color\\\", {\\\"WolframLanguage\\\", \\\"Red\\\"}]\"", 
        "\"color\""},
       "Entity"], "}"}]},
    {
     TemplateBox[{"\"related guide pages\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedGuidePages\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedGuidePages\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Colors\"", "paclet:guide/Colors"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Symbolic Graphics Language\"", 
         "paclet:guide/SymbolicGraphicsLanguage"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Graphics Options & Styling\"", 
         "paclet:guide/GraphicsOptionsAndStyling"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Graphics Annotation & Appearance\"", 
         "paclet:guide/GraphicsAnnotationAndAppearance"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Graphics Directives\"", "paclet:guide/GraphicsDirectives"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Maps & Cartography\"", "paclet:guide/MapsAndCartography"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{"\"Color Processing\"", "paclet:guide/ColorProcessing"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Notebook Formatting & Styling\"", 
         "paclet:guide/NotebookFormattingAndStyling"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Chart Styling & Layout\"", "paclet:guide/ChartLayoutAndStyling"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Graph Visualization\"", "paclet:guide/GraphVisualization"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{"\"Text Styling\"", "paclet:guide/TextStyling"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"GeoGraphics Language\"", "paclet:guide/GeoGraphicsLanguage"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Graph Styling, Labeling, and Layout\"", 
         "paclet:guide/GraphStylingAndLabeling"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Maps & Cartography\"", "paclet:guide/MapsAndGeographicData"},
        "HyperlinkPaclet"]}], "}"}]},
    {
     TemplateBox[{"\"related symbols\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedSymbols\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedSymbols\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"LightRed\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightRed\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightRed\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ColorData\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorData\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorData\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Lighter\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Lighter\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Lighter\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Darker\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Darker\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Darker\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Hue\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hue\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hue\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"RGBColor\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RGBColor\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RGBColor\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Style\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Style\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Style\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"relationship community graph\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"RelationshipCommunityGraph\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipCommunityGraph\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[{{
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{0.045490927856712854`, 0.8006094271520799}, {
           0.5831918193028635, -0.0773605617731423}, {
           0.7379129428491481, -0.0773605617731423}, {0.898349797019222, 
           0.7050989966435345}, {0.898349797019222, 0.8598201201898191}, {
           0.5641123806114952, 1.49918108829121}, {0.0773605617731423, 
           2.068263172794664}, {-0.0773605617731423, 
           2.068263172794664}, {-0.0773605617731423, 1.9135420492483792`}}, 
           SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{1.840401004379796, 1.7081940645895446`}, {
           1.7897107850048628`, 1.2382830691336741`}, {1.7897107850048628`, 
           1.0835619455873895`}, {2.1905180897250505`, 0.7173991505656259}, {
           2.345239213271335, 0.7173991505656259}, {2.4787158787250863`, 
           1.2291988612519809`}, {2.4787158787250863`, 1.3839199847982655`}, {
           1.9951221279260807`, 1.7081940645895446`}}, SplineClosed -> 
           True]]}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         StyleBox[{
           LineBox[{{0.12285148962985515`, 0.8779699889252223}, {
            0.48675181883835283`, 1.4218205265180677`}}], 
           LineBox[{{0.12285148962985515`, 0.8779699889252223}, {
            0.8209892352460797, 0.7824595584166768}}], 
           LineBox[{{0.6605523810760058, 0.}, {0.8209892352460797, 
            0.7824595584166768}}], 
           LineBox[{{1.9177615661529384`, 1.6308335028164023`}, {
            2.401355316951944, 1.3065594230251232`}}], 
           BezierCurveBox[{{1.9177615661529384`, 1.6308335028164023`}, {
            1.7072566650665455`, 1.209498864744005}, {1.374696697747754, 
            1.1381925368683836`}, {1.0421367304289624`, 1.066886208992762}, {
            0.48675181883835283`, 1.4218205265180677`}},
            SplineDegree->2], 
           LineBox[{{1.9177615661529384`, 1.6308335028164023`}, {
            1.8670713467780051`, 1.1609225073605318`}}], 
           BezierCurveBox[{{1.9177615661529384`, 1.6308335028164023`}, {
            1.7072566650665455`, 1.209498864744005}, {1.374696697747754, 
            1.1381925368683836`}, {1.0421367304289624`, 1.066886208992762}, {
            0.8209892352460797, 0.7824595584166768}},
            SplineDegree->2], 
           LineBox[{{1.9177615661529384`, 1.6308335028164023`}, {
            2.267878651498193, 0.7947597123387682}}], 
           LineBox[{{2.401355316951944, 1.3065594230251232`}, {
            1.8670713467780051`, 1.1609225073605318`}}], 
           BezierCurveBox[{{2.401355316951944, 1.3065594230251232`}, {
            1.7072566650665455`, 1.209498864744005}, {1.374696697747754, 
            1.1381925368683836`}, {1.0421367304289624`, 1.066886208992762}, {
            0.8209892352460797, 0.7824595584166768}},
            SplineDegree->2], 
           LineBox[{{2.401355316951944, 1.3065594230251232`}, {
            2.267878651498193, 0.7947597123387682}}], 
           BezierCurveBox[{{0.48675181883835283`, 1.4218205265180677`}, {
            1.0421367304289624`, 1.066886208992762}, {1.374696697747754, 
            1.1381925368683836`}, {1.7072566650665455`, 1.209498864744005}, {
            1.8670713467780051`, 1.1609225073605318`}},
            SplineDegree->2], 
           LineBox[{{0.48675181883835283`, 1.4218205265180677`}, {
            0.8209892352460797, 0.7824595584166768}}], 
           LineBox[{{0.48675181883835283`, 1.4218205265180677`}, {0., 
            1.9909026110215216`}}], 
           BezierCurveBox[{{1.8670713467780051`, 1.1609225073605318`}, {
            1.7072566650665455`, 1.209498864744005}, {1.374696697747754, 
            1.1381925368683836`}, {1.0421367304289624`, 1.066886208992762}, {
            0.8209892352460797, 0.7824595584166768}},
            SplineDegree->2], 
           LineBox[{{1.8670713467780051`, 1.1609225073605318`}, {
            2.267878651498193, 0.7947597123387682}}], 
           BezierCurveBox[{{0.8209892352460797, 0.7824595584166768}, {
            1.0421367304289624`, 1.066886208992762}, {1.374696697747754, 
            1.1381925368683836`}, {1.7072566650665455`, 1.209498864744005}, {
            2.267878651498193, 0.7947597123387682}},
            SplineDegree->2]},
          ImageSizeMultipliers->1]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         StyleBox[{{
            {Hue[0, 1, 0.8], 
             DiskBox[{0.12285148962985515, 0.8779699889252223}, 
              0.025786853924380765]}, 
            InsetBox["\<\"ColorData\"\>", 
             Offset[{2, 2}, {0.1486383435542359, 0.903756842849603}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{0.6605523810760058, 0.}, 0.025786853924380765]}, 
            InsetBox["\<\"ColorQ\"\>", 
             Offset[{2, 2}, {0.6863392350003865, 0.025786853924380765}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{1.9177615661529384, 1.6308335028164023}, 
              0.025786853924380765]}, 
            InsetBox["\<\"Darker\"\>", 
             Offset[{2, 2}, {1.9435484200773192, 1.6566203567407831}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{2.401355316951944, 1.3065594230251232}, 
              0.025786853924380765]}, 
            InsetBox["\<\"Hue\"\>", 
             Offset[{2, 2}, {2.4271421708763246, 1.332346276949504}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{0.48675181883835283, 1.4218205265180677}, 
              0.025786853924380765]}, 
            InsetBox["\<\"LightRed\"\>", 
             Offset[{2, 2}, {0.5125386727627336, 1.4476073804424485}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{1.8670713467780051, 1.1609225073605318}, 
              0.025786853924380765]}, 
            InsetBox["\<\"Lighter\"\>", 
             Offset[{2, 2}, {1.892858200702386, 1.1867093612849127}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{0.8209892352460797, 0.7824595584166768}, 
              0.025786853924380765]}, 
            InsetBox["\<\"RGBColor\"\>", 
             Offset[{2, 2}, {0.8467760891704604, 0.8082464123410575}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{0., 1.9909026110215216}, 0.025786853924380765]}, 
            InsetBox["\<\"Style\"\>", 
             Offset[{2, 2}, {0.025786853924380765, 2.016689464945902}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{2.267878651498193, 0.7947597123387682}, 
              0.025786853924380765]}, 
            InsetBox["\<\"XYZColor\"\>", 
             Offset[{2, 2}, {2.2936655054225734, 0.8205465662631489}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}},
          ImageSizeMultipliers->1]}}},
      BaseStyle->{ImageSizeMultipliers -> 1},
      FormatType->TraditionalForm,
      FrameTicks->None]},
    {
     TemplateBox[{"\"relationship graph\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelationshipGraph\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipGraph\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{
          "ColorData", "ColorQ", "Darker", "Hue", "LightRed", "Lighter", 
           "RGBColor", "Style", "XYZColor"}, {Null, 
           SparseArray[
           Automatic, {9, 9}, 0, {
            1, {{0, 2, 3, 8, 12, 17, 22, 29, 30, 34}, {{5}, {7}, {7}, {4}, {
              5}, {6}, {7}, {9}, {3}, {6}, {7}, {9}, {1}, {3}, {6}, {7}, {
              8}, {3}, {4}, {5}, {7}, {9}, {1}, {2}, {3}, {4}, {5}, {6}, {
              9}, {5}, {3}, {4}, {6}, {7}}}, Pattern}]}, {
          BaseStyle -> {ImageSizeMultipliers -> 1}, GraphLayout -> 
           "RadialEmbedding", 
           VertexCoordinates -> {{0.4610739066069163, 1.3913486209208352`}, {
            0.0852030141357305, 1.0759554936779883`}, {0., 
            0.5927451886333888}, {0.2453323014398578, 0.1678171778017522}, {
            0.7064062080467736, 0.}, {1.1674801146536904`, 
            0.16781717780175276`}, {1.4128124160935474`, 
            0.5927451886333888}, {1.3276094019578166`, 1.0759554936779887`}, {
            0.9517385094866311, 1.3913486209208352`}}, 
           VertexLabels -> {"Name"}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
            StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmVmYGAQBGImKLaZVaVo03TX/jtH89FvTt/se4U0DB/OembPAAXo
8n1g+W/2AmGMh458f2RfcMY6/u75rfaLjk2RljX/iCEPMwfGPye6upEn/by9
zCm9Vo7qoxjy6Pajy99Y/2nB/7Wf7A1w6Cdk/7/rkwKXlLyD+wfdPejmo8uj
m48uj24+un/QzUeXRzcfXf5YqEn0Y9uv9kug4Y1uHrp+dHl096GrR5cHADeH
7JU=
              "]],
             ImageSizeMultipliers->1]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            
            StyleBox[{{
               DiskBox[{0.4610739066069163, 1.3913486209208352}, 
                0.0176619582818211], InsetBox[
                StyleBox["\<\"ColorData\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.44871053580964154, 1.4127626072945285},
                 ImageScaled[{0.8749999999999993, -0.14951905283832934}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.0852030141357305, 1.0759554936779883}, 
                0.0176619582818211], InsetBox[
                StyleBox["\<\"ColorQ\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.061967477523252316, 1.084412537382133},
                 ImageScaled[{1.2047694655894312, 0.24348489250574856}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 0.5927451886333888}, 0.0176619582818211], InsetBox[
                StyleBox["\<\"Darker\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {-0.024351086829041836, 0.5970389422509234},
                 ImageScaled[{1.2386058147591559, 0.3697638667498022}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.2453323014398578, 0.1678171778017522}, 
                0.0176619582818211], InsetBox[
                StyleBox["\<\"Hue\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.23296893064258303, 0.14640319142805897},
                 ImageScaled[{0.8749999999999998, 1.149519052838329}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.7064062080467736, 0.}, 0.0176619582818211], InsetBox[
                StyleBox["\<\"LightRed\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.702112454429239, -0.02435108682904183},
                 ImageScaled[{0.6302361332501978, 1.2386058147591559}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.1674801146536904, 0.16781717780175276}, 
                0.0176619582818211], InsetBox[
                StyleBox["\<\"Lighter\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.1833741577785877, 0.1488753948068092},
                 ImageScaled[{0.017909292735095117, 1.0745333323392332}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.4128124160935474, 0.5927451886333888}, 
                0.0176619582818211], InsetBox[
                StyleBox["\<\"RGBColor\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.437539157688097, 0.5927451886333888},
                 ImageScaled[{-0.25, 0.5000000000000002}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.3276094019578166, 1.0759554936779887}, 
                0.0176619582818211], InsetBox[
                StyleBox["\<\"Style\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.3399727727550914, 1.097369480051682},
                 ImageScaled[{0.12500000000000022, -0.14951905283832911}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.9517385094866311, 1.3913486209208352}, 
                0.0176619582818211], InsetBox[
                StyleBox["\<\"XYZColor\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.9560322631041657, 1.4156997077498772},
                 ImageScaled[{0.3697638667498021, -0.238605814759156}],
                BaseStyle->"Graphics"]}},
             ImageSizeMultipliers->1]}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      BaseStyle->{ImageSizeMultipliers -> 1},
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None]},
    {
     TemplateBox[{"\"symbols linking to\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SymbolsLinkingTo\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsLinkingTo\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"ColorQ\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorQ\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorQ\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Hue\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hue\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hue\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"LightRed\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightRed\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightRed\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"RGBColor\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RGBColor\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RGBColor\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"XYZColor\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"XYZColor\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"XYZColor\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"symbols using as attribute\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsAttribute\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsAttribute\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"symbols using as option\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsOption\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsOption\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"text strings\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TextStrings\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"TextStrings\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"\<\"Red represents the color red in graphics or style \
specifications.\"\>", ",", "\<\"Red is equivalent to RGBColor[1,0,0].\"\>", 
       ",", "\<\"Red is a symbol that represents the color red in graphics or \
style specifications. Color specifications in the Wolfram Language can appear \
explicitly inside a Graphics or Graphics3D expression (e.g. \
Graphics[{Red,Disk[]}]), in which case they affect all subsequent expressions \
until another specification overrides them. They can also be used as part of \
an option specification, either singly (e.g. \
Plot[Sin[x],{x,0,2Pi},PlotStyle->Red]) or as part of a Directive compound \
expression (e.g. Plot[Cos[x],{x,0,2Pi},PlotStyle->Directive[Thick,Red]]). \
Finally, they can appear inside Style wrappers that affect the appearance of \
text, equations, and notebook cells (e.g. Style[\\\"hello\\\",Red]).\"\>", 
       ",", "\<\"Red is a color located at one of the corners of the RGB \
color cube and evaluates to RGBColor[1,0,0].\"\>", 
       ",", "\<\"Named symbols for other colors include Green, Blue, Black, \
White, Gray, Cyan, Magenta, Yellow, Brown, Orange, Pink, and Purple, as well \
as their LightRed etc. variants. Arbitrary colors can be input using Hue, \
RGBColor, CMYKColor, LABColor, LUVColor, or XYZColor. Colors can be modified \
using Lighter, Darker, and Blend. Colors may be converted between different \
systems using ColorConvert. The appearance of colors appearing in Graphics3D \
objects may be controlled using Glow, Specularity, and Lighting. The \
transparency of colored graphics objectives can be specified using Opacity. \
ColorData can be used to give a function that generates colors in a named \
color scheme.\"\>"}], "}"}]},
    {
     TemplateBox[{"\"timeline\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Timeline\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Timeline\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[{
       {AbsolutePointSize[0], Opacity[0], 
        PointBox[
         NCache[{{2.7769824*^9, 1}, {3.80269118*^9, Rational[111, 20]}}, {{
           2.7769824*^9, 1}, {3.80269118*^9, 5.55}}]], 
        PointBox[
         NCache[{{2.7769824*^9, Rational[-1, 2]}, {3.80269118*^9, 0}}, {{
           2.7769824*^9, -0.5}, {3.80269118*^9, 0}}]]}, {}, {
        {PointSize[0], Opacity[0], 
         PointBox[
          NCache[{{3.209490869754*^9, 1}, {
            3.405811530246*^9, Rational[101, 20]}}, {{3.209490869754*^9, 1}, {
            3.405811530246*^9, 5.05}}]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
         AbsoluteThickness[1.6], Opacity[1], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                EdgeForm[
                 Directive[
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  Thickness[Large], 
                  Opacity[0.2]]], 
                FaceForm[{
                  RGBColor[
                  0.24561133333333335`, 0.3378526666666667, 
                   0.4731986666666667], 
                  Opacity[1]}], 
                CapForm["Round"], 
                AbsoluteThickness[2.5], 
                AbsolutePointSize[10], 
                FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
                 Directive[
                  Opacity[0.2]], {
                  CapForm["Round"], 
                  
                  LineBox[{{3307651200, 1}, {3307651200, 
                   1}}]}}, {{}, {{{{}, {{{
                    AbsolutePointSize[10], 
                    GrayLevel[1], 
                    PointBox[{3307651200, 1}]}, 
                    PointBox[{3307651200, 1}]}}, {}, {}}, {}}, {{}}}}}, {{
                 CapForm["Butt"], 
                 LineBox[{{3307651200, 3}, 
                   Offset[{0, 0}, {3307651200, 1}]}], 
                 PolygonBox[
                  NCache[{
                    Offset[{0, 
                    Rational[-16, 3]}, {3307651200, 3}], 
                    Offset[{
                    Rational[16, 3], 1.5}, {3307651200, 3}], 
                    Offset[{
                    Rational[-16, 3], 1.5}, {3307651200, 3}]}, {
                    Offset[{0, -5.333333333333333}, {3307651200, 3}], 
                    Offset[{5.333333333333333, 1.5}, {3307651200, 3}], 
                    Offset[{-5.333333333333333, 1.5}, {3307651200, 3}]}]], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    FrameBox[
                    StyleBox[
                    TemplateBox[{
                    StyleBox["\"(introduced)\"", 
                    GrayLevel[0.5], StripOnInput -> False], "\" \"", 
                    "\"Red\""}, "RowDefault"], {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                    5, FrameMargins -> 5, Background -> GrayLevel[1], 
                    StripOnInput -> False], TraditionalForm]], 
                  Offset[{0, 0}, {3307651200, 3}], {Center, Bottom}, {
                  Automatic, Automatic}]}, {
                 EdgeForm[], 
                 FaceForm[], 
                 RectangleBox[{3.209490869754*^9, 3}, 
                  NCache[{3.405811530246*^9, 
                    Rational[91, 20]}, {3.405811530246*^9, 4.55}]]}}}},
             
             ImageSizeCache->{{253.2785169682811, 
              364.0008529682809}, {-44.501459459459454`, 26.}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{
                    StyleBox[
                    "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                    Plain], "\"10/25/2004\""}], 
                  RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2004", ",", "10", ",", "25"}], "}"}], ",", 
                    "\"Day\"", ",", "\"Gregorian\"", ",", 
                    RowBox[{"-", "3.`"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
                 Editable -> False]}}, 
              GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Grid"], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            Grid[{{
               
               DateObject[{2004, 10, 25}, "Day", "Gregorian", -3., {
                "Month", "/", "Day", "/", "Year"}]}}, Alignment -> 
             Right], {}], "Tooltip"]& ]}, {{{}, InsetBox[
           StyleBox["\<\"V5.1\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], Offset[{6, 0}, {3307651200, 1}], 
           ImageScaled[{0, 0.5}]]}, {}}}, {}, {}},
      AspectRatio->NCache[
        Rational[959, 6000], 0.15983333333333333`],
      Axes->{False, False},
      AxesOrigin->{0, 0},
      Frame->{{None, None}, {True, None}},
      FrameTicks->
       FrontEndValueCache[{{None, None}, {
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 7, {{0.01, 0}, {0.005, 0}}, Automatic]& , 
          Automatic}}, {{None, None}, {{{2.5245216*^9, 
            FormBox["\"1980\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {2.8401408*^9, 
            FormBox["\"1990\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.1556736*^9, 
            FormBox["\"2000\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.4712928*^9, 
            FormBox["\"2010\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.7868256*^9, 
            FormBox["\"2020\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {4.1024448*^9, 
            FormBox["\"2030\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {2.5245216*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.58768*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.650752*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.7139104*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.7769824*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.8401408*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.9032128*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.9663712*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.0294432*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.0926016*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.1556736*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.218832*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.281904*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.7237536*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.7868256*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.849984*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}}, Automatic}}],
      GridLines->{None, None},
      ImagePadding->All,
      ImageSize->{600, Automatic},
      PlotRange->{{2.7769824*^9, 3.80269118*^9}, {0, All}},
      PlotRangePadding->{{
         Scaled[0.06], 
         Scaled[0.06]}, {None, 
         Scaled[0.05]}},
      Ticks->{{{2.5245216*^9, 
          FormBox["\"1980\"", TraditionalForm], {0.006666666666666666, 0}}, {
         2.8401408*^9, 
          FormBox["\"1990\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.1556736*^9, 
          FormBox["\"2000\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.4712928*^9, 
          FormBox["\"2010\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.7868256*^9, 
          FormBox["\"2020\"", TraditionalForm], {0.006666666666666666, 0}}, {
         4.1024448*^9, 
          FormBox["\"2030\"", TraditionalForm], {0.006666666666666666, 0}}, {
         2.5245216*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.58768*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.650752*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.7139104*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.7769824*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.8401408*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.9032128*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.9663712*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}}, None}]},
    {
     TemplateBox[{"\"timeline events\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TimelineEvents\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TimelineEvents\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Mon 25 Oct 2004\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2004", ",", "10", ",", "25"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]}, "DateObject", Editable -> False],
        "\"Red\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]},
    {
     TemplateBox[{"\"translations\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Translations\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Translations\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7ea2\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7d05\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rouge\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rot\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\[Kappa]\:03cc\[Kappa]\[Kappa]\[Iota]\[Nu]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:8d64\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:be68\:ac15\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"raudonas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"czerwony\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"vermelho\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:043a\:0440\:0430\:0441\:043d\:044b\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rojo\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:0447\:0435\:0440\:0432\:043e\:043d\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0111\:1ecf\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"typeset usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TypesetUsage\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TypesetUsage\\\"]\""},
      "EntityProperty"], 
     InterpretationBox[Cell[BoxData[
       FormBox[
        TagBox[GridBox[{
           {"\<\"Red represents the color red in graphics or style \
specifications. \"\>"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {None, {
               GrayLevel[0.84]}, None}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
         "Grid"], TextForm]], "InlineText",ExpressionUUID->
       "1ed736ec-09b6-411f-bfb6-5f537d24c253"],
      Text[
       Grid[{{
         "Red represents the color red in graphics or style specifications. \
"}}, Dividers -> {None, {None, {
            GrayLevel[0.84]}, None}}, Alignment -> Left, 
        Spacings -> {Automatic, 0.8}]]]},
    {
     TemplateBox[{"\"URL\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"URL\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"URL\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
      "\"http://reference.wolfram.com/language/ref/Red.html\"", 
       "http://reference.wolfram.com/language/ref/Red.html"},
      "HyperlinkURL"]},
    {
     TemplateBox[{"\"version introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionIntroduced\\\"]\""},
      "EntityProperty"], "5.1`"},
    {
     TemplateBox[{"\"Wolfram documentation link\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"WolframDocumentationLink\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"WolframDocumentationLink\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{"\"Red\"", "paclet:ref/Red"},
      "HyperlinkPaclet"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.802709885787878*^9, 3.80270992507796*^9}, {
   3.802710115174795*^9, 3.8027101368766727`*^9}, 3.802710186379674*^9, 
   3.8031326610368843`*^9, 3.803211291439361*^9, 3.8032233848682947`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"543a1832-ed08-4347-8e0c-81f9f3fb5f7b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colorSymbols", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"functionalityAreasOfAllWLSymbols", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Length", "@", 
          RowBox[{"Last", "@", "#"}]}], ")"}], "\[Equal]", "1"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"First", "@", 
           RowBox[{"Last", "@", "#"}]}], ")"}], "\[Equal]", 
         "\"\<ColorSymbols\>\""}], ")"}]}], "&"}]}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.80271112162074*^9, 3.802711136131517*^9}, {
   3.802711231656913*^9, 3.802711242057502*^9}, {3.8027130376271257`*^9, 
   3.802713037852515*^9}, {3.8027150892735443`*^9, 3.8027150916705236`*^9}, {
   3.802715340264037*^9, 3.802715346832819*^9}, {3.802715507412877*^9, 
   3.802715526034992*^9}, {3.8027165468318377`*^9, 3.8027165634618473`*^9}, {
   3.802717043214347*^9, 3.802717131735941*^9}, 3.802720307548336*^9, 
   3.802720771861019*^9, 3.8028899434680767`*^9},
 CellLabel->
  "In[282]:=",ExpressionUUID->"0c21b466-31b3-4dc0-aea2-e317a09cfe70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Black\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Blend\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blend\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blend\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Blue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brown\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CMYKColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CMYKColor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CMYKColor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ChromaticityPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ChromaticityPlot\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ChromaticityPlot\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ChromaticityPlot3D\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ChromaticityPlot3D\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ChromaticityPlot3D\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorBalance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorBalance\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorBalance\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorCombine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorCombine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorCombine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorConvert\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorConvert\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorConvert\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorCoverage\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorCoverage\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorCoverage\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorData\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorData\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorDataFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorDataFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ColorDataFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorDetect\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorDetect\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorDetect\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorDistance\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorDistance\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorFunction\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorFunction\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorFunctionScaling\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorFunctionScaling\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ColorFunctionScaling\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorNegate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorNegate\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorNegate\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorProfileData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorProfileData\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorProfileData\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorQuantize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorQuantize\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorQuantize\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorReplace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorReplace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorReplace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorRules\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorRules\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorRules\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorSeparate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorSeparate\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorSeparate\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorSetter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorSetter\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorSetter\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorSpace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorSpace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorToneMapping\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorToneMapping\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorToneMapping\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Colorize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Colorize\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Colorize\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ColorsNear\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ColorsNear\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ColorsNear\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Darker\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Darker\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Darker\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dithering\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Dithering\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Dithering\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FindMatchingColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FindMatchingColor\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FindMatchingColor\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Glow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Glow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Glow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gray\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GrayLevel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GrayLevel\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GrayLevel\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Green\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ImageColorSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ImageColorSpace\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ImageColorSpace\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LABColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LABColor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LABColor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LCHColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LCHColor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LCHColor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LUVColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LUVColor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LUVColor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightBlue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightBlue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightBrown\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBrown\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightBrown\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightCyan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightCyan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightGray\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGray\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGray\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightGreen\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightMagenta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightMagenta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightMagenta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightOrange\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightOrange\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightOrange\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightPink\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightPink\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightPurple\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPurple\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightPurple\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightRed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightRed\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightRed\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightYellow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightYellow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lighter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Lighter\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Lighter\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Magenta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MaxColorDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MaxColorDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MaxColorDistance\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MinColorDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MinColorDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MinColorDistance\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orange\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Orange\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pink\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Purple\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Purple\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RGBColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RGBColor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RGBColor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RandomColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RandomColor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RandomColor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Red\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StreamColorFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StreamColorFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StreamColorFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StreamColorFunctionScaling\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"StreamColorFunctionScaling\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StreamColorFunctionScaling\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorColorFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorColorFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorColorFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorColorFunctionScaling\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VectorColorFunctionScaling\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorColorFunctionScaling\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"White\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WhitePoint\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WhitePoint\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WhitePoint\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"XYZColor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"XYZColor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"XYZColor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Yellow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Yellow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8027207726402597`*^9, {3.802728062284947*^9, 3.802728075820219*^9}, 
   3.8027281150306053`*^9, 3.8028799272724543`*^9, 3.802889191181799*^9, 
   3.802889945662298*^9, 3.803132661700398*^9, 3.8032112915457277`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"ab88ef34-c9f8-4131-9d4f-601fbdcf7d48"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"namedColors", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"colorSymbols", ",", 
    RowBox[{
     RowBox[{"ColorQ", "@", 
      RowBox[{"RGBColor", "@", 
       RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.80271619919973*^9, 3.8027162709896297`*^9}, 
   3.802716519458749*^9, {3.802716583953258*^9, 3.8027166103124723`*^9}, {
   3.802717171019058*^9, 3.8027171747822227`*^9}, {3.802719372685698*^9, 
   3.802719373576745*^9}, {3.802719415862131*^9, 3.8027194475579967`*^9}, {
   3.802719980320353*^9, 3.8027200852124434`*^9}, {3.802720333908393*^9, 
   3.80272038899203*^9}, {3.802720495686248*^9, 3.802720506700344*^9}, 
   3.802720736482286*^9, {3.802721339212894*^9, 3.802721358801086*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"aecf5cb3-d289-4f59-aac8-fb445f30c3f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Black\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Blue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brown\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gray\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Green\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightBlue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightBlue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightCyan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightCyan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightGreen\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightPink\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightPink\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightYellow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightYellow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Magenta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orange\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Orange\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pink\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Purple\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Purple\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Red\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"White\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Yellow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Yellow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8027200525624733`*^9, 3.802720092227035*^9, 3.802720389876145*^9, 
   3.802720510480455*^9, {3.802721359473866*^9, 3.802721375758259*^9}, 
   3.802728171630623*^9, 3.802889197210115*^9, 3.803132663603455*^9, 
   3.8032112941266403`*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"c9fadc2c-398a-4a9f-9c37-d490e22e0848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", " ", 
       RowBox[{"RGBColor", "@", 
        RowBox[{"#", "@", "\"\<Name\>\""}]}], ",", " ", 
       RowBox[{"#", "@", "\"\<Name\>\""}], ",", " ", 
       RowBox[{"#", "@", "\"\<Translations\>\""}]}], "}"}], "&"}], "/@", 
    "namedColors"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802715098294764*^9, 3.8027151219956303`*^9}, {
  3.8027151922522173`*^9, 3.802715227270261*^9}, {3.802715276838272*^9, 
  3.802715309461194*^9}, {3.8027153510879993`*^9, 3.802715351837726*^9}, {
  3.802715449850967*^9, 3.802715451592534*^9}, {3.802715971799708*^9, 
  3.8027160654981537`*^9}, {3.8027172796738653`*^9, 3.802717297315097*^9}, {
  3.8027205541603518`*^9, 3.802720621375389*^9}, {3.802720653560914*^9, 
  3.802720744979095*^9}, {3.802728595187891*^9, 3.80272860950133*^9}, {
  3.802728670346856*^9, 3.802728676929955*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"440dc8fe-cde9-47df-b918-f5fb061bbc83"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"Black\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0., 0., 0.],
      Editable->False,
      Selectable->False], "\<\"Black\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:9ed1\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:9ed1\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"noir\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"schwarz\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Mu]\[Alpha]\:03cd\[Rho]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:9ed2\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:ac80\:c815\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"juodas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"czarny\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"preto\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0447\:0451\:0440\:043d\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"negro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0447\:043e\:0440\:043d\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0111en\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Blue\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0., 0., 1.],
      Editable->False,
      Selectable->False], "\<\"Blue\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:84dd\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:85cd\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"bleu\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"blau\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[Mu]\[Pi]\[Lambda]\[CurlyEpsilon]\"\>"}],
        ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:9752\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:d30c\:b791\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"m\:0117lynas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"niebieski\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"azul\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0441\:0438\:043d\:0438\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"azul\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0441\:0438\:043d\:0456\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"xanh da tr\:1eddi\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Brown\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.6470588235294118, 0.1647058823529412, 0.1647058823529412], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.43137254901960786`, 0.10980392156862748`, 0.10980392156862748`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.6470588235294118`", ",", "0.1647058823529412`", ",", 
             "0.1647058823529412`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.6470588235294118, 0.1647058823529412, 0.1647058823529412]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6470588235294118, 0.1647058823529412, 0.1647058823529412],
      Editable->False,
      Selectable->False], "\<\"Brown\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:68d5\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:68d5\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"marron\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"braun\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[Kappa]\[Alpha]\[CurlyPhi]\:03ad\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:8336\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:ac08\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rudas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"br\:0105zowy\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"marrom\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:043a\:043e\:0440\:0438\:0447\:043d\:0435\:0432\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"marr\[OAcute]n\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:043a\:043e\:0440\:0438\:0447\:043d\:0435\:0432\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"n\[AHat]u\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Cyan\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666667, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0., 1., 1.],
      Editable->False,
      Selectable->False], "\<\"Cyan\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:84dd\:7eff\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:85cd\:7da0\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"cyan\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"blaugr\[UDoubleDot]n\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Kappa]\[Upsilon]\[Alpha]\[Nu]\:03cc\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:30b7\:30a2\:30f3\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:ccad\:b85d\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[ZHacek]alsvai m\:0117lynas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"cyjan\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"azul turquesa\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0433\:043e\:043b\:0443\:0431\:043e\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"cian\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:0431\:043b\:0430\:043a\:0438\:0442\:043d\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"l\:1ee5c lam\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Gray\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.334640522875817, 0.334640522875817, 0.334640522875817],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.5019607843137255`", ",", "0.5019607843137255`", ",", 
             "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.5019607843137255, 0.5019607843137255, 0.5019607843137255]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5019607843137255, 0.5019607843137255, 0.5019607843137255],
      Editable->False,
      Selectable->False], "\<\"Gray\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7070\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7070\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"gris\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"grau\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[Gamma]\[Kappa]\[Rho]\[Iota]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:7070\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:d68c\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"pilkas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"szary\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"cinza\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0441\:0435\:0440\:044b\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"gris\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0441\:0456\:0440\:0438\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"x\[AAcute]m\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Green\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0., 0.5019607843137255, 0.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.334640522875817, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.`", ",", "0.5019607843137255`", ",", "0.`"}], "]"}], 
         NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0., 0.5019607843137255, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0., 0.5019607843137255, 0.],
      Editable->False,
      Selectable->False], "\<\"Green\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7eff\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7da0\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"vert\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"gr\[UDoubleDot]n\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\[Pi]\[Rho]\:03ac\[Sigma]\[Iota]\[Nu]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:7dd1\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:b179\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[ZHacek]alias\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"zielony\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"verde\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0437\:0435\:043b\:0451\:043d\:044b\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"verde\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0437\:0435\:043b\:0435\:043d\:0438\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"xanh l\[AAcute]\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"LightBlue\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightBlue\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726],
            RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.4522875816993465, 0.5647058823529414, 0.601307189542484],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.6784313725490198`", ",", "0.847058823529412`", ",", 
             "0.901960784313726`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726],
      Editable->False,
      Selectable->False], "\<\"LightBlue\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6d45\:84dd\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6de1\:85cd\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"bleu clair\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"hellblau\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Gamma]\[Alpha]\[Lambda]\:03ac\[Zeta]\[Iota]\
\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:6c34\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:d558\:b298\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[SHacek]viesiai m\:0117lyna\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"jasnoniebieski\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"azul claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0435\:0442\:043b\:043e-\:0441\:0438\
\:043d\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"azul claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0456\:0442\:043b\:043e-\:0441\:0438\
\:043d\:0456\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"xanh da tr\:1eddi nh\:1ea1t\"\>"}]}], 
      "}"}]},
    {
     TemplateBox[{"\"LightCyan\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightCyan\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.87843137254902, 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5856209150326801, 0.6666666666666667, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.87843137254902`", ",", "1.`", ",", "1.`"}], "]"}], 
         NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.87843137254902, 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.87843137254902, 1., 1.],
      Editable->False,
      Selectable->False], "\<\"LightCyan\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6de1\:9752\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6de1\:9752\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"cyan clair\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"helles Blaugr\[UDoubleDot]n\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Alpha]\[Nu]\[Omicron]\[Iota]\[Chi]\[Tau]\:03cc \
\[Kappa]\[Upsilon]\[Alpha]\[Nu]\:03cc\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:8584\:3044\:30b7\:30a2\:30f3\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:bc1d\:c740 \:ccad\:b85d\:c0c9\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[SHacek]viesiai \[ZHacek]alsvai m\:0117lyna\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"jasny cyjan\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"azul turquesa claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0435\:0442\:043b\:043e-\:0433\:043e\
\:043b\:0443\:0431\:043e\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"cian claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0456\:0442\:043b\:043e-\:0431\:043b\
\:0430\:043a\:0438\:0442\:043d\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"l\:1ee5c lam nh\:1ea1t\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"LightGreen\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.5647058823529411, 0.933333333333333, 0.5647058823529411], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.37647058823529406`, 0.622222222222222, 0.37647058823529406`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.5647058823529411`", ",", "0.933333333333333`", ",", 
             "0.5647058823529411`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.5647058823529411, 0.933333333333333, 0.5647058823529411]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5647058823529411, 0.933333333333333, 0.5647058823529411],
      Editable->False,
      Selectable->False], "\<\"LightGreen\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6d45\:7eff\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6de1\:7da0\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"vert clair\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"hellgr\[UDoubleDot]n\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Alpha]\[Nu]\[Omicron]\[Iota]\[Chi]\[Tau]\:03cc \
\[Pi]\[Rho]\:03ac\[Sigma]\[Iota]\[Nu]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:8584\:7dd1\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:c5f0\:b450\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[SHacek]viesiai \[ZHacek]alia\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"jasnozielony\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"verde claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0435\:0442\:043b\:043e-\:0437\:0435\
\:043b\:0451\:043d\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"verde claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0456\:0442\:043b\:043e-\:0437\:0435\
\:043b\:0435\:043d\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"xanh l\[AAcute] c\[AHat]y nh\:1ea1t\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"LightPink\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightPink\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0.7137254901960784, 0.7568627450980392], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666667, 0.4758169934640523, 0.5045751633986928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"1.`", ",", "0.7137254901960784`", ",", 
             "0.7568627450980392`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.7137254901960784, 0.7568627450980392]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0.7137254901960784, 0.7568627450980392],
      Editable->False,
      Selectable->False], "\<\"LightPink\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6d45\:7c89\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6de1\:7c89\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rose clair\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"hellrosa\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Alpha]\[Nu]\[Omicron]\[Iota]\[Chi]\[Tau]\:03cc \
\[Rho]\[Omicron]\[Zeta]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:8584\:3044\:30d4\:30f3\:30af\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:c5f0\:bd84\:d64d\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[SHacek]viesiai rausvos\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"jasnor\[OAcute]\:017cowy\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rosa claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0435\:0442\:043b\:043e-\:0440\:043e\
\:0437\:043e\:0432\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rosa claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0456\:0442\:043b\:043e-\:0440\:043e\
\:0436\:0435\:0432\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"h\:1ed3ng nh\:1ea1t\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"LightYellow\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], "]"}],
        "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightYellow\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 1., 0.87843137254902], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666667, 0.6666666666666667, 0.5856209150326801],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1.`", ",", "1.`", ",", "0.87843137254902`"}], "]"}], 
         NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 1., 0.87843137254902]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 1., 0.87843137254902],
      Editable->False,
      Selectable->False], "\<\"LightYellow\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6d45\:9ec4\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6de1\:9ec3\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"jaune clair\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"hellgelb\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Alpha]\[Nu]\[Omicron]\[Iota]\[Chi]\[Tau]\:03cc \
\[Kappa]\:03af\[Tau]\[Rho]\[Iota]\[Nu]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:8584\:3044\:9ec4\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:b2f4\:d669\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[SHacek]viesiai geltonos\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"jasno\:017c\[OAcute]\[LSlash]ty\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"amarelo claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0435\:0442\:043b\:043e-\:0436\:0451\
\:043b\:0442\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"amarillo claro\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0441\:0432\:0456\:0442\:043b\:043e-\:0436\:043e\
\:0432\:0442\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"v\[AGrave]ng nh\:1ea1t\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Magenta\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0., 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0., 1.],
      Editable->False,
      Selectable->False], "\<\"Magenta\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:54c1\:7ea2\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:54c1\:7d05\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"magenta\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"magenta\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Mu]\[Alpha]\[Tau]\[Zeta]\:03ad\[Nu]\[Tau]\[Alpha]\"\
\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:30de\:30b8\:30a7\:30f3\:30bf\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:b9c8\:c820\:d0c0 \:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"tamsiai raudonas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"magenta\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"magenta\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:043c\:0430\:043b\:0438\:043d\:043e\:0432\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"magenta\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:043c\:0430\:043b\:0438\:043d\:043e\:0432\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0111\:1ecf t\:01b0\:01a1i\"\>"}]}], 
      "}"}]},
    {
     TemplateBox[{"\"Orange\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Orange\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0.6470588235294118, 0.], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0.43137254901960786`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1.`", ",", "0.6470588235294118`", ",", "0.`"}], "]"}], 
         NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.6470588235294118, 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0.6470588235294118, 0.],
      Editable->False,
      Selectable->False], "\<\"Orange\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6a59\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6a59\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"orange\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"orange\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\[Pi]\[Omicron]\[Rho]\[Tau]\[Omicron]\[Kappa]\[Alpha]\
\[Lambda]\:03af\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:30aa\:30ec\:30f3\:30b8\:8272\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:c624\:b80c\:c9c0\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"oran\[ZHacek]inis\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"pomara\:0144czowy\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"laranja\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:043e\:0440\:0430\:043d\:0436\:0435\:0432\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"naranja\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:043f\:043e\:043c\:0430\:0440\:0430\:043d\:0447\:0435\:0432\:0438\:0439\
\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"cam\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Pink\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0.7529411764705882, 0.796078431372549], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666667, 0.5019607843137255, 0.530718954248366],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"1.`", ",", "0.7529411764705882`", ",", 
             "0.796078431372549`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1., 0.7529411764705882, 0.796078431372549]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0.7529411764705882, 0.796078431372549],
      Editable->False,
      Selectable->False], "\<\"Pink\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7c89\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7c89\:7d05\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rose\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rosa\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[Rho]\[Omicron]\[Zeta]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:30d4\:30f3\:30af\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:bd84\:d64d\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"ro\[ZHacek]inis\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"r\[OAcute]\:017cowy\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rosa\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0440\:043e\:0437\:043e\:0432\:044b\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rosa\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0440\:043e\:0436\:0435\:0432\:0438\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"h\:1ed3ng\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Purple\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Purple\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5019607843137255, 0., 0.5019607843137255], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.334640522875817, 0., 0.334640522875817],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           
           RowBox[{"0.5019607843137255`", ",", "0.`", ",", 
             "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.5019607843137255, 0., 0.5019607843137255]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5019607843137255, 0., 0.5019607843137255],
      Editable->False,
      Selectable->False], "\<\"Purple\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7d2b\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7d2b\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"violet\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"lila\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\[Mu]\[Omega]\[Beta]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:7d2b\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:bcf4\:b77c\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"purpurinis\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"purpurowy\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"roxo\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:0444\:0438\:043e\:043b\:0435\:0442\:043e\:0432\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"p\[UAcute]rpura\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:0444\:0456\:043e\:043b\:0435\:0442\:043e\:0432\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"t\[IAcute]m\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Red\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0., 0.],
      Editable->False,
      Selectable->False], "\<\"Red\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7ea2\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:7d05\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rouge\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rot\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\[Kappa]\:03cc\[Kappa]\[Kappa]\[Iota]\[Nu]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:8d64\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:be68\:ac15\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"raudonas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"czerwony\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"vermelho\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:043a\:0440\:0430\:0441\:043d\:044b\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"rojo\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\:0447\:0435\:0440\:0432\:043e\:043d\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0111\:1ecf\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"White\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 1., 1.],
      Editable->False,
      Selectable->False], "\<\"White\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:767d\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:767d\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"blanc\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"wei\[SZ]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\[Lambda]\[CurlyEpsilon]\[Upsilon]\[Kappa]\:03cc\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:767d\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:d770\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"baltas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"bia\[LSlash]y\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"branco\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0431\:0435\:043b\:044b\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"blanco\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0431\:0456\:043b\:0438\:0439\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"tr\:1eafng\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"Yellow\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Yellow\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 1., 0.],
      Editable->False,
      Selectable->False], "\<\"Yellow\"\>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:9ec4\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:9ec4\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"jaune\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"gelb\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\[Kappa]\:03af\[Tau]\[Rho]\[Iota]\[Nu]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:9ec4\:8272\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:b178\:b780\:c0c9\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"geltonas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:017c\[OAcute]\[LSlash]ty\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"amarelo\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0436\:0451\:043b\:0442\:044b\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"amarillo\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0436\:043e\:0432\:0442\:0438\:0439\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"v\[AGrave]ng\"\>"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803132692015151*^9, 3.803211300734686*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"eb88e242-4482-4534-a810-7f35c775b210"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"namedColorsRGB", "=", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"RGBColor", "@", 
       RowBox[{"#", "@", "\"\<Name\>\""}]}], "\[Rule]", "#"}], "&"}], "/@", 
    "namedColors"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802723162624655*^9, 3.802723194593767*^9}, {
  3.802723685619363*^9, 3.802723691384853*^9}, {3.802724904955854*^9, 
  3.802724910404114*^9}, {3.802725517788216*^9, 3.8027255373120747`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"b30b8df1-cd64-4a8b-b330-ce98b9f6dd64"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0., 0., 0.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Black\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 1.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0., 0., 1.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Blue\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.6470588235294118, 0.1647058823529412, 0.1647058823529412], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.43137254901960786`, 0.10980392156862748`, 0.10980392156862748`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.6470588235294118`", ",", "0.1647058823529412`", ",", 
            "0.1647058823529412`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.6470588235294118, 0.1647058823529412, 0.1647058823529412]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6470588235294118, 0.1647058823529412, 0.1647058823529412],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Brown\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666667, 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 1.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0., 1., 1.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Cyan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
          0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.334640522875817, 0.334640522875817, 0.334640522875817],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5019607843137255`", ",", "0.5019607843137255`", ",", 
            "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[
           0.5019607843137255, 0.5019607843137255, 0.5019607843137255]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5019607843137255, 0.5019607843137255, 0.5019607843137255],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Gray\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0., 0.5019607843137255, 0.], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.334640522875817, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0.`", ",", "0.5019607843137255`", ",", "0.`"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0., 0.5019607843137255, 0.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0., 0.5019607843137255, 0.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Green\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.4522875816993465, 0.5647058823529414, 0.601307189542484],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.6784313725490198`", ",", "0.847058823529412`", ",", 
            "0.901960784313726`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"LightBlue\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightBlue\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.87843137254902, 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5856209150326801, 0.6666666666666667, 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0.87843137254902`", ",", "1.`", ",", "1.`"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.87843137254902, 1., 1.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.87843137254902, 1., 1.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"LightCyan\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightCyan\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.5647058823529411, 0.933333333333333, 0.5647058823529411],
           RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.37647058823529406`, 0.622222222222222, 0.37647058823529406`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5647058823529411`", ",", "0.933333333333333`", ",", 
            "0.5647058823529411`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.5647058823529411, 0.933333333333333, 0.5647058823529411]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5647058823529411, 0.933333333333333, 0.5647058823529411],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"LightGreen\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.7137254901960784, 0.7568627450980392], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.4758169934640523, 0.5045751633986928],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"1.`", ",", "0.7137254901960784`", ",", 
            "0.7568627450980392`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.7137254901960784, 0.7568627450980392]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.7137254901960784, 0.7568627450980392],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"LightPink\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightPink\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 1., 0.87843137254902], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.6666666666666667, 0.5856209150326801],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1.`", ",", "1.`", ",", "0.87843137254902`"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 1., 0.87843137254902]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 1., 0.87843137254902],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"LightYellow\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightYellow\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666667, 0., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 1.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0., 1.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Magenta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.6470588235294118, 0.], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666667, 0.43137254901960786`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1.`", ",", "0.6470588235294118`", ",", "0.`"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.6470588235294118, 0.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.6470588235294118, 0.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Orange\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Orange\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.7529411764705882, 0.796078431372549], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.5019607843137255, 0.530718954248366],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"1.`", ",", "0.7529411764705882`", ",", 
            "0.796078431372549`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.7529411764705882, 0.796078431372549]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.7529411764705882, 0.796078431372549],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Pink\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.5019607843137255, 0., 0.5019607843137255], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.334640522875817, 0., 0.334640522875817],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          
          RowBox[{"0.5019607843137255`", ",", "0.`", ",", 
            "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.5019607843137255, 0., 0.5019607843137255]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5019607843137255, 0., 0.5019607843137255],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Purple\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Purple\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0., 0.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Red\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 1.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 1., 1.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"White\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1., 0.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 1., 0.],
     Editable->False,
     Selectable->False], "\[Rule]", 
    TemplateBox[{"\"Yellow\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], "]"}], 
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Yellow\\\"]\"", 
      "\"Wolfram Language symbol\""},
     "Entity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.802723195023017*^9, 3.802723692832281*^9, 3.802724911160841*^9, {
   3.802725518277234*^9, 3.802725537702805*^9}, 3.802889244639473*^9, 
   3.803132692197794*^9, 3.8032113009206553`*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"006b7cfd-7327-4bbb-accd-564b5739b6af"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ColorDistanceByAverage function", "Subsubsection",
 CellChangeTimes->{{3.803224173484551*^9, 3.803224181387658*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"09bf1b0e-ed43-41c3-9e5c-0f03e59a91c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorDistanceByAverage", "[", 
   RowBox[{"color1_RGBColor", ",", "color2_RGBColor"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"Mean", "[", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"List", "@@", "color1"}], ",", 
        RowBox[{"List", "@@", "color2"}]}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.802727447372363*^9, 3.802727462619858*^9}, {
   3.80272930676685*^9, 3.802729328924859*^9}, {3.803223687194471*^9, 
   3.8032236888319197`*^9}, 3.803223723160591*^9, {3.803224018240612*^9, 
   3.8032240512502728`*^9}, {3.803224201581653*^9, 3.803224202900405*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"a4b75e64-4203-493c-99a9-5ee0aebc6bd7"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.8032242161325808`*^9, 3.803224224452201*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"bb32a078-364a-4232-9b0d-761c7e04f37a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ColorDistanceByAverage", "[", 
  RowBox[{"Red", ",", "Red"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColorDistanceByAverage", "[", 
  RowBox[{"Red", ",", "Green"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColorDistanceByAverage", "[", 
  RowBox[{"Red", ",", "Blue"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColorDistanceByAverage", "[", 
  RowBox[{"Red", ",", "Pink"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColorDistanceByAverage", "[", 
  RowBox[{"Red", ",", "Black"}], "]"}]}], "Input",
 CellLabel->
  "In[364]:=",ExpressionUUID->"bad75431-9793-414d-8a3a-8a96511b1497"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.802729319091578*^9, 3.802729329513891*^9}, 
   3.803132692206668*^9, 3.80321130093253*^9, 3.803224052326789*^9, 
   3.803224262623081*^9, 3.803644488311789*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"a918f0e9-eef0-44bc-865d-99579b438beb"],

Cell[BoxData["0.6666666666666666`"], "Output",
 CellChangeTimes->{{3.802729319091578*^9, 3.802729329513891*^9}, 
   3.803132692206668*^9, 3.80321130093253*^9, 3.803224052326789*^9, 
   3.803224262623081*^9, 3.8036444883165283`*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"47c1c126-3858-4137-aae3-e2142ad10875"],

Cell[BoxData["0.6666666666666666`"], "Output",
 CellChangeTimes->{{3.802729319091578*^9, 3.802729329513891*^9}, 
   3.803132692206668*^9, 3.80321130093253*^9, 3.803224052326789*^9, 
   3.803224262623081*^9, 3.803644488319895*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"bfef0dfa-eeb4-4c6d-9024-4cfb179cd3cb"],

Cell[BoxData["0.3333333333333333`"], "Output",
 CellChangeTimes->{{3.802729319091578*^9, 3.802729329513891*^9}, 
   3.803132692206668*^9, 3.80321130093253*^9, 3.803224052326789*^9, 
   3.803224262623081*^9, 3.803644488323132*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"e077d1e7-1648-439c-9b40-660c03b2e7b8"],

Cell[BoxData[
 RowBox[{"ColorDistanceByAverage", "[", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False]}], "]"}]], "Output",
 CellChangeTimes->{{3.802729319091578*^9, 3.802729329513891*^9}, 
   3.803132692206668*^9, 3.80321130093253*^9, 3.803224052326789*^9, 
   3.803224262623081*^9, 3.8036444883273*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"2a4db870-80a7-46e3-8fd1-30854fe15c43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"randomColor", "=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nearestColor", " ", "=", " ", 
  RowBox[{
   RowBox[{"Nearest", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "namedColorsRGB"}], ",", "randomColor", ",", "1"}], 
    "]"}], "//", "First"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"namedColorsRGB", "[", "nearestColor", "]"}], "[", "\"\<Name\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{"namedColorsRGB", "[", "nearestColor", "]"}], "[", 
    "\"\<Translations\>\"", "]"}], "]"}], "[", 
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<Language\>\"", ",", "\"\<Portuguese\>\""}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.802723022766177*^9, 3.802723061622711*^9}, {
   3.802723101354*^9, 3.8027231133297367`*^9}, 3.802723204523828*^9, {
   3.802723288566326*^9, 3.80272334131822*^9}, {3.802723376826852*^9, 
   3.802723391890048*^9}, {3.802723427837378*^9, 3.8027234637054653`*^9}, {
   3.8027235316346607`*^9, 3.802723537571122*^9}, {3.802723708120916*^9, 
   3.802723805364376*^9}, {3.80272507280341*^9, 3.802725221932764*^9}, {
   3.802725378524288*^9, 3.802725385863802*^9}, {3.8027254419656677`*^9, 
   3.80272549905374*^9}, {3.802725546961913*^9, 3.802725550884552*^9}, {
   3.802725622368206*^9, 3.80272578702313*^9}, {3.8027258175313*^9, 
   3.802725940406611*^9}, {3.802725974762211*^9, 3.802725980121921*^9}, {
   3.802726014517612*^9, 3.8027260395343227`*^9}, {3.80272612524013*^9, 
   3.802726134346431*^9}, {3.802729348619093*^9, 3.802729386954216*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"22c478e5-a7d2-4f92-8182-16fb73fbe471"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.2843644344643541, 0.19736098609994368`, 0.6925807675336668],
        RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.18957628964290274`, 0.1315739907332958, 0.4617205116891112],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "0.2843644344643541`", ",", "0.19736098609994368`", ",", 
         "0.6925807675336668`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.2843644344643541, 0.19736098609994368`, 0.6925807675336668]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.2843644344643541, 0.19736098609994368`, 0.6925807675336668],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.802725981946546*^9, {3.8027260154253798`*^9, 3.802726049238193*^9}, 
   3.802726134677291*^9, 3.802729398981065*^9, {3.802782901439495*^9, 
   3.802782908908993*^9}, 3.8031326922388773`*^9, 3.8032113009980497`*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"2d7b4604-37d2-434b-adc8-c805a714212c"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.5019607843137255, 0., 0.5019607843137255], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.334640522875817, 0., 0.334640522875817],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "0.5019607843137255`", ",", "0.`", ",", "0.5019607843137255`"}], 
       "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.5019607843137255, 0., 0.5019607843137255]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.5019607843137255, 0., 0.5019607843137255],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.802725981946546*^9, {3.8027260154253798`*^9, 3.802726049238193*^9}, 
   3.802726134677291*^9, 3.802729398981065*^9, {3.802782901439495*^9, 
   3.802782908908993*^9}, 3.8031326922388773`*^9, 3.803211301004059*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"fdec1249-8281-4f63-8289-343e5f0c7c68"],

Cell[BoxData["\<\"Purple\"\>"], "Output",
 CellChangeTimes->{
  3.802725981946546*^9, {3.8027260154253798`*^9, 3.802726049238193*^9}, 
   3.802726134677291*^9, 3.802729398981065*^9, {3.802782901439495*^9, 
   3.802782908908993*^9}, 3.8031326922388773`*^9, 3.8032113010091887`*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"ce638e45-89a7-425d-afac-e3dc8a23427a"],

Cell[BoxData["\<\"roxo\"\>"], "Output",
 CellChangeTimes->{
  3.802725981946546*^9, {3.8027260154253798`*^9, 3.802726049238193*^9}, 
   3.802726134677291*^9, 3.802729398981065*^9, {3.802782901439495*^9, 
   3.802782908908993*^9}, 3.8031326922388773`*^9, 3.80321130101159*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"9870b2a2-0abb-42f8-9d06-bbcd3bca3ba1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Description function for colors", "Subsubsection",
 CellChangeTimes->{{3.8030609960978947`*^9, 3.803061017849208*^9}, {
   3.803061313341317*^9, 3.8030613197010107`*^9}, 3.8030630040718527`*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"bf782785-d161-46b3-bef6-d8dfcd7f9541"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Description", "[", "color_RGBColor", "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colors", "=", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Black\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0., 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Blue\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6470588235294118, 0.1647058823529412, 0.1647058823529412], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.43137254901960786`, 0.10980392156862748`, 
                 0.10980392156862748`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6470588235294118`", ",", "0.1647058823529412`", ",", 
                   "0.1647058823529412`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6470588235294118, 0.1647058823529412, 0.1647058823529412]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.6470588235294118, 0.1647058823529412, 0.1647058823529412],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Brown\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0., 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Cyan\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[
                0.334640522875817, 0.334640522875817, 0.334640522875817],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5019607843137255`", ",", "0.5019607843137255`", ",", 
                   "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5019607843137255, 0.5019607843137255, 0.5019607843137255]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.5019607843137255, 0.5019607843137255, 0.5019607843137255],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Gray\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0.5019607843137255, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0.334640522875817, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.5019607843137255`", ",", "0.`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0.5019607843137255, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0.5019607843137255, 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Green\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6784313725490198, 0.847058823529412, 0.901960784313726], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4522875816993465, 0.5647058823529414, 0.601307189542484],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6784313725490198`", ",", "0.847058823529412`", ",", 
                   "0.901960784313726`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6784313725490198, 0.847058823529412, 0.901960784313726]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightBlue\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightBlue\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.87843137254902, 1., 1.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5856209150326801, 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.87843137254902`", ",", "1.`", ",", "1.`"}], "]"}],
                NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.87843137254902, 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.87843137254902, 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightCyan\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightCyan\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.5647058823529411, 0.933333333333333, 0.5647058823529411], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.37647058823529406`, 0.622222222222222, 0.37647058823529406`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5647058823529411`", ",", "0.933333333333333`", ",", 
                   "0.5647058823529411`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5647058823529411, 0.933333333333333, 0.5647058823529411]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.5647058823529411, 0.933333333333333, 0.5647058823529411],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightGreen\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\
\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.7137254901960784, 0.7568627450980392], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.4758169934640523, 0.5045751633986928],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "1.`", ",", "0.7137254901960784`", ",", 
                   "0.7568627450980392`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.7137254901960784, 0.7568627450980392]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.7137254901960784, 0.7568627450980392],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightPink\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightPink\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 0.87843137254902], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.5856209150326801],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "0.87843137254902`"}], "]"}],
                NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 0.87843137254902]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 0.87843137254902],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightYellow\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightYellow\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0., 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Magenta\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Magenta\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.6470588235294118, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.43137254901960786`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.6470588235294118`", ",", "0.`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.6470588235294118, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.6470588235294118, 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Orange\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Orange\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.7529411764705882, 0.796078431372549], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.5019607843137255, 0.530718954248366],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "1.`", ",", "0.7529411764705882`", ",", 
                   "0.796078431372549`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.7529411764705882, 0.796078431372549]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.7529411764705882, 0.796078431372549],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Pink\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.5019607843137255, 0., 0.5019607843137255], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.334640522875817, 0., 0.334640522875817],
               FrameTicks->None,
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5019607843137255`", ",", "0.`", ",", 
                   "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.5019607843137255, 0., 0.5019607843137255]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.5019607843137255, 0., 0.5019607843137255],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Purple\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Purple\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Red\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"White\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Yellow\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Yellow\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}]}], "\[RightAssociation]"}]}], ",", "similar", ",", 
       "entity"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"similar", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Nearest", "[", 
         RowBox[{
          RowBox[{"Keys", "@", "colors"}], ",", "color", ",", "1"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"entity", "=", 
       RowBox[{"colors", "@", "similar"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Description", "[", "color", "]"}], "=", 
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<FromCamelCase\>\"", "]"}], "@", 
        RowBox[{"entity", "@", "\"\<Name\>\""}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Description", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.802894204452376*^9, 3.8028942112864933`*^9}, {
   3.802895725138815*^9, 3.8028957314198933`*^9}, {3.8030610334751263`*^9, 
   3.803061127737953*^9}, 3.803061824323943*^9, 3.803065379344398*^9, {
   3.803071138263115*^9, 3.803071202963519*^9}, {3.80307256703028*^9, 
   3.803072567724655*^9}, {3.803210654185021*^9, 3.803210654725086*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"80ae5861-4723-4779-8dde-130f1c5d9141"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.8030613364103127`*^9, 3.803061337776153*^9}, 
   3.8030613872145023`*^9},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6b965e2f-4ff0-45a9-a7f8-8a192d0b07cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"randomColor", "=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Description", "[", "randomColor", "]"}]}], "Input",
 CellChangeTimes->{{3.802727372399206*^9, 3.80272741031525*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"52445881-614b-4dd9-a1bd-0080a2d7c99a"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.412536444560879, 0.5833545627449639, 0.6160975053684214], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.27502429637391934`, 0.3889030418299759, 0.4107316702456143],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "0.412536444560879`", ",", "0.5833545627449639`", ",", 
         "0.6160975053684214`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.412536444560879, 0.5833545627449639, 0.6160975053684214]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.412536444560879, 0.5833545627449639, 0.6160975053684214],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.802727375911377*^9, 3.802727441706561*^9}, {
   3.80278295357788*^9, 3.802782969291462*^9}, 3.8028007096079683`*^9, {
   3.802889236386806*^9, 3.802889251764118*^9}, 3.802895776506317*^9, 
   3.803061132226185*^9, 3.803061835878582*^9, 3.803070574873577*^9, 
   3.8030712068819733`*^9, 3.803072574657955*^9, 3.8032107055001793`*^9, 
   3.803211178144341*^9, 3.803211301073826*^9, 3.803211475670125*^9, 
   3.8036025980790167`*^9, 3.803604046779861*^9, 3.80364178931083*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"3f3c0644-f554-403f-b3ec-609efe43e155"],

Cell[BoxData["\<\"Gray\"\>"], "Output",
 CellChangeTimes->{{3.802727375911377*^9, 3.802727441706561*^9}, {
   3.80278295357788*^9, 3.802782969291462*^9}, 3.8028007096079683`*^9, {
   3.802889236386806*^9, 3.802889251764118*^9}, 3.802895776506317*^9, 
   3.803061132226185*^9, 3.803061835878582*^9, 3.803070574873577*^9, 
   3.8030712068819733`*^9, 3.803072574657955*^9, 3.8032107055001793`*^9, 
   3.803211178144341*^9, 3.803211301073826*^9, 3.803211475670125*^9, 
   3.8036025980790167`*^9, 3.803604046779861*^9, 3.803641789349675*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"41bd6a0a-72fc-4a68-a3d3-b3b73fdff2d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorDescriptionTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Description", "@", "#"}], ",", "#"}], "]"}]}], "}"}], "&"}],
     "/@", 
    RowBox[{"RGBColor", "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "3"}], "}"}]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802729546972313*^9, 3.8027298581481028`*^9}, {
  3.8027298931198893`*^9, 3.802729924069748*^9}, {3.802729959082859*^9, 
  3.802729988840702*^9}, {3.802730068818359*^9, 3.802730085892498*^9}, {
  3.802740493930305*^9, 3.802740562803976*^9}, {3.8027409195811357`*^9, 
  3.80274093088916*^9}, {3.802741020935726*^9, 3.8027410242599573`*^9}, {
  3.80306114857251*^9, 3.803061153674664*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a05382e6-e2fd-45f4-8543-de640e8b773f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "&"}], "/@", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{"colorDescriptionTests", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "20", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802742633460918*^9, 3.802742658566352*^9}, {
   3.802742699422908*^9, 3.802742702337666*^9}, {3.802742752493335*^9, 
   3.8027428291321363`*^9}, {3.8027428647941227`*^9, 
   3.8027428668795223`*^9}, {3.8027433406279287`*^9, 3.8027433493884487`*^9}, 
   3.8030611725385857`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"e5d1cf71-5628-47eb-bd13-7813178be778"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8897497166588406, 0.09412297063583508, 0.6840371937475844], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5931664777725605, 0.06274864709055672, 0.45602479583172295`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8897497166588406`", ",", "0.09412297063583508`", ",", 
                 "0.6840371937475844`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8897497166588406, 0.09412297063583508, 0.6840371937475844]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8897497166588406, 0.09412297063583508, 
         0.6840371937475844}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8897497166588406, 0.09412297063583508, 0.6840371937475844],
        FrontFaceColor->RGBColor[
         0.8897497166588406, 0.09412297063583508, 0.6840371937475844],
        BackFaceColor->RGBColor[
         0.8897497166588406, 0.09412297063583508, 0.6840371937475844],
        GraphicsColor->RGBColor[
         0.8897497166588406, 0.09412297063583508, 0.6840371937475844],
        FontColor->RGBColor[
         0.8897497166588406, 0.09412297063583508, 0.6840371937475844]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.638939626207121, 0.25312375881057414`, 0.7099890560569664], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.42595975080474735`, 0.16874917254038277`, 0.47332603737131096`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.638939626207121`", ",", "0.25312375881057414`", ",", 
                 "0.7099890560569664`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.638939626207121, 0.25312375881057414`, 0.7099890560569664]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.638939626207121, 0.25312375881057414`, 
         0.7099890560569664}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.638939626207121, 0.25312375881057414`, 0.7099890560569664],
        FrontFaceColor->RGBColor[
         0.638939626207121, 0.25312375881057414`, 0.7099890560569664],
        BackFaceColor->RGBColor[
         0.638939626207121, 0.25312375881057414`, 0.7099890560569664],
        GraphicsColor->RGBColor[
         0.638939626207121, 0.25312375881057414`, 0.7099890560569664],
        FontColor->RGBColor[
         0.638939626207121, 0.25312375881057414`, 0.7099890560569664]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7458333520147733, 0.6720195370031723, 0.6175270537208843], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.49722223467651555`, 0.44801302466878157`, 0.4116847024805896],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7458333520147733`", ",", "0.6720195370031723`", ",", 
                 "0.6175270537208843`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7458333520147733, 0.6720195370031723, 0.6175270537208843]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7458333520147733, 0.6720195370031723, 0.6175270537208843}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7458333520147733, 0.6720195370031723, 0.6175270537208843],
        FrontFaceColor->RGBColor[
         0.7458333520147733, 0.6720195370031723, 0.6175270537208843],
        BackFaceColor->RGBColor[
         0.7458333520147733, 0.6720195370031723, 0.6175270537208843],
        GraphicsColor->RGBColor[
         0.7458333520147733, 0.6720195370031723, 0.6175270537208843],
        FontColor->RGBColor[
         0.7458333520147733, 0.6720195370031723, 0.6175270537208843]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.03808141344303606, 0.15912041753716855`, 0.01447957747473172], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.025387608962024043`, 0.10608027835811237`, 0.009653051649821148],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.03808141344303606`", ",", "0.15912041753716855`", ",", 
                 "0.01447957747473172`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.03808141344303606, 0.15912041753716855`, 0.01447957747473172]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.03808141344303606, 0.15912041753716855`, 
         0.01447957747473172}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Black\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.03808141344303606, 0.15912041753716855`, 0.01447957747473172],
        FrontFaceColor->RGBColor[
         0.03808141344303606, 0.15912041753716855`, 0.01447957747473172],
        BackFaceColor->RGBColor[
         0.03808141344303606, 0.15912041753716855`, 0.01447957747473172],
        GraphicsColor->RGBColor[
         0.03808141344303606, 0.15912041753716855`, 0.01447957747473172],
        FontColor->RGBColor[
         0.03808141344303606, 0.15912041753716855`, 0.01447957747473172]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5613799339542775, 0.7627247916852018, 0.15179150237044747`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.37425328930285173`, 0.5084831944568012, 0.10119433491363165`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5613799339542775`", ",", "0.7627247916852018`", ",", 
                 "0.15179150237044747`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5613799339542775, 0.7627247916852018, 0.15179150237044747`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5613799339542775, 0.7627247916852018, 
         0.15179150237044747`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5613799339542775, 0.7627247916852018, 0.15179150237044747`],
        FrontFaceColor->RGBColor[
         0.5613799339542775, 0.7627247916852018, 0.15179150237044747`],
        BackFaceColor->RGBColor[
         0.5613799339542775, 0.7627247916852018, 0.15179150237044747`],
        GraphicsColor->RGBColor[
         0.5613799339542775, 0.7627247916852018, 0.15179150237044747`],
        FontColor->RGBColor[
         0.5613799339542775, 0.7627247916852018, 0.15179150237044747`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6277841327620544, 0.26432027927204227`, 0.5249981451721228], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.41852275517470294`, 0.17621351951469486`, 0.3499987634480819],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6277841327620544`", ",", "0.26432027927204227`", ",", 
                 "0.5249981451721228`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6277841327620544, 0.26432027927204227`, 0.5249981451721228]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6277841327620544, 0.26432027927204227`, 
         0.5249981451721228}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6277841327620544, 0.26432027927204227`, 0.5249981451721228],
        FrontFaceColor->RGBColor[
         0.6277841327620544, 0.26432027927204227`, 0.5249981451721228],
        BackFaceColor->RGBColor[
         0.6277841327620544, 0.26432027927204227`, 0.5249981451721228],
        GraphicsColor->RGBColor[
         0.6277841327620544, 0.26432027927204227`, 0.5249981451721228],
        FontColor->RGBColor[
         0.6277841327620544, 0.26432027927204227`, 0.5249981451721228]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9943072077097737, 0.013969792496678402`, 0.6656236379145164], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6628714718065158, 0.009313194997785601, 0.44374909194301093`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9943072077097737`", ",", "0.013969792496678402`", ",", 
                 "0.6656236379145164`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9943072077097737, 0.013969792496678402`, 0.6656236379145164]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9943072077097737, 0.013969792496678402`, 
         0.6656236379145164}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9943072077097737, 0.013969792496678402`, 0.6656236379145164],
        FrontFaceColor->RGBColor[
         0.9943072077097737, 0.013969792496678402`, 0.6656236379145164],
        BackFaceColor->RGBColor[
         0.9943072077097737, 0.013969792496678402`, 0.6656236379145164],
        GraphicsColor->RGBColor[
         0.9943072077097737, 0.013969792496678402`, 0.6656236379145164],
        FontColor->RGBColor[
         0.9943072077097737, 0.013969792496678402`, 0.6656236379145164]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.8234585932909, 0.891030983222481, 0.2508215721586431],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5489723955272667, 0.5940206554816541, 0.1672143814390954],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8234585932909`", ",", "0.891030983222481`", ",", 
                 "0.2508215721586431`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.8234585932909, 0.891030983222481, 0.2508215721586431]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8234585932909, 0.891030983222481, 0.2508215721586431}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8234585932909, 0.891030983222481, 0.2508215721586431],
        FrontFaceColor->RGBColor[
         0.8234585932909, 0.891030983222481, 0.2508215721586431],
        BackFaceColor->RGBColor[
         0.8234585932909, 0.891030983222481, 0.2508215721586431],
        GraphicsColor->RGBColor[
         0.8234585932909, 0.891030983222481, 0.2508215721586431],
        FontColor->RGBColor[
         0.8234585932909, 0.891030983222481, 0.2508215721586431]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.29812062602425815`, 0.010961878733176, 0.32802699715046924`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1987470840161721, 0.0073079191554506675`, 0.2186846647669795],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.29812062602425815`", ",", "0.010961878733176`", ",", 
                 "0.32802699715046924`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.29812062602425815`, 0.010961878733176, 0.32802699715046924`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.29812062602425815`, 0.010961878733176, 
         0.32802699715046924`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.29812062602425815`, 0.010961878733176, 0.32802699715046924`],
        FrontFaceColor->RGBColor[
         0.29812062602425815`, 0.010961878733176, 0.32802699715046924`],
        BackFaceColor->RGBColor[
         0.29812062602425815`, 0.010961878733176, 0.32802699715046924`],
        GraphicsColor->RGBColor[
         0.29812062602425815`, 0.010961878733176, 0.32802699715046924`],
        FontColor->RGBColor[
         0.29812062602425815`, 0.010961878733176, 0.32802699715046924`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6692442846587843, 0.37972157615083724`, 0.09962884737190203], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4461628564391895, 0.25314771743389153`, 0.06641923158126803],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6692442846587843`", ",", "0.37972157615083724`", ",", 
                 "0.09962884737190203`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6692442846587843, 0.37972157615083724`, 0.09962884737190203]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6692442846587843, 0.37972157615083724`, 
         0.09962884737190203}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6692442846587843, 0.37972157615083724`, 0.09962884737190203],
        FrontFaceColor->RGBColor[
         0.6692442846587843, 0.37972157615083724`, 0.09962884737190203],
        BackFaceColor->RGBColor[
         0.6692442846587843, 0.37972157615083724`, 0.09962884737190203],
        GraphicsColor->RGBColor[
         0.6692442846587843, 0.37972157615083724`, 0.09962884737190203],
        FontColor->RGBColor[
         0.6692442846587843, 0.37972157615083724`, 0.09962884737190203]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.07134918022344561, 0.3115653557982827, 0.24329094097913617`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.04756612014896374, 0.20771023719885515`, 0.16219396065275746`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.07134918022344561`", ",", "0.3115653557982827`", ",", 
                 "0.24329094097913617`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.07134918022344561, 0.3115653557982827, 0.24329094097913617`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.07134918022344561, 0.3115653557982827, 
         0.24329094097913617`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.07134918022344561, 0.3115653557982827, 0.24329094097913617`],
        FrontFaceColor->RGBColor[
         0.07134918022344561, 0.3115653557982827, 0.24329094097913617`],
        BackFaceColor->RGBColor[
         0.07134918022344561, 0.3115653557982827, 0.24329094097913617`],
        GraphicsColor->RGBColor[
         0.07134918022344561, 0.3115653557982827, 0.24329094097913617`],
        FontColor->RGBColor[
         0.07134918022344561, 0.3115653557982827, 0.24329094097913617`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7277684050050894, 0.04477412819175419, 0.11436946753517652`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4851789366700596, 0.029849418794502796`, 0.07624631169011768],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7277684050050894`", ",", "0.04477412819175419`", ",", 
                 "0.11436946753517652`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7277684050050894, 0.04477412819175419, 0.11436946753517652`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7277684050050894, 0.04477412819175419, 
         0.11436946753517652`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7277684050050894, 0.04477412819175419, 0.11436946753517652`],
        FrontFaceColor->RGBColor[
         0.7277684050050894, 0.04477412819175419, 0.11436946753517652`],
        BackFaceColor->RGBColor[
         0.7277684050050894, 0.04477412819175419, 0.11436946753517652`],
        GraphicsColor->RGBColor[
         0.7277684050050894, 0.04477412819175419, 0.11436946753517652`],
        FontColor->RGBColor[
         0.7277684050050894, 0.04477412819175419, 0.11436946753517652`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9348931110937113, 0.7042433591684552, 0.5362828049823993], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6232620740624742, 0.46949557277897014`, 0.35752186998826624`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9348931110937113`", ",", "0.7042433591684552`", ",", 
                 "0.5362828049823993`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9348931110937113, 0.7042433591684552, 0.5362828049823993]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9348931110937113, 0.7042433591684552, 0.5362828049823993}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9348931110937113, 0.7042433591684552, 0.5362828049823993],
        FrontFaceColor->RGBColor[
         0.9348931110937113, 0.7042433591684552, 0.5362828049823993],
        BackFaceColor->RGBColor[
         0.9348931110937113, 0.7042433591684552, 0.5362828049823993],
        GraphicsColor->RGBColor[
         0.9348931110937113, 0.7042433591684552, 0.5362828049823993],
        FontColor->RGBColor[
         0.9348931110937113, 0.7042433591684552, 0.5362828049823993]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4752069361657396, 0.33599153625220324`, 0.894544000250564], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3168046241104931, 0.22399435750146884`, 0.5963626668337094],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4752069361657396`", ",", "0.33599153625220324`", ",", 
                 "0.894544000250564`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4752069361657396, 0.33599153625220324`, 0.894544000250564]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4752069361657396, 0.33599153625220324`, 
         0.894544000250564}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4752069361657396, 0.33599153625220324`, 0.894544000250564],
        FrontFaceColor->RGBColor[
         0.4752069361657396, 0.33599153625220324`, 0.894544000250564],
        BackFaceColor->RGBColor[
         0.4752069361657396, 0.33599153625220324`, 0.894544000250564],
        GraphicsColor->RGBColor[
         0.4752069361657396, 0.33599153625220324`, 0.894544000250564],
        FontColor->RGBColor[
         0.4752069361657396, 0.33599153625220324`, 0.894544000250564]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.08234169804270985, 0.31675162508579735`, 0.00333457886655264], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.054894465361806574`, 0.21116775005719823`, 
             0.0022230525777017602`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.08234169804270985`", ",", "0.31675162508579735`", ",", 
                 "0.00333457886655264`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.08234169804270985, 0.31675162508579735`, 0.00333457886655264]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.08234169804270985, 0.31675162508579735`, 
         0.00333457886655264}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08234169804270985, 0.31675162508579735`, 0.00333457886655264],
        FrontFaceColor->RGBColor[
         0.08234169804270985, 0.31675162508579735`, 0.00333457886655264],
        BackFaceColor->RGBColor[
         0.08234169804270985, 0.31675162508579735`, 0.00333457886655264],
        GraphicsColor->RGBColor[
         0.08234169804270985, 0.31675162508579735`, 0.00333457886655264],
        FontColor->RGBColor[
         0.08234169804270985, 0.31675162508579735`, 0.00333457886655264]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.34849071629356665`, 0.018608171586248057`, 0.6106096248273165],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2323271441957111, 0.012405447724165372`, 0.407073083218211],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.34849071629356665`", ",", "0.018608171586248057`", ",", 
                 "0.6106096248273165`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.34849071629356665`, 0.018608171586248057`, 
               0.6106096248273165]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.34849071629356665`, 0.018608171586248057`, 
         0.6106096248273165}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.34849071629356665`, 0.018608171586248057`, 0.6106096248273165],
        FrontFaceColor->RGBColor[
         0.34849071629356665`, 0.018608171586248057`, 0.6106096248273165],
        BackFaceColor->RGBColor[
         0.34849071629356665`, 0.018608171586248057`, 0.6106096248273165],
        GraphicsColor->RGBColor[
         0.34849071629356665`, 0.018608171586248057`, 0.6106096248273165],
        FontColor->RGBColor[
         0.34849071629356665`, 0.018608171586248057`, 0.6106096248273165]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5926408349472119, 0.8592737300571331, 0.4400002601995261], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.39509388996480793`, 0.5728491533714222, 0.29333350679968406`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5926408349472119`", ",", "0.8592737300571331`", ",", 
                 "0.4400002601995261`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5926408349472119, 0.8592737300571331, 0.4400002601995261]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5926408349472119, 0.8592737300571331, 0.4400002601995261}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5926408349472119, 0.8592737300571331, 0.4400002601995261],
        FrontFaceColor->RGBColor[
         0.5926408349472119, 0.8592737300571331, 0.4400002601995261],
        BackFaceColor->RGBColor[
         0.5926408349472119, 0.8592737300571331, 0.4400002601995261],
        GraphicsColor->RGBColor[
         0.5926408349472119, 0.8592737300571331, 0.4400002601995261],
        FontColor->RGBColor[
         0.5926408349472119, 0.8592737300571331, 0.4400002601995261]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5619476199221447, 0.027317622216962212`, 0.7798500226557687], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3746317466147632, 0.018211748144641476`, 0.5199000151038459],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5619476199221447`", ",", "0.027317622216962212`", ",", 
                 "0.7798500226557687`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5619476199221447, 0.027317622216962212`, 0.7798500226557687]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5619476199221447, 0.027317622216962212`, 
         0.7798500226557687}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5619476199221447, 0.027317622216962212`, 0.7798500226557687],
        FrontFaceColor->RGBColor[
         0.5619476199221447, 0.027317622216962212`, 0.7798500226557687],
        BackFaceColor->RGBColor[
         0.5619476199221447, 0.027317622216962212`, 0.7798500226557687],
        GraphicsColor->RGBColor[
         0.5619476199221447, 0.027317622216962212`, 0.7798500226557687],
        FontColor->RGBColor[
         0.5619476199221447, 0.027317622216962212`, 0.7798500226557687]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4607002552196944, 0.592643854491123, 0.147798184981615], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3071335034797963, 0.39509590299408204`, 0.09853212332107668],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4607002552196944`", ",", "0.592643854491123`", ",", 
                 "0.147798184981615`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4607002552196944, 0.592643854491123, 0.147798184981615]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4607002552196944, 0.592643854491123, 0.147798184981615}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4607002552196944, 0.592643854491123, 0.147798184981615],
        FrontFaceColor->RGBColor[
         0.4607002552196944, 0.592643854491123, 0.147798184981615],
        BackFaceColor->RGBColor[
         0.4607002552196944, 0.592643854491123, 0.147798184981615],
        GraphicsColor->RGBColor[
         0.4607002552196944, 0.592643854491123, 0.147798184981615],
        FontColor->RGBColor[
         0.4607002552196944, 0.592643854491123, 0.147798184981615]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.49721211861838843`, 0.2888536922588336, 0.38199294491531166`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3314747457455923, 0.19256912817255575`, 0.25466196327687446`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.49721211861838843`", ",", "0.2888536922588336`", ",", 
                 "0.38199294491531166`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.49721211861838843`, 0.2888536922588336, 0.38199294491531166`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.49721211861838843`, 0.2888536922588336, 
         0.38199294491531166`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.49721211861838843`, 0.2888536922588336, 0.38199294491531166`],
        FrontFaceColor->RGBColor[
         0.49721211861838843`, 0.2888536922588336, 0.38199294491531166`],
        BackFaceColor->RGBColor[
         0.49721211861838843`, 0.2888536922588336, 0.38199294491531166`],
        GraphicsColor->RGBColor[
         0.49721211861838843`, 0.2888536922588336, 0.38199294491531166`],
        FontColor->RGBColor[
         0.49721211861838843`, 0.2888536922588336, 0.38199294491531166`]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7858659354818687, 0.5032848421679961, 0.17088012168343347`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5239106236545792, 0.3355232281119974, 0.11392008112228899`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               RowBox[{
                "0.7858659354818687`", ",", "0.5032848421679961`", ",", 
                 "0.17088012168343347`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7858659354818687, 0.5032848421679961, 0.17088012168343347`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7858659354818687, 0.5032848421679961, 
         0.17088012168343347`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7858659354818687, 0.5032848421679961, 0.17088012168343347`],
        FrontFaceColor->RGBColor[
         0.7858659354818687, 0.5032848421679961, 0.17088012168343347`],
        BackFaceColor->RGBColor[
         0.7858659354818687, 0.5032848421679961, 0.17088012168343347`],
        GraphicsColor->RGBColor[
         0.7858659354818687, 0.5032848421679961, 0.17088012168343347`],
        FontColor->RGBColor[
         0.7858659354818687, 0.5032848421679961, 0.17088012168343347`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.22402366205701285`, 0.5551976555079903, 0.9606512885510627], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.14934910803800858`, 0.3701317703386602, 0.6404341923673752],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.22402366205701285`", ",", "0.5551976555079903`", ",", 
                 "0.9606512885510627`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.22402366205701285`, 0.5551976555079903, 0.9606512885510627]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.22402366205701285`, 0.5551976555079903, 
         0.9606512885510627}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.22402366205701285`, 0.5551976555079903, 0.9606512885510627],
        FrontFaceColor->RGBColor[
         0.22402366205701285`, 0.5551976555079903, 0.9606512885510627],
        BackFaceColor->RGBColor[
         0.22402366205701285`, 0.5551976555079903, 0.9606512885510627],
        GraphicsColor->RGBColor[
         0.22402366205701285`, 0.5551976555079903, 0.9606512885510627],
        FontColor->RGBColor[
         0.22402366205701285`, 0.5551976555079903, 0.9606512885510627]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3267785505821579, 0.2822126741510993, 0.01572666865971417], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.21785236705477193`, 0.18814178276739954`, 0.010484445773142781`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3267785505821579`", ",", "0.2822126741510993`", ",", 
                 "0.01572666865971417`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3267785505821579, 0.2822126741510993, 0.01572666865971417]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3267785505821579, 0.2822126741510993, 
         0.01572666865971417}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3267785505821579, 0.2822126741510993, 0.01572666865971417],
        FrontFaceColor->RGBColor[
         0.3267785505821579, 0.2822126741510993, 0.01572666865971417],
        BackFaceColor->RGBColor[
         0.3267785505821579, 0.2822126741510993, 0.01572666865971417],
        GraphicsColor->RGBColor[
         0.3267785505821579, 0.2822126741510993, 0.01572666865971417],
        FontColor->RGBColor[
         0.3267785505821579, 0.2822126741510993, 0.01572666865971417]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.23858341857593324`, 0.8124106349434079, 0.7026868621600582], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1590556123839555, 0.541607089962272, 0.46845790810670546`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.23858341857593324`", ",", "0.8124106349434079`", ",", 
                 "0.7026868621600582`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.23858341857593324`, 0.8124106349434079, 0.7026868621600582]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.23858341857593324`, 0.8124106349434079, 
         0.7026868621600582}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.23858341857593324`, 0.8124106349434079, 0.7026868621600582],
        FrontFaceColor->RGBColor[
         0.23858341857593324`, 0.8124106349434079, 0.7026868621600582],
        BackFaceColor->RGBColor[
         0.23858341857593324`, 0.8124106349434079, 0.7026868621600582],
        GraphicsColor->RGBColor[
         0.23858341857593324`, 0.8124106349434079, 0.7026868621600582],
        FontColor->RGBColor[
         0.23858341857593324`, 0.8124106349434079, 0.7026868621600582]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3870061985367268, 0.8631178253059055, 0.4964262171560463], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2580041323578179, 0.5754118835372704, 0.3309508114373642],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3870061985367268`", ",", "0.8631178253059055`", ",", 
                 "0.4964262171560463`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3870061985367268, 0.8631178253059055, 0.4964262171560463]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3870061985367268, 0.8631178253059055, 0.4964262171560463}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3870061985367268, 0.8631178253059055, 0.4964262171560463],
        FrontFaceColor->RGBColor[
         0.3870061985367268, 0.8631178253059055, 0.4964262171560463],
        BackFaceColor->RGBColor[
         0.3870061985367268, 0.8631178253059055, 0.4964262171560463],
        GraphicsColor->RGBColor[
         0.3870061985367268, 0.8631178253059055, 0.4964262171560463],
        FontColor->RGBColor[
         0.3870061985367268, 0.8631178253059055, 0.4964262171560463]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6879825346548891, 0.3710803507713796, 0.13303264632682565`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.45865502310325945`, 0.24738690051425305`, 0.08868843088455045],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6879825346548891`", ",", "0.3710803507713796`", ",", 
                 "0.13303264632682565`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6879825346548891, 0.3710803507713796, 0.13303264632682565`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6879825346548891, 0.3710803507713796, 
         0.13303264632682565`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6879825346548891, 0.3710803507713796, 0.13303264632682565`],
        FrontFaceColor->RGBColor[
         0.6879825346548891, 0.3710803507713796, 0.13303264632682565`],
        BackFaceColor->RGBColor[
         0.6879825346548891, 0.3710803507713796, 0.13303264632682565`],
        GraphicsColor->RGBColor[
         0.6879825346548891, 0.3710803507713796, 0.13303264632682565`],
        FontColor->RGBColor[
         0.6879825346548891, 0.3710803507713796, 0.13303264632682565`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8458413610289617, 0.04759854184680923, 0.5321633565375143], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5638942406859745, 0.03173236123120615, 0.35477557102500956`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8458413610289617`", ",", "0.04759854184680923`", ",", 
                 "0.5321633565375143`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8458413610289617, 0.04759854184680923, 0.5321633565375143]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8458413610289617, 0.04759854184680923, 
         0.5321633565375143}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8458413610289617, 0.04759854184680923, 0.5321633565375143],
        FrontFaceColor->RGBColor[
         0.8458413610289617, 0.04759854184680923, 0.5321633565375143],
        BackFaceColor->RGBColor[
         0.8458413610289617, 0.04759854184680923, 0.5321633565375143],
        GraphicsColor->RGBColor[
         0.8458413610289617, 0.04759854184680923, 0.5321633565375143],
        FontColor->RGBColor[
         0.8458413610289617, 0.04759854184680923, 0.5321633565375143]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6192534908581475, 0.27785801615746464`, 0.02055698748638446], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.41283566057209836`, 0.18523867743830977`, 0.013704658324256307`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6192534908581475`", ",", "0.27785801615746464`", ",", 
                 "0.02055698748638446`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6192534908581475, 0.27785801615746464`, 0.02055698748638446]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6192534908581475, 0.27785801615746464`, 
         0.02055698748638446}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6192534908581475, 0.27785801615746464`, 0.02055698748638446],
        FrontFaceColor->RGBColor[
         0.6192534908581475, 0.27785801615746464`, 0.02055698748638446],
        BackFaceColor->RGBColor[
         0.6192534908581475, 0.27785801615746464`, 0.02055698748638446],
        GraphicsColor->RGBColor[
         0.6192534908581475, 0.27785801615746464`, 0.02055698748638446],
        FontColor->RGBColor[
         0.6192534908581475, 0.27785801615746464`, 0.02055698748638446]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9089310258390091, 0.03624428200649166, 0.9543198228941119], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6059540172260061, 0.024162854670994438`, 0.6362132152627413],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9089310258390091`", ",", "0.03624428200649166`", ",", 
                 "0.9543198228941119`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9089310258390091, 0.03624428200649166, 0.9543198228941119]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9089310258390091, 0.03624428200649166, 
         0.9543198228941119}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9089310258390091, 0.03624428200649166, 0.9543198228941119],
        FrontFaceColor->RGBColor[
         0.9089310258390091, 0.03624428200649166, 0.9543198228941119],
        BackFaceColor->RGBColor[
         0.9089310258390091, 0.03624428200649166, 0.9543198228941119],
        GraphicsColor->RGBColor[
         0.9089310258390091, 0.03624428200649166, 0.9543198228941119],
        FontColor->RGBColor[
         0.9089310258390091, 0.03624428200649166, 0.9543198228941119]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5637867308775135, 0.7259811367271676, 0.8756634865650197], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.37585782058500905`, 0.4839874244847784, 0.5837756577100132],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5637867308775135`", ",", "0.7259811367271676`", ",", 
                 "0.8756634865650197`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5637867308775135, 0.7259811367271676, 0.8756634865650197]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5637867308775135, 0.7259811367271676, 0.8756634865650197}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5637867308775135, 0.7259811367271676, 0.8756634865650197],
        FrontFaceColor->RGBColor[
         0.5637867308775135, 0.7259811367271676, 0.8756634865650197],
        BackFaceColor->RGBColor[
         0.5637867308775135, 0.7259811367271676, 0.8756634865650197],
        GraphicsColor->RGBColor[
         0.5637867308775135, 0.7259811367271676, 0.8756634865650197],
        FontColor->RGBColor[
         0.5637867308775135, 0.7259811367271676, 0.8756634865650197]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6368978233671669, 0.09855593693245734, 0.9320855554169145], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.42459854891144466`, 0.06570395795497157, 0.6213903702779431],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6368978233671669`", ",", "0.09855593693245734`", ",", 
                 "0.9320855554169145`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6368978233671669, 0.09855593693245734, 0.9320855554169145]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6368978233671669, 0.09855593693245734, 
         0.9320855554169145}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6368978233671669, 0.09855593693245734, 0.9320855554169145],
        FrontFaceColor->RGBColor[
         0.6368978233671669, 0.09855593693245734, 0.9320855554169145],
        BackFaceColor->RGBColor[
         0.6368978233671669, 0.09855593693245734, 0.9320855554169145],
        GraphicsColor->RGBColor[
         0.6368978233671669, 0.09855593693245734, 0.9320855554169145],
        FontColor->RGBColor[
         0.6368978233671669, 0.09855593693245734, 0.9320855554169145]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4207157848633043, 0.6471378821581106, 0.844287222792045], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.28047718990886955`, 0.4314252547720738, 0.5628581485280301],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4207157848633043`", ",", "0.6471378821581106`", ",", 
                 "0.844287222792045`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4207157848633043, 0.6471378821581106, 0.844287222792045]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4207157848633043, 0.6471378821581106, 0.844287222792045}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4207157848633043, 0.6471378821581106, 0.844287222792045],
        FrontFaceColor->RGBColor[
         0.4207157848633043, 0.6471378821581106, 0.844287222792045],
        BackFaceColor->RGBColor[
         0.4207157848633043, 0.6471378821581106, 0.844287222792045],
        GraphicsColor->RGBColor[
         0.4207157848633043, 0.6471378821581106, 0.844287222792045],
        FontColor->RGBColor[
         0.4207157848633043, 0.6471378821581106, 0.844287222792045]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.20520320814706383`, 0.9698962196237944, 0.7842182495443326], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.13680213876470923`, 0.6465974797491962, 0.5228121663628884],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.20520320814706383`", ",", "0.9698962196237944`", ",", 
                 "0.7842182495443326`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.20520320814706383`, 0.9698962196237944, 0.7842182495443326]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.20520320814706383`, 0.9698962196237944, 
         0.7842182495443326}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.20520320814706383`, 0.9698962196237944, 0.7842182495443326],
        FrontFaceColor->RGBColor[
         0.20520320814706383`, 0.9698962196237944, 0.7842182495443326],
        BackFaceColor->RGBColor[
         0.20520320814706383`, 0.9698962196237944, 0.7842182495443326],
        GraphicsColor->RGBColor[
         0.20520320814706383`, 0.9698962196237944, 0.7842182495443326],
        FontColor->RGBColor[
         0.20520320814706383`, 0.9698962196237944, 0.7842182495443326]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2634781726652502, 0.9266987181541615, 0.19185440240535523`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.17565211511016682`, 0.6177991454361077, 0.1279029349369035],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2634781726652502`", ",", "0.9266987181541615`", ",", 
                 "0.19185440240535523`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2634781726652502, 0.9266987181541615, 0.19185440240535523`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2634781726652502, 0.9266987181541615, 
         0.19185440240535523`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2634781726652502, 0.9266987181541615, 0.19185440240535523`],
        FrontFaceColor->RGBColor[
         0.2634781726652502, 0.9266987181541615, 0.19185440240535523`],
        BackFaceColor->RGBColor[
         0.2634781726652502, 0.9266987181541615, 0.19185440240535523`],
        GraphicsColor->RGBColor[
         0.2634781726652502, 0.9266987181541615, 0.19185440240535523`],
        FontColor->RGBColor[
         0.2634781726652502, 0.9266987181541615, 0.19185440240535523`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9804541395785067, 0.20725801341893502`, 0.7319955641675215], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6536360930523378, 0.1381720089459567, 0.4879970427783477],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9804541395785067`", ",", "0.20725801341893502`", ",", 
                 "0.7319955641675215`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9804541395785067, 0.20725801341893502`, 0.7319955641675215]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9804541395785067, 0.20725801341893502`, 
         0.7319955641675215}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9804541395785067, 0.20725801341893502`, 0.7319955641675215],
        FrontFaceColor->RGBColor[
         0.9804541395785067, 0.20725801341893502`, 0.7319955641675215],
        BackFaceColor->RGBColor[
         0.9804541395785067, 0.20725801341893502`, 0.7319955641675215],
        GraphicsColor->RGBColor[
         0.9804541395785067, 0.20725801341893502`, 0.7319955641675215],
        FontColor->RGBColor[
         0.9804541395785067, 0.20725801341893502`, 0.7319955641675215]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7703595053989429, 0.5384201446826269, 0.1108493135419204], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5135730035992954, 0.3589467631217513, 0.07389954236128027],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7703595053989429`", ",", "0.5384201446826269`", ",", 
                 "0.1108493135419204`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7703595053989429, 0.5384201446826269, 0.1108493135419204]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7703595053989429, 0.5384201446826269, 0.1108493135419204}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7703595053989429, 0.5384201446826269, 0.1108493135419204],
        FrontFaceColor->RGBColor[
         0.7703595053989429, 0.5384201446826269, 0.1108493135419204],
        BackFaceColor->RGBColor[
         0.7703595053989429, 0.5384201446826269, 0.1108493135419204],
        GraphicsColor->RGBColor[
         0.7703595053989429, 0.5384201446826269, 0.1108493135419204],
        FontColor->RGBColor[
         0.7703595053989429, 0.5384201446826269, 0.1108493135419204]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5777921849926901, 0.8811892640537742, 0.7463383259236869], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3851947899951268, 0.5874595093691828, 0.4975588839491246],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5777921849926901`", ",", "0.8811892640537742`", ",", 
                 "0.7463383259236869`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5777921849926901, 0.8811892640537742, 0.7463383259236869]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5777921849926901, 0.8811892640537742, 0.7463383259236869}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5777921849926901, 0.8811892640537742, 0.7463383259236869],
        FrontFaceColor->RGBColor[
         0.5777921849926901, 0.8811892640537742, 0.7463383259236869],
        BackFaceColor->RGBColor[
         0.5777921849926901, 0.8811892640537742, 0.7463383259236869],
        GraphicsColor->RGBColor[
         0.5777921849926901, 0.8811892640537742, 0.7463383259236869],
        FontColor->RGBColor[
         0.5777921849926901, 0.8811892640537742, 0.7463383259236869]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3933115165480785, 0.20799177413870873`, 0.9008922254534555], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.262207677698719, 0.13866118275913916`, 0.6005948169689703],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3933115165480785`", ",", "0.20799177413870873`", ",", 
                 "0.9008922254534555`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3933115165480785, 0.20799177413870873`, 0.9008922254534555]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3933115165480785, 0.20799177413870873`, 
         0.9008922254534555}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3933115165480785, 0.20799177413870873`, 0.9008922254534555],
        FrontFaceColor->RGBColor[
         0.3933115165480785, 0.20799177413870873`, 0.9008922254534555],
        BackFaceColor->RGBColor[
         0.3933115165480785, 0.20799177413870873`, 0.9008922254534555],
        GraphicsColor->RGBColor[
         0.3933115165480785, 0.20799177413870873`, 0.9008922254534555],
        FontColor->RGBColor[
         0.3933115165480785, 0.20799177413870873`, 0.9008922254534555]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.48329775162686794`, 0.7494816771532733, 0.8484766867074107], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.32219850108457865`, 0.49965445143551557`, 0.5656511244716071],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.48329775162686794`", ",", "0.7494816771532733`", ",", 
                 "0.8484766867074107`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.48329775162686794`, 0.7494816771532733, 0.8484766867074107]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.48329775162686794`, 0.7494816771532733, 
         0.8484766867074107}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.48329775162686794`, 0.7494816771532733, 0.8484766867074107],
        FrontFaceColor->RGBColor[
         0.48329775162686794`, 0.7494816771532733, 0.8484766867074107],
        BackFaceColor->RGBColor[
         0.48329775162686794`, 0.7494816771532733, 0.8484766867074107],
        GraphicsColor->RGBColor[
         0.48329775162686794`, 0.7494816771532733, 0.8484766867074107],
        FontColor->RGBColor[
         0.48329775162686794`, 0.7494816771532733, 0.8484766867074107]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6934386994474719, 0.5111698667311735, 0.44755803847023934`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.46229246629831466`, 0.34077991115411566`, 0.29837202564682624`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6934386994474719`", ",", "0.5111698667311735`", ",", 
                 "0.44755803847023934`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6934386994474719, 0.5111698667311735, 0.44755803847023934`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6934386994474719, 0.5111698667311735, 
         0.44755803847023934`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6934386994474719, 0.5111698667311735, 0.44755803847023934`],
        FrontFaceColor->RGBColor[
         0.6934386994474719, 0.5111698667311735, 0.44755803847023934`],
        BackFaceColor->RGBColor[
         0.6934386994474719, 0.5111698667311735, 0.44755803847023934`],
        GraphicsColor->RGBColor[
         0.6934386994474719, 0.5111698667311735, 0.44755803847023934`],
        FontColor->RGBColor[
         0.6934386994474719, 0.5111698667311735, 0.44755803847023934`]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.31232299467230096`, 0.008914921093928996, 0.7496912485103266], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.20821532978153398`, 0.0059432807292859975`, 0.4997941656735511],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.31232299467230096`", ",", "0.008914921093928996`", ",", 
                 "0.7496912485103266`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.31232299467230096`, 0.008914921093928996, 0.7496912485103266]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.31232299467230096`, 0.008914921093928996, 
         0.7496912485103266}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.31232299467230096`, 0.008914921093928996, 0.7496912485103266],
        FrontFaceColor->RGBColor[
         0.31232299467230096`, 0.008914921093928996, 0.7496912485103266],
        BackFaceColor->RGBColor[
         0.31232299467230096`, 0.008914921093928996, 0.7496912485103266],
        GraphicsColor->RGBColor[
         0.31232299467230096`, 0.008914921093928996, 0.7496912485103266],
        FontColor->RGBColor[
         0.31232299467230096`, 0.008914921093928996, 0.7496912485103266]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.32768107941840663`, 0.9253610171615732, 0.634860301319546], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.21845405294560444`, 0.6169073447743821, 0.4232402008796973],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.32768107941840663`", ",", "0.9253610171615732`", ",", 
                 "0.634860301319546`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.32768107941840663`, 0.9253610171615732, 0.634860301319546]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.32768107941840663`, 0.9253610171615732, 
         0.634860301319546}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.32768107941840663`, 0.9253610171615732, 0.634860301319546],
        FrontFaceColor->RGBColor[
         0.32768107941840663`, 0.9253610171615732, 0.634860301319546],
        BackFaceColor->RGBColor[
         0.32768107941840663`, 0.9253610171615732, 0.634860301319546],
        GraphicsColor->RGBColor[
         0.32768107941840663`, 0.9253610171615732, 0.634860301319546],
        FontColor->RGBColor[
         0.32768107941840663`, 0.9253610171615732, 0.634860301319546]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.27822039927836717`, 0.4917500639452037, 0.5796484586270407], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1854802661855781, 0.3278333759634692, 0.3864323057513605],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.27822039927836717`", ",", "0.4917500639452037`", ",", 
                 "0.5796484586270407`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.27822039927836717`, 0.4917500639452037, 0.5796484586270407]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.27822039927836717`, 0.4917500639452037, 
         0.5796484586270407}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.27822039927836717`, 0.4917500639452037, 0.5796484586270407],
        FrontFaceColor->RGBColor[
         0.27822039927836717`, 0.4917500639452037, 0.5796484586270407],
        BackFaceColor->RGBColor[
         0.27822039927836717`, 0.4917500639452037, 0.5796484586270407],
        GraphicsColor->RGBColor[
         0.27822039927836717`, 0.4917500639452037, 0.5796484586270407],
        FontColor->RGBColor[
         0.27822039927836717`, 0.4917500639452037, 0.5796484586270407]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6878919106784311, 0.9759574438802359, 0.5449519346865974], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4585946071189541, 0.6506382959201573, 0.36330128979106496`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6878919106784311`", ",", "0.9759574438802359`", ",", 
                 "0.5449519346865974`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6878919106784311, 0.9759574438802359, 0.5449519346865974]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6878919106784311, 0.9759574438802359, 0.5449519346865974}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6878919106784311, 0.9759574438802359, 0.5449519346865974],
        FrontFaceColor->RGBColor[
         0.6878919106784311, 0.9759574438802359, 0.5449519346865974],
        BackFaceColor->RGBColor[
         0.6878919106784311, 0.9759574438802359, 0.5449519346865974],
        GraphicsColor->RGBColor[
         0.6878919106784311, 0.9759574438802359, 0.5449519346865974],
        FontColor->RGBColor[
         0.6878919106784311, 0.9759574438802359, 0.5449519346865974]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7293540672890679, 0.9432176443002536, 0.4261044175674247], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.48623604485937866`, 0.6288117628668357, 0.2840696117116165],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7293540672890679`", ",", "0.9432176443002536`", ",", 
                 "0.4261044175674247`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7293540672890679, 0.9432176443002536, 0.4261044175674247]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7293540672890679, 0.9432176443002536, 0.4261044175674247}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7293540672890679, 0.9432176443002536, 0.4261044175674247],
        FrontFaceColor->RGBColor[
         0.7293540672890679, 0.9432176443002536, 0.4261044175674247],
        BackFaceColor->RGBColor[
         0.7293540672890679, 0.9432176443002536, 0.4261044175674247],
        GraphicsColor->RGBColor[
         0.7293540672890679, 0.9432176443002536, 0.4261044175674247],
        FontColor->RGBColor[
         0.7293540672890679, 0.9432176443002536, 0.4261044175674247]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.22005324370518542`, 0.8681191077455677, 0.48834329734640347`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.14670216247012363`, 0.5787460718303785, 0.3255621982309357],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.22005324370518542`", ",", "0.8681191077455677`", ",", 
                 "0.48834329734640347`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.22005324370518542`, 0.8681191077455677, 0.48834329734640347`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.22005324370518542`, 0.8681191077455677, 
         0.48834329734640347`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.22005324370518542`, 0.8681191077455677, 0.48834329734640347`],
        FrontFaceColor->RGBColor[
         0.22005324370518542`, 0.8681191077455677, 0.48834329734640347`],
        BackFaceColor->RGBColor[
         0.22005324370518542`, 0.8681191077455677, 0.48834329734640347`],
        GraphicsColor->RGBColor[
         0.22005324370518542`, 0.8681191077455677, 0.48834329734640347`],
        FontColor->RGBColor[
         0.22005324370518542`, 0.8681191077455677, 0.48834329734640347`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3756600431018555, 0.19466501657796487`, 0.34261050047093455`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2504400287345704, 0.12977667771864326`, 0.2284070003139564],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3756600431018555`", ",", "0.19466501657796487`", ",", 
                 "0.34261050047093455`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3756600431018555, 0.19466501657796487`, 0.34261050047093455`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3756600431018555, 0.19466501657796487`, 
         0.34261050047093455`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3756600431018555, 0.19466501657796487`, 0.34261050047093455`],
        FrontFaceColor->RGBColor[
         0.3756600431018555, 0.19466501657796487`, 0.34261050047093455`],
        BackFaceColor->RGBColor[
         0.3756600431018555, 0.19466501657796487`, 0.34261050047093455`],
        GraphicsColor->RGBColor[
         0.3756600431018555, 0.19466501657796487`, 0.34261050047093455`],
        FontColor->RGBColor[
         0.3756600431018555, 0.19466501657796487`, 0.34261050047093455`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5978949647959295, 0.7634734917753996, 0.41011190944167564`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3985966431972864, 0.5089823278502664, 0.27340793962778376`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5978949647959295`", ",", "0.7634734917753996`", ",", 
                 "0.41011190944167564`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5978949647959295, 0.7634734917753996, 0.41011190944167564`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5978949647959295, 0.7634734917753996, 
         0.41011190944167564`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5978949647959295, 0.7634734917753996, 0.41011190944167564`],
        FrontFaceColor->RGBColor[
         0.5978949647959295, 0.7634734917753996, 0.41011190944167564`],
        BackFaceColor->RGBColor[
         0.5978949647959295, 0.7634734917753996, 0.41011190944167564`],
        GraphicsColor->RGBColor[
         0.5978949647959295, 0.7634734917753996, 0.41011190944167564`],
        FontColor->RGBColor[
         0.5978949647959295, 0.7634734917753996, 0.41011190944167564`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8549195900576991, 0.7081795094917951, 0.4508579524756109], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5699463933717994, 0.47211967299453006`, 0.30057196831707395`],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8549195900576991`", ",", "0.7081795094917951`", ",", 
                 "0.4508579524756109`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8549195900576991, 0.7081795094917951, 0.4508579524756109]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8549195900576991, 0.7081795094917951, 0.4508579524756109}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8549195900576991, 0.7081795094917951, 0.4508579524756109],
        FrontFaceColor->RGBColor[
         0.8549195900576991, 0.7081795094917951, 0.4508579524756109],
        BackFaceColor->RGBColor[
         0.8549195900576991, 0.7081795094917951, 0.4508579524756109],
        GraphicsColor->RGBColor[
         0.8549195900576991, 0.7081795094917951, 0.4508579524756109],
        FontColor->RGBColor[
         0.8549195900576991, 0.7081795094917951, 0.4508579524756109]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7872539380805179, 0.9203883507796375, 0.4006835857251376], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5248359587203453, 0.6135922338530917, 0.2671223904834251],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7872539380805179`", ",", "0.9203883507796375`", ",", 
                 "0.4006835857251376`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7872539380805179, 0.9203883507796375, 0.4006835857251376]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7872539380805179, 0.9203883507796375, 0.4006835857251376}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7872539380805179, 0.9203883507796375, 0.4006835857251376],
        FrontFaceColor->RGBColor[
         0.7872539380805179, 0.9203883507796375, 0.4006835857251376],
        BackFaceColor->RGBColor[
         0.7872539380805179, 0.9203883507796375, 0.4006835857251376],
        GraphicsColor->RGBColor[
         0.7872539380805179, 0.9203883507796375, 0.4006835857251376],
        FontColor->RGBColor[
         0.7872539380805179, 0.9203883507796375, 0.4006835857251376]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8952841290455009, 0.18998176198832506`, 0.09342441836176807], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.596856086030334, 0.12665450799221672`, 0.06228294557451205],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8952841290455009`", ",", "0.18998176198832506`", ",", 
                 "0.09342441836176807`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8952841290455009, 0.18998176198832506`, 0.09342441836176807]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8952841290455009, 0.18998176198832506`, 
         0.09342441836176807}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Red\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8952841290455009, 0.18998176198832506`, 0.09342441836176807],
        FrontFaceColor->RGBColor[
         0.8952841290455009, 0.18998176198832506`, 0.09342441836176807],
        BackFaceColor->RGBColor[
         0.8952841290455009, 0.18998176198832506`, 0.09342441836176807],
        GraphicsColor->RGBColor[
         0.8952841290455009, 0.18998176198832506`, 0.09342441836176807],
        FontColor->RGBColor[
         0.8952841290455009, 0.18998176198832506`, 0.09342441836176807]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.935574267389734, 0.10922667930086782`, 0.5196524334749109], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6237161782598227, 0.07281778620057855, 0.3464349556499406],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.935574267389734`", ",", "0.10922667930086782`", ",", 
                 "0.5196524334749109`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.935574267389734, 0.10922667930086782`, 0.5196524334749109]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.935574267389734, 0.10922667930086782`, 
         0.5196524334749109}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.935574267389734, 0.10922667930086782`, 0.5196524334749109],
        FrontFaceColor->RGBColor[
         0.935574267389734, 0.10922667930086782`, 0.5196524334749109],
        BackFaceColor->RGBColor[
         0.935574267389734, 0.10922667930086782`, 0.5196524334749109],
        GraphicsColor->RGBColor[
         0.935574267389734, 0.10922667930086782`, 0.5196524334749109],
        FontColor->RGBColor[
         0.935574267389734, 0.10922667930086782`, 0.5196524334749109]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.12864806503541826`, 0.45900475661266915`, 0.7284013134960694], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.08576537669027884, 0.30600317107511277`, 0.4856008756640463],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.12864806503541826`", ",", "0.45900475661266915`", ",", 
                 "0.7284013134960694`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.12864806503541826`, 0.45900475661266915`, 0.7284013134960694]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.12864806503541826`, 0.45900475661266915`, 
         0.7284013134960694}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.12864806503541826`, 0.45900475661266915`, 0.7284013134960694],
        FrontFaceColor->RGBColor[
         0.12864806503541826`, 0.45900475661266915`, 0.7284013134960694],
        BackFaceColor->RGBColor[
         0.12864806503541826`, 0.45900475661266915`, 0.7284013134960694],
        GraphicsColor->RGBColor[
         0.12864806503541826`, 0.45900475661266915`, 0.7284013134960694],
        FontColor->RGBColor[
         0.12864806503541826`, 0.45900475661266915`, 0.7284013134960694]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.04789400642905517, 0.8389590922272074, 0.09272787095766244], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.03192933761937011, 0.559306061484805, 0.06181858063844163],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.04789400642905517`", ",", "0.8389590922272074`", ",", 
                 "0.09272787095766244`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.04789400642905517, 0.8389590922272074, 0.09272787095766244]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.04789400642905517, 0.8389590922272074, 
         0.09272787095766244}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.04789400642905517, 0.8389590922272074, 0.09272787095766244],
        FrontFaceColor->RGBColor[
         0.04789400642905517, 0.8389590922272074, 0.09272787095766244],
        BackFaceColor->RGBColor[
         0.04789400642905517, 0.8389590922272074, 0.09272787095766244],
        GraphicsColor->RGBColor[
         0.04789400642905517, 0.8389590922272074, 0.09272787095766244],
        FontColor->RGBColor[
         0.04789400642905517, 0.8389590922272074, 0.09272787095766244]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.536059509910771, 0.7876742473990161, 0.9314675089795161], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3573730066071807, 0.5251161649326774, 0.6209783393196775],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.536059509910771`", ",", "0.7876742473990161`", ",", 
                 "0.9314675089795161`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.536059509910771, 0.7876742473990161, 0.9314675089795161]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.536059509910771, 0.7876742473990161, 0.9314675089795161}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.536059509910771, 0.7876742473990161, 0.9314675089795161],
        FrontFaceColor->RGBColor[
         0.536059509910771, 0.7876742473990161, 0.9314675089795161],
        BackFaceColor->RGBColor[
         0.536059509910771, 0.7876742473990161, 0.9314675089795161],
        GraphicsColor->RGBColor[
         0.536059509910771, 0.7876742473990161, 0.9314675089795161],
        FontColor->RGBColor[
         0.536059509910771, 0.7876742473990161, 0.9314675089795161]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6987217550208835, 0.33312200307399764`, 0.7480688709326524], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4658145033472557, 0.2220813353826651, 0.49871258062176826`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6987217550208835`", ",", "0.33312200307399764`", ",", 
                 "0.7480688709326524`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6987217550208835, 0.33312200307399764`, 0.7480688709326524]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6987217550208835, 0.33312200307399764`, 
         0.7480688709326524}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6987217550208835, 0.33312200307399764`, 0.7480688709326524],
        FrontFaceColor->RGBColor[
         0.6987217550208835, 0.33312200307399764`, 0.7480688709326524],
        BackFaceColor->RGBColor[
         0.6987217550208835, 0.33312200307399764`, 0.7480688709326524],
        GraphicsColor->RGBColor[
         0.6987217550208835, 0.33312200307399764`, 0.7480688709326524],
        FontColor->RGBColor[
         0.6987217550208835, 0.33312200307399764`, 0.7480688709326524]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8200433715850066, 0.9992042519542765, 0.6955907921726414], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5466955810566712, 0.6661361679695177, 0.46372719478176094`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8200433715850066`", ",", "0.9992042519542765`", ",", 
                 "0.6955907921726414`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8200433715850066, 0.9992042519542765, 0.6955907921726414]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8200433715850066, 0.9992042519542765, 0.6955907921726414}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8200433715850066, 0.9992042519542765, 0.6955907921726414],
        FrontFaceColor->RGBColor[
         0.8200433715850066, 0.9992042519542765, 0.6955907921726414],
        BackFaceColor->RGBColor[
         0.8200433715850066, 0.9992042519542765, 0.6955907921726414],
        GraphicsColor->RGBColor[
         0.8200433715850066, 0.9992042519542765, 0.6955907921726414],
        FontColor->RGBColor[
         0.8200433715850066, 0.9992042519542765, 0.6955907921726414]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.38437306737475674`, 0.6003057531548479, 0.38614915553663076`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2562487115831712, 0.4002038354365653, 0.25743277035775386`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.38437306737475674`", ",", "0.6003057531548479`", ",", 
                 "0.38614915553663076`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.38437306737475674`, 0.6003057531548479, 0.38614915553663076`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.38437306737475674`, 0.6003057531548479, 
         0.38614915553663076`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.38437306737475674`, 0.6003057531548479, 0.38614915553663076`],
        FrontFaceColor->RGBColor[
         0.38437306737475674`, 0.6003057531548479, 0.38614915553663076`],
        BackFaceColor->RGBColor[
         0.38437306737475674`, 0.6003057531548479, 0.38614915553663076`],
        GraphicsColor->RGBColor[
         0.38437306737475674`, 0.6003057531548479, 0.38614915553663076`],
        FontColor->RGBColor[
         0.38437306737475674`, 0.6003057531548479, 0.38614915553663076`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.295483667156067, 0.9070729416185586, 0.5525375160553119], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.19698911143737802`, 0.6047152944123724, 0.3683583440368746],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.295483667156067`", ",", "0.9070729416185586`", ",", 
                 "0.5525375160553119`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.295483667156067, 0.9070729416185586, 0.5525375160553119]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.295483667156067, 0.9070729416185586, 0.5525375160553119}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.295483667156067, 0.9070729416185586, 0.5525375160553119],
        FrontFaceColor->RGBColor[
         0.295483667156067, 0.9070729416185586, 0.5525375160553119],
        BackFaceColor->RGBColor[
         0.295483667156067, 0.9070729416185586, 0.5525375160553119],
        GraphicsColor->RGBColor[
         0.295483667156067, 0.9070729416185586, 0.5525375160553119],
        FontColor->RGBColor[
         0.295483667156067, 0.9070729416185586, 0.5525375160553119]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3504845240079446, 0.6923590705559426, 0.22938947019838252`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.23365634933862975`, 0.46157271370396175`, 0.15292631346558835`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3504845240079446`", ",", "0.6923590705559426`", ",", 
                 "0.22938947019838252`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3504845240079446, 0.6923590705559426, 0.22938947019838252`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3504845240079446, 0.6923590705559426, 
         0.22938947019838252`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3504845240079446, 0.6923590705559426, 0.22938947019838252`],
        FrontFaceColor->RGBColor[
         0.3504845240079446, 0.6923590705559426, 0.22938947019838252`],
        BackFaceColor->RGBColor[
         0.3504845240079446, 0.6923590705559426, 0.22938947019838252`],
        GraphicsColor->RGBColor[
         0.3504845240079446, 0.6923590705559426, 0.22938947019838252`],
        FontColor->RGBColor[
         0.3504845240079446, 0.6923590705559426, 0.22938947019838252`]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8003453674876826, 0.5538236129500953, 0.15176634390524635`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5335635783251218, 0.36921574196673024`, 0.10117756260349757`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8003453674876826`", ",", "0.5538236129500953`", ",", 
                 "0.15176634390524635`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8003453674876826, 0.5538236129500953, 0.15176634390524635`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8003453674876826, 0.5538236129500953, 
         0.15176634390524635`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8003453674876826, 0.5538236129500953, 0.15176634390524635`],
        FrontFaceColor->RGBColor[
         0.8003453674876826, 0.5538236129500953, 0.15176634390524635`],
        BackFaceColor->RGBColor[
         0.8003453674876826, 0.5538236129500953, 0.15176634390524635`],
        GraphicsColor->RGBColor[
         0.8003453674876826, 0.5538236129500953, 0.15176634390524635`],
        FontColor->RGBColor[
         0.8003453674876826, 0.5538236129500953, 0.15176634390524635`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6723089571714849, 0.5766881363148331, 0.966510291348998], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4482059714476566, 0.38445875754322206`, 0.6443401942326654],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6723089571714849`", ",", "0.5766881363148331`", ",", 
                 "0.966510291348998`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6723089571714849, 0.5766881363148331, 0.966510291348998]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6723089571714849, 0.5766881363148331, 0.966510291348998}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6723089571714849, 0.5766881363148331, 0.966510291348998],
        FrontFaceColor->RGBColor[
         0.6723089571714849, 0.5766881363148331, 0.966510291348998],
        BackFaceColor->RGBColor[
         0.6723089571714849, 0.5766881363148331, 0.966510291348998],
        GraphicsColor->RGBColor[
         0.6723089571714849, 0.5766881363148331, 0.966510291348998],
        FontColor->RGBColor[
         0.6723089571714849, 0.5766881363148331, 0.966510291348998]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7543630717262333, 0.6226984533963553, 0.0026569772076217024`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5029087144841555, 0.4151323022642369, 0.0017713181384144683`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7543630717262333`", ",", "0.6226984533963553`", ",", 
                 "0.0026569772076217024`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7543630717262333, 0.6226984533963553, 0.0026569772076217024`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7543630717262333, 0.6226984533963553, 
         0.0026569772076217024`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7543630717262333, 0.6226984533963553, 0.0026569772076217024`],
        FrontFaceColor->RGBColor[
         0.7543630717262333, 0.6226984533963553, 0.0026569772076217024`],
        BackFaceColor->RGBColor[
         0.7543630717262333, 0.6226984533963553, 0.0026569772076217024`],
        GraphicsColor->RGBColor[
         0.7543630717262333, 0.6226984533963553, 0.0026569772076217024`],
        FontColor->RGBColor[
         0.7543630717262333, 0.6226984533963553, 0.0026569772076217024`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9557957733367588, 0.8170326909587593, 0.03345657947988756], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6371971822245059, 0.5446884606391729, 0.02230438631992504],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9557957733367588`", ",", "0.8170326909587593`", ",", 
                 "0.03345657947988756`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9557957733367588, 0.8170326909587593, 0.03345657947988756]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9557957733367588, 0.8170326909587593, 
         0.03345657947988756}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9557957733367588, 0.8170326909587593, 0.03345657947988756],
        FrontFaceColor->RGBColor[
         0.9557957733367588, 0.8170326909587593, 0.03345657947988756],
        BackFaceColor->RGBColor[
         0.9557957733367588, 0.8170326909587593, 0.03345657947988756],
        GraphicsColor->RGBColor[
         0.9557957733367588, 0.8170326909587593, 0.03345657947988756],
        FontColor->RGBColor[
         0.9557957733367588, 0.8170326909587593, 0.03345657947988756]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5004280578526694, 0.4949568088479519, 0.04590538791250309], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33361870523511294`, 0.3299712058986346, 0.03060359194166873],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5004280578526694`", ",", "0.4949568088479519`", ",", 
                 "0.04590538791250309`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5004280578526694, 0.4949568088479519, 0.04590538791250309]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5004280578526694, 0.4949568088479519, 
         0.04590538791250309}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5004280578526694, 0.4949568088479519, 0.04590538791250309],
        FrontFaceColor->RGBColor[
         0.5004280578526694, 0.4949568088479519, 0.04590538791250309],
        BackFaceColor->RGBColor[
         0.5004280578526694, 0.4949568088479519, 0.04590538791250309],
        GraphicsColor->RGBColor[
         0.5004280578526694, 0.4949568088479519, 0.04590538791250309],
        FontColor->RGBColor[
         0.5004280578526694, 0.4949568088479519, 0.04590538791250309]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.43277438459469586`, 0.8940383934578455, 0.3031593206470218], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.28851625639646394`, 0.5960255956385637, 0.2021062137646812],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.43277438459469586`", ",", "0.8940383934578455`", ",", 
                 "0.3031593206470218`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.43277438459469586`, 0.8940383934578455, 0.3031593206470218]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.43277438459469586`, 0.8940383934578455, 
         0.3031593206470218}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.43277438459469586`, 0.8940383934578455, 0.3031593206470218],
        FrontFaceColor->RGBColor[
         0.43277438459469586`, 0.8940383934578455, 0.3031593206470218],
        BackFaceColor->RGBColor[
         0.43277438459469586`, 0.8940383934578455, 0.3031593206470218],
        GraphicsColor->RGBColor[
         0.43277438459469586`, 0.8940383934578455, 0.3031593206470218],
        FontColor->RGBColor[
         0.43277438459469586`, 0.8940383934578455, 0.3031593206470218]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.008868405140008306, 0.2650658877326959, 0.33077502703367134`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.005912270093338871, 0.17671059182179727`, 0.22051668468911423`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.008868405140008306`", ",", "0.2650658877326959`", ",", 
                 "0.33077502703367134`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.008868405140008306, 0.2650658877326959, 0.33077502703367134`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.008868405140008306, 0.2650658877326959, 
         0.33077502703367134`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Black\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.008868405140008306, 0.2650658877326959, 0.33077502703367134`],
        FrontFaceColor->RGBColor[
         0.008868405140008306, 0.2650658877326959, 0.33077502703367134`],
        BackFaceColor->RGBColor[
         0.008868405140008306, 0.2650658877326959, 0.33077502703367134`],
        GraphicsColor->RGBColor[
         0.008868405140008306, 0.2650658877326959, 0.33077502703367134`],
        FontColor->RGBColor[
         0.008868405140008306, 0.2650658877326959, 0.33077502703367134`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.40877422857862267`, 0.4598044171792184, 0.5403279973349617], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.27251615238574844`, 0.3065362781194789, 0.3602186648899745],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.40877422857862267`", ",", "0.4598044171792184`", ",", 
                 "0.5403279973349617`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.40877422857862267`, 0.4598044171792184, 0.5403279973349617]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.40877422857862267`, 0.4598044171792184, 
         0.5403279973349617}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.40877422857862267`, 0.4598044171792184, 0.5403279973349617],
        FrontFaceColor->RGBColor[
         0.40877422857862267`, 0.4598044171792184, 0.5403279973349617],
        BackFaceColor->RGBColor[
         0.40877422857862267`, 0.4598044171792184, 0.5403279973349617],
        GraphicsColor->RGBColor[
         0.40877422857862267`, 0.4598044171792184, 0.5403279973349617],
        FontColor->RGBColor[
         0.40877422857862267`, 0.4598044171792184, 0.5403279973349617]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4609508966317222, 0.964044014983426, 0.8807926587373829], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3073005977544815, 0.6426960099889507, 0.587195105824922],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4609508966317222`", ",", "0.964044014983426`", ",", 
                 "0.8807926587373829`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4609508966317222, 0.964044014983426, 0.8807926587373829]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4609508966317222, 0.964044014983426, 0.8807926587373829}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4609508966317222, 0.964044014983426, 0.8807926587373829],
        FrontFaceColor->RGBColor[
         0.4609508966317222, 0.964044014983426, 0.8807926587373829],
        BackFaceColor->RGBColor[
         0.4609508966317222, 0.964044014983426, 0.8807926587373829],
        GraphicsColor->RGBColor[
         0.4609508966317222, 0.964044014983426, 0.8807926587373829],
        FontColor->RGBColor[
         0.4609508966317222, 0.964044014983426, 0.8807926587373829]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.08868225360137139, 0.7254238742355021, 0.8286219741445249], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.05912150240091426, 0.48361591615700145`, 0.5524146494296833],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.08868225360137139`", ",", "0.7254238742355021`", ",", 
                 "0.8286219741445249`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.08868225360137139, 0.7254238742355021, 0.8286219741445249]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.08868225360137139, 0.7254238742355021, 
         0.8286219741445249}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08868225360137139, 0.7254238742355021, 0.8286219741445249],
        FrontFaceColor->RGBColor[
         0.08868225360137139, 0.7254238742355021, 0.8286219741445249],
        BackFaceColor->RGBColor[
         0.08868225360137139, 0.7254238742355021, 0.8286219741445249],
        GraphicsColor->RGBColor[
         0.08868225360137139, 0.7254238742355021, 0.8286219741445249],
        FontColor->RGBColor[
         0.08868225360137139, 0.7254238742355021, 0.8286219741445249]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6114425666090517, 0.951679974073772, 0.7690135731233441], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.40762837773936783`, 0.6344533160491814, 0.5126757154155628],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6114425666090517`", ",", "0.951679974073772`", ",", 
                 "0.7690135731233441`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6114425666090517, 0.951679974073772, 0.7690135731233441]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6114425666090517, 0.951679974073772, 0.7690135731233441}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6114425666090517, 0.951679974073772, 0.7690135731233441],
        FrontFaceColor->RGBColor[
         0.6114425666090517, 0.951679974073772, 0.7690135731233441],
        BackFaceColor->RGBColor[
         0.6114425666090517, 0.951679974073772, 0.7690135731233441],
        GraphicsColor->RGBColor[
         0.6114425666090517, 0.951679974073772, 0.7690135731233441],
        FontColor->RGBColor[
         0.6114425666090517, 0.951679974073772, 0.7690135731233441]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.1463805721674971, 0.1349491457730927, 0.19375475594904024`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.09758704811166474, 0.0899660971820618, 0.12916983729936016`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.1463805721674971`", ",", "0.1349491457730927`", ",", 
                 "0.19375475594904024`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.1463805721674971, 0.1349491457730927, 0.19375475594904024`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.1463805721674971, 0.1349491457730927, 
         0.19375475594904024`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Black\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.1463805721674971, 0.1349491457730927, 0.19375475594904024`],
        FrontFaceColor->RGBColor[
         0.1463805721674971, 0.1349491457730927, 0.19375475594904024`],
        BackFaceColor->RGBColor[
         0.1463805721674971, 0.1349491457730927, 0.19375475594904024`],
        GraphicsColor->RGBColor[
         0.1463805721674971, 0.1349491457730927, 0.19375475594904024`],
        FontColor->RGBColor[
         0.1463805721674971, 0.1349491457730927, 0.19375475594904024`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.19473209796773316`, 0.294941728994653, 0.18219728075279917`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.12982139864515546`, 0.19662781932976867`, 0.12146485383519945`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.19473209796773316`", ",", "0.294941728994653`", ",", 
                 "0.18219728075279917`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.19473209796773316`, 0.294941728994653, 0.18219728075279917`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.19473209796773316`, 0.294941728994653, 
         0.18219728075279917`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.19473209796773316`, 0.294941728994653, 0.18219728075279917`],
        FrontFaceColor->RGBColor[
         0.19473209796773316`, 0.294941728994653, 0.18219728075279917`],
        BackFaceColor->RGBColor[
         0.19473209796773316`, 0.294941728994653, 0.18219728075279917`],
        GraphicsColor->RGBColor[
         0.19473209796773316`, 0.294941728994653, 0.18219728075279917`],
        FontColor->RGBColor[
         0.19473209796773316`, 0.294941728994653, 0.18219728075279917`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.30701851301457617`, 0.7695358002341057, 0.8683559719258458], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2046790086763841, 0.5130238668227372, 0.5789039812838972],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.30701851301457617`", ",", "0.7695358002341057`", ",", 
                 "0.8683559719258458`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.30701851301457617`, 0.7695358002341057, 0.8683559719258458]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.30701851301457617`, 0.7695358002341057, 
         0.8683559719258458}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.30701851301457617`, 0.7695358002341057, 0.8683559719258458],
        FrontFaceColor->RGBColor[
         0.30701851301457617`, 0.7695358002341057, 0.8683559719258458],
        BackFaceColor->RGBColor[
         0.30701851301457617`, 0.7695358002341057, 0.8683559719258458],
        GraphicsColor->RGBColor[
         0.30701851301457617`, 0.7695358002341057, 0.8683559719258458],
        FontColor->RGBColor[
         0.30701851301457617`, 0.7695358002341057, 0.8683559719258458]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8761935294245935, 0.5600186228822843, 0.3807645478866948], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5841290196163957, 0.3733457485881896, 0.2538430319244632],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8761935294245935`", ",", "0.5600186228822843`", ",", 
                 "0.3807645478866948`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8761935294245935, 0.5600186228822843, 0.3807645478866948]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8761935294245935, 0.5600186228822843, 0.3807645478866948}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8761935294245935, 0.5600186228822843, 0.3807645478866948],
        FrontFaceColor->RGBColor[
         0.8761935294245935, 0.5600186228822843, 0.3807645478866948],
        BackFaceColor->RGBColor[
         0.8761935294245935, 0.5600186228822843, 0.3807645478866948],
        GraphicsColor->RGBColor[
         0.8761935294245935, 0.5600186228822843, 0.3807645478866948],
        FontColor->RGBColor[
         0.8761935294245935, 0.5600186228822843, 0.3807645478866948]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6447188714251655, 0.17910245283425574`, 0.5295264387988154], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4298125809501103, 0.11940163522283717`, 0.353017625865877],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6447188714251655`", ",", "0.17910245283425574`", ",", 
                 "0.5295264387988154`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6447188714251655, 0.17910245283425574`, 0.5295264387988154]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6447188714251655, 0.17910245283425574`, 
         0.5295264387988154}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6447188714251655, 0.17910245283425574`, 0.5295264387988154],
        FrontFaceColor->RGBColor[
         0.6447188714251655, 0.17910245283425574`, 0.5295264387988154],
        BackFaceColor->RGBColor[
         0.6447188714251655, 0.17910245283425574`, 0.5295264387988154],
        GraphicsColor->RGBColor[
         0.6447188714251655, 0.17910245283425574`, 0.5295264387988154],
        FontColor->RGBColor[
         0.6447188714251655, 0.17910245283425574`, 0.5295264387988154]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.03236884163631637, 0.2367124857741274, 0.618273168638305], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.02157922775754425, 0.15780832384941829`, 0.41218211242553665`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.03236884163631637`", ",", "0.2367124857741274`", ",", 
                 "0.618273168638305`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.03236884163631637, 0.2367124857741274, 0.618273168638305]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.03236884163631637, 0.2367124857741274, 0.618273168638305}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.03236884163631637, 0.2367124857741274, 0.618273168638305],
        FrontFaceColor->RGBColor[
         0.03236884163631637, 0.2367124857741274, 0.618273168638305],
        BackFaceColor->RGBColor[
         0.03236884163631637, 0.2367124857741274, 0.618273168638305],
        GraphicsColor->RGBColor[
         0.03236884163631637, 0.2367124857741274, 0.618273168638305],
        FontColor->RGBColor[
         0.03236884163631637, 0.2367124857741274, 0.618273168638305]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.19843514892546965`, 0.027830217663067147`, 
              0.08942844848597065], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.13229009928364643`, 0.018553478442044767`, 0.05961896565731377],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.19843514892546965`", ",", "0.027830217663067147`", ",", 
                 "0.08942844848597065`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.19843514892546965`, 0.027830217663067147`, 
               0.08942844848597065]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.19843514892546965`, 0.027830217663067147`, 
         0.08942844848597065}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Black\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.19843514892546965`, 0.027830217663067147`, 0.08942844848597065],
        FrontFaceColor->RGBColor[
         0.19843514892546965`, 0.027830217663067147`, 0.08942844848597065],
        BackFaceColor->RGBColor[
         0.19843514892546965`, 0.027830217663067147`, 0.08942844848597065],
        GraphicsColor->RGBColor[
         0.19843514892546965`, 0.027830217663067147`, 0.08942844848597065],
        FontColor->RGBColor[
         0.19843514892546965`, 0.027830217663067147`, 0.08942844848597065]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7284759248479398, 0.8611497436293576, 0.4665001706467675], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4856506165652932, 0.5740998290862385, 0.3110001137645117],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7284759248479398`", ",", "0.8611497436293576`", ",", 
                 "0.4665001706467675`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7284759248479398, 0.8611497436293576, 0.4665001706467675]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7284759248479398, 0.8611497436293576, 0.4665001706467675}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7284759248479398, 0.8611497436293576, 0.4665001706467675],
        FrontFaceColor->RGBColor[
         0.7284759248479398, 0.8611497436293576, 0.4665001706467675],
        BackFaceColor->RGBColor[
         0.7284759248479398, 0.8611497436293576, 0.4665001706467675],
        GraphicsColor->RGBColor[
         0.7284759248479398, 0.8611497436293576, 0.4665001706467675],
        FontColor->RGBColor[
         0.7284759248479398, 0.8611497436293576, 0.4665001706467675]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.40220577832785454`, 0.16185583351237232`, 
              0.19919095304907652`], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.268137185551903, 0.10790388900824821`, 0.13279396869938437`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.40220577832785454`", ",", "0.16185583351237232`", ",", 
                 "0.19919095304907652`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.40220577832785454`, 0.16185583351237232`, 
               0.19919095304907652`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.40220577832785454`, 0.16185583351237232`, 
         0.19919095304907652`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.40220577832785454`, 0.16185583351237232`, 0.19919095304907652`],
        FrontFaceColor->RGBColor[
         0.40220577832785454`, 0.16185583351237232`, 0.19919095304907652`],
        BackFaceColor->RGBColor[
         0.40220577832785454`, 0.16185583351237232`, 0.19919095304907652`],
        GraphicsColor->RGBColor[
         0.40220577832785454`, 0.16185583351237232`, 0.19919095304907652`],
        FontColor->RGBColor[
         0.40220577832785454`, 0.16185583351237232`, 0.19919095304907652`]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9907840800395151, 0.04631736418623733, 0.18552509765494607`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6605227200263435, 0.03087824279082489, 0.12368339843663072`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9907840800395151`", ",", "0.04631736418623733`", ",", 
                 "0.18552509765494607`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9907840800395151, 0.04631736418623733, 0.18552509765494607`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9907840800395151, 0.04631736418623733, 
         0.18552509765494607`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Red\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9907840800395151, 0.04631736418623733, 0.18552509765494607`],
        FrontFaceColor->RGBColor[
         0.9907840800395151, 0.04631736418623733, 0.18552509765494607`],
        BackFaceColor->RGBColor[
         0.9907840800395151, 0.04631736418623733, 0.18552509765494607`],
        GraphicsColor->RGBColor[
         0.9907840800395151, 0.04631736418623733, 0.18552509765494607`],
        FontColor->RGBColor[
         0.9907840800395151, 0.04631736418623733, 0.18552509765494607`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5040445681058208, 0.26054063034909003`, 0.20660945329130764`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3360297120705472, 0.17369375356606004`, 0.13773963552753843`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5040445681058208`", ",", "0.26054063034909003`", ",", 
                 "0.20660945329130764`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5040445681058208, 0.26054063034909003`, 0.20660945329130764`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5040445681058208, 0.26054063034909003`, 
         0.20660945329130764`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5040445681058208, 0.26054063034909003`, 0.20660945329130764`],
        FrontFaceColor->RGBColor[
         0.5040445681058208, 0.26054063034909003`, 0.20660945329130764`],
        BackFaceColor->RGBColor[
         0.5040445681058208, 0.26054063034909003`, 0.20660945329130764`],
        GraphicsColor->RGBColor[
         0.5040445681058208, 0.26054063034909003`, 0.20660945329130764`],
        FontColor->RGBColor[
         0.5040445681058208, 0.26054063034909003`, 0.20660945329130764`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5068055932990307, 0.5886415672152858, 0.6346235654493535], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33787039553268716`, 0.39242771147685723`, 0.4230823769662357],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5068055932990307`", ",", "0.5886415672152858`", ",", 
                 "0.6346235654493535`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5068055932990307, 0.5886415672152858, 0.6346235654493535]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5068055932990307, 0.5886415672152858, 0.6346235654493535}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5068055932990307, 0.5886415672152858, 0.6346235654493535],
        FrontFaceColor->RGBColor[
         0.5068055932990307, 0.5886415672152858, 0.6346235654493535],
        BackFaceColor->RGBColor[
         0.5068055932990307, 0.5886415672152858, 0.6346235654493535],
        GraphicsColor->RGBColor[
         0.5068055932990307, 0.5886415672152858, 0.6346235654493535],
        FontColor->RGBColor[
         0.5068055932990307, 0.5886415672152858, 0.6346235654493535]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.13570003005489029`, 0.8801074585893187, 0.6398947776762163], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.09046668670326019, 0.5867383057262126, 0.42659651845081087`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.13570003005489029`", ",", "0.8801074585893187`", ",", 
                 "0.6398947776762163`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.13570003005489029`, 0.8801074585893187, 0.6398947776762163]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.13570003005489029`, 0.8801074585893187, 
         0.6398947776762163}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.13570003005489029`, 0.8801074585893187, 0.6398947776762163],
        FrontFaceColor->RGBColor[
         0.13570003005489029`, 0.8801074585893187, 0.6398947776762163],
        BackFaceColor->RGBColor[
         0.13570003005489029`, 0.8801074585893187, 0.6398947776762163],
        GraphicsColor->RGBColor[
         0.13570003005489029`, 0.8801074585893187, 0.6398947776762163],
        FontColor->RGBColor[
         0.13570003005489029`, 0.8801074585893187, 0.6398947776762163]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.506774810114407, 0.2722450332982278, 0.7106429022479448], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33784987340960465`, 0.1814966888654852, 0.4737619348319632],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.506774810114407`", ",", "0.2722450332982278`", ",", 
                 "0.7106429022479448`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.506774810114407, 0.2722450332982278, 0.7106429022479448]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.506774810114407, 0.2722450332982278, 0.7106429022479448}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.506774810114407, 0.2722450332982278, 0.7106429022479448],
        FrontFaceColor->RGBColor[
         0.506774810114407, 0.2722450332982278, 0.7106429022479448],
        BackFaceColor->RGBColor[
         0.506774810114407, 0.2722450332982278, 0.7106429022479448],
        GraphicsColor->RGBColor[
         0.506774810114407, 0.2722450332982278, 0.7106429022479448],
        FontColor->RGBColor[
         0.506774810114407, 0.2722450332982278, 0.7106429022479448]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.47183612299213995`, 0.9086908813934698, 0.02193267653170694], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.31455741532809334`, 0.6057939209289799, 0.014621784354471295`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.47183612299213995`", ",", "0.9086908813934698`", ",", 
                 "0.02193267653170694`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.47183612299213995`, 0.9086908813934698, 0.02193267653170694]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.47183612299213995`, 0.9086908813934698, 
         0.02193267653170694}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.47183612299213995`, 0.9086908813934698, 0.02193267653170694],
        FrontFaceColor->RGBColor[
         0.47183612299213995`, 0.9086908813934698, 0.02193267653170694],
        BackFaceColor->RGBColor[
         0.47183612299213995`, 0.9086908813934698, 0.02193267653170694],
        GraphicsColor->RGBColor[
         0.47183612299213995`, 0.9086908813934698, 0.02193267653170694],
        FontColor->RGBColor[
         0.47183612299213995`, 0.9086908813934698, 0.02193267653170694]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5108070820722694, 0.2380738290576745, 0.3767085625560094], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3405380547148463, 0.15871588603844966`, 0.25113904170400625`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5108070820722694`", ",", "0.2380738290576745`", ",", 
                 "0.3767085625560094`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5108070820722694, 0.2380738290576745, 0.3767085625560094]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5108070820722694, 0.2380738290576745, 0.3767085625560094}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5108070820722694, 0.2380738290576745, 0.3767085625560094],
        FrontFaceColor->RGBColor[
         0.5108070820722694, 0.2380738290576745, 0.3767085625560094],
        BackFaceColor->RGBColor[
         0.5108070820722694, 0.2380738290576745, 0.3767085625560094],
        GraphicsColor->RGBColor[
         0.5108070820722694, 0.2380738290576745, 0.3767085625560094],
        FontColor->RGBColor[
         0.5108070820722694, 0.2380738290576745, 0.3767085625560094]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6258895424701378, 0.9809623561471532, 0.14616223186991406`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4172596949800919, 0.6539749040981022, 0.09744148791327605],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6258895424701378`", ",", "0.9809623561471532`", ",", 
                 "0.14616223186991406`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6258895424701378, 0.9809623561471532, 0.14616223186991406`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6258895424701378, 0.9809623561471532, 
         0.14616223186991406`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6258895424701378, 0.9809623561471532, 0.14616223186991406`],
        FrontFaceColor->RGBColor[
         0.6258895424701378, 0.9809623561471532, 0.14616223186991406`],
        BackFaceColor->RGBColor[
         0.6258895424701378, 0.9809623561471532, 0.14616223186991406`],
        GraphicsColor->RGBColor[
         0.6258895424701378, 0.9809623561471532, 0.14616223186991406`],
        FontColor->RGBColor[
         0.6258895424701378, 0.9809623561471532, 0.14616223186991406`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.43269530491170194`, 0.1439505326328807, 0.3866967963413146], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.28846353660780133`, 0.09596702175525382, 0.2577978642275431],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.43269530491170194`", ",", "0.1439505326328807`", ",", 
                 "0.3866967963413146`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.43269530491170194`, 0.1439505326328807, 0.3866967963413146]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.43269530491170194`, 0.1439505326328807, 
         0.3866967963413146}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.43269530491170194`, 0.1439505326328807, 0.3866967963413146],
        FrontFaceColor->RGBColor[
         0.43269530491170194`, 0.1439505326328807, 0.3866967963413146],
        BackFaceColor->RGBColor[
         0.43269530491170194`, 0.1439505326328807, 0.3866967963413146],
        GraphicsColor->RGBColor[
         0.43269530491170194`, 0.1439505326328807, 0.3866967963413146],
        FontColor->RGBColor[
         0.43269530491170194`, 0.1439505326328807, 0.3866967963413146]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7839248244306052, 0.7883244146872739, 0.0503145526249662], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5226165496204035, 0.525549609791516, 0.0335430350833108],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7839248244306052`", ",", "0.7883244146872739`", ",", 
                 "0.0503145526249662`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7839248244306052, 0.7883244146872739, 0.0503145526249662]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7839248244306052, 0.7883244146872739, 0.0503145526249662}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7839248244306052, 0.7883244146872739, 0.0503145526249662],
        FrontFaceColor->RGBColor[
         0.7839248244306052, 0.7883244146872739, 0.0503145526249662],
        BackFaceColor->RGBColor[
         0.7839248244306052, 0.7883244146872739, 0.0503145526249662],
        GraphicsColor->RGBColor[
         0.7839248244306052, 0.7883244146872739, 0.0503145526249662],
        FontColor->RGBColor[
         0.7839248244306052, 0.7883244146872739, 0.0503145526249662]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.21712034810981007`, 0.8629384113926479, 0.9175714489213886], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1447468987398734, 0.5752922742617653, 0.6117142992809258],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.21712034810981007`", ",", "0.8629384113926479`", ",", 
                 "0.9175714489213886`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.21712034810981007`, 0.8629384113926479, 0.9175714489213886]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.21712034810981007`, 0.8629384113926479, 
         0.9175714489213886}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.21712034810981007`, 0.8629384113926479, 0.9175714489213886],
        FrontFaceColor->RGBColor[
         0.21712034810981007`, 0.8629384113926479, 0.9175714489213886],
        BackFaceColor->RGBColor[
         0.21712034810981007`, 0.8629384113926479, 0.9175714489213886],
        GraphicsColor->RGBColor[
         0.21712034810981007`, 0.8629384113926479, 0.9175714489213886],
        FontColor->RGBColor[
         0.21712034810981007`, 0.8629384113926479, 0.9175714489213886]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7509206603600347, 0.5927429531546555, 0.5811991231725147], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5006137735733565, 0.3951619687697704, 0.38746608211500977`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7509206603600347`", ",", "0.5927429531546555`", ",", 
                 "0.5811991231725147`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7509206603600347, 0.5927429531546555, 0.5811991231725147]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7509206603600347, 0.5927429531546555, 0.5811991231725147}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7509206603600347, 0.5927429531546555, 0.5811991231725147],
        FrontFaceColor->RGBColor[
         0.7509206603600347, 0.5927429531546555, 0.5811991231725147],
        BackFaceColor->RGBColor[
         0.7509206603600347, 0.5927429531546555, 0.5811991231725147],
        GraphicsColor->RGBColor[
         0.7509206603600347, 0.5927429531546555, 0.5811991231725147],
        FontColor->RGBColor[
         0.7509206603600347, 0.5927429531546555, 0.5811991231725147]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.1596347597425114, 0.38792517115708636`, 0.2629528404684074], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.10642317316167427`, 0.25861678077139094`, 0.17530189364560494`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.1596347597425114`", ",", "0.38792517115708636`", ",", 
                 "0.2629528404684074`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.1596347597425114, 0.38792517115708636`, 0.2629528404684074]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.1596347597425114, 0.38792517115708636`, 
         0.2629528404684074}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.1596347597425114, 0.38792517115708636`, 0.2629528404684074],
        FrontFaceColor->RGBColor[
         0.1596347597425114, 0.38792517115708636`, 0.2629528404684074],
        BackFaceColor->RGBColor[
         0.1596347597425114, 0.38792517115708636`, 0.2629528404684074],
        GraphicsColor->RGBColor[
         0.1596347597425114, 0.38792517115708636`, 0.2629528404684074],
        FontColor->RGBColor[
         0.1596347597425114, 0.38792517115708636`, 0.2629528404684074]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2191187053328183, 0.040993637144767225`, 0.2541986656781916], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.14607913688854554`, 0.02732909142984482, 0.1694657771187944],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2191187053328183`", ",", "0.040993637144767225`", ",", 
                 "0.2541986656781916`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2191187053328183, 0.040993637144767225`, 0.2541986656781916]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2191187053328183, 0.040993637144767225`, 
         0.2541986656781916}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2191187053328183, 0.040993637144767225`, 0.2541986656781916],
        FrontFaceColor->RGBColor[
         0.2191187053328183, 0.040993637144767225`, 0.2541986656781916],
        BackFaceColor->RGBColor[
         0.2191187053328183, 0.040993637144767225`, 0.2541986656781916],
        GraphicsColor->RGBColor[
         0.2191187053328183, 0.040993637144767225`, 0.2541986656781916],
        FontColor->RGBColor[
         0.2191187053328183, 0.040993637144767225`, 0.2541986656781916]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6211720117036963, 0.8951630248451841, 0.20493302454558737`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.41411467446913086`, 0.5967753498967894, 0.13662201636372492`],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6211720117036963`", ",", "0.8951630248451841`", ",", 
                 "0.20493302454558737`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6211720117036963, 0.8951630248451841, 0.20493302454558737`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6211720117036963, 0.8951630248451841, 
         0.20493302454558737`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6211720117036963, 0.8951630248451841, 0.20493302454558737`],
        FrontFaceColor->RGBColor[
         0.6211720117036963, 0.8951630248451841, 0.20493302454558737`],
        BackFaceColor->RGBColor[
         0.6211720117036963, 0.8951630248451841, 0.20493302454558737`],
        GraphicsColor->RGBColor[
         0.6211720117036963, 0.8951630248451841, 0.20493302454558737`],
        FontColor->RGBColor[
         0.6211720117036963, 0.8951630248451841, 0.20493302454558737`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6125955314559421, 0.3261287428672075, 0.22748317418325992`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.40839702097062813`, 0.21741916191147168`, 0.15165544945550663`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6125955314559421`", ",", "0.3261287428672075`", ",", 
                 "0.22748317418325992`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6125955314559421, 0.3261287428672075, 0.22748317418325992`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6125955314559421, 0.3261287428672075, 
         0.22748317418325992`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6125955314559421, 0.3261287428672075, 0.22748317418325992`],
        FrontFaceColor->RGBColor[
         0.6125955314559421, 0.3261287428672075, 0.22748317418325992`],
        BackFaceColor->RGBColor[
         0.6125955314559421, 0.3261287428672075, 0.22748317418325992`],
        GraphicsColor->RGBColor[
         0.6125955314559421, 0.3261287428672075, 0.22748317418325992`],
        FontColor->RGBColor[
         0.6125955314559421, 0.3261287428672075, 0.22748317418325992`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.05914264593665286, 0.7418247861478089, 0.6202101814297327], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.03942843062443524, 0.49454985743187263`, 0.4134734542864885],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.05914264593665286`", ",", "0.7418247861478089`", ",", 
                 "0.6202101814297327`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.05914264593665286, 0.7418247861478089, 0.6202101814297327]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.05914264593665286, 0.7418247861478089, 
         0.6202101814297327}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.05914264593665286, 0.7418247861478089, 0.6202101814297327],
        FrontFaceColor->RGBColor[
         0.05914264593665286, 0.7418247861478089, 0.6202101814297327],
        BackFaceColor->RGBColor[
         0.05914264593665286, 0.7418247861478089, 0.6202101814297327],
        GraphicsColor->RGBColor[
         0.05914264593665286, 0.7418247861478089, 0.6202101814297327],
        FontColor->RGBColor[
         0.05914264593665286, 0.7418247861478089, 0.6202101814297327]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6691316068246096, 0.8071844123313783, 0.4439049101893968], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4460877378830731, 0.5381229415542522, 0.2959366067929312],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6691316068246096`", ",", "0.8071844123313783`", ",", 
                 "0.4439049101893968`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6691316068246096, 0.8071844123313783, 0.4439049101893968]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6691316068246096, 0.8071844123313783, 0.4439049101893968}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6691316068246096, 0.8071844123313783, 0.4439049101893968],
        FrontFaceColor->RGBColor[
         0.6691316068246096, 0.8071844123313783, 0.4439049101893968],
        BackFaceColor->RGBColor[
         0.6691316068246096, 0.8071844123313783, 0.4439049101893968],
        GraphicsColor->RGBColor[
         0.6691316068246096, 0.8071844123313783, 0.4439049101893968],
        FontColor->RGBColor[
         0.6691316068246096, 0.8071844123313783, 0.4439049101893968]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7454204430604705, 0.10849862347409256`, 0.2530898472526786], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4969469620403137, 0.07233241564939505, 0.16872656483511905`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7454204430604705`", ",", "0.10849862347409256`", ",", 
                 "0.2530898472526786`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7454204430604705, 0.10849862347409256`, 0.2530898472526786]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7454204430604705, 0.10849862347409256`, 
         0.2530898472526786}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7454204430604705, 0.10849862347409256`, 0.2530898472526786],
        FrontFaceColor->RGBColor[
         0.7454204430604705, 0.10849862347409256`, 0.2530898472526786],
        BackFaceColor->RGBColor[
         0.7454204430604705, 0.10849862347409256`, 0.2530898472526786],
        GraphicsColor->RGBColor[
         0.7454204430604705, 0.10849862347409256`, 0.2530898472526786],
        FontColor->RGBColor[
         0.7454204430604705, 0.10849862347409256`, 0.2530898472526786]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9562925610441484, 0.57454448484784, 0.8501174193377521], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6375283740294323, 0.3830296565652267, 0.5667449462251681],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9562925610441484`", ",", "0.57454448484784`", ",", 
                 "0.8501174193377521`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9562925610441484, 0.57454448484784, 0.8501174193377521]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9562925610441484, 0.57454448484784, 0.8501174193377521}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9562925610441484, 0.57454448484784, 0.8501174193377521],
        FrontFaceColor->RGBColor[
         0.9562925610441484, 0.57454448484784, 0.8501174193377521],
        BackFaceColor->RGBColor[
         0.9562925610441484, 0.57454448484784, 0.8501174193377521],
        GraphicsColor->RGBColor[
         0.9562925610441484, 0.57454448484784, 0.8501174193377521],
        FontColor->RGBColor[
         0.9562925610441484, 0.57454448484784, 0.8501174193377521]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8027426592158422`*^9, 3.802742703980402*^9, 3.802742764334619*^9, 
   3.80274279829029*^9, 3.8027428296557302`*^9, {3.802742867724454*^9, 
   3.802742882364188*^9}, {3.8027433422316113`*^9, 3.802743350374951*^9}, 
   3.8027829869758863`*^9, 3.802800718804228*^9, 3.802895798503669*^9, 
   3.803061174377198*^9, 3.803061847539797*^9, 3.8030705828615303`*^9, 
   3.80307121595826*^9, 3.803072579447588*^9, 3.803210707076366*^9, 
   3.8032111786429863`*^9, 3.8032113015919724`*^9, 3.803211476680884*^9, 
   3.80360260780434*^9, 3.803604047418538*^9, 3.803641790206504*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"8c38a736-7aec-4577-a969-055022018b27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"outputComparations", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"color", "=", 
         RowBox[{"RGBColor", "@", "#"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"color", ",", 
         RowBox[{"ToString", "@", "color"}], ",", 
         RowBox[{"TextString", "@", "color"}], ",", 
         RowBox[{"SpokenString", "@", "color"}], ",", 
         RowBox[{"Description", "@", "color"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "3"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"outputComparations", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<RGB color\>\"", ",", "\"\<ToString\>\"", ",", 
        "\"\<TextString\>\"", ",", "\"\<SpokenString\>\"", ",", 
        "\"\<Description\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8036445412946167`*^9, 3.803644655457511*^9}, {
  3.8036447000334578`*^9, 3.803644760936764*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"49114a5a-6bbc-4714-b63a-328b145d5760"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"RGB color\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Description\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.7684237251120505, 0.7404681263168462, 0.9152979989171388], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5122824834080337, 0.49364541754456415`, 0.6101986659447592],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.7684237251120505`", ",", "0.7404681263168462`", ",", 
               "0.9152979989171388`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.7684237251120505, 0.7404681263168462, 0.9152979989171388]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.7684237251120505, 0.7404681263168462, 0.9152979989171388}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.768424, 0.740468, 0.915298}]\"\>", \
"\<\"RGBColor[{0.768424, 0.740468, 0.915298}]\"\>", "\<\"RGB color 0.768, \
0.74, 0.915\"\>", "\<\"Light Blue\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.1389430143440331, 0.41027266447780875`, 0.7451293692693117], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.09262867622935542, 0.27351510965187253`, 0.4967529128462078],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.1389430143440331`", ",", "0.41027266447780875`", ",", 
               "0.7451293692693117`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.1389430143440331, 0.41027266447780875`, 0.7451293692693117]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.1389430143440331, 0.41027266447780875`, 0.7451293692693117}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.138943, 0.410273, 0.745129}]\"\>", \
"\<\"RGBColor[{0.138943, 0.410273, 0.745129}]\"\>", "\<\"RGB color 0.139, \
0.41, 0.745\"\>", "\<\"Gray\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.545494115050335, 0.519281882411937, 0.9017234513396037],
            RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.36366274336689, 0.34618792160795797`, 0.6011489675597359],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.545494115050335`", ",", "0.519281882411937`", ",", 
               "0.9017234513396037`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.545494115050335, 0.519281882411937, 0.9017234513396037]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.545494115050335, 0.519281882411937, 0.9017234513396037}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.545494, 0.519282, 0.901723}]\"\>", \
"\<\"RGBColor[{0.545494, 0.519282, 0.901723}]\"\>", "\<\"RGB color 0.545, \
0.519, 0.902\"\>", "\<\"Purple\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.2159776146371113, 0.7362757480344366, 0.4003279039727212], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.14398507642474087`, 0.49085049868962444`, 0.2668852693151475],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.2159776146371113`", ",", "0.7362757480344366`", ",", 
               "0.4003279039727212`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.2159776146371113, 0.7362757480344366, 0.4003279039727212]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.2159776146371113, 0.7362757480344366, 0.4003279039727212}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.215978, 0.736276, 0.400328}]\"\>", \
"\<\"RGBColor[{0.215978, 0.736276, 0.400328}]\"\>", "\<\"RGB color 0.216, \
0.736, 0.4\"\>", "\<\"Light Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.09602468096161676, 0.7988360471765263, 0.644622582041092], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.06401645397441118, 0.5325573647843509, 0.4297483880273947],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.09602468096161676`", ",", "0.7988360471765263`", ",", 
               "0.644622582041092`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.09602468096161676, 0.7988360471765263, 0.644622582041092]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.09602468096161676, 0.7988360471765263, 0.644622582041092}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.0960247, 0.798836, 0.644623}]\"\>", \
"\<\"RGBColor[{0.0960247, 0.798836, 0.644623}]\"\>", "\<\"RGB color 0.096, \
0.799, 0.645\"\>", "\<\"Cyan\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.9684301530244801, 0.6025463456672138, 0.6099327281710352], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.6456201020163201, 0.40169756377814253`, 0.40662181878069015`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.9684301530244801`", ",", "0.6025463456672138`", ",", 
               "0.6099327281710352`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.9684301530244801, 0.6025463456672138, 0.6099327281710352]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.9684301530244801, 0.6025463456672138, 0.6099327281710352}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.96843, 0.602546, 0.609933}]\"\>", \
"\<\"RGBColor[{0.96843, 0.602546, 0.609933}]\"\>", "\<\"RGB color 0.968, \
0.603, 0.61\"\>", "\<\"Light Pink\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.6152301734279704, 0.28396699417866955`, 0.3544532097606745], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.41015344895198025`, 0.1893113294524464, 0.23630213984044968`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.6152301734279704`", ",", "0.28396699417866955`", ",", 
               "0.3544532097606745`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.6152301734279704, 0.28396699417866955`, 0.3544532097606745]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.6152301734279704, 0.28396699417866955`, 0.3544532097606745}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.61523, 0.283967, 0.354453}]\"\>", \
"\<\"RGBColor[{0.61523, 0.283967, 0.354453}]\"\>", "\<\"RGB color 0.615, \
0.284, 0.354\"\>", "\<\"Brown\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.560131908343269, 0.5327442613018885, 0.0645973820364587], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.373421272228846, 0.35516284086792566`, 0.04306492135763914],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.560131908343269`", ",", "0.5327442613018885`", ",", 
               "0.0645973820364587`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.560131908343269, 0.5327442613018885, 0.0645973820364587]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.560131908343269, 0.5327442613018885, 0.0645973820364587}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.560132, 0.532744, 0.0645974}]\"\>", \
"\<\"RGBColor[{0.560132, 0.532744, 0.0645974}]\"\>", "\<\"RGB color 0.56, \
0.533, 0.065\"\>", "\<\"Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.7644002980302254, 0.19637650104988702`, 0.08859563125687497], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5096001986868169, 0.13091766736659136`, 0.05906375417124998],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.7644002980302254`", ",", "0.19637650104988702`", ",", 
               "0.08859563125687497`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.7644002980302254, 0.19637650104988702`, 0.08859563125687497]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.7644002980302254, 0.19637650104988702`, 
       0.08859563125687497}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.7644, 0.196377, 0.0885956}]\"\>", \
"\<\"RGBColor[{0.7644, 0.196377, 0.0885956}]\"\>", "\<\"RGB color 0.764, \
0.196, 0.089\"\>", "\<\"Brown\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.028734250773941872`, 0.7073786134238322, 0.9804076021094892], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.019156167182627915`, 0.47158574228255484`, 0.6536050680729928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.028734250773941872`", ",", "0.7073786134238322`", ",",
                "0.9804076021094892`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.028734250773941872`, 0.7073786134238322, 0.9804076021094892]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.028734250773941872`, 0.7073786134238322, 
       0.9804076021094892}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.0287343, 0.707379, 0.980408}]\"\>", \
"\<\"RGBColor[{0.0287343, 0.707379, 0.980408}]\"\>", "\<\"RGB color 0.029, \
0.707, 0.98\"\>", "\<\"Light Blue\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803644632020982*^9, 3.803644682610911*^9}, 
   3.803644761582692*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"c8385df1-5238-4450-8479-2cd88b4882f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TranslatedDescription function for colors", "Subsubsection",
 CellChangeTimes->{{3.803061464225214*^9, 3.803061475653001*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"a21feaaf-9446-4d8b-ac52-a10cb9ad26cd"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TranslatedDescription"}]], "Input",
 CellChangeTimes->{{3.803070870454356*^9, 3.803070872686841*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ec730fc2-4c9a-4d91-8bb8-d26b64cbb466"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TranslatedDescription", "[", 
   RowBox[{"color_RGBColor", ",", "language_String"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"colors", "=", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0., 0., 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
              False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 0., 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 0., 0.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Black\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0., 0., 0.6666666666666667],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
              False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 0., 1.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 0., 1.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Blue\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[
                0.6470588235294118, 0.1647058823529412, 0.1647058823529412], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.43137254901960786`, 0.10980392156862748`, 
                0.10980392156862748`],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                
                RowBox[{
                 "0.6470588235294118`", ",", "0.1647058823529412`", ",", 
                  "0.1647058823529412`"}], "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[
                 0.6470588235294118, 0.1647058823529412, 0.1647058823529412]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[
           0.6470588235294118, 0.1647058823529412, 0.1647058823529412],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Brown\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0., 0.6666666666666667, 0.6666666666666667],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
              False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 1., 1.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 1., 1.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Cyan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[
                0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.334640522875817, 0.334640522875817, 0.334640522875817],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                
                RowBox[{
                 "0.5019607843137255`", ",", "0.5019607843137255`", ",", 
                  "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[
                 0.5019607843137255, 0.5019607843137255, 0.5019607843137255]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[
           0.5019607843137255, 0.5019607843137255, 0.5019607843137255],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Gray\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0., 0.5019607843137255, 0.], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0., 0.334640522875817, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.`", ",", "0.5019607843137255`", ",", "0.`"}], 
                "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0., 0.5019607843137255, 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0., 0.5019607843137255, 0.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Green\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[
                0.6784313725490198, 0.847058823529412, 0.901960784313726], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.4522875816993465, 0.5647058823529414, 0.601307189542484],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                
                RowBox[{
                 "0.6784313725490198`", ",", "0.847058823529412`", ",", 
                  "0.901960784313726`"}], "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[
                 0.6784313725490198, 0.847058823529412, 0.901960784313726]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"LightBlue\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], 
              "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightBlue\\\
\"]\"", "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.87843137254902, 1., 1.], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.5856209150326801, 0.6666666666666667, 0.6666666666666667],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"0.87843137254902`", ",", "1.`", ",", "1.`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.87843137254902, 1., 1.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.87843137254902, 1., 1.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"LightCyan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], 
              "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightCyan\\\
\"]\"", "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[
                0.5647058823529411, 0.933333333333333, 0.5647058823529411], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.37647058823529406`, 0.622222222222222, 0.37647058823529406`],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                
                RowBox[{
                 "0.5647058823529411`", ",", "0.933333333333333`", ",", 
                  "0.5647058823529411`"}], "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[
                 0.5647058823529411, 0.933333333333333, 0.5647058823529411]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.5647058823529411, 0.933333333333333, 0.5647058823529411],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"LightGreen\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], 
              "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightGreen\\\"]\"", "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 0.7137254901960784, 0.7568627450980392], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6666666666666667, 0.4758169934640523, 0.5045751633986928],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                
                RowBox[{
                 "1.`", ",", "0.7137254901960784`", ",", 
                  "0.7568627450980392`"}], "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 0.7137254901960784, 0.7568627450980392]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 0.7137254901960784, 0.7568627450980392],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"LightPink\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], 
              "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightPink\\\
\"]\"", "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 1., 0.87843137254902], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6666666666666667, 0.6666666666666667, 0.5856209150326801],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"1.`", ",", "1.`", ",", "0.87843137254902`"}], "]"}], 
              NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 1., 0.87843137254902]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 1., 0.87843137254902],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"LightYellow\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], 
              "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightYellow\
\\\"]\"", "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0.6666666666666667, 0., 0.6666666666666667],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"1.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
              False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 0., 1.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 0., 1.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Magenta\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], 
              "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 0.6470588235294118, 0.], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6666666666666667, 0.43137254901960786`, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"1.`", ",", "0.6470588235294118`", ",", "0.`"}], 
                "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 0.6470588235294118, 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 0.6470588235294118, 0.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Orange\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], "]"}],
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Orange\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 0.7529411764705882, 0.796078431372549], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6666666666666667, 0.5019607843137255, 0.530718954248366],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                
                RowBox[{
                 "1.`", ",", "0.7529411764705882`", ",", 
                  "0.796078431372549`"}], "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 0.7529411764705882, 0.796078431372549]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 0.7529411764705882, 0.796078431372549],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Pink\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[0.5019607843137255, 0., 0.5019607843137255], 
                RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0.334640522875817, 0., 0.334640522875817],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                
                RowBox[{
                 "0.5019607843137255`", ",", "0.`", ",", 
                  "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[0.5019607843137255, 0., 0.5019607843137255]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[0.5019607843137255, 0., 0.5019607843137255],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Purple\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], "]"}],
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Purple\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
              False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 0., 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 0., 0.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Red\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              
              FrameStyle->RGBColor[
               0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
              FrameTicks->None,
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
              False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 1., 1.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 1., 1.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"White\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}], 
            "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}], ",", 
         RowBox[{
          InterpretationBox[
           ButtonBox[
            TooltipBox[
             GraphicsBox[{
               {GrayLevel[0], RectangleBox[{0, 0}]}, 
               {GrayLevel[0], RectangleBox[{1, -1}]}, 
               {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
              AspectRatio->1,
              DefaultBaseStyle->"ColorSwatchGraphics",
              Frame->True,
              FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666667, 0.],
              FrameTicks->None,
              
              ImageSize->
               Dynamic[{
                Automatic, 
                 1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}],
              PlotRangePadding->None],
             StyleBox[
              RowBox[{"RGBColor", "[", 
                RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "]"}], NumberMarks -> 
              False]],
            Appearance->None,
            BaseStyle->{},
            BaselinePosition->Baseline,
            ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
              If[
               Not[
                AbsoluteCurrentValue["Deployed"]], 
               SelectionMove[Typeset`box$, All, Expression]; 
               FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
               FrontEnd`Private`$ColorSelectorInitialColor = 
                RGBColor[1., 1., 0.]; 
               FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
               MathLink`CallFrontEnd[
                 FrontEnd`AttachCell[Typeset`box$, 
                  FrontEndResource["RGBColorValueSelector"], {
                  0, {Left, Bottom}}, {Left, Top}, 
                  "ClosingActions" -> {
                   "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            DefaultBaseStyle->{},
            Evaluator->Automatic,
            Method->"Preemptive"],
           RGBColor[1., 1., 0.],
           Editable->False,
           Selectable->False], "\[Rule]", 
          TemplateBox[{"\"Yellow\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], "]"}],
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Yellow\\\"]\"", 
            "\"Wolfram Language symbol\""},
           "Entity"]}]}], "\[RightAssociation]"}]}], ",", "similar", ",", 
      "entity", ",", "lang", ",", "translations"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"similar", "=", 
      RowBox[{"First", "@", 
       RowBox[{"Nearest", "[", 
        RowBox[{
         RowBox[{"Keys", "@", "colors"}], ",", "color", ",", "1"}], "]"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"entity", "=", 
      RowBox[{"colors", "@", "similar"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lang", "=", 
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<Language\>\"", ",", "language"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"translations", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"entity", "@", "\"\<Translations\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TranslatedDescription", "[", 
       RowBox[{"color", ",", "language"}], "]"}], "=", 
      RowBox[{
       RowBox[{"ResourceFunction", "[", "\"\<FromCamelCase\>\"", "]"}], "@", 
       RowBox[{"translations", "@", "lang"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TranslatedDescription", "[", "color_RGBColor", "]"}], ":=", 
   RowBox[{
    RowBox[{"TranslatedDescription", "[", "color", "]"}], "=", 
    RowBox[{"Description", "[", "color", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"TranslatedDescription", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8027410084113207`*^9, 3.802741011019272*^9}, {
   3.802741092078218*^9, 3.802741150280785*^9}, 3.802741188268867*^9, {
   3.802741227077732*^9, 3.8027412382258997`*^9}, {3.802741335480451*^9, 
   3.802741336847968*^9}, 3.802741380813092*^9, {3.802741440619529*^9, 
   3.802741441503727*^9}, {3.8027415776992073`*^9, 3.802741588790163*^9}, {
   3.802741628988495*^9, 3.802741647727867*^9}, {3.802741678648082*^9, 
   3.802741679318297*^9}, {3.8030616367618113`*^9, 3.803061747006654*^9}, {
   3.803061783683035*^9, 3.8030618146408863`*^9}, {3.8030650611218557`*^9, 
   3.803065072486032*^9}, {3.803065387748026*^9, 3.803065413593788*^9}, {
   3.8030706627357388`*^9, 3.8030708604759293`*^9}, {3.803071052467836*^9, 
   3.8030710615192623`*^9}, {3.8030725868957157`*^9, 3.803072587588675*^9}, {
   3.8032107236472273`*^9, 3.803210725094193*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"96724890-613a-480b-acc6-050283d22502"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.8030614969176817`*^9, 3.803061500584022*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"e739b809-9ebd-41db-a1e0-dc531eff56fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"randomColor", "=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TranslatedDescription", "[", 
  RowBox[{"randomColor", ",", "\"\<Japanese\>\""}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8027413035858173`*^9, {3.802741657606944*^9, 3.8027417066627083`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"2fe8319c-cd97-42c0-a024-bb890945e195"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.3780293861965829, 0.17500211602824067`, 0.5642327331592019],
        RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.25201959079772196`, 0.11666807735216045`, 0.3761551554394679],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "0.3780293861965829`", ",", "0.17500211602824067`", ",", 
         "0.5642327331592019`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.3780293861965829, 0.17500211602824067`, 0.5642327331592019]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.3780293861965829, 0.17500211602824067`, 0.5642327331592019],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8027412913117323`*^9, 3.802741304544409*^9}, 
   3.802741342172962*^9, 3.802741391970831*^9, 3.8027414446331673`*^9, 
   3.802741516031142*^9, {3.8027416518163548`*^9, 3.8027416705654917`*^9}, {
   3.802741700621498*^9, 3.802741706968782*^9}, 3.802783099822853*^9, 
   3.8028007911932*^9, 3.803061872804927*^9, 3.803065100773264*^9, 
   3.803070891006279*^9, 3.8030710678342857`*^9, 3.8030725938020887`*^9, 
   3.803210727811064*^9, 3.8032111915667048`*^9, 3.803211301982553*^9, 
   3.803211491889703*^9, 3.8032116496094637`*^9, 3.803641790421817*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"d219f2ae-82b0-41f5-8731-15f3f42707eb"],

Cell[BoxData["\<\"\:7d2b\:8272\"\>"], "Output",
 CellChangeTimes->{{3.8027412913117323`*^9, 3.802741304544409*^9}, 
   3.802741342172962*^9, 3.802741391970831*^9, 3.8027414446331673`*^9, 
   3.802741516031142*^9, {3.8027416518163548`*^9, 3.8027416705654917`*^9}, {
   3.802741700621498*^9, 3.802741706968782*^9}, 3.802783099822853*^9, 
   3.8028007911932*^9, 3.803061872804927*^9, 3.803065100773264*^9, 
   3.803070891006279*^9, 3.8030710678342857`*^9, 3.8030725938020887`*^9, 
   3.803210727811064*^9, 3.8032111915667048`*^9, 3.803211301982553*^9, 
   3.803211491889703*^9, 3.8032116496094637`*^9, 3.803641791979974*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"05985714-28f0-4390-b55c-b3f32bb5ffb2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorTranslationTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Description", "@", "#"}], ",", "#"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"TranslatedDescription", "[", 
          RowBox[{"#", ",", "\"\<Spanish\>\""}], "]"}], ",", "#"}], "]"}]}], 
      "}"}], "&"}], "/@", 
    RowBox[{"RGBColor", "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "3"}], "}"}]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802741761455954*^9, 3.802741765531575*^9}, {
   3.802741795725154*^9, 3.802741811489044*^9}, 3.802741913881344*^9, {
   3.802742926849628*^9, 3.802742944982934*^9}, {3.802743110078513*^9, 
   3.802743124249805*^9}, {3.8030709226371527`*^9, 3.80307093085914*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ad7da5be-c961-41eb-8dfd-d9e94abcd1ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "&"}], "/@", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{"colorTranslationTests", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "20", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8027429072157383`*^9, 3.8027429095038033`*^9}, {
   3.802743085901801*^9, 3.802743103700184*^9}, {3.802743168321619*^9, 
   3.802743238997188*^9}, {3.802743284982676*^9, 3.802743318825039*^9}, {
   3.802743356548525*^9, 3.80274335692292*^9}, 3.8030709466679077`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"816b25fe-0415-4f5f-81e3-ffd62cd15b81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.534062063501019, 0.002692038304997831, 0.4088846543357886],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8010930952515285`", ",", "0.0040380574574967465`", ",", 
                 "0.6133269815036828`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8010930952515285, 0.0040380574574967465`, 
         0.6133269815036828}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        FrontFaceColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        BackFaceColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        GraphicsColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        FontColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        FrontFaceColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        BackFaceColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        GraphicsColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828],
        FontColor->RGBColor[
         0.8010930952515285, 0.0040380574574967465`, 0.6133269815036828]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.11068985486861238`, 0.09555762083375385, 0.3168375506511125], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.07379323657907493, 0.0637050805558359, 0.21122503376740837`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.11068985486861238`", ",", "0.09555762083375385`", ",", 
                 "0.3168375506511125`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.11068985486861238`, 0.09555762083375385, 0.3168375506511125]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.11068985486861238`, 0.09555762083375385, 
         0.3168375506511125}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Black\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        FrontFaceColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        BackFaceColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        GraphicsColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        FontColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125]], 
       StyleBox["\<\"negro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        FrontFaceColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        BackFaceColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        GraphicsColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125],
        FontColor->RGBColor[
         0.11068985486861238`, 0.09555762083375385, 0.3168375506511125]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.17295921180169804`, 0.5357970974796296, 0.9094148582171759], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.11530614120113203`, 0.3571980649864197, 0.606276572144784],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.17295921180169804`", ",", "0.5357970974796296`", ",", 
                 "0.9094148582171759`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.17295921180169804`, 0.5357970974796296, 0.9094148582171759]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.17295921180169804`, 0.5357970974796296, 
         0.9094148582171759}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        FrontFaceColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        BackFaceColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        GraphicsColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        FontColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759]], 
       StyleBox["\<\"azul claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        FrontFaceColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        BackFaceColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        GraphicsColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759],
        FontColor->RGBColor[
         0.17295921180169804`, 0.5357970974796296, 0.9094148582171759]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7960882271067473, 0.8231012262566992, 0.5606404128998748], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5307254847378315, 0.5487341508377995, 0.3737602752665832],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7960882271067473`", ",", "0.8231012262566992`", ",", 
                 "0.5606404128998748`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7960882271067473, 0.8231012262566992, 0.5606404128998748]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7960882271067473, 0.8231012262566992, 0.5606404128998748}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        FrontFaceColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        BackFaceColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        GraphicsColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        FontColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748]], 
       StyleBox["\<\"amarillo claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        FrontFaceColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        BackFaceColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        GraphicsColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748],
        FontColor->RGBColor[
         0.7960882271067473, 0.8231012262566992, 0.5606404128998748]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3873655845956525, 0.8956242875186893, 0.9509693771627818], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.25824372306376836`, 0.5970828583457929, 0.6339795847751879],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3873655845956525`", ",", "0.8956242875186893`", ",", 
                 "0.9509693771627818`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3873655845956525, 0.8956242875186893, 0.9509693771627818]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3873655845956525, 0.8956242875186893, 0.9509693771627818}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        FrontFaceColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        BackFaceColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        GraphicsColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        FontColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818]], 
       StyleBox["\<\"cian\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        FrontFaceColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        BackFaceColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        GraphicsColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818],
        FontColor->RGBColor[
         0.3873655845956525, 0.8956242875186893, 0.9509693771627818]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.20798659821562482`, 0.6212249728229513, 0.2178797561495296], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.13865773214374988`, 0.41414998188196755`, 0.14525317076635308`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.20798659821562482`", ",", "0.6212249728229513`", ",", 
                 "0.2178797561495296`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.20798659821562482`, 0.6212249728229513, 0.2178797561495296]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.20798659821562482`, 0.6212249728229513, 
         0.2178797561495296}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        FrontFaceColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        BackFaceColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        GraphicsColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        FontColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296]], 
       StyleBox["\<\"verde\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        FrontFaceColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        BackFaceColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        GraphicsColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296],
        FontColor->RGBColor[
         0.20798659821562482`, 0.6212249728229513, 0.2178797561495296]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.98366283634916, 0.15055586717021052`, 0.8354446249456697], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6557752242327733, 0.10037057811347369`, 0.5569630832971132],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.98366283634916`", ",", "0.15055586717021052`", ",", 
                 "0.8354446249456697`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.98366283634916, 0.15055586717021052`, 0.8354446249456697]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.98366283634916, 0.15055586717021052`, 0.8354446249456697}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        FrontFaceColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        BackFaceColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        GraphicsColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        FontColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697]], 
       StyleBox["\<\"magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        FrontFaceColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        BackFaceColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        GraphicsColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697],
        FontColor->RGBColor[
         0.98366283634916, 0.15055586717021052`, 0.8354446249456697]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2660381259417013, 0.3683475160579115, 0.6146746915412804], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.17735875062780088`, 0.24556501070527434`, 0.40978312769418695`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2660381259417013`", ",", "0.3683475160579115`", ",", 
                 "0.6146746915412804`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2660381259417013, 0.3683475160579115, 0.6146746915412804]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2660381259417013, 0.3683475160579115, 0.6146746915412804}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        FrontFaceColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        BackFaceColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        GraphicsColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        FontColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        FrontFaceColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        BackFaceColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        GraphicsColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804],
        FontColor->RGBColor[
         0.2660381259417013, 0.3683475160579115, 0.6146746915412804]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3834767993941952, 0.5824975404601087, 0.7017601367322666], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.25565119959613014`, 0.3883316936400725, 0.4678400911548444],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3834767993941952`", ",", "0.5824975404601087`", ",", 
                 "0.7017601367322666`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3834767993941952, 0.5824975404601087, 0.7017601367322666]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3834767993941952, 0.5824975404601087, 0.7017601367322666}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        FrontFaceColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        BackFaceColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        GraphicsColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        FontColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        FrontFaceColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        BackFaceColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        GraphicsColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666],
        FontColor->RGBColor[
         0.3834767993941952, 0.5824975404601087, 0.7017601367322666]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.19652727582711327`, 0.07489639385135065, 0.13068934164221852`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2947909137406699`", ",", "0.11234459077702597`", ",", 
                 "0.19603401246332774`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2947909137406699, 0.11234459077702597`, 
         0.19603401246332774`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Black\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        FrontFaceColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        BackFaceColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        GraphicsColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        FontColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`]], 
       StyleBox["\<\"negro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        FrontFaceColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        BackFaceColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        GraphicsColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`],
        FontColor->RGBColor[
         0.2947909137406699, 0.11234459077702597`, 0.19603401246332774`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4469688223914732, 0.8236362745907073, 0.6719210928736954], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2979792149276488, 0.5490908497271383, 0.4479473952491303],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4469688223914732`", ",", "0.8236362745907073`", ",", 
                 "0.6719210928736954`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4469688223914732, 0.8236362745907073, 0.6719210928736954]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4469688223914732, 0.8236362745907073, 0.6719210928736954}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        FrontFaceColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        BackFaceColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        GraphicsColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        FontColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        FrontFaceColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        BackFaceColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        GraphicsColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954],
        FontColor->RGBColor[
         0.4469688223914732, 0.8236362745907073, 0.6719210928736954]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.32202056910275845`, 0.4502970946230547, 0.8641917921360553], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.21468037940183898`, 0.30019806308203645`, 0.5761278614240369],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.32202056910275845`", ",", "0.4502970946230547`", ",", 
                 "0.8641917921360553`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.32202056910275845`, 0.4502970946230547, 0.8641917921360553]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.32202056910275845`, 0.4502970946230547, 
         0.8641917921360553}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        FrontFaceColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        BackFaceColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        GraphicsColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        FontColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        FrontFaceColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        BackFaceColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        GraphicsColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553],
        FontColor->RGBColor[
         0.32202056910275845`, 0.4502970946230547, 0.8641917921360553]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.08520305796139604, 0.3894207708107609, 0.8747512999678135], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.0568020386409307, 0.25961384720717395`, 0.5831675333118758],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.08520305796139604`", ",", "0.3894207708107609`", ",", 
                 "0.8747512999678135`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.08520305796139604, 0.3894207708107609, 0.8747512999678135]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.08520305796139604, 0.3894207708107609, 
         0.8747512999678135}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        FrontFaceColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        BackFaceColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        GraphicsColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        FontColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        FrontFaceColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        BackFaceColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        GraphicsColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135],
        FontColor->RGBColor[
         0.08520305796139604, 0.3894207708107609, 0.8747512999678135]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.674197818780429, 0.2542078644994876, 0.09537617523488628], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.449465212520286, 0.16947190966632508`, 0.06358411682325753],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.674197818780429`", ",", "0.2542078644994876`", ",", 
                 "0.09537617523488628`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.674197818780429, 0.2542078644994876, 0.09537617523488628]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.674197818780429, 0.2542078644994876, 0.09537617523488628}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        FrontFaceColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        BackFaceColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        GraphicsColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        FontColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        FrontFaceColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        BackFaceColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        GraphicsColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628],
        FontColor->RGBColor[
         0.674197818780429, 0.2542078644994876, 0.09537617523488628]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2115132204742669, 0.7666211143549935, 0.1011886225902141], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1410088136495113, 0.511080742903329, 0.06745908172680941],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2115132204742669`", ",", "0.7666211143549935`", ",", 
                 "0.1011886225902141`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2115132204742669, 0.7666211143549935, 0.1011886225902141]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2115132204742669, 0.7666211143549935, 0.1011886225902141}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        FrontFaceColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        BackFaceColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        GraphicsColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        FontColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141]], 
       StyleBox["\<\"verde\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        FrontFaceColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        BackFaceColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        GraphicsColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141],
        FontColor->RGBColor[
         0.2115132204742669, 0.7666211143549935, 0.1011886225902141]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.11236820325338925`, 0.8564602462808357, 0.9843058506368618], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.0749121355022595, 0.5709734975205571, 0.6562039004245745],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.11236820325338925`", ",", "0.8564602462808357`", ",", 
                 "0.9843058506368618`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.11236820325338925`, 0.8564602462808357, 0.9843058506368618]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.11236820325338925`, 0.8564602462808357, 
         0.9843058506368618}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        FrontFaceColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        BackFaceColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        GraphicsColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        FontColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618]], 
       StyleBox["\<\"cian\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        FrontFaceColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        BackFaceColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        GraphicsColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618],
        FontColor->RGBColor[
         0.11236820325338925`, 0.8564602462808357, 0.9843058506368618]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7817037403177312, 0.6974697789807456, 0.25032985075601877`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5211358268784875, 0.4649798526538304, 0.16688656717067918`],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7817037403177312`", ",", "0.6974697789807456`", ",", 
                 "0.25032985075601877`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7817037403177312, 0.6974697789807456, 0.25032985075601877`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7817037403177312, 0.6974697789807456, 
         0.25032985075601877`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        FrontFaceColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        BackFaceColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        GraphicsColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        FontColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`]], 
       StyleBox["\<\"naranja\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        FrontFaceColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        BackFaceColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        GraphicsColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`],
        FontColor->RGBColor[
         0.7817037403177312, 0.6974697789807456, 0.25032985075601877`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.07261131285156353, 0.24046571847895248`, 
              0.026776902123338386`], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.04840754190104235, 0.16031047898596834`, 0.01785126808222559],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.07261131285156353`", ",", "0.24046571847895248`", ",", 
                 "0.026776902123338386`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.07261131285156353, 0.24046571847895248`, 
               0.026776902123338386`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.07261131285156353, 0.24046571847895248`, 
         0.026776902123338386`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        FrontFaceColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        BackFaceColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        GraphicsColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        FontColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`]], 
       StyleBox["\<\"verde\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        FrontFaceColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        BackFaceColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        GraphicsColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`],
        FontColor->RGBColor[
         0.07261131285156353, 0.24046571847895248`, 0.026776902123338386`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.08368063320278818, 0.8526146670920689, 0.6480950620727399], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.055787088801858786`, 0.5684097780613793, 0.43206337471516],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.08368063320278818`", ",", "0.8526146670920689`", ",", 
                 "0.6480950620727399`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.08368063320278818, 0.8526146670920689, 0.6480950620727399]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.08368063320278818, 0.8526146670920689, 
         0.6480950620727399}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        FrontFaceColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        BackFaceColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        GraphicsColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        FontColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        FrontFaceColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        BackFaceColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        GraphicsColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399],
        FontColor->RGBColor[
         0.08368063320278818, 0.8526146670920689, 0.6480950620727399]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2644095968002278, 0.8026866081544806, 0.0714807147527372], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1762730645334852, 0.5351244054363204, 0.04765380983515814],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2644095968002278`", ",", "0.8026866081544806`", ",", 
                 "0.0714807147527372`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2644095968002278, 0.8026866081544806, 0.0714807147527372]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2644095968002278, 0.8026866081544806, 0.0714807147527372}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        FrontFaceColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        BackFaceColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        GraphicsColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        FontColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372]], 
       StyleBox["\<\"verde\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        FrontFaceColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        BackFaceColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        GraphicsColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372],
        FontColor->RGBColor[
         0.2644095968002278, 0.8026866081544806, 0.0714807147527372]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4721516430646424, 0.06393352657670581, 0.3834933498633821], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.314767762043095, 0.04262235105113721, 0.2556622332422548],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4721516430646424`", ",", "0.06393352657670581`", ",", 
                 "0.3834933498633821`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4721516430646424, 0.06393352657670581, 0.3834933498633821]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4721516430646424, 0.06393352657670581, 
         0.3834933498633821}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        FrontFaceColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        BackFaceColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        GraphicsColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        FontColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        FrontFaceColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        BackFaceColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        GraphicsColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821],
        FontColor->RGBColor[
         0.4721516430646424, 0.06393352657670581, 0.3834933498633821]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5099060994672915, 0.8158979907512129, 0.7771336841571508], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.339937399644861, 0.543931993834142, 0.5180891227714339],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5099060994672915`", ",", "0.8158979907512129`", ",", 
                 "0.7771336841571508`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5099060994672915, 0.8158979907512129, 0.7771336841571508]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5099060994672915, 0.8158979907512129, 0.7771336841571508}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        FrontFaceColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        BackFaceColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        GraphicsColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        FontColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508]], 
       StyleBox["\<\"azul claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        FrontFaceColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        BackFaceColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        GraphicsColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508],
        FontColor->RGBColor[
         0.5099060994672915, 0.8158979907512129, 0.7771336841571508]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8017839268331344, 0.3427269229950818, 0.04093581719678263], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5345226178887563, 0.22848461533005454`, 0.027290544797855087`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8017839268331344`", ",", "0.3427269229950818`", ",", 
                 "0.04093581719678263`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8017839268331344, 0.3427269229950818, 0.04093581719678263]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8017839268331344, 0.3427269229950818, 
         0.04093581719678263}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        FrontFaceColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        BackFaceColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        GraphicsColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        FontColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        FrontFaceColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        BackFaceColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        GraphicsColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263],
        FontColor->RGBColor[
         0.8017839268331344, 0.3427269229950818, 0.04093581719678263]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.35394460915872905`, 0.31840961138628, 0.10471828775324155`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.23596307277248604`, 0.21227307425752, 0.06981219183549436],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.35394460915872905`", ",", "0.31840961138628`", ",", 
                 "0.10471828775324155`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.35394460915872905`, 0.31840961138628, 0.10471828775324155`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.35394460915872905`, 0.31840961138628, 
         0.10471828775324155`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        FrontFaceColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        BackFaceColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        GraphicsColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        FontColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        FrontFaceColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        BackFaceColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        GraphicsColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`],
        FontColor->RGBColor[
         0.35394460915872905`, 0.31840961138628, 0.10471828775324155`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.967321565836218, 0.2216926021944996, 0.08528194749172147], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.644881043890812, 0.14779506812966642`, 0.056854631661147646`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.967321565836218`", ",", "0.2216926021944996`", ",", 
                 "0.08528194749172147`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.967321565836218, 0.2216926021944996, 0.08528194749172147]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.967321565836218, 0.2216926021944996, 0.08528194749172147}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Red\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        FrontFaceColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        BackFaceColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        GraphicsColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        FontColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147]], 
       StyleBox["\<\"rojo\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        FrontFaceColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        BackFaceColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        GraphicsColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147],
        FontColor->RGBColor[
         0.967321565836218, 0.2216926021944996, 0.08528194749172147]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8135189246385788, 0.529697305135209, 0.36477014003123953`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5423459497590526, 0.353131536756806, 0.2431800933541597],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8135189246385788`", ",", "0.529697305135209`", ",", 
                 "0.36477014003123953`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8135189246385788, 0.529697305135209, 0.36477014003123953`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8135189246385788, 0.529697305135209, 
         0.36477014003123953`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        FrontFaceColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        BackFaceColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        GraphicsColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        FontColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`]], 
       StyleBox["\<\"rosa claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        FrontFaceColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        BackFaceColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        GraphicsColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`],
        FontColor->RGBColor[
         0.8135189246385788, 0.529697305135209, 0.36477014003123953`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7208445094331073, 0.39380845524805297`, 0.8882940487501958], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4805630062887382, 0.26253897016536865`, 0.5921960325001305],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7208445094331073`", ",", "0.39380845524805297`", ",", 
                 "0.8882940487501958`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7208445094331073, 0.39380845524805297`, 0.8882940487501958]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7208445094331073, 0.39380845524805297`, 
         0.8882940487501958}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        FrontFaceColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        BackFaceColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        GraphicsColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        FontColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        FrontFaceColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        BackFaceColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        GraphicsColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958],
        FontColor->RGBColor[
         0.7208445094331073, 0.39380845524805297`, 0.8882940487501958]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.648560782387974, 0.9743600610472845, 0.6858299398326733], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.432373854925316, 0.649573374031523, 0.4572199598884489],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.648560782387974`", ",", "0.9743600610472845`", ",", 
                 "0.6858299398326733`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.648560782387974, 0.9743600610472845, 0.6858299398326733]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.648560782387974, 0.9743600610472845, 0.6858299398326733}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        FrontFaceColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        BackFaceColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        GraphicsColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        FontColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        FrontFaceColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        BackFaceColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        GraphicsColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733],
        FontColor->RGBColor[
         0.648560782387974, 0.9743600610472845, 0.6858299398326733]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.29332189864607794`, 0.7280143327759672, 0.8888731260560525], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.19554793243071864`, 0.48534288851731144`, 0.5925820840373683],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.29332189864607794`", ",", "0.7280143327759672`", ",", 
                 "0.8888731260560525`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.29332189864607794`, 0.7280143327759672, 0.8888731260560525]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.29332189864607794`, 0.7280143327759672, 
         0.8888731260560525}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        FrontFaceColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        BackFaceColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        GraphicsColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        FontColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525]], 
       StyleBox["\<\"azul claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        FrontFaceColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        BackFaceColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        GraphicsColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525],
        FontColor->RGBColor[
         0.29332189864607794`, 0.7280143327759672, 0.8888731260560525]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.040929996604558205`, 0.8755088922206471, 0.5879042014743443], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.027286664403038806`, 0.5836725948137648, 0.39193613431622953`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.040929996604558205`", ",", "0.8755088922206471`", ",", 
                 "0.5879042014743443`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.040929996604558205`, 0.8755088922206471, 0.5879042014743443]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.040929996604558205`, 0.8755088922206471, 
         0.5879042014743443}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        FrontFaceColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        BackFaceColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        GraphicsColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        FontColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        FrontFaceColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        BackFaceColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        GraphicsColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443],
        FontColor->RGBColor[
         0.040929996604558205`, 0.8755088922206471, 0.5879042014743443]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9194430010957872, 0.3571888881970948, 0.6762445910486827], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6129620007305249, 0.23812592546472988`, 0.4508297273657885],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9194430010957872`", ",", "0.3571888881970948`", ",", 
                 "0.6762445910486827`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9194430010957872, 0.3571888881970948, 0.6762445910486827]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9194430010957872, 0.3571888881970948, 0.6762445910486827}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        FrontFaceColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        BackFaceColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        GraphicsColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        FontColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        FrontFaceColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        BackFaceColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        GraphicsColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827],
        FontColor->RGBColor[
         0.9194430010957872, 0.3571888881970948, 0.6762445910486827]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2186216320806771, 0.38582453955504303`, 0.2212299317530808], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1457477547204514, 0.25721635970336204`, 0.14748662116872055`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2186216320806771`", ",", "0.38582453955504303`", ",", 
                 "0.2212299317530808`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2186216320806771, 0.38582453955504303`, 0.2212299317530808]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2186216320806771, 0.38582453955504303`, 
         0.2212299317530808}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        FrontFaceColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        BackFaceColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        GraphicsColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        FontColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        FrontFaceColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        BackFaceColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        GraphicsColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808],
        FontColor->RGBColor[
         0.2186216320806771, 0.38582453955504303`, 0.2212299317530808]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5297045714877746, 0.3304290070849203, 0.09868139612180782],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7945568572316619`", ",", "0.49564351062738043`", ",", 
                 "0.14802209418271173`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7945568572316619, 0.49564351062738043`, 
         0.14802209418271173`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        FrontFaceColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        BackFaceColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        GraphicsColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        FontColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`]], 
       StyleBox["\<\"naranja\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        FrontFaceColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        BackFaceColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        GraphicsColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`],
        FontColor->RGBColor[
         0.7945568572316619, 0.49564351062738043`, 0.14802209418271173`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7235274743200162, 0.24539296965738866`, 0.2021897872972831], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4823516495466775, 0.16359531310492578`, 0.13479319153152208`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7235274743200162`", ",", "0.24539296965738866`", ",", 
                 "0.2021897872972831`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7235274743200162, 0.24539296965738866`, 0.2021897872972831]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7235274743200162, 0.24539296965738866`, 
         0.2021897872972831}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        FrontFaceColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        BackFaceColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        GraphicsColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        FontColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        FrontFaceColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        BackFaceColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        GraphicsColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831],
        FontColor->RGBColor[
         0.7235274743200162, 0.24539296965738866`, 0.2021897872972831]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.283407495231742, 0.3595151542732451, 0.18757119038622783`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.18893833015449468`, 0.23967676951549674`, 0.12504746025748523`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.283407495231742`", ",", "0.3595151542732451`", ",", 
                 "0.18757119038622783`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.283407495231742, 0.3595151542732451, 0.18757119038622783`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.283407495231742, 0.3595151542732451, 
         0.18757119038622783`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        FrontFaceColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        BackFaceColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        GraphicsColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        FontColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        FrontFaceColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        BackFaceColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        GraphicsColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`],
        FontColor->RGBColor[
         0.283407495231742, 0.3595151542732451, 0.18757119038622783`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9092222880241061, 0.6789261169226615, 0.19010698704078455`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6061481920160707, 0.45261741128177435`, 0.12673799136052305`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9092222880241061`", ",", "0.6789261169226615`", ",", 
                 "0.19010698704078455`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9092222880241061, 0.6789261169226615, 0.19010698704078455`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9092222880241061, 0.6789261169226615, 
         0.19010698704078455`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        FrontFaceColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        BackFaceColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        GraphicsColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        FontColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`]], 
       StyleBox["\<\"naranja\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        FrontFaceColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        BackFaceColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        GraphicsColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`],
        FontColor->RGBColor[
         0.9092222880241061, 0.6789261169226615, 0.19010698704078455`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.10630285518640514`, 0.1626191769012319, 0.3880906161690773],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.15945428277960771`", ",", "0.24392876535184782`", ",", 
                 "0.5821359242536159`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.15945428277960771`, 0.24392876535184782`, 
         0.5821359242536159}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        FrontFaceColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        BackFaceColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        GraphicsColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        FontColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        FrontFaceColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        BackFaceColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        GraphicsColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159],
        FontColor->RGBColor[
         0.15945428277960771`, 0.24392876535184782`, 0.5821359242536159]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5470711194031663, 0.9645767689236124, 0.37856416328126685`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3647140796021109, 0.6430511792824083, 0.25237610885417794`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               RowBox[{
                "0.5470711194031663`", ",", "0.9645767689236124`", ",", 
                 "0.37856416328126685`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5470711194031663, 0.9645767689236124, 0.37856416328126685`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5470711194031663, 0.9645767689236124, 
         0.37856416328126685`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        FrontFaceColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        BackFaceColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        GraphicsColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        FontColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        FrontFaceColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        BackFaceColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        GraphicsColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`],
        FontColor->RGBColor[
         0.5470711194031663, 0.9645767689236124, 0.37856416328126685`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.840975285970095, 0.19556897186373057`, 0.9943573907284555], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.56065019064673, 0.1303793145758204, 0.6629049271523038],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.840975285970095`", ",", "0.19556897186373057`", ",", 
                 "0.9943573907284555`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.840975285970095, 0.19556897186373057`, 0.9943573907284555]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.840975285970095, 0.19556897186373057`, 
         0.9943573907284555}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        FrontFaceColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        BackFaceColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        GraphicsColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        FontColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555]], 
       StyleBox["\<\"magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        FrontFaceColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        BackFaceColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        GraphicsColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555],
        FontColor->RGBColor[
         0.840975285970095, 0.19556897186373057`, 0.9943573907284555]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4086418135105072, 0.05390137771287118, 0.1727161219442983], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2724278756736715, 0.035934251808580786`, 0.11514408129619888`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4086418135105072`", ",", "0.05390137771287118`", ",", 
                 "0.1727161219442983`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4086418135105072, 0.05390137771287118, 0.1727161219442983]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4086418135105072, 0.05390137771287118, 
         0.1727161219442983}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        FrontFaceColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        BackFaceColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        GraphicsColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        FontColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        FrontFaceColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        BackFaceColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        GraphicsColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983],
        FontColor->RGBColor[
         0.4086418135105072, 0.05390137771287118, 0.1727161219442983]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4091990091242623, 0.9060931762105138, 0.9464299727514565], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2727993394161749, 0.6040621174736759, 0.6309533151676376],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4091990091242623`", ",", "0.9060931762105138`", ",", 
                 "0.9464299727514565`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4091990091242623, 0.9060931762105138, 0.9464299727514565]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4091990091242623, 0.9060931762105138, 0.9464299727514565}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        FrontFaceColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        BackFaceColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        GraphicsColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        FontColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565]], 
       StyleBox["\<\"cian\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        FrontFaceColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        BackFaceColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        GraphicsColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565],
        FontColor->RGBColor[
         0.4091990091242623, 0.9060931762105138, 0.9464299727514565]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.44492361233407296`, 0.854204385137338, 0.1479689233366448], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.29661574155604864`, 0.5694695900915587, 0.09864594889109654],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.44492361233407296`", ",", "0.854204385137338`", ",", 
                 "0.1479689233366448`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.44492361233407296`, 0.854204385137338, 0.1479689233366448]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.44492361233407296`, 0.854204385137338, 
         0.1479689233366448}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        FrontFaceColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        BackFaceColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        GraphicsColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        FontColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        FrontFaceColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        BackFaceColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        GraphicsColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448],
        FontColor->RGBColor[
         0.44492361233407296`, 0.854204385137338, 0.1479689233366448]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8780877456390732, 0.1857959990819984, 0.08321729028524594], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5853918304260488, 0.12386399938799894`, 0.055478193523497296`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8780877456390732`", ",", "0.1857959990819984`", ",", 
                 "0.08321729028524594`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8780877456390732, 0.1857959990819984, 0.08321729028524594]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8780877456390732, 0.1857959990819984, 
         0.08321729028524594}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Red\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        FrontFaceColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        BackFaceColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        GraphicsColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        FontColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594]], 
       StyleBox["\<\"rojo\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        FrontFaceColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        BackFaceColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        GraphicsColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594],
        FontColor->RGBColor[
         0.8780877456390732, 0.1857959990819984, 0.08321729028524594]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6858407280001064, 0.7664775172402485, 0.12406499398612691`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.45722715200007097`, 0.5109850114934991, 0.08270999599075128],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6858407280001064`", ",", "0.7664775172402485`", ",", 
                 "0.12406499398612691`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6858407280001064, 0.7664775172402485, 0.12406499398612691`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6858407280001064, 0.7664775172402485, 
         0.12406499398612691`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        FrontFaceColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        BackFaceColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        GraphicsColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        FontColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`]], 
       StyleBox["\<\"amarillo\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        FrontFaceColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        BackFaceColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        GraphicsColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`],
        FontColor->RGBColor[
         0.6858407280001064, 0.7664775172402485, 0.12406499398612691`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7195393092704829, 0.09824165935880469, 0.7989161396059723], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.47969287284698864`, 0.06549443957253646, 0.5326107597373149],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7195393092704829`", ",", "0.09824165935880469`", ",", 
                 "0.7989161396059723`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7195393092704829, 0.09824165935880469, 0.7989161396059723]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7195393092704829, 0.09824165935880469, 
         0.7989161396059723}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        FrontFaceColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        BackFaceColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        GraphicsColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        FontColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723]], 
       StyleBox["\<\"magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        FrontFaceColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        BackFaceColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        GraphicsColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723],
        FontColor->RGBColor[
         0.7195393092704829, 0.09824165935880469, 0.7989161396059723]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4738589561401818, 0.6972726764316128, 0.7833777183389328], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3159059707601212, 0.4648484509544086, 0.5222518122259552],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4738589561401818`", ",", "0.6972726764316128`", ",", 
                 "0.7833777183389328`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4738589561401818, 0.6972726764316128, 0.7833777183389328]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4738589561401818, 0.6972726764316128, 0.7833777183389328}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        FrontFaceColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        BackFaceColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        GraphicsColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        FontColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328]], 
       StyleBox["\<\"azul claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        FrontFaceColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        BackFaceColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        GraphicsColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328],
        FontColor->RGBColor[
         0.4738589561401818, 0.6972726764316128, 0.7833777183389328]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.862312921164335, 0.9084493133160405, 0.6601113149798112], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5748752807762234, 0.605632875544027, 0.44007420998654084`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.862312921164335`", ",", "0.9084493133160405`", ",", 
                 "0.6601113149798112`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.862312921164335, 0.9084493133160405, 0.6601113149798112]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.862312921164335, 0.9084493133160405, 0.6601113149798112}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        FrontFaceColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        BackFaceColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        GraphicsColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        FontColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112]], 
       StyleBox["\<\"amarillo claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        FrontFaceColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        BackFaceColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        GraphicsColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112],
        FontColor->RGBColor[
         0.862312921164335, 0.9084493133160405, 0.6601113149798112]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7041468920023344, 0.6078013912044917, 0.4755511986598244], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4694312613348896, 0.4052009274696612, 0.317034132439883],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7041468920023344`", ",", "0.6078013912044917`", ",", 
                 "0.4755511986598244`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7041468920023344, 0.6078013912044917, 0.4755511986598244]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7041468920023344, 0.6078013912044917, 0.4755511986598244}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        FrontFaceColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        BackFaceColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        GraphicsColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        FontColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        FrontFaceColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        BackFaceColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        GraphicsColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244],
        FontColor->RGBColor[
         0.7041468920023344, 0.6078013912044917, 0.4755511986598244]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5296365032233377, 0.9148076643458742, 0.3971527131598096], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3530910021488918, 0.6098717762305829, 0.2647684754398731],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5296365032233377`", ",", "0.9148076643458742`", ",", 
                 "0.3971527131598096`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5296365032233377, 0.9148076643458742, 0.3971527131598096]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5296365032233377, 0.9148076643458742, 0.3971527131598096}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        FrontFaceColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        BackFaceColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        GraphicsColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        FontColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        FrontFaceColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        BackFaceColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        GraphicsColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096],
        FontColor->RGBColor[
         0.5296365032233377, 0.9148076643458742, 0.3971527131598096]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.383916392947953, 0.17425115257704693`, 0.6992687799255619], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.255944261965302, 0.11616743505136462`, 0.4661791866170413],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.383916392947953`", ",", "0.17425115257704693`", ",", 
                 "0.6992687799255619`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.383916392947953, 0.17425115257704693`, 0.6992687799255619]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.383916392947953, 0.17425115257704693`, 
         0.6992687799255619}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        FrontFaceColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        BackFaceColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        GraphicsColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        FontColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        FrontFaceColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        BackFaceColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        GraphicsColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619],
        FontColor->RGBColor[
         0.383916392947953, 0.17425115257704693`, 0.6992687799255619]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.0023487405729625266`, 0.76659156021415, 0.6256751656714765], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.0015658270486416845`, 0.5110610401427667, 0.4171167771143177],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.0023487405729625266`", ",", "0.76659156021415`", ",", 
                 "0.6256751656714765`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.0023487405729625266`, 0.76659156021415, 0.6256751656714765]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.0023487405729625266`, 0.76659156021415, 
         0.6256751656714765}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        FrontFaceColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        BackFaceColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        GraphicsColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        FontColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765]], 
       StyleBox["\<\"cian\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        FrontFaceColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        BackFaceColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        GraphicsColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765],
        FontColor->RGBColor[
         0.0023487405729625266`, 0.76659156021415, 0.6256751656714765]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5451498939433961, 0.9661712297082128, 0.8374795931830412], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3634332626289307, 0.6441141531388086, 0.5583197287886942],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5451498939433961`", ",", "0.9661712297082128`", ",", 
                 "0.8374795931830412`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5451498939433961, 0.9661712297082128, 0.8374795931830412]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5451498939433961, 0.9661712297082128, 0.8374795931830412}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        FrontFaceColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        BackFaceColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        GraphicsColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        FontColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412]], 
       StyleBox["\<\"cian\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        FrontFaceColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        BackFaceColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        GraphicsColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412],
        FontColor->RGBColor[
         0.5451498939433961, 0.9661712297082128, 0.8374795931830412]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.22956089979345662`, 0.9353800159286019, 0.7932527410672234], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.15304059986230442`, 0.6235866772857346, 0.5288351607114823],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.22956089979345662`", ",", "0.9353800159286019`", ",", 
                 "0.7932527410672234`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.22956089979345662`, 0.9353800159286019, 0.7932527410672234]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.22956089979345662`, 0.9353800159286019, 
         0.7932527410672234}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Cyan\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        FrontFaceColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        BackFaceColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        GraphicsColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        FontColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234]], 
       StyleBox["\<\"cian\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        FrontFaceColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        BackFaceColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        GraphicsColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234],
        FontColor->RGBColor[
         0.22956089979345662`, 0.9353800159286019, 0.7932527410672234]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9378208145466829, 0.27148167541779644`, 0.5081716823325326], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6252138763644552, 0.1809877836118643, 0.33878112155502177`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9378208145466829`", ",", "0.27148167541779644`", ",", 
                 "0.5081716823325326`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9378208145466829, 0.27148167541779644`, 0.5081716823325326]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9378208145466829, 0.27148167541779644`, 
         0.5081716823325326}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        FrontFaceColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        BackFaceColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        GraphicsColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        FontColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        FrontFaceColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        BackFaceColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        GraphicsColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326],
        FontColor->RGBColor[
         0.9378208145466829, 0.27148167541779644`, 0.5081716823325326]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6588712480634287, 0.4789283156382349, 0.9477586062061207], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.43924749870895247`, 0.3192855437588233, 0.6318390708040805],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6588712480634287`", ",", "0.4789283156382349`", ",", 
                 "0.9477586062061207`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6588712480634287, 0.4789283156382349, 0.9477586062061207]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6588712480634287, 0.4789283156382349, 0.9477586062061207}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        FrontFaceColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        BackFaceColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        GraphicsColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        FontColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        FrontFaceColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        BackFaceColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        GraphicsColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207],
        FontColor->RGBColor[
         0.6588712480634287, 0.4789283156382349, 0.9477586062061207]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.49952007656073505`, 0.6358042047868964, 0.9462371021450076], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3330133843738234, 0.42386946985793095`, 0.6308247347633384],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               RowBox[{
                "0.49952007656073505`", ",", "0.6358042047868964`", ",", 
                 "0.9462371021450076`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.49952007656073505`, 0.6358042047868964, 0.9462371021450076]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.49952007656073505`, 0.6358042047868964, 
         0.9462371021450076}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        FrontFaceColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        BackFaceColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        GraphicsColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        FontColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076]], 
       StyleBox["\<\"azul claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        FrontFaceColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        BackFaceColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        GraphicsColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076],
        FontColor->RGBColor[
         0.49952007656073505`, 0.6358042047868964, 0.9462371021450076]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3905468722028187, 0.35312475144462363`, 0.3779998552098891], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2603645814685458, 0.23541650096308242`, 0.2519999034732594],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3905468722028187`", ",", "0.35312475144462363`", ",", 
                 "0.3779998552098891`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3905468722028187, 0.35312475144462363`, 0.3779998552098891]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3905468722028187, 0.35312475144462363`, 
         0.3779998552098891}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        FrontFaceColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        BackFaceColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        GraphicsColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        FontColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        FrontFaceColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        BackFaceColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        GraphicsColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891],
        FontColor->RGBColor[
         0.3905468722028187, 0.35312475144462363`, 0.3779998552098891]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8706267823798692, 0.5843112969804289, 0.9681924706902976], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5804178549199128, 0.3895408646536193, 0.645461647126865],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8706267823798692`", ",", "0.5843112969804289`", ",", 
                 "0.9681924706902976`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8706267823798692, 0.5843112969804289, 0.9681924706902976]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8706267823798692, 0.5843112969804289, 0.9681924706902976}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        FrontFaceColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        BackFaceColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        GraphicsColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        FontColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        FrontFaceColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        BackFaceColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        GraphicsColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976],
        FontColor->RGBColor[
         0.8706267823798692, 0.5843112969804289, 0.9681924706902976]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8980067449657361, 0.6858478300663264, 0.7775611923997114], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5986711633104908, 0.4572318867108843, 0.5183741282664743],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8980067449657361`", ",", "0.6858478300663264`", ",", 
                 "0.7775611923997114`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8980067449657361, 0.6858478300663264, 0.7775611923997114]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8980067449657361, 0.6858478300663264, 0.7775611923997114}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        FrontFaceColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        BackFaceColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        GraphicsColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        FontColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114]], 
       StyleBox["\<\"rosa\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        FrontFaceColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        BackFaceColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        GraphicsColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114],
        FontColor->RGBColor[
         0.8980067449657361, 0.6858478300663264, 0.7775611923997114]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7645644276172849, 0.968386900914989, 0.10655267354172704`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5097096184115233, 0.6455912672766594, 0.0710351156944847],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7645644276172849`", ",", "0.968386900914989`", ",", 
                 "0.10655267354172704`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7645644276172849, 0.968386900914989, 0.10655267354172704`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7645644276172849, 0.968386900914989, 
         0.10655267354172704`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Yellow\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        FrontFaceColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        BackFaceColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        GraphicsColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        FontColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`]], 
       StyleBox["\<\"amarillo\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        FrontFaceColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        BackFaceColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        GraphicsColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`],
        FontColor->RGBColor[
         0.7645644276172849, 0.968386900914989, 0.10655267354172704`]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.30149468132561785`, 0.5129420719088, 0.6724736421946651], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.20099645421707857`, 0.3419613812725334, 0.4483157614631101],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.30149468132561785`", ",", "0.5129420719088`", ",", 
                 "0.6724736421946651`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.30149468132561785`, 0.5129420719088, 0.6724736421946651]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.30149468132561785`, 0.5129420719088, 0.6724736421946651}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        FrontFaceColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        BackFaceColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        GraphicsColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        FontColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        FrontFaceColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        BackFaceColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        GraphicsColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651],
        FontColor->RGBColor[
         0.30149468132561785`, 0.5129420719088, 0.6724736421946651]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.25011059048544926`, 0.8508335007815477, 0.2153340898962186], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1667403936569662, 0.5672223338543652, 0.1435560599308124],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.25011059048544926`", ",", "0.8508335007815477`", ",", 
                 "0.2153340898962186`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.25011059048544926`, 0.8508335007815477, 0.2153340898962186]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.25011059048544926`, 0.8508335007815477, 
         0.2153340898962186}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        FrontFaceColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        BackFaceColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        GraphicsColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        FontColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        FrontFaceColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        BackFaceColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        GraphicsColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186],
        FontColor->RGBColor[
         0.25011059048544926`, 0.8508335007815477, 0.2153340898962186]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6310090199108467, 0.5326948427131879, 0.6846249409720304], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.42067267994056445`, 0.3551298951421253, 0.45641662731468696`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6310090199108467`", ",", "0.5326948427131879`", ",", 
                 "0.6846249409720304`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6310090199108467, 0.5326948427131879, 0.6846249409720304]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6310090199108467, 0.5326948427131879, 0.6846249409720304}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        FrontFaceColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        BackFaceColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        GraphicsColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        FontColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        FrontFaceColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        BackFaceColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        GraphicsColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304],
        FontColor->RGBColor[
         0.6310090199108467, 0.5326948427131879, 0.6846249409720304]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9614541776791754, 0.7788527078431864, 0.7615793286375914], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.640969451786117, 0.5192351385621243, 0.507719552425061],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9614541776791754`", ",", "0.7788527078431864`", ",", 
                 "0.7615793286375914`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9614541776791754, 0.7788527078431864, 0.7615793286375914]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9614541776791754, 0.7788527078431864, 0.7615793286375914}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        FrontFaceColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        BackFaceColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        GraphicsColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        FontColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914]], 
       StyleBox["\<\"rosa\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        FrontFaceColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        BackFaceColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        GraphicsColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914],
        FontColor->RGBColor[
         0.9614541776791754, 0.7788527078431864, 0.7615793286375914]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6936305522106774, 0.47401674705832453`, 0.7483961356020783], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4624203681404516, 0.3160111647055497, 0.49893075706805223`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6936305522106774`", ",", "0.47401674705832453`", ",", 
                 "0.7483961356020783`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6936305522106774, 0.47401674705832453`, 0.7483961356020783]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6936305522106774, 0.47401674705832453`, 
         0.7483961356020783}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        FrontFaceColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        BackFaceColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        GraphicsColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        FontColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        FrontFaceColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        BackFaceColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        GraphicsColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783],
        FontColor->RGBColor[
         0.6936305522106774, 0.47401674705832453`, 0.7483961356020783]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7711839316820044, 0.5284719228357913, 0.2220471951126266], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5141226211213363, 0.35231461522386087`, 0.14803146340841775`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7711839316820044`", ",", "0.5284719228357913`", ",", 
                 "0.2220471951126266`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7711839316820044, 0.5284719228357913, 0.2220471951126266]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7711839316820044, 0.5284719228357913, 0.2220471951126266}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        FrontFaceColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        BackFaceColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        GraphicsColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        FontColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266]], 
       StyleBox["\<\"naranja\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        FrontFaceColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        BackFaceColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        GraphicsColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266],
        FontColor->RGBColor[
         0.7711839316820044, 0.5284719228357913, 0.2220471951126266]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9488576574012608, 0.7124219631581865, 0.7801219021183334], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6325717716008405, 0.474947975438791, 0.520081268078889],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9488576574012608`", ",", "0.7124219631581865`", ",", 
                 "0.7801219021183334`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9488576574012608, 0.7124219631581865, 0.7801219021183334]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9488576574012608, 0.7124219631581865, 0.7801219021183334}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        FrontFaceColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        BackFaceColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        GraphicsColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        FontColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334]], 
       StyleBox["\<\"rosa\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        FrontFaceColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        BackFaceColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        GraphicsColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334],
        FontColor->RGBColor[
         0.9488576574012608, 0.7124219631581865, 0.7801219021183334]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9688678565079605, 0.7120524492357772, 0.840238985913019], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6459119043386403, 0.47470163282385147`, 0.5601593239420127],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9688678565079605`", ",", "0.7120524492357772`", ",", 
                 "0.840238985913019`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9688678565079605, 0.7120524492357772, 0.840238985913019]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9688678565079605, 0.7120524492357772, 0.840238985913019}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        FrontFaceColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        BackFaceColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        GraphicsColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        FontColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019]], 
       StyleBox["\<\"rosa\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        FrontFaceColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        BackFaceColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        GraphicsColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019],
        FontColor->RGBColor[
         0.9688678565079605, 0.7120524492357772, 0.840238985913019]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8217447962309976, 0.28662440353624596`, 0.7866697673652407], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5478298641539985, 0.19108293569083065`, 0.5244465115768272],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8217447962309976`", ",", "0.28662440353624596`", ",", 
                 "0.7866697673652407`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8217447962309976, 0.28662440353624596`, 0.7866697673652407]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8217447962309976, 0.28662440353624596`, 
         0.7866697673652407}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        FrontFaceColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        BackFaceColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        GraphicsColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        FontColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        FrontFaceColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        BackFaceColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        GraphicsColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407],
        FontColor->RGBColor[
         0.8217447962309976, 0.28662440353624596`, 0.7866697673652407]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.720196708754584, 0.69267616385288, 0.15824509841033962`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.48013113916972266`, 0.46178410923525337`, 0.10549673227355975`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.720196708754584`", ",", "0.69267616385288`", ",", 
                 "0.15824509841033962`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.720196708754584, 0.69267616385288, 0.15824509841033962`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.720196708754584, 0.69267616385288, 0.15824509841033962`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        FrontFaceColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        BackFaceColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        GraphicsColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        FontColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`]], 
       StyleBox["\<\"naranja\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        FrontFaceColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        BackFaceColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        GraphicsColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`],
        FontColor->RGBColor[
         0.720196708754584, 0.69267616385288, 0.15824509841033962`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2008893144183661, 0.6348512742702426, 0.9281609066808898], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.13392620961224408`, 0.4232341828468284, 0.6187739377872599],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2008893144183661`", ",", "0.6348512742702426`", ",", 
                 "0.9281609066808898`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2008893144183661, 0.6348512742702426, 0.9281609066808898]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2008893144183661, 0.6348512742702426, 0.9281609066808898}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        FrontFaceColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        BackFaceColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        GraphicsColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        FontColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898]], 
       StyleBox["\<\"azul claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        FrontFaceColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        BackFaceColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        GraphicsColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898],
        FontColor->RGBColor[
         0.2008893144183661, 0.6348512742702426, 0.9281609066808898]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.11787279322402992`, 0.24988294159524557`, 0.6470888004650285],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.17680918983604488`", ",", "0.37482441239286834`", ",", 
                 "0.9706332006975427`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.17680918983604488`, 0.37482441239286834`, 
         0.9706332006975427}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        FrontFaceColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        BackFaceColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        GraphicsColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        FontColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427]], 
       StyleBox["\<\"azul\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        FrontFaceColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        BackFaceColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        GraphicsColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427],
        FontColor->RGBColor[
         0.17680918983604488`, 0.37482441239286834`, 0.9706332006975427]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7886180802918568, 0.15117272971328188`, 0.3914684600738141], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5257453868612378, 0.10078181980885459`, 0.2609789733825427],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7886180802918568`", ",", "0.15117272971328188`", ",", 
                 "0.3914684600738141`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7886180802918568, 0.15117272971328188`, 0.3914684600738141]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7886180802918568, 0.15117272971328188`, 
         0.3914684600738141}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        FrontFaceColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        BackFaceColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        GraphicsColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        FontColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        FrontFaceColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        BackFaceColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        GraphicsColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141],
        FontColor->RGBColor[
         0.7886180802918568, 0.15117272971328188`, 0.3914684600738141]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.530381543573275, 0.503183687027293, 0.2046401176746946], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.35358769571551674`, 0.3354557913515287, 0.13642674511646308`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.530381543573275`", ",", "0.503183687027293`", ",", 
                 "0.2046401176746946`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.530381543573275, 0.503183687027293, 0.2046401176746946]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.530381543573275, 0.503183687027293, 0.2046401176746946}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        FrontFaceColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        BackFaceColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        GraphicsColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        FontColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        FrontFaceColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        BackFaceColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        GraphicsColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946],
        FontColor->RGBColor[
         0.530381543573275, 0.503183687027293, 0.2046401176746946]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.1094620686301635, 0.3980582641032264, 0.21685549601644416`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.072974712420109, 0.26537217606881763`, 0.14457033067762945`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.1094620686301635`", ",", "0.3980582641032264`", ",", 
                 "0.21685549601644416`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.1094620686301635, 0.3980582641032264, 0.21685549601644416`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.1094620686301635, 0.3980582641032264, 
         0.21685549601644416`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        FrontFaceColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        BackFaceColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        GraphicsColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        FontColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`]], 
       StyleBox["\<\"verde\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        FrontFaceColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        BackFaceColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        GraphicsColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`],
        FontColor->RGBColor[
         0.1094620686301635, 0.3980582641032264, 0.21685549601644416`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2109948153170571, 0.03856336622175971, 0.6948934711937746], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1406632102113714, 0.025708910814506474`, 0.4632623141291831],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2109948153170571`", ",", "0.03856336622175971`", ",", 
                 "0.6948934711937746`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2109948153170571, 0.03856336622175971, 0.6948934711937746]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2109948153170571, 0.03856336622175971, 
         0.6948934711937746}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        FrontFaceColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        BackFaceColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        GraphicsColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        FontColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746]], 
       StyleBox["\<\"azul\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        FrontFaceColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        BackFaceColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        GraphicsColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746],
        FontColor->RGBColor[
         0.2109948153170571, 0.03856336622175971, 0.6948934711937746]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3184535771636612, 0.37993536079463075`, 0.968575062611599], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.21230238477577412`, 0.25329024052975385`, 0.6457167084077327],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3184535771636612`", ",", "0.37993536079463075`", ",", 
                 "0.968575062611599`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3184535771636612, 0.37993536079463075`, 0.968575062611599]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3184535771636612, 0.37993536079463075`, 
         0.968575062611599}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        FrontFaceColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        BackFaceColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        GraphicsColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        FontColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        FrontFaceColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        BackFaceColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        GraphicsColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599],
        FontColor->RGBColor[
         0.3184535771636612, 0.37993536079463075`, 0.968575062611599]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3900966002392141, 0.051236828188024, 0.7858986032584636], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2600644001594761, 0.03415788545868267, 0.5239324021723091],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3900966002392141`", ",", "0.051236828188024`", ",", 
                 "0.7858986032584636`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3900966002392141, 0.051236828188024, 0.7858986032584636]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3900966002392141, 0.051236828188024, 0.7858986032584636}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        FrontFaceColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        BackFaceColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        GraphicsColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        FontColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636]], 
       StyleBox["\<\"azul\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        FrontFaceColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        BackFaceColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        GraphicsColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636],
        FontColor->RGBColor[
         0.3900966002392141, 0.051236828188024, 0.7858986032584636]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5833605971309059, 0.8981081853662136, 0.6663952664482553], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3889070647539373, 0.5987387902441424, 0.44426351096550354`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5833605971309059`", ",", "0.8981081853662136`", ",", 
                 "0.6663952664482553`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5833605971309059, 0.8981081853662136, 0.6663952664482553]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5833605971309059, 0.8981081853662136, 0.6663952664482553}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        FrontFaceColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        BackFaceColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        GraphicsColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        FontColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        FrontFaceColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        BackFaceColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        GraphicsColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553],
        FontColor->RGBColor[
         0.5833605971309059, 0.8981081853662136, 0.6663952664482553]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.37532366812050877`, 0.4026603699847189, 0.9135063515827482], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.25021577874700585`, 0.26844024665647925`, 0.6090042343884988],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.37532366812050877`", ",", "0.4026603699847189`", ",", 
                 "0.9135063515827482`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.37532366812050877`, 0.4026603699847189, 0.9135063515827482]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.37532366812050877`, 0.4026603699847189, 
         0.9135063515827482}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        FrontFaceColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        BackFaceColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        GraphicsColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        FontColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        FrontFaceColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        BackFaceColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        GraphicsColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482],
        FontColor->RGBColor[
         0.37532366812050877`, 0.4026603699847189, 0.9135063515827482]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5378513149173754, 0.2548635857933992, 0.909274800813457], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.35856754327825024`, 0.16990905719559946`, 0.6061832005423047],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5378513149173754`", ",", "0.2548635857933992`", ",", 
                 "0.909274800813457`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5378513149173754, 0.2548635857933992, 0.909274800813457]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5378513149173754, 0.2548635857933992, 0.909274800813457}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        FrontFaceColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        BackFaceColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        GraphicsColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        FontColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        FrontFaceColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        BackFaceColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        GraphicsColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457],
        FontColor->RGBColor[
         0.5378513149173754, 0.2548635857933992, 0.909274800813457]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.32365173096871236`, 0.0672017481506717, 0.6718939214710522], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.21576782064580824`, 0.04480116543378114, 0.4479292809807015],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.32365173096871236`", ",", "0.0672017481506717`", ",", 
                 "0.6718939214710522`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.32365173096871236`, 0.0672017481506717, 0.6718939214710522]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.32365173096871236`, 0.0672017481506717, 
         0.6718939214710522}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        FrontFaceColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        BackFaceColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        GraphicsColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        FontColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        FrontFaceColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        BackFaceColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        GraphicsColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522],
        FontColor->RGBColor[
         0.32365173096871236`, 0.0672017481506717, 0.6718939214710522]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4200364986409886, 0.10951328583652087`, 0.03243463998348228], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2800243324273257, 0.07300885722434725, 0.021623093322321523`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4200364986409886`", ",", "0.10951328583652087`", ",", 
                 "0.03243463998348228`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4200364986409886, 0.10951328583652087`, 0.03243463998348228]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4200364986409886, 0.10951328583652087`, 
         0.03243463998348228}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        FrontFaceColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        BackFaceColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        GraphicsColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        FontColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        FrontFaceColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        BackFaceColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        GraphicsColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228],
        FontColor->RGBColor[
         0.4200364986409886, 0.10951328583652087`, 0.03243463998348228]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.28411969324047504`, 0.3602275198154119, 0.3058471795855042], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.18941312882698336`, 0.24015167987694128`, 0.2038981197236695],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.28411969324047504`", ",", "0.3602275198154119`", ",", 
                 "0.3058471795855042`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.28411969324047504`, 0.3602275198154119, 0.3058471795855042]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.28411969324047504`, 0.3602275198154119, 
         0.3058471795855042}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        FrontFaceColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        BackFaceColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        GraphicsColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        FontColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        FrontFaceColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        BackFaceColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        GraphicsColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042],
        FontColor->RGBColor[
         0.28411969324047504`, 0.3602275198154119, 0.3058471795855042]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.39974618919187166`, 0.432579427871854, 0.4328160385685216], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2664974594612478, 0.28838628524790266`, 0.2885440257123477],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.39974618919187166`", ",", "0.432579427871854`", ",", 
                 "0.4328160385685216`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.39974618919187166`, 0.432579427871854, 0.4328160385685216]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.39974618919187166`, 0.432579427871854, 
         0.4328160385685216}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        FrontFaceColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        BackFaceColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        GraphicsColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        FontColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        FrontFaceColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        BackFaceColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        GraphicsColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216],
        FontColor->RGBColor[
         0.39974618919187166`, 0.432579427871854, 0.4328160385685216]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7844128757030566, 0.8892626162785657, 0.44434250745498494`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5229419171353711, 0.5928417441857106, 0.2962283383033233],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7844128757030566`", ",", "0.8892626162785657`", ",", 
                 "0.44434250745498494`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7844128757030566, 0.8892626162785657, 0.44434250745498494`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7844128757030566, 0.8892626162785657, 
         0.44434250745498494`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        FrontFaceColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        BackFaceColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        GraphicsColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        FontColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        FrontFaceColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        BackFaceColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        GraphicsColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`],
        FontColor->RGBColor[
         0.7844128757030566, 0.8892626162785657, 0.44434250745498494`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.47373099918618355`, 0.21981400461423495`, 
              0.11599433616037924`], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3158206661241224, 0.14654266974282332`, 0.07732955744025283],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.47373099918618355`", ",", "0.21981400461423495`", ",", 
                 "0.11599433616037924`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.47373099918618355`, 0.21981400461423495`, 
               0.11599433616037924`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.47373099918618355`, 0.21981400461423495`, 
         0.11599433616037924`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        FrontFaceColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        BackFaceColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        GraphicsColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        FontColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        FrontFaceColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        BackFaceColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        GraphicsColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`],
        FontColor->RGBColor[
         0.47373099918618355`, 0.21981400461423495`, 0.11599433616037924`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.09372870805827715, 0.358051758960795, 0.667870728660442], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.062485805372184774`, 0.23870117264053, 0.44524715244029467`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.09372870805827715`", ",", "0.358051758960795`", ",", 
                 "0.667870728660442`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.09372870805827715, 0.358051758960795, 0.667870728660442]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.09372870805827715, 0.358051758960795, 0.667870728660442}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Gray\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        FrontFaceColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        BackFaceColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        GraphicsColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        FontColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442]], 
       StyleBox["\<\"gris\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        FrontFaceColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        BackFaceColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        GraphicsColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442],
        FontColor->RGBColor[
         0.09372870805827715, 0.358051758960795, 0.667870728660442]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.46174656216667254`, 0.848677697838305, 0.36410960621653166`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3078310414444484, 0.5657851318922034, 0.2427397374776878],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.46174656216667254`", ",", "0.848677697838305`", ",", 
                 "0.36410960621653166`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.46174656216667254`, 0.848677697838305, 0.36410960621653166`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.46174656216667254`, 0.848677697838305, 
         0.36410960621653166`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        FrontFaceColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        BackFaceColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        GraphicsColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        FontColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        FrontFaceColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        BackFaceColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        GraphicsColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`],
        FontColor->RGBColor[
         0.46174656216667254`, 0.848677697838305, 0.36410960621653166`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8722698902430557, 0.4389178000899767, 0.5651758474880277], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5815132601620372, 0.2926118667266512, 0.37678389832535186`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8722698902430557`", ",", "0.4389178000899767`", ",", 
                 "0.5651758474880277`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8722698902430557, 0.4389178000899767, 0.5651758474880277]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8722698902430557, 0.4389178000899767, 0.5651758474880277}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        FrontFaceColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        BackFaceColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        GraphicsColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        FontColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277]], 
       StyleBox["\<\"rosa claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        FrontFaceColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        BackFaceColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        GraphicsColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277],
        FontColor->RGBColor[
         0.8722698902430557, 0.4389178000899767, 0.5651758474880277]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5841523916120803, 0.7054929788265056, 0.05495530695920636], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3894349277413869, 0.47032865255100376`, 0.036636871306137575`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5841523916120803`", ",", "0.7054929788265056`", ",", 
                 "0.05495530695920636`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5841523916120803, 0.7054929788265056, 0.05495530695920636]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5841523916120803, 0.7054929788265056, 
         0.05495530695920636}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        FrontFaceColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        BackFaceColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        GraphicsColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        FontColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636]], 
       StyleBox["\<\"verde\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        FrontFaceColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        BackFaceColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        GraphicsColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636],
        FontColor->RGBColor[
         0.5841523916120803, 0.7054929788265056, 0.05495530695920636]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.974762197888839, 0.7303484643962574, 0.997305723436527], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.649841465259226, 0.48689897626417167`, 0.6648704822910181],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.974762197888839`", ",", "0.7303484643962574`", ",", 
                 "0.997305723436527`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.974762197888839, 0.7303484643962574, 0.997305723436527]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.974762197888839, 0.7303484643962574, 0.997305723436527}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Pink\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        FrontFaceColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        BackFaceColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        GraphicsColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        FontColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527]], 
       StyleBox["\<\"rosa\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        FrontFaceColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        BackFaceColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        GraphicsColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527],
        FontColor->RGBColor[
         0.974762197888839, 0.7303484643962574, 0.997305723436527]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9365148806531667, 0.4412698938477939, 0.8317994639588318], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6243432537687779, 0.29417992923186265`, 0.5545329759725546],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9365148806531667`", ",", "0.4412698938477939`", ",", 
                 "0.8317994639588318`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9365148806531667, 0.4412698938477939, 0.8317994639588318]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9365148806531667, 0.4412698938477939, 0.8317994639588318}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        FrontFaceColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        BackFaceColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        GraphicsColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        FontColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        FrontFaceColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        BackFaceColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        GraphicsColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318],
        FontColor->RGBColor[
         0.9365148806531667, 0.4412698938477939, 0.8317994639588318]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.18866327345189315`, 0.7017990873052762, 0.8788440940847817], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.12577551563459544`, 0.46786605820351745`, 0.5858960627231878],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.18866327345189315`", ",", "0.7017990873052762`", ",", 
                 "0.8788440940847817`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.18866327345189315`, 0.7017990873052762, 0.8788440940847817]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.18866327345189315`, 0.7017990873052762, 
         0.8788440940847817}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Blue\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        FrontFaceColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        BackFaceColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        GraphicsColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        FontColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817]], 
       StyleBox["\<\"azul claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        FrontFaceColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        BackFaceColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        GraphicsColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817],
        FontColor->RGBColor[
         0.18866327345189315`, 0.7017990873052762, 0.8788440940847817]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7958213563168974, 0.04161353955630043, 0.3214881229557458], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5305475708779317, 0.027742359704200286`, 0.21432541530383054`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7958213563168974`", ",", "0.04161353955630043`", ",", 
                 "0.3214881229557458`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7958213563168974, 0.04161353955630043, 0.3214881229557458]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7958213563168974, 0.04161353955630043, 
         0.3214881229557458}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Brown\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        FrontFaceColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        BackFaceColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        GraphicsColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        FontColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458]], 
       StyleBox["\<\"marr\[OAcute]n\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        FrontFaceColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        BackFaceColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        GraphicsColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458],
        FontColor->RGBColor[
         0.7958213563168974, 0.04161353955630043, 0.3214881229557458]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9016023731899885, 0.7333353649614649, 0.35541428160188526`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6010682487933257, 0.4888902433076433, 0.23694285440125684`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9016023731899885`", ",", "0.7333353649614649`", ",", 
                 "0.35541428160188526`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9016023731899885, 0.7333353649614649, 0.35541428160188526`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9016023731899885, 0.7333353649614649, 
         0.35541428160188526`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Orange\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        FrontFaceColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        BackFaceColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        GraphicsColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        FontColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`]], 
       StyleBox["\<\"naranja\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        FrontFaceColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        BackFaceColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        GraphicsColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`],
        FontColor->RGBColor[
         0.9016023731899885, 0.7333353649614649, 0.35541428160188526`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6570118327034633, 0.1650096805162351, 0.8964822782407427], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.43800788846897554`, 0.11000645367749007`, 0.5976548521604952],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6570118327034633`", ",", "0.1650096805162351`", ",", 
                 "0.8964822782407427`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6570118327034633, 0.1650096805162351, 0.8964822782407427]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6570118327034633, 0.1650096805162351, 0.8964822782407427}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        FrontFaceColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        BackFaceColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        GraphicsColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        FontColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427]], 
       StyleBox["\<\"magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        FrontFaceColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        BackFaceColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        GraphicsColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427],
        FontColor->RGBColor[
         0.6570118327034633, 0.1650096805162351, 0.8964822782407427]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.29055428686802975`, 0.7167962038859086, 0.51675941312054], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.19370285791201985`, 0.47786413592393906`, 0.34450627541369333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.29055428686802975`", ",", "0.7167962038859086`", ",", 
                 "0.51675941312054`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.29055428686802975`, 0.7167962038859086, 0.51675941312054]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.29055428686802975`, 0.7167962038859086, 0.51675941312054}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Light Green\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        FrontFaceColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        BackFaceColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        GraphicsColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        FontColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054]], 
       StyleBox["\<\"verde claro\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        FrontFaceColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        BackFaceColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        GraphicsColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054],
        FontColor->RGBColor[
         0.29055428686802975`, 0.7167962038859086, 0.51675941312054]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6938361119403458, 0.35126806698092805`, 0.9685823448267163], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.46255740796023054`, 0.2341787113206187, 0.6457215632178109],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6938361119403458`", ",", "0.35126806698092805`", ",", 
                 "0.9685823448267163`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6938361119403458, 0.35126806698092805`, 0.9685823448267163]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6938361119403458, 0.35126806698092805`, 
         0.9685823448267163}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        FrontFaceColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        BackFaceColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        GraphicsColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        FontColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163]], 
       StyleBox["\<\"magenta\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        FrontFaceColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        BackFaceColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        GraphicsColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163],
        FontColor->RGBColor[
         0.6938361119403458, 0.35126806698092805`, 0.9685823448267163]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7282904204749265, 0.4193303992670363, 0.7895726788202977], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.48552694698328436`, 0.27955359951135755`, 0.5263817858801985],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7282904204749265`", ",", "0.4193303992670363`", ",", 
                 "0.7895726788202977`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7282904204749265, 0.4193303992670363, 0.7895726788202977]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7282904204749265, 0.4193303992670363, 0.7895726788202977}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"Purple\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        FrontFaceColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        BackFaceColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        GraphicsColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        FontColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977]], 
       StyleBox["\<\"p\[UAcute]rpura\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        FrontFaceColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        BackFaceColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        GraphicsColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977],
        FontColor->RGBColor[
         0.7282904204749265, 0.4193303992670363, 0.7895726788202977]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8027429106075068`*^9, 3.80274294912915*^9}, 
   3.8027430938538523`*^9, {3.802743204220642*^9, 3.8027432394849873`*^9}, {
   3.802743287851016*^9, 3.8027433192144938`*^9}, 3.802743357619693*^9, 
   3.8027831078880043`*^9, 3.8028007975201902`*^9, 3.80306189693534*^9, 
   3.8030651096551*^9, 3.803070953585614*^9, 3.803071076710676*^9, 
   3.803072602546417*^9, 3.803210754978127*^9, 3.803211193658078*^9, 
   3.803211302820154*^9, 3.803211492699945*^9, 3.803211650505495*^9, 
   3.8036418193635187`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"516ef6d3-a312-471b-8b1d-1d1e74176268"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ColorData", "Subsubsection",
 CellChangeTimes->{{3.8027023053791656`*^9, 3.802702315944413*^9}, {
   3.80277148056779*^9, 3.802771484538578*^9}, 
   3.802783128007152*^9},ExpressionUUID->"20342d76-0496-4924-bf6b-\
98d097668ca7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ColorData", "[", 
           RowBox[{"#", ",", "\"\<ColorList\>\""}], "]"}], "&"}], "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"ColorData", "/@", 
           RowBox[{"ColorData", "[", "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MissingQ", "[", "#", "]"}]}], "&"}]}], "]"}], "//", 
     "Join"}], "//", "Sort"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802637542683991*^9, 3.802637546383155*^9}, {
  3.8026857631168013`*^9, 3.802685771086403*^9}, {3.802685811029758*^9, 
  3.8026858167556*^9}, {3.8027714903039*^9, 3.802771588557048*^9}, {
  3.802771628030002*^9, 3.8027716665984364`*^9}, {3.802771892939857*^9, 
  3.802771922288719*^9}, {3.802771955023787*^9, 3.802771957037916*^9}, {
  3.802771992195668*^9, 3.802771994586856*^9}, {3.802772351359597*^9, 
  3.802772426850594*^9}, {3.802772523865797*^9, 3.802772524973089*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"dae87412-e074-47da-8e6f-17ff959ab699"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"colors", "//", "Length"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"Head", "@", "#"}]}], "}"}], "&"}], "/@", 
     RowBox[{"colors", "[", 
      RowBox[{"[", 
       RowBox[{";;", "100"}], "]"}], "]"}]}], ",", "10"}], "]"}], "//", 
  "Grid"}]}], "Input",
 CellChangeTimes->{{3.8027724011996727`*^9, 3.802772418107704*^9}, {
  3.8027724728300943`*^9, 3.802772478330331*^9}, {3.802772529495669*^9, 
  3.802772534310534*^9}, {3.8027726796759357`*^9, 3.8027727241569366`*^9}, {
  3.803062112617293*^9, 3.803062185370247*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"5a067d6e-7d8e-4799-8c2e-5e243c6cb18d"],

Cell[BoxData["2143"], "Output",
 CellChangeTimes->{{3.802772402327829*^9, 3.80277243192833*^9}, 
   3.8027724808192387`*^9, 3.8027725373186007`*^9, 3.802772681417699*^9, 
   3.802772725025489*^9, {3.8030620766447363`*^9, 3.803062078964129*^9}, {
   3.8030621262156057`*^9, 3.803062185776795*^9}, {3.803071347260586*^9, 
   3.803071349216638*^9}, 3.803211303326837*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"360b2b61-f427-416f-b294-f55d0153439f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0.393668], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.2624453333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "0.393668`", "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.393668]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0.393668],
        Editable->False,
        Selectable->False], ",", "GrayLevel"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0.501961], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.3346406666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "0.501961`", "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.501961]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0.501961],
        Editable->False,
        Selectable->False], ",", "GrayLevel"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0.642527], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.42835133333333336`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "0.642527`", "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.642527]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0.642527],
        Editable->False,
        Selectable->False], ",", "GrayLevel"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0.660639], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.44042599999999993`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "0.660639`", "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.660639]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0.660639],
        Editable->False,
        Selectable->False], ",", "GrayLevel"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[1],
        Editable->False,
        Selectable->False], ",", "GrayLevel"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.33, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.33, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.33`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.33, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.33, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.33, 0.66], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.33000000000000007`, 0.44000000000000006`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.33`", ",", "0.66`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.33, 0.66]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.33, 0.66],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.5, 0.44], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.5, 0.29333333333333333`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.5`", ",", "0.44`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.5, 0.44]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.5, 0.44],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.5, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.5, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.5`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.5, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.5, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.5, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.5, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.5`", ",", "0.85`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.5, 0.85]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.5, 0.85],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.5, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.5`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.6, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.6`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.6, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.6, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.67, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.67, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.67`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.67, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.67, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.67, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.67, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.67`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.67, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.67, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.7, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.7, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.7`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.7, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.7, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.7, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.7, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.7`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.7, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.7, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.7, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.7, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.7`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.7, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.7, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.75, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.75, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.75`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.75, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.75, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.75, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.75, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.75`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.75, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.75, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.75, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.75, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.75`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.75, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.75, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.8, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.8, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.8`", ",", "0.85`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.8, 0.85]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.8, 0.85],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 0.8, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 0.8, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "0.8`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 0.8, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 0.8, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 1, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 1., 0.2666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "0.4`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 0.4]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 1, 0.4],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 1, 0.68], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 1., 0.45333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "0.68`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 0.68]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 1, 0.68],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 1, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 1., 0.4666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "0.7`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 0.7]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 1, 0.7],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 1, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 1., 0.48],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "0.72`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 0.72]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 1, 0.72],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 1, 0.75], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 1., 0.5],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "0.75`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 0.75]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 1, 0.75],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 1., 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 1, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0., 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.01, 0.8, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.010000000000000014`, 0.8, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.01`", ",", "0.8`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.01, 0.8, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.01, 0.8, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.03, 0.8, 0.75], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.02999999999999998, 0.8, 0.5],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.03`", ",", "0.8`", ",", "0.75`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.03, 0.8, 0.75]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.03, 0.8, 0.75],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.03, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.02999999999999999, 1., 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.03`", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.03, 1, 0.85]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.03, 1, 0.85],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.04, 0.8, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.039999999999999994`, 0.8, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.04`", ",", "0.8`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.04, 0.8, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.04, 0.8, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.04, 1, 0.68], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.04, 1., 0.45333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.04`", ",", "1", ",", "0.68`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.04, 1, 0.68]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.04, 1, 0.68],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.04, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.039999999999999994`, 1., 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.04`", ",", "1", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.04, 1, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.04, 1, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.04, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.039999999999999994`, 1., 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.04`", ",", "1", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.04, 1, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.04, 1, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.04, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.04, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.04`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.04, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.04, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.04, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.04, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.04`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.04, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.04, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.5, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05000000000000002, 0.5, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.5`", ",", "0.85`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.05, 0.5, 0.85]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.5, 0.85],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.6, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.049999999999999996`, 0.6, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.6`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.6, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.6, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.7, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.04999999999999999, 0.7, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.7`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.7, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.7, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.7, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.049999999999999996`, 0.7, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.7`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.7, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.7, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.8, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05000000000000002, 0.8, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.8`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.8, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.8, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.8, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05000000000000002, 0.8, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.8`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.8, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.8, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.9, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05000000000000001, 0.9, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.9`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.9, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.9, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 0.9, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05000000000000001, 0.9, 0.4666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "0.9`", ",", "0.7`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.9, 0.7]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 0.9, 0.7],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05000000000000001, 1., 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 1, 0.5]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 1, 0.5],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.049999999999999996`, 1., 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "1", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 1, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 1, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.05, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05000000000000001, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.05`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.05, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.25, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->Hue[
            0.06000000000000003, 0.25000000000000006`, 0.4666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.25`", ",", "0.7`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.06, 0.25, 0.7]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.25, 0.7],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.6, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05999999999999999, 0.6, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.6`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 0.6, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.6, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.7, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06, 0.7, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.7`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 0.7, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.7, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.75, 0.76], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06, 0.75, 0.5066666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.75`", ",", "0.76`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.06, 0.75, 0.76]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.75, 0.76],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.75, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06, 0.75, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.75`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.06, 0.75, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.75, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.75, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06000000000000002, 0.75, 0.5866666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.75`", ",", "0.88`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.06, 0.75, 0.88]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.75, 0.88],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.75, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06000000000000002, 0.75, 0.5866666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.75`", ",", "0.88`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.06, 0.75, 0.88]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.75, 0.88],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.75, 0.92], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.060000000000000005`, 0.75, 0.6133333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.75`", ",", "0.92`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.06, 0.75, 0.92]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.75, 0.92],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.8, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.060000000000000005`, 0.8, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.8`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 0.8, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.8, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 0.9, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05999999999999999, 0.9, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "0.9`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 0.9, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 0.9, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.65], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06, 1., 0.43333333333333335`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.65`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.65]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.65],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.69], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.060000000000000005`, 1., 0.45999999999999996`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.69`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.69]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.69],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.72], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.060000000000000005`, 1., 0.48],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.72`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.72]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.72],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.75], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.060000000000000005`, 1., 0.5],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.75`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.75]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.75],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.75], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.060000000000000005`, 1., 0.5],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.75`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.75]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.75],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.05999999999999999, 1., 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.060000000000000005`, 1., 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.85]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.85],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06, 1., 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.06, 1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06, 1., 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.06`", ",", "1", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.06, 1, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.06, 1, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.07, 0.7, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06999999999999999, 0.7, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.07`", ",", "0.7`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.07, 0.7, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.07, 0.7, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.07, 0.8, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.06999999999999999, 0.8000000000000002, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.07`", ",", "0.8`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.07, 0.8, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.07, 0.8, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.07, 1, 0.75], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07000000000000002, 1., 0.5],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.07`", ",", "1", ",", "0.75`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.07, 1, 0.75]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.07, 1, 0.75],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.25, 0.64], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->Hue[
            0.07999999999999993, 0.25000000000000006`, 0.4266666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.25`", ",", "0.64`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.08, 0.25, 0.64]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.25, 0.64],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.29, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 0.2900000000000001, 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.29`", ",", "0.5`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.08, 0.29, 0.5]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.29, 0.5],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.5, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08000000000000003, 0.5, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.5`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.5, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.5, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.6, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 0.6, 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.6`", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.6, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.6, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.67, 0.51], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 0.67, 0.34],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.67`", ",", "0.51`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.08, 0.67, 0.51]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.67, 0.51],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.67, 0.75], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 0.67, 0.5],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.67`", ",", "0.75`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.08, 0.67, 0.75]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.67, 0.75],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.67, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 0.67, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.67`", ",", "0.85`"}], "]"}], 
           NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.08, 0.67, 0.85]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.67, 0.85],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.67, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999997, 0.67, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.67`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.08, 0.67, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.67, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.8, 0.85], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 0.8, 0.5666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.8`", ",", "0.85`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             Hue[0.08, 0.8, 0.85]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.8, 0.85],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.8, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999997, 0.8, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.8`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.8, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.8, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.8, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 0.8, 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.8`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.8, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.8, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 0.9, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 0.9, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "0.9`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 0.9, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 0.9, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.33333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.5`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.5]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.5],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.4],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.6`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.6]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.6],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.68], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.45333333333333337`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.68`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.68]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.68],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 1., 0.4666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.7`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.7]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.7],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 1., 0.4666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.7`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.7]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.7],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.7], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 1., 0.4666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.7`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.7]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.7],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 1., 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.5866666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.88`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.88]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.88],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 0.92], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.07999999999999999, 1., 0.6133333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "0.92`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 0.92]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 0.92],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.08, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.08, 1., 0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.08`", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.08, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.08, 1, 1],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.1, 0.5, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.09999999999999999, 0.5, 0.5333333333333334],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.1`", ",", "0.5`", ",", "0.8`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.1, 0.5, 0.8]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.1, 0.5, 0.8],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {Hue[0.1, 0.7, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->Hue[0.10000000000000002`, 0.7, 0.6000000000000001],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"Hue", "[", 
             RowBox[{"0.1`", ",", "0.7`", ",", "0.9`"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.1, 0.7, 0.9]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["HueColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        Hue[0.1, 0.7, 0.9],
        Editable->False,
        Selectable->False], ",", "Hue"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.802772402327829*^9, 3.80277243192833*^9}, 
   3.8027724808192387`*^9, 3.8027725373186007`*^9, 3.802772681417699*^9, 
   3.802772725025489*^9, {3.8030620766447363`*^9, 3.803062078964129*^9}, {
   3.8030621262156057`*^9, 3.803062185776795*^9}, {3.803071347260586*^9, 
   3.803071349216638*^9}, 3.803211303364101*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"e95d0917-cb32-4e50-a2d1-da18dee2c3e0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Entity Color", "Subsubsection",
 CellChangeTimes->{
  3.802772335054029*^9, {3.802779138958741*^9, 3.802779147473089*^9}, 
   3.802807237303524*^9},ExpressionUUID->"c79c556b-b93f-4524-a0ae-\
f946b79f2f66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allColorEntities", " ", "=", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"\"\<Color\>\"", ",", " ", "\"\<Entities\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.802686084988821*^9, 3.802686100658238*^9}, {
   3.802686250924829*^9, 3.802686253550077*^9}, {3.8027727532230988`*^9, 
   3.802772756042943*^9}, 3.802772825183267*^9},
 CellLabel->
  "In[313]:=",ExpressionUUID->"c5eeb76e-fa7b-4d5f-b985-7d6786d1c283"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allColorEntities", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.802772837364542*^9, 3.8027728444925737`*^9}, {
   3.802772882343268*^9, 3.802772946824172*^9}, 3.8027730791692533`*^9, 
   3.802773489656399*^9},
 CellLabel->
  "In[314]:=",ExpressionUUID->"c8b47aeb-70b7-4e20-8599-0be248ed600f"],

Cell[BoxData["10386"], "Output",
 CellChangeTimes->{
  3.802772845159827*^9, {3.8027728987780113`*^9, 3.802772947246805*^9}, {
   3.802773464053734*^9, 3.802773490355933*^9}, 3.803062271467978*^9, 
   3.8030623811325197`*^9, 3.803063051985228*^9, 3.803071364200577*^9, 
   3.8032109730243893`*^9, 3.803211303575446*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"8056c56c-fb63-4815-9356-1ad6b8deda8b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nameAndColorEntities", "=", 
   RowBox[{"EntityValue", "[", 
    RowBox[{
     RowBox[{"EntityValue", "[", 
      RowBox[{"\"\<Color\>\"", ",", " ", "\"\<Entities\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"name\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Color\"", ",", "\"Name\""}], "]"}], 
         "\"EntityProperty[\\\"Color\\\", \\\"Name\\\"]\""},
        "EntityProperty"], ",", 
       TemplateBox[{"\"24\[Hyphen]bit RGB\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Color\"", ",", "\"RGBValue\""}], "]"}], 
         "\"EntityProperty[\\\"Color\\\", \\\"RGBValue\\\"]\""},
        "EntityProperty"]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.80277516474024*^9, 3.802775168092474*^9}, {
   3.8027753142829857`*^9, 3.802775319519107*^9}, 3.803062425322188*^9},
 CellLabel->
  "In[315]:=",ExpressionUUID->"99aa0ccd-b4c7-43d4-885b-6c0e0ae72db7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nameAndColorEntities", "[", 
  RowBox[{"[", 
   RowBox[{";;", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.803062477770629*^9, 3.803062483673904*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"7572bd21-ad9a-4689-abf7-20df4c10d7b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"HTML peach\"\>", ",", 
     TemplateBox[{"\"color red:1. green:0.854902 blue:0.72549\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Color\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"RGB\"", ",", 
               RowBox[{"{", 
                 RowBox[{"255", ",", "218", ",", "185"}], "}"}]}], "}"}]}], 
         "]"}], "\"Entity[\\\"Color\\\", {\\\"RGB\\\", {255, 218, 185}}]\"", 
       "\"color\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Colorado Yellow\"\>", ",", 
     TemplateBox[{"\"color red:0.956863 green:0.858824 blue:0.517647\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Color\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"RGB\"", ",", 
               RowBox[{"{", 
                 RowBox[{"244", ",", "219", ",", "132"}], "}"}]}], "}"}]}], 
         "]"}], "\"Entity[\\\"Color\\\", {\\\"RGB\\\", {244, 219, 132}}]\"", 
       "\"color\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Condor Yellow\"\>", ",", 
     TemplateBox[{"\"color red:0.929412 green:0.92549 blue:0.654902\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Color\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"RGB\"", ",", 
               RowBox[{"{", 
                 RowBox[{"237", ",", "236", ",", "167"}], "}"}]}], "}"}]}], 
         "]"}], "\"Entity[\\\"Color\\\", {\\\"RGB\\\", {237, 236, 167}}]\"", 
       "\"color\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Sahara\"\>", ",", 
     TemplateBox[{"\"color red:0.929412 green:0.827451 blue:0.654902\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Color\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"RGB\"", ",", 
               RowBox[{"{", 
                 RowBox[{"237", ",", "211", ",", "167"}], "}"}]}], "}"}]}], 
         "]"}], "\"Entity[\\\"Color\\\", {\\\"RGB\\\", {237, 211, 167}}]\"", 
       "\"color\""},
      "Entity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Ceylon Gold Metallic\"\>", ",", 
     TemplateBox[{"\"color red:0.862745 green:0.752941 blue:0.454902\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Color\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"RGB\"", ",", 
               RowBox[{"{", 
                 RowBox[{"220", ",", "192", ",", "116"}], "}"}]}], "}"}]}], 
         "]"}], "\"Entity[\\\"Color\\\", {\\\"RGB\\\", {220, 192, 116}}]\"", 
       "\"color\""},
      "Entity"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.803062484420515*^9, 3.803063052680437*^9, 
  3.803071370940363*^9, 3.8032109776880207`*^9, 3.8032113044704533`*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"1b77ab87-0615-4b89-b0b7-3b6a0f0ac960"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"color red:1. green:0.854902 blue:0.72549\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Color\"", ",", 
        RowBox[{"{", 
          RowBox[{"\"RGB\"", ",", 
            RowBox[{"{", 
              RowBox[{"255", ",", "218", ",", "185"}], "}"}]}], "}"}]}], 
      "]"}], "\"Entity[\\\"Color\\\", {\\\"RGB\\\", {255, 218, 185}}]\"", 
    "\"color\""},
   "Entity"], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.803062512657941*^9, 3.803062514480373*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"7b481afd-c826-40bb-ad2c-3b7dd200be83"],

Cell["Entity[\"Color\", {\"RGB\", {255, 218, 185}}]", "Output",
 CellChangeTimes->{
  3.8030626544474087`*^9, 3.8030630527007513`*^9, {3.8030713741538897`*^9, 
   3.803071375688037*^9}, 3.80321097769683*^9, 3.803211304478076*^9},
 CellLabel->
  "Out[317]//InputForm=",ExpressionUUID->"9fd21316-f5c9-47b2-9d3c-\
00a7e22e028f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Flatten[List@@Entity[\"Color\", {\"RGB\", {255, 218, 185}}]][[-3;;-1]]\
\>", "Input",
 CellChangeTimes->{{3.8030625284050303`*^9, 3.8030626020378733`*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"d09004f6-846f-4690-8712-eddb67f21eef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"255", ",", "218", ",", "185"}], "}"}]], "Output",
 CellChangeTimes->{{3.803062533412024*^9, 3.803062603034676*^9}, 
   3.8030630527526608`*^9, 3.803071377259275*^9, 3.8032109777567463`*^9, 
   3.803211304523902*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"fce3b99c-c471-4614-b069-4cccf4c4717e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"entityColorsRGB", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"List", "@@", 
           RowBox[{"Last", "@", "#"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"-", "3"}], ";;", 
          RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}], "\[Rule]", 
       RowBox[{"First", "@", "#"}]}], "&"}], "/@", "nameAndColorEntities"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8027772390358877`*^9, 3.802777376607502*^9}, 
   3.802777516905952*^9, {3.802777560586155*^9, 3.802777562598832*^9}, 
   3.802777626686195*^9, {3.803062684558488*^9, 3.80306276742873*^9}, {
   3.803062799577703*^9, 3.803062815092565*^9}, {3.80306292511204*^9, 
   3.803062930890129*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"83c093e0-ce18-442a-bb0e-15879c319906"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"entityColorsRGB", "[", 
  RowBox[{"[", 
   RowBox[{";;", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8030628263284197`*^9, 3.803062828589773*^9}, 
   3.8030629342620687`*^9},
 CellLabel->
  "In[320]:=",ExpressionUUID->"d46531ce-46ba-4277-b1ef-68b894feb647"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[255, 218, 185], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"{", 
            RowBox[{"255", ",", "218", ",", "185"}], "}"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[{255, 218, 185}],
     Editable->False,
     Selectable->False], "\[Rule]", "\<\"HTML peach puff\"\>"}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[244, 219, 132], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"{", 
            RowBox[{"244", ",", "219", ",", "132"}], "}"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[{244, 219, 132}],
     Editable->False,
     Selectable->False], "\[Rule]", "\<\"Colorado Yellow\"\>"}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[237, 236, 167], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"{", 
            RowBox[{"237", ",", "236", ",", "167"}], "}"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[{237, 236, 167}],
     Editable->False,
     Selectable->False], "\[Rule]", "\<\"Condor Yellow\"\>"}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[237, 211, 167], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"{", 
            RowBox[{"237", ",", "211", ",", "167"}], "}"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[{237, 211, 167}],
     Editable->False,
     Selectable->False], "\[Rule]", "\<\"Sahara\"\>"}], ",", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[220, 192, 116], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"{", 
            RowBox[{"220", ",", "192", ",", "116"}], "}"}], "]"}], 
        NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[{220, 192, 116}],
     Editable->False,
     Selectable->False], "\[Rule]", "\<\"Ceylon Gold Metallic\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8030628289515953`*^9, 3.8030629389133873`*^9, 
  3.803063052838256*^9, 3.8032109778498087`*^9, 3.803211304648281*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"8453ec42-3bfe-46f0-b317-b2a59517df65"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Description function for colors (using the entity colors)", \
"Subsubsection",
 CellChangeTimes->{{3.803062992226159*^9, 3.8030630208082113`*^9}, {
  3.80306511964918*^9, 3.8030651231596003`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"cba37de9-6e1e-4373-864d-8f7a5a7eea5c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Description2", "[", "color_RGBColor", "]"}], ":=", 
   RowBox[{
    RowBox[{"Description2", "[", "color", "]"}], "=", 
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<FromCamelCase\>\"", "]"}], "@", 
     RowBox[{"entityColorsRGB", "[", 
      RowBox[{"First", "@", 
       RowBox[{"Nearest", "[", 
        RowBox[{
         RowBox[{"Keys", "@", "entityColorsRGB"}], ",", "color", ",", "1"}], 
        "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Description2", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.802777645012858*^9, 3.8027776980087967`*^9}, {
   3.802778061205439*^9, 3.802778065723427*^9}, {3.803062950558908*^9, 
   3.803062962357328*^9}, {3.8030631756703377`*^9, 3.803063187334037*^9}, {
   3.803063230169469*^9, 3.803063231320538*^9}, 3.8030654215027*^9, {
   3.803210944410963*^9, 3.803210945031065*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"a8440a0e-895e-47ae-b165-a99229b4e08a"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803063545292488*^9, 3.803063547639056*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"7b7777ad-047b-426b-8964-2553bad21c82"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"randomColor", "=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}], ",", 
    RowBox[{"RandomReal", "[", "1", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Description2", "[", "randomColor", "]"}]}], "Input",
 CellChangeTimes->{{3.802727372399206*^9, 3.80272741031525*^9}, 
   3.8027780709910183`*^9},
 CellLabel->
  "In[323]:=",ExpressionUUID->"c838b7ae-ed5c-49f2-b2c6-166e1d2ea9e8"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.7233161143455209, 0.5365867646092706, 0.3418076086458677], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.48221074289701393`, 0.35772450973951375`, 0.22787173909724512`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{
        "0.7233161143455209`", ",", "0.5365867646092706`", ",", 
         "0.3418076086458677`"}], "]"}], NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.7233161143455209, 0.5365867646092706, 0.3418076086458677]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.7233161143455209, 0.5365867646092706, 0.3418076086458677],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.802727375911377*^9, 3.802727441706561*^9}, {
   3.802777684067789*^9, 3.802777702304689*^9}, 3.802777813583128*^9, 
   3.8027780767275143`*^9, 3.802779026732217*^9, 3.8027832035820637`*^9, 
   3.803063238721608*^9, 3.803071332470611*^9, 3.8030713859107656`*^9, {
   3.803210953506167*^9, 3.803210977941627*^9}, 3.80321130470912*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"6e98be50-a2f9-406b-ba8e-2dc5a6521ce6"],

Cell[BoxData["\<\"traffic sign black (nighttime)\"\>"], "Output",
 CellChangeTimes->{{3.802727375911377*^9, 3.802727441706561*^9}, {
   3.802777684067789*^9, 3.802777702304689*^9}, 3.802777813583128*^9, 
   3.8027780767275143`*^9, 3.802779026732217*^9, 3.8027832035820637`*^9, 
   3.803063238721608*^9, 3.803071332470611*^9, 3.8030713859107656`*^9, {
   3.803210953506167*^9, 3.803210977941627*^9}, 3.803211304913892*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"7a186afe-ea38-49d8-860b-68a3212c1f41"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorDescriptionTests2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Description2", "@", "#"}], ",", "#"}], "]"}]}], "}"}], 
     "&"}], "/@", 
    RowBox[{"RGBColor", "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "3"}], "}"}]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802729546972313*^9, 3.8027298581481028`*^9}, {
   3.8027298931198893`*^9, 3.802729924069748*^9}, {3.802729959082859*^9, 
   3.802729988840702*^9}, {3.802730068818359*^9, 3.802730085892498*^9}, {
   3.802740493930305*^9, 3.802740562803976*^9}, {3.8027409195811357`*^9, 
   3.80274093088916*^9}, {3.802741020935726*^9, 3.8027410242599573`*^9}, 
   3.8027777715476847`*^9, {3.803063466108781*^9, 3.803063497110948*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"04ce71fb-433f-4197-b2bc-d409304582c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Frame", "\[Rule]", "All"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "&"}], "/@", 
  RowBox[{"ArrayReshape", "[", 
   RowBox[{"colorDescriptionTests2", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "20", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.802742633460918*^9, 3.802742658566352*^9}, {
   3.802742699422908*^9, 3.802742702337666*^9}, {3.802742752493335*^9, 
   3.8027428291321363`*^9}, {3.8027428647941227`*^9, 
   3.8027428668795223`*^9}, {3.8027433406279287`*^9, 3.8027433493884487`*^9}, 
   3.802777775062409*^9, 3.803063474989099*^9},
 CellLabel->
  "In[326]:=",ExpressionUUID->"5693edb1-ef48-4eb2-8a89-28613a5d16a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3776164639008541, 0.0793821165307731, 0.723816708499373], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2517443092672361, 0.052921411020515396`, 0.4825444723329153],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3776164639008541`", ",", "0.0793821165307731`", ",", 
                 "0.723816708499373`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3776164639008541, 0.0793821165307731, 0.723816708499373]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3776164639008541, 0.0793821165307731, 0.723816708499373}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3776164639008541, 0.0793821165307731, 0.723816708499373],
        FrontFaceColor->RGBColor[
         0.3776164639008541, 0.0793821165307731, 0.723816708499373],
        BackFaceColor->RGBColor[
         0.3776164639008541, 0.0793821165307731, 0.723816708499373],
        GraphicsColor->RGBColor[
         0.3776164639008541, 0.0793821165307731, 0.723816708499373],
        FontColor->RGBColor[
         0.3776164639008541, 0.0793821165307731, 0.723816708499373]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.434820431986805, 0.7904363000253458, 0.3111564674409082], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.28988028799120336`, 0.5269575333502305, 0.20743764496060546`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.434820431986805`", ",", "0.7904363000253458`", ",", 
                 "0.3111564674409082`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.434820431986805, 0.7904363000253458, 0.3111564674409082]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.434820431986805, 0.7904363000253458, 0.3111564674409082}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.434820431986805, 0.7904363000253458, 0.3111564674409082],
        FrontFaceColor->RGBColor[
         0.434820431986805, 0.7904363000253458, 0.3111564674409082],
        BackFaceColor->RGBColor[
         0.434820431986805, 0.7904363000253458, 0.3111564674409082],
        GraphicsColor->RGBColor[
         0.434820431986805, 0.7904363000253458, 0.3111564674409082],
        FontColor->RGBColor[
         0.434820431986805, 0.7904363000253458, 0.3111564674409082]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2147318329537884, 0.46289939334765884`, 0.1570060477493478], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1431545553025256, 0.3085995955651059, 0.1046706984995652],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2147318329537884`", ",", "0.46289939334765884`", ",", 
                 "0.1570060477493478`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2147318329537884, 0.46289939334765884`, 0.1570060477493478]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2147318329537884, 0.46289939334765884`, 
         0.1570060477493478}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2147318329537884, 0.46289939334765884`, 0.1570060477493478],
        FrontFaceColor->RGBColor[
         0.2147318329537884, 0.46289939334765884`, 0.1570060477493478],
        BackFaceColor->RGBColor[
         0.2147318329537884, 0.46289939334765884`, 0.1570060477493478],
        GraphicsColor->RGBColor[
         0.2147318329537884, 0.46289939334765884`, 0.1570060477493478],
        FontColor->RGBColor[
         0.2147318329537884, 0.46289939334765884`, 0.1570060477493478]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.850631874248198, 0.9953815601264562, 0.8832704332479833], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5670879161654654, 0.6635877067509708, 0.5888469554986555],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.850631874248198`", ",", "0.9953815601264562`", ",", 
                 "0.8832704332479833`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.850631874248198, 0.9953815601264562, 0.8832704332479833]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.850631874248198, 0.9953815601264562, 0.8832704332479833}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.850631874248198, 0.9953815601264562, 0.8832704332479833],
        FrontFaceColor->RGBColor[
         0.850631874248198, 0.9953815601264562, 0.8832704332479833],
        BackFaceColor->RGBColor[
         0.850631874248198, 0.9953815601264562, 0.8832704332479833],
        GraphicsColor->RGBColor[
         0.850631874248198, 0.9953815601264562, 0.8832704332479833],
        FontColor->RGBColor[
         0.850631874248198, 0.9953815601264562, 0.8832704332479833]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5007232898116094, 0.005280106817311392, 0.5807440518931526], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33381552654107294`, 0.003520071211540928, 0.3871627012621017],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5007232898116094`", ",", "0.005280106817311392`", ",", 
                 "0.5807440518931526`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5007232898116094, 0.005280106817311392, 0.5807440518931526]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5007232898116094, 0.005280106817311392, 
         0.5807440518931526}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5007232898116094, 0.005280106817311392, 0.5807440518931526],
        FrontFaceColor->RGBColor[
         0.5007232898116094, 0.005280106817311392, 0.5807440518931526],
        BackFaceColor->RGBColor[
         0.5007232898116094, 0.005280106817311392, 0.5807440518931526],
        GraphicsColor->RGBColor[
         0.5007232898116094, 0.005280106817311392, 0.5807440518931526],
        FontColor->RGBColor[
         0.5007232898116094, 0.005280106817311392, 0.5807440518931526]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7782371974915234, 0.5576163903297935, 0.7381494480601942], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5188247983276824, 0.37174426021986234`, 0.4920996320401295],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7782371974915234`", ",", "0.5576163903297935`", ",", 
                 "0.7381494480601942`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7782371974915234, 0.5576163903297935, 0.7381494480601942]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7782371974915234, 0.5576163903297935, 0.7381494480601942}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7782371974915234, 0.5576163903297935, 0.7381494480601942],
        FrontFaceColor->RGBColor[
         0.7782371974915234, 0.5576163903297935, 0.7381494480601942],
        BackFaceColor->RGBColor[
         0.7782371974915234, 0.5576163903297935, 0.7381494480601942],
        GraphicsColor->RGBColor[
         0.7782371974915234, 0.5576163903297935, 0.7381494480601942],
        FontColor->RGBColor[
         0.7782371974915234, 0.5576163903297935, 0.7381494480601942]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9553505445756942, 0.7948122963446542, 0.7902655347359615], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6369003630504628, 0.5298748642297695, 0.5268436898239743],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9553505445756942`", ",", "0.7948122963446542`", ",", 
                 "0.7902655347359615`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9553505445756942, 0.7948122963446542, 0.7902655347359615]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9553505445756942, 0.7948122963446542, 0.7902655347359615}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9553505445756942, 0.7948122963446542, 0.7902655347359615],
        FrontFaceColor->RGBColor[
         0.9553505445756942, 0.7948122963446542, 0.7902655347359615],
        BackFaceColor->RGBColor[
         0.9553505445756942, 0.7948122963446542, 0.7902655347359615],
        GraphicsColor->RGBColor[
         0.9553505445756942, 0.7948122963446542, 0.7902655347359615],
        FontColor->RGBColor[
         0.9553505445756942, 0.7948122963446542, 0.7902655347359615]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5820717049404354, 0.9695990808753636, 0.10440696322746135`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3880478032936236, 0.6463993872502425, 0.0696046421516409],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5820717049404354`", ",", "0.9695990808753636`", ",", 
                 "0.10440696322746135`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5820717049404354, 0.9695990808753636, 0.10440696322746135`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5820717049404354, 0.9695990808753636, 
         0.10440696322746135`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5820717049404354, 0.9695990808753636, 0.10440696322746135`],
        FrontFaceColor->RGBColor[
         0.5820717049404354, 0.9695990808753636, 0.10440696322746135`],
        BackFaceColor->RGBColor[
         0.5820717049404354, 0.9695990808753636, 0.10440696322746135`],
        GraphicsColor->RGBColor[
         0.5820717049404354, 0.9695990808753636, 0.10440696322746135`],
        FontColor->RGBColor[
         0.5820717049404354, 0.9695990808753636, 0.10440696322746135`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.44146452433054084`, 0.2879254690288222, 0.25665929237444907`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.29430968288702725`, 0.19195031268588147`, 0.1711061949162994],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.44146452433054084`", ",", "0.2879254690288222`", ",", 
                 "0.25665929237444907`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.44146452433054084`, 0.2879254690288222, 0.25665929237444907`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.44146452433054084`, 0.2879254690288222, 
         0.25665929237444907`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.44146452433054084`, 0.2879254690288222, 0.25665929237444907`],
        FrontFaceColor->RGBColor[
         0.44146452433054084`, 0.2879254690288222, 0.25665929237444907`],
        BackFaceColor->RGBColor[
         0.44146452433054084`, 0.2879254690288222, 0.25665929237444907`],
        GraphicsColor->RGBColor[
         0.44146452433054084`, 0.2879254690288222, 0.25665929237444907`],
        FontColor->RGBColor[
         0.44146452433054084`, 0.2879254690288222, 0.25665929237444907`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.46887478006427985`, 0.4519401423985143, 0.7477722313329778], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3125831867095199, 0.30129342826567623`, 0.49851482088865184`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.46887478006427985`", ",", "0.4519401423985143`", ",", 
                 "0.7477722313329778`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.46887478006427985`, 0.4519401423985143, 0.7477722313329778]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.46887478006427985`, 0.4519401423985143, 
         0.7477722313329778}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.46887478006427985`, 0.4519401423985143, 0.7477722313329778],
        FrontFaceColor->RGBColor[
         0.46887478006427985`, 0.4519401423985143, 0.7477722313329778],
        BackFaceColor->RGBColor[
         0.46887478006427985`, 0.4519401423985143, 0.7477722313329778],
        GraphicsColor->RGBColor[
         0.46887478006427985`, 0.4519401423985143, 0.7477722313329778],
        FontColor->RGBColor[
         0.46887478006427985`, 0.4519401423985143, 0.7477722313329778]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9104627905343128, 0.70689456536597, 0.29138689216682034`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6069751936895419, 0.4712630435773133, 0.19425792811121356`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9104627905343128`", ",", "0.70689456536597`", ",", 
                 "0.29138689216682034`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9104627905343128, 0.70689456536597, 0.29138689216682034`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9104627905343128, 0.70689456536597, 0.29138689216682034`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9104627905343128, 0.70689456536597, 0.29138689216682034`],
        FrontFaceColor->RGBColor[
         0.9104627905343128, 0.70689456536597, 0.29138689216682034`],
        BackFaceColor->RGBColor[
         0.9104627905343128, 0.70689456536597, 0.29138689216682034`],
        GraphicsColor->RGBColor[
         0.9104627905343128, 0.70689456536597, 0.29138689216682034`],
        FontColor->RGBColor[
         0.9104627905343128, 0.70689456536597, 0.29138689216682034`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3668947544391161, 0.3342531860590039, 0.12902068248419085`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.24459650295941077`, 0.22283545737266927`, 0.08601378832279391],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3668947544391161`", ",", "0.3342531860590039`", ",", 
                 "0.12902068248419085`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3668947544391161, 0.3342531860590039, 0.12902068248419085`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3668947544391161, 0.3342531860590039, 
         0.12902068248419085`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3668947544391161, 0.3342531860590039, 0.12902068248419085`],
        FrontFaceColor->RGBColor[
         0.3668947544391161, 0.3342531860590039, 0.12902068248419085`],
        BackFaceColor->RGBColor[
         0.3668947544391161, 0.3342531860590039, 0.12902068248419085`],
        GraphicsColor->RGBColor[
         0.3668947544391161, 0.3342531860590039, 0.12902068248419085`],
        FontColor->RGBColor[
         0.3668947544391161, 0.3342531860590039, 0.12902068248419085`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8819510820827385, 0.7854935023811089, 0.5981234896293708], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.587967388055159, 0.5236623349207393, 0.3987489930862472],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8819510820827385`", ",", "0.7854935023811089`", ",", 
                 "0.5981234896293708`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8819510820827385, 0.7854935023811089, 0.5981234896293708]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8819510820827385, 0.7854935023811089, 0.5981234896293708}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8819510820827385, 0.7854935023811089, 0.5981234896293708],
        FrontFaceColor->RGBColor[
         0.8819510820827385, 0.7854935023811089, 0.5981234896293708],
        BackFaceColor->RGBColor[
         0.8819510820827385, 0.7854935023811089, 0.5981234896293708],
        GraphicsColor->RGBColor[
         0.8819510820827385, 0.7854935023811089, 0.5981234896293708],
        FontColor->RGBColor[
         0.8819510820827385, 0.7854935023811089, 0.5981234896293708]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.41755698740760816`, 0.39022643766654386`, 
              0.23952968182425804`], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.27837132493840544`, 0.2601509584443626, 0.15968645454950536`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.41755698740760816`", ",", "0.39022643766654386`", ",", 
                 "0.23952968182425804`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.41755698740760816`, 0.39022643766654386`, 
               0.23952968182425804`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.41755698740760816`, 0.39022643766654386`, 
         0.23952968182425804`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.41755698740760816`, 0.39022643766654386`, 0.23952968182425804`],
        FrontFaceColor->RGBColor[
         0.41755698740760816`, 0.39022643766654386`, 0.23952968182425804`],
        BackFaceColor->RGBColor[
         0.41755698740760816`, 0.39022643766654386`, 0.23952968182425804`],
        GraphicsColor->RGBColor[
         0.41755698740760816`, 0.39022643766654386`, 0.23952968182425804`],
        FontColor->RGBColor[
         0.41755698740760816`, 0.39022643766654386`, 0.23952968182425804`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4377082771648648, 0.24563556827615862`, 0.46269753185075313`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2918055181099099, 0.16375704551743908`, 0.30846502123383546`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4377082771648648`", ",", "0.24563556827615862`", ",", 
                 "0.46269753185075313`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4377082771648648, 0.24563556827615862`, 0.46269753185075313`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4377082771648648, 0.24563556827615862`, 
         0.46269753185075313`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4377082771648648, 0.24563556827615862`, 0.46269753185075313`],
        FrontFaceColor->RGBColor[
         0.4377082771648648, 0.24563556827615862`, 0.46269753185075313`],
        BackFaceColor->RGBColor[
         0.4377082771648648, 0.24563556827615862`, 0.46269753185075313`],
        GraphicsColor->RGBColor[
         0.4377082771648648, 0.24563556827615862`, 0.46269753185075313`],
        FontColor->RGBColor[
         0.4377082771648648, 0.24563556827615862`, 0.46269753185075313`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7206616781779345, 0.6428429544843297, 0.4062044025654159], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.48044111878528967`, 0.42856196965621984`, 0.27080293504361064`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7206616781779345`", ",", "0.6428429544843297`", ",", 
                 "0.4062044025654159`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7206616781779345, 0.6428429544843297, 0.4062044025654159]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7206616781779345, 0.6428429544843297, 0.4062044025654159}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7206616781779345, 0.6428429544843297, 0.4062044025654159],
        FrontFaceColor->RGBColor[
         0.7206616781779345, 0.6428429544843297, 0.4062044025654159],
        BackFaceColor->RGBColor[
         0.7206616781779345, 0.6428429544843297, 0.4062044025654159],
        GraphicsColor->RGBColor[
         0.7206616781779345, 0.6428429544843297, 0.4062044025654159],
        FontColor->RGBColor[
         0.7206616781779345, 0.6428429544843297, 0.4062044025654159]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.1798611642351149, 0.5392998045203874, 0.8897634059395179], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.11990744282340993`, 0.3595332030135916, 0.5931756039596786],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.1798611642351149`", ",", "0.5392998045203874`", ",", 
                 "0.8897634059395179`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.1798611642351149, 0.5392998045203874, 0.8897634059395179]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.1798611642351149, 0.5392998045203874, 0.8897634059395179}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.1798611642351149, 0.5392998045203874, 0.8897634059395179],
        FrontFaceColor->RGBColor[
         0.1798611642351149, 0.5392998045203874, 0.8897634059395179],
        BackFaceColor->RGBColor[
         0.1798611642351149, 0.5392998045203874, 0.8897634059395179],
        GraphicsColor->RGBColor[
         0.1798611642351149, 0.5392998045203874, 0.8897634059395179],
        FontColor->RGBColor[
         0.1798611642351149, 0.5392998045203874, 0.8897634059395179]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.24645992644153347`, 0.35402665628218677`, 0.4620293327882765], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.164306617627689, 0.2360177708547912, 0.3080195551921844],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.24645992644153347`", ",", "0.35402665628218677`", ",", 
                 "0.4620293327882765`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.24645992644153347`, 0.35402665628218677`, 0.4620293327882765]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.24645992644153347`, 0.35402665628218677`, 
         0.4620293327882765}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.24645992644153347`, 0.35402665628218677`, 0.4620293327882765],
        FrontFaceColor->RGBColor[
         0.24645992644153347`, 0.35402665628218677`, 0.4620293327882765],
        BackFaceColor->RGBColor[
         0.24645992644153347`, 0.35402665628218677`, 0.4620293327882765],
        GraphicsColor->RGBColor[
         0.24645992644153347`, 0.35402665628218677`, 0.4620293327882765],
        FontColor->RGBColor[
         0.24645992644153347`, 0.35402665628218677`, 0.4620293327882765]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.285710448682847, 0.03418791374361829, 0.10841954131925058`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.19047363245523136`, 0.02279194249574553, 0.07227969421283373],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.285710448682847`", ",", "0.03418791374361829`", ",", 
                 "0.10841954131925058`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.285710448682847, 0.03418791374361829, 0.10841954131925058`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.285710448682847, 0.03418791374361829, 
         0.10841954131925058`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.285710448682847, 0.03418791374361829, 0.10841954131925058`],
        FrontFaceColor->RGBColor[
         0.285710448682847, 0.03418791374361829, 0.10841954131925058`],
        BackFaceColor->RGBColor[
         0.285710448682847, 0.03418791374361829, 0.10841954131925058`],
        GraphicsColor->RGBColor[
         0.285710448682847, 0.03418791374361829, 0.10841954131925058`],
        FontColor->RGBColor[
         0.285710448682847, 0.03418791374361829, 0.10841954131925058`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6726204352029541, 0.7413291261929107, 0.6247433016543562], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4484136234686361, 0.4942194174619405, 0.4164955344362375],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6726204352029541`", ",", "0.7413291261929107`", ",", 
                 "0.6247433016543562`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6726204352029541, 0.7413291261929107, 0.6247433016543562]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6726204352029541, 0.7413291261929107, 0.6247433016543562}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6726204352029541, 0.7413291261929107, 0.6247433016543562],
        FrontFaceColor->RGBColor[
         0.6726204352029541, 0.7413291261929107, 0.6247433016543562],
        BackFaceColor->RGBColor[
         0.6726204352029541, 0.7413291261929107, 0.6247433016543562],
        GraphicsColor->RGBColor[
         0.6726204352029541, 0.7413291261929107, 0.6247433016543562],
        FontColor->RGBColor[
         0.6726204352029541, 0.7413291261929107, 0.6247433016543562]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.15953371066368316`, 0.40566919065679063`, 
              0.0036626138738560243`], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.10635580710912211`, 0.2704461271045271, 0.002441742582570683],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.15953371066368316`", ",", "0.40566919065679063`", ",", 
                 "0.0036626138738560243`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.15953371066368316`, 0.40566919065679063`, 
               0.0036626138738560243`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.15953371066368316`, 0.40566919065679063`, 
         0.0036626138738560243`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.15953371066368316`, 0.40566919065679063`, 0.0036626138738560243`],
        FrontFaceColor->RGBColor[
         0.15953371066368316`, 0.40566919065679063`, 0.0036626138738560243`],
        BackFaceColor->RGBColor[
         0.15953371066368316`, 0.40566919065679063`, 0.0036626138738560243`],
        GraphicsColor->RGBColor[
         0.15953371066368316`, 0.40566919065679063`, 0.0036626138738560243`],
        FontColor->RGBColor[
         0.15953371066368316`, 0.40566919065679063`, 0.0036626138738560243`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5955669281371831, 0.700156493065778, 0.16090944379432592`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.39704461875812214`, 0.46677099537718536`, 0.10727296252955063`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5955669281371831`", ",", "0.700156493065778`", ",", 
                 "0.16090944379432592`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5955669281371831, 0.700156493065778, 0.16090944379432592`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5955669281371831, 0.700156493065778, 
         0.16090944379432592`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5955669281371831, 0.700156493065778, 0.16090944379432592`],
        FrontFaceColor->RGBColor[
         0.5955669281371831, 0.700156493065778, 0.16090944379432592`],
        BackFaceColor->RGBColor[
         0.5955669281371831, 0.700156493065778, 0.16090944379432592`],
        GraphicsColor->RGBColor[
         0.5955669281371831, 0.700156493065778, 0.16090944379432592`],
        FontColor->RGBColor[
         0.5955669281371831, 0.700156493065778, 0.16090944379432592`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5507430693715303, 0.8708369078261313, 0.027617344964540713`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3671620462476869, 0.5805579385507542, 0.01841156330969381],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5507430693715303`", ",", "0.8708369078261313`", ",", 
                 "0.027617344964540713`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5507430693715303, 0.8708369078261313, 0.027617344964540713`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5507430693715303, 0.8708369078261313, 
         0.027617344964540713`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5507430693715303, 0.8708369078261313, 0.027617344964540713`],
        FrontFaceColor->RGBColor[
         0.5507430693715303, 0.8708369078261313, 0.027617344964540713`],
        BackFaceColor->RGBColor[
         0.5507430693715303, 0.8708369078261313, 0.027617344964540713`],
        GraphicsColor->RGBColor[
         0.5507430693715303, 0.8708369078261313, 0.027617344964540713`],
        FontColor->RGBColor[
         0.5507430693715303, 0.8708369078261313, 0.027617344964540713`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6427361913496981, 0.8036275397007937, 0.2329242705718364], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4284907942331321, 0.5357516931338625, 0.15528284704789094`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6427361913496981`", ",", "0.8036275397007937`", ",", 
                 "0.2329242705718364`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6427361913496981, 0.8036275397007937, 0.2329242705718364]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6427361913496981, 0.8036275397007937, 0.2329242705718364}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6427361913496981, 0.8036275397007937, 0.2329242705718364],
        FrontFaceColor->RGBColor[
         0.6427361913496981, 0.8036275397007937, 0.2329242705718364],
        BackFaceColor->RGBColor[
         0.6427361913496981, 0.8036275397007937, 0.2329242705718364],
        GraphicsColor->RGBColor[
         0.6427361913496981, 0.8036275397007937, 0.2329242705718364],
        FontColor->RGBColor[
         0.6427361913496981, 0.8036275397007937, 0.2329242705718364]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.03236126661512295, 0.6205833630840567, 0.2304014382959243], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.0215741777434153, 0.4137222420560378, 0.15360095886394953`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.03236126661512295`", ",", "0.6205833630840567`", ",", 
                 "0.2304014382959243`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.03236126661512295, 0.6205833630840567, 0.2304014382959243]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.03236126661512295, 0.6205833630840567, 
         0.2304014382959243}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.03236126661512295, 0.6205833630840567, 0.2304014382959243],
        FrontFaceColor->RGBColor[
         0.03236126661512295, 0.6205833630840567, 0.2304014382959243],
        BackFaceColor->RGBColor[
         0.03236126661512295, 0.6205833630840567, 0.2304014382959243],
        GraphicsColor->RGBColor[
         0.03236126661512295, 0.6205833630840567, 0.2304014382959243],
        FontColor->RGBColor[
         0.03236126661512295, 0.6205833630840567, 0.2304014382959243]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.11514681344950928`, 0.180675571803534, 0.6453932243819107], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.07676454229967286, 0.120450381202356, 0.4302621495879405],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.11514681344950928`", ",", "0.180675571803534`", ",", 
                 "0.6453932243819107`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.11514681344950928`, 0.180675571803534, 0.6453932243819107]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.11514681344950928`, 0.180675571803534, 
         0.6453932243819107}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.11514681344950928`, 0.180675571803534, 0.6453932243819107],
        FrontFaceColor->RGBColor[
         0.11514681344950928`, 0.180675571803534, 0.6453932243819107],
        BackFaceColor->RGBColor[
         0.11514681344950928`, 0.180675571803534, 0.6453932243819107],
        GraphicsColor->RGBColor[
         0.11514681344950928`, 0.180675571803534, 0.6453932243819107],
        FontColor->RGBColor[
         0.11514681344950928`, 0.180675571803534, 0.6453932243819107]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8603345264366351, 0.8258789187569189, 0.05372742182812962], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5735563509577568, 0.550585945837946, 0.03581828121875308],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8603345264366351`", ",", "0.8258789187569189`", ",", 
                 "0.05372742182812962`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8603345264366351, 0.8258789187569189, 0.05372742182812962]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8603345264366351, 0.8258789187569189, 
         0.05372742182812962}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8603345264366351, 0.8258789187569189, 0.05372742182812962],
        FrontFaceColor->RGBColor[
         0.8603345264366351, 0.8258789187569189, 0.05372742182812962],
        BackFaceColor->RGBColor[
         0.8603345264366351, 0.8258789187569189, 0.05372742182812962],
        GraphicsColor->RGBColor[
         0.8603345264366351, 0.8258789187569189, 0.05372742182812962],
        FontColor->RGBColor[
         0.8603345264366351, 0.8258789187569189, 0.05372742182812962]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5459078178099379, 0.9031876515124071, 0.4765019470088605], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3639385452066253, 0.6021251010082714, 0.3176679646725737],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5459078178099379`", ",", "0.9031876515124071`", ",", 
                 "0.4765019470088605`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5459078178099379, 0.9031876515124071, 0.4765019470088605]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5459078178099379, 0.9031876515124071, 0.4765019470088605}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5459078178099379, 0.9031876515124071, 0.4765019470088605],
        FrontFaceColor->RGBColor[
         0.5459078178099379, 0.9031876515124071, 0.4765019470088605],
        BackFaceColor->RGBColor[
         0.5459078178099379, 0.9031876515124071, 0.4765019470088605],
        GraphicsColor->RGBColor[
         0.5459078178099379, 0.9031876515124071, 0.4765019470088605],
        FontColor->RGBColor[
         0.5459078178099379, 0.9031876515124071, 0.4765019470088605]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9956916460868377, 0.6976276184084809, 0.06033105533806582], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6637944307245585, 0.46508507893898726`, 0.04022070355871055],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9956916460868377`", ",", "0.6976276184084809`", ",", 
                 "0.06033105533806582`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9956916460868377, 0.6976276184084809, 0.06033105533806582]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9956916460868377, 0.6976276184084809, 
         0.06033105533806582}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9956916460868377, 0.6976276184084809, 0.06033105533806582],
        FrontFaceColor->RGBColor[
         0.9956916460868377, 0.6976276184084809, 0.06033105533806582],
        BackFaceColor->RGBColor[
         0.9956916460868377, 0.6976276184084809, 0.06033105533806582],
        GraphicsColor->RGBColor[
         0.9956916460868377, 0.6976276184084809, 0.06033105533806582],
        FontColor->RGBColor[
         0.9956916460868377, 0.6976276184084809, 0.06033105533806582]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.523087239601123, 0.8523664719163366, 0.16368942253998142`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3487248264007487, 0.5682443146108911, 0.10912628169332095`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.523087239601123`", ",", "0.8523664719163366`", ",", 
                 "0.16368942253998142`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.523087239601123, 0.8523664719163366, 0.16368942253998142`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.523087239601123, 0.8523664719163366, 
         0.16368942253998142`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.523087239601123, 0.8523664719163366, 0.16368942253998142`],
        FrontFaceColor->RGBColor[
         0.523087239601123, 0.8523664719163366, 0.16368942253998142`],
        BackFaceColor->RGBColor[
         0.523087239601123, 0.8523664719163366, 0.16368942253998142`],
        GraphicsColor->RGBColor[
         0.523087239601123, 0.8523664719163366, 0.16368942253998142`],
        FontColor->RGBColor[
         0.523087239601123, 0.8523664719163366, 0.16368942253998142`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.012854091664113554`, 0.006241174407812133, 0.921521758554755], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.00856939444274237, 0.0041607829385414226`, 0.6143478390365034],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.012854091664113554`", ",", "0.006241174407812133`", ",", 
                 "0.921521758554755`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.012854091664113554`, 0.006241174407812133, 0.921521758554755]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.012854091664113554`, 0.006241174407812133, 
         0.921521758554755}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.012854091664113554`, 0.006241174407812133, 0.921521758554755],
        FrontFaceColor->RGBColor[
         0.012854091664113554`, 0.006241174407812133, 0.921521758554755],
        BackFaceColor->RGBColor[
         0.012854091664113554`, 0.006241174407812133, 0.921521758554755],
        GraphicsColor->RGBColor[
         0.012854091664113554`, 0.006241174407812133, 0.921521758554755],
        FontColor->RGBColor[
         0.012854091664113554`, 0.006241174407812133, 0.921521758554755]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6852036283268605, 0.01690801085053817, 0.7932479253395555], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.45680241888457374`, 0.011272007233692113`, 0.5288319502263703],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6852036283268605`", ",", "0.01690801085053817`", ",", 
                 "0.7932479253395555`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6852036283268605, 0.01690801085053817, 0.7932479253395555]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6852036283268605, 0.01690801085053817, 
         0.7932479253395555}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6852036283268605, 0.01690801085053817, 0.7932479253395555],
        FrontFaceColor->RGBColor[
         0.6852036283268605, 0.01690801085053817, 0.7932479253395555],
        BackFaceColor->RGBColor[
         0.6852036283268605, 0.01690801085053817, 0.7932479253395555],
        GraphicsColor->RGBColor[
         0.6852036283268605, 0.01690801085053817, 0.7932479253395555],
        FontColor->RGBColor[
         0.6852036283268605, 0.01690801085053817, 0.7932479253395555]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.42917527564236435`, 0.9126939635476261, 0.7780869845481668], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2861168504282429, 0.6084626423650841, 0.5187246563654446],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.42917527564236435`", ",", "0.9126939635476261`", ",", 
                 "0.7780869845481668`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.42917527564236435`, 0.9126939635476261, 0.7780869845481668]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.42917527564236435`, 0.9126939635476261, 
         0.7780869845481668}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.42917527564236435`, 0.9126939635476261, 0.7780869845481668],
        FrontFaceColor->RGBColor[
         0.42917527564236435`, 0.9126939635476261, 0.7780869845481668],
        BackFaceColor->RGBColor[
         0.42917527564236435`, 0.9126939635476261, 0.7780869845481668],
        GraphicsColor->RGBColor[
         0.42917527564236435`, 0.9126939635476261, 0.7780869845481668],
        FontColor->RGBColor[
         0.42917527564236435`, 0.9126939635476261, 0.7780869845481668]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4486523408781302, 0.7241640352824756, 0.19452897406128833`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.29910156058542015`, 0.48277602352165044`, 0.12968598270752557`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4486523408781302`", ",", "0.7241640352824756`", ",", 
                 "0.19452897406128833`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4486523408781302, 0.7241640352824756, 0.19452897406128833`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4486523408781302, 0.7241640352824756, 
         0.19452897406128833`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4486523408781302, 0.7241640352824756, 0.19452897406128833`],
        FrontFaceColor->RGBColor[
         0.4486523408781302, 0.7241640352824756, 0.19452897406128833`],
        BackFaceColor->RGBColor[
         0.4486523408781302, 0.7241640352824756, 0.19452897406128833`],
        GraphicsColor->RGBColor[
         0.4486523408781302, 0.7241640352824756, 0.19452897406128833`],
        FontColor->RGBColor[
         0.4486523408781302, 0.7241640352824756, 0.19452897406128833`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5376096468431801, 0.5069204541094066, 0.1630567503283784], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3584064312287868, 0.33794696940627106`, 0.10870450021891895`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5376096468431801`", ",", "0.5069204541094066`", ",", 
                 "0.1630567503283784`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5376096468431801, 0.5069204541094066, 0.1630567503283784]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5376096468431801, 0.5069204541094066, 0.1630567503283784}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5376096468431801, 0.5069204541094066, 0.1630567503283784],
        FrontFaceColor->RGBColor[
         0.5376096468431801, 0.5069204541094066, 0.1630567503283784],
        BackFaceColor->RGBColor[
         0.5376096468431801, 0.5069204541094066, 0.1630567503283784],
        GraphicsColor->RGBColor[
         0.5376096468431801, 0.5069204541094066, 0.1630567503283784],
        FontColor->RGBColor[
         0.5376096468431801, 0.5069204541094066, 0.1630567503283784]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.45541674366844664`, 0.6145591608832093, 0.5779384180674283], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.30361116244563113`, 0.40970610725547285`, 0.38529227871161886`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.45541674366844664`", ",", "0.6145591608832093`", ",", 
                 "0.5779384180674283`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.45541674366844664`, 0.6145591608832093, 0.5779384180674283]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.45541674366844664`, 0.6145591608832093, 
         0.5779384180674283}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.45541674366844664`, 0.6145591608832093, 0.5779384180674283],
        FrontFaceColor->RGBColor[
         0.45541674366844664`, 0.6145591608832093, 0.5779384180674283],
        BackFaceColor->RGBColor[
         0.45541674366844664`, 0.6145591608832093, 0.5779384180674283],
        GraphicsColor->RGBColor[
         0.45541674366844664`, 0.6145591608832093, 0.5779384180674283],
        FontColor->RGBColor[
         0.45541674366844664`, 0.6145591608832093, 0.5779384180674283]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.662941866552289, 0.19422942933129028`, 0.3550507532988949], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.44196124436819273`, 0.1294862862208602, 0.23670050219926328`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.662941866552289`", ",", "0.19422942933129028`", ",", 
                 "0.3550507532988949`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.662941866552289, 0.19422942933129028`, 0.3550507532988949]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.662941866552289, 0.19422942933129028`, 
         0.3550507532988949}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.662941866552289, 0.19422942933129028`, 0.3550507532988949],
        FrontFaceColor->RGBColor[
         0.662941866552289, 0.19422942933129028`, 0.3550507532988949],
        BackFaceColor->RGBColor[
         0.662941866552289, 0.19422942933129028`, 0.3550507532988949],
        GraphicsColor->RGBColor[
         0.662941866552289, 0.19422942933129028`, 0.3550507532988949],
        FontColor->RGBColor[
         0.662941866552289, 0.19422942933129028`, 0.3550507532988949]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5015503457959389, 0.7072956592258581, 0.7703592125852559], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3343668971972926, 0.47153043948390544`, 0.5135728083901706],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5015503457959389`", ",", "0.7072956592258581`", ",", 
                 "0.7703592125852559`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5015503457959389, 0.7072956592258581, 0.7703592125852559]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5015503457959389, 0.7072956592258581, 0.7703592125852559}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5015503457959389, 0.7072956592258581, 0.7703592125852559],
        FrontFaceColor->RGBColor[
         0.5015503457959389, 0.7072956592258581, 0.7703592125852559],
        BackFaceColor->RGBColor[
         0.5015503457959389, 0.7072956592258581, 0.7703592125852559],
        GraphicsColor->RGBColor[
         0.5015503457959389, 0.7072956592258581, 0.7703592125852559],
        FontColor->RGBColor[
         0.5015503457959389, 0.7072956592258581, 0.7703592125852559]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5479730981899622, 0.5219860292423282, 0.7330252307644609], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.36531539879330815`, 0.34799068616155215`, 0.4886834871763073],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5479730981899622`", ",", "0.5219860292423282`", ",", 
                 "0.7330252307644609`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5479730981899622, 0.5219860292423282, 0.7330252307644609]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5479730981899622, 0.5219860292423282, 0.7330252307644609}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5479730981899622, 0.5219860292423282, 0.7330252307644609],
        FrontFaceColor->RGBColor[
         0.5479730981899622, 0.5219860292423282, 0.7330252307644609],
        BackFaceColor->RGBColor[
         0.5479730981899622, 0.5219860292423282, 0.7330252307644609],
        GraphicsColor->RGBColor[
         0.5479730981899622, 0.5219860292423282, 0.7330252307644609],
        FontColor->RGBColor[
         0.5479730981899622, 0.5219860292423282, 0.7330252307644609]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3903754102523038, 0.717874135300393, 0.8175612300305684], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2602502735015359, 0.4785827568669287, 0.5450408200203789],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3903754102523038`", ",", "0.717874135300393`", ",", 
                 "0.8175612300305684`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3903754102523038, 0.717874135300393, 0.8175612300305684]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3903754102523038, 0.717874135300393, 0.8175612300305684}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3903754102523038, 0.717874135300393, 0.8175612300305684],
        FrontFaceColor->RGBColor[
         0.3903754102523038, 0.717874135300393, 0.8175612300305684],
        BackFaceColor->RGBColor[
         0.3903754102523038, 0.717874135300393, 0.8175612300305684],
        GraphicsColor->RGBColor[
         0.3903754102523038, 0.717874135300393, 0.8175612300305684],
        FontColor->RGBColor[
         0.3903754102523038, 0.717874135300393, 0.8175612300305684]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7159147543520112, 0.618672654079188, 0.7675246162576539], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4772765029013408, 0.412448436052792, 0.5116830775051027],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7159147543520112`", ",", "0.618672654079188`", ",", 
                 "0.7675246162576539`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7159147543520112, 0.618672654079188, 0.7675246162576539]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7159147543520112, 0.618672654079188, 0.7675246162576539}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7159147543520112, 0.618672654079188, 0.7675246162576539],
        FrontFaceColor->RGBColor[
         0.7159147543520112, 0.618672654079188, 0.7675246162576539],
        BackFaceColor->RGBColor[
         0.7159147543520112, 0.618672654079188, 0.7675246162576539],
        GraphicsColor->RGBColor[
         0.7159147543520112, 0.618672654079188, 0.7675246162576539],
        FontColor->RGBColor[
         0.7159147543520112, 0.618672654079188, 0.7675246162576539]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5679268091264575, 0.8778486677202193, 0.08537876150216372], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3786178727509717, 0.5852324451468129, 0.05691917433477582],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5679268091264575`", ",", "0.8778486677202193`", ",", 
                 "0.08537876150216372`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5679268091264575, 0.8778486677202193, 0.08537876150216372]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5679268091264575, 0.8778486677202193, 
         0.08537876150216372}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5679268091264575, 0.8778486677202193, 0.08537876150216372],
        FrontFaceColor->RGBColor[
         0.5679268091264575, 0.8778486677202193, 0.08537876150216372],
        BackFaceColor->RGBColor[
         0.5679268091264575, 0.8778486677202193, 0.08537876150216372],
        GraphicsColor->RGBColor[
         0.5679268091264575, 0.8778486677202193, 0.08537876150216372],
        FontColor->RGBColor[
         0.5679268091264575, 0.8778486677202193, 0.08537876150216372]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7317455644138642, 0.03002221533356364, 0.5600988209850526], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.48783037627590947`, 0.02001481022237576, 0.37339921399003506`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7317455644138642`", ",", "0.03002221533356364`", ",", 
                 "0.5600988209850526`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7317455644138642, 0.03002221533356364, 0.5600988209850526]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7317455644138642, 0.03002221533356364, 
         0.5600988209850526}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7317455644138642, 0.03002221533356364, 0.5600988209850526],
        FrontFaceColor->RGBColor[
         0.7317455644138642, 0.03002221533356364, 0.5600988209850526],
        BackFaceColor->RGBColor[
         0.7317455644138642, 0.03002221533356364, 0.5600988209850526],
        GraphicsColor->RGBColor[
         0.7317455644138642, 0.03002221533356364, 0.5600988209850526],
        FontColor->RGBColor[
         0.7317455644138642, 0.03002221533356364, 0.5600988209850526]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.35259129114180077`, 0.013559549149682493`, 
              0.46676123736426733`], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.23506086076120053`, 0.009039699433121662, 0.3111741582428449],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.35259129114180077`", ",", "0.013559549149682493`", ",", 
                 "0.46676123736426733`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.35259129114180077`, 0.013559549149682493`, 
               0.46676123736426733`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.35259129114180077`, 0.013559549149682493`, 
         0.46676123736426733`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.35259129114180077`, 0.013559549149682493`, 0.46676123736426733`],
        FrontFaceColor->RGBColor[
         0.35259129114180077`, 0.013559549149682493`, 0.46676123736426733`],
        BackFaceColor->RGBColor[
         0.35259129114180077`, 0.013559549149682493`, 0.46676123736426733`],
        GraphicsColor->RGBColor[
         0.35259129114180077`, 0.013559549149682493`, 0.46676123736426733`],
        FontColor->RGBColor[
         0.35259129114180077`, 0.013559549149682493`, 0.46676123736426733`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.34484355963980606`, 0.06259599817079442, 0.5597360290230085], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2298957064265374, 0.04173066544719628, 0.37315735268200567`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.34484355963980606`", ",", "0.06259599817079442`", ",", 
                 "0.5597360290230085`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.34484355963980606`, 0.06259599817079442, 0.5597360290230085]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.34484355963980606`, 0.06259599817079442, 
         0.5597360290230085}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.34484355963980606`, 0.06259599817079442, 0.5597360290230085],
        FrontFaceColor->RGBColor[
         0.34484355963980606`, 0.06259599817079442, 0.5597360290230085],
        BackFaceColor->RGBColor[
         0.34484355963980606`, 0.06259599817079442, 0.5597360290230085],
        GraphicsColor->RGBColor[
         0.34484355963980606`, 0.06259599817079442, 0.5597360290230085],
        FontColor->RGBColor[
         0.34484355963980606`, 0.06259599817079442, 0.5597360290230085]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3026881050416488, 0.29621014761620246`, 0.8324249487459243], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.20179207002776586`, 0.19747343174413498`, 0.5549499658306163],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3026881050416488`", ",", "0.29621014761620246`", ",", 
                 "0.8324249487459243`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3026881050416488, 0.29621014761620246`, 0.8324249487459243]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3026881050416488, 0.29621014761620246`, 
         0.8324249487459243}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3026881050416488, 0.29621014761620246`, 0.8324249487459243],
        FrontFaceColor->RGBColor[
         0.3026881050416488, 0.29621014761620246`, 0.8324249487459243],
        BackFaceColor->RGBColor[
         0.3026881050416488, 0.29621014761620246`, 0.8324249487459243],
        GraphicsColor->RGBColor[
         0.3026881050416488, 0.29621014761620246`, 0.8324249487459243],
        FontColor->RGBColor[
         0.3026881050416488, 0.29621014761620246`, 0.8324249487459243]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6422518473294136, 0.9411601145397341, 0.5939816333134147], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4281678982196091, 0.6274400763598228, 0.3959877555422765],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6422518473294136`", ",", "0.9411601145397341`", ",", 
                 "0.5939816333134147`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6422518473294136, 0.9411601145397341, 0.5939816333134147]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6422518473294136, 0.9411601145397341, 0.5939816333134147}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6422518473294136, 0.9411601145397341, 0.5939816333134147],
        FrontFaceColor->RGBColor[
         0.6422518473294136, 0.9411601145397341, 0.5939816333134147],
        BackFaceColor->RGBColor[
         0.6422518473294136, 0.9411601145397341, 0.5939816333134147],
        GraphicsColor->RGBColor[
         0.6422518473294136, 0.9411601145397341, 0.5939816333134147],
        FontColor->RGBColor[
         0.6422518473294136, 0.9411601145397341, 0.5939816333134147]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.21172112402020615`, 0.42652439440480294`, 0.7742172996557686], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.14114741601347078`, 0.28434959626986867`, 0.516144866437179],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.21172112402020615`", ",", "0.42652439440480294`", ",", 
                 "0.7742172996557686`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.21172112402020615`, 0.42652439440480294`, 0.7742172996557686]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.21172112402020615`, 0.42652439440480294`, 
         0.7742172996557686}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.21172112402020615`, 0.42652439440480294`, 0.7742172996557686],
        FrontFaceColor->RGBColor[
         0.21172112402020615`, 0.42652439440480294`, 0.7742172996557686],
        BackFaceColor->RGBColor[
         0.21172112402020615`, 0.42652439440480294`, 0.7742172996557686],
        GraphicsColor->RGBColor[
         0.21172112402020615`, 0.42652439440480294`, 0.7742172996557686],
        FontColor->RGBColor[
         0.21172112402020615`, 0.42652439440480294`, 0.7742172996557686]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8800618864661929, 0.5502244520725368, 0.3838322274949111], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5867079243107953, 0.3668163013816912, 0.25588815166327405`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8800618864661929`", ",", "0.5502244520725368`", ",", 
                 "0.3838322274949111`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8800618864661929, 0.5502244520725368, 0.3838322274949111]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8800618864661929, 0.5502244520725368, 0.3838322274949111}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8800618864661929, 0.5502244520725368, 0.3838322274949111],
        FrontFaceColor->RGBColor[
         0.8800618864661929, 0.5502244520725368, 0.3838322274949111],
        BackFaceColor->RGBColor[
         0.8800618864661929, 0.5502244520725368, 0.3838322274949111],
        GraphicsColor->RGBColor[
         0.8800618864661929, 0.5502244520725368, 0.3838322274949111],
        FontColor->RGBColor[
         0.8800618864661929, 0.5502244520725368, 0.3838322274949111]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3117286226839753, 0.24982560535447806`, 0.19806921781177644`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.20781908178931685`, 0.16655040356965206`, 0.13204614520785096`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3117286226839753`", ",", "0.24982560535447806`", ",", 
                 "0.19806921781177644`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3117286226839753, 0.24982560535447806`, 0.19806921781177644`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3117286226839753, 0.24982560535447806`, 
         0.19806921781177644`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3117286226839753, 0.24982560535447806`, 0.19806921781177644`],
        FrontFaceColor->RGBColor[
         0.3117286226839753, 0.24982560535447806`, 0.19806921781177644`],
        BackFaceColor->RGBColor[
         0.3117286226839753, 0.24982560535447806`, 0.19806921781177644`],
        GraphicsColor->RGBColor[
         0.3117286226839753, 0.24982560535447806`, 0.19806921781177644`],
        FontColor->RGBColor[
         0.3117286226839753, 0.24982560535447806`, 0.19806921781177644`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.15088304927350982`, 0.49365166023321505`, 0.8123859456661122], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.10058869951567322`, 0.3291011068221434, 0.5415906304440748],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.15088304927350982`", ",", "0.49365166023321505`", ",", 
                 "0.8123859456661122`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.15088304927350982`, 0.49365166023321505`, 0.8123859456661122]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.15088304927350982`, 0.49365166023321505`, 
         0.8123859456661122}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.15088304927350982`, 0.49365166023321505`, 0.8123859456661122],
        FrontFaceColor->RGBColor[
         0.15088304927350982`, 0.49365166023321505`, 0.8123859456661122],
        BackFaceColor->RGBColor[
         0.15088304927350982`, 0.49365166023321505`, 0.8123859456661122],
        GraphicsColor->RGBColor[
         0.15088304927350982`, 0.49365166023321505`, 0.8123859456661122],
        FontColor->RGBColor[
         0.15088304927350982`, 0.49365166023321505`, 0.8123859456661122]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6371259140357357, 0.349846138353473, 0.8431102715075369], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.42475060935715714`, 0.23323075890231534`, 0.562073514338358],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6371259140357357`", ",", "0.349846138353473`", ",", 
                 "0.8431102715075369`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6371259140357357, 0.349846138353473, 0.8431102715075369]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6371259140357357, 0.349846138353473, 0.8431102715075369}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6371259140357357, 0.349846138353473, 0.8431102715075369],
        FrontFaceColor->RGBColor[
         0.6371259140357357, 0.349846138353473, 0.8431102715075369],
        BackFaceColor->RGBColor[
         0.6371259140357357, 0.349846138353473, 0.8431102715075369],
        GraphicsColor->RGBColor[
         0.6371259140357357, 0.349846138353473, 0.8431102715075369],
        FontColor->RGBColor[
         0.6371259140357357, 0.349846138353473, 0.8431102715075369]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5098877267045907, 0.6577292655875533, 0.7929473806252685], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3399251511363938, 0.4384861770583689, 0.5286315870835123],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5098877267045907`", ",", "0.6577292655875533`", ",", 
                 "0.7929473806252685`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5098877267045907, 0.6577292655875533, 0.7929473806252685]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5098877267045907, 0.6577292655875533, 0.7929473806252685}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5098877267045907, 0.6577292655875533, 0.7929473806252685],
        FrontFaceColor->RGBColor[
         0.5098877267045907, 0.6577292655875533, 0.7929473806252685],
        BackFaceColor->RGBColor[
         0.5098877267045907, 0.6577292655875533, 0.7929473806252685],
        GraphicsColor->RGBColor[
         0.5098877267045907, 0.6577292655875533, 0.7929473806252685],
        FontColor->RGBColor[
         0.5098877267045907, 0.6577292655875533, 0.7929473806252685]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.32802137350713023`, 0.4050630752885107, 0.9057211835040941], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.21868091567142017`, 0.2700420501923405, 0.6038141223360628],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.32802137350713023`", ",", "0.4050630752885107`", ",", 
                 "0.9057211835040941`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.32802137350713023`, 0.4050630752885107, 0.9057211835040941]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.32802137350713023`, 0.4050630752885107, 
         0.9057211835040941}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.32802137350713023`, 0.4050630752885107, 0.9057211835040941],
        FrontFaceColor->RGBColor[
         0.32802137350713023`, 0.4050630752885107, 0.9057211835040941],
        BackFaceColor->RGBColor[
         0.32802137350713023`, 0.4050630752885107, 0.9057211835040941],
        GraphicsColor->RGBColor[
         0.32802137350713023`, 0.4050630752885107, 0.9057211835040941],
        FontColor->RGBColor[
         0.32802137350713023`, 0.4050630752885107, 0.9057211835040941]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.991228404126774, 0.9612259726398353, 0.8773803047035664], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.660818936084516, 0.6408173150932236, 0.584920203135711],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.991228404126774`", ",", "0.9612259726398353`", ",", 
                 "0.8773803047035664`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.991228404126774, 0.9612259726398353, 0.8773803047035664]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.991228404126774, 0.9612259726398353, 0.8773803047035664}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.991228404126774, 0.9612259726398353, 0.8773803047035664],
        FrontFaceColor->RGBColor[
         0.991228404126774, 0.9612259726398353, 0.8773803047035664],
        BackFaceColor->RGBColor[
         0.991228404126774, 0.9612259726398353, 0.8773803047035664],
        GraphicsColor->RGBColor[
         0.991228404126774, 0.9612259726398353, 0.8773803047035664],
        FontColor->RGBColor[
         0.991228404126774, 0.9612259726398353, 0.8773803047035664]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7820837343680616, 0.5024230162609249, 0.9976723680876689], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5213891562453744, 0.3349486775072833, 0.665114912058446],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7820837343680616`", ",", "0.5024230162609249`", ",", 
                 "0.9976723680876689`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7820837343680616, 0.5024230162609249, 0.9976723680876689]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7820837343680616, 0.5024230162609249, 0.9976723680876689}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7820837343680616, 0.5024230162609249, 0.9976723680876689],
        FrontFaceColor->RGBColor[
         0.7820837343680616, 0.5024230162609249, 0.9976723680876689],
        BackFaceColor->RGBColor[
         0.7820837343680616, 0.5024230162609249, 0.9976723680876689],
        GraphicsColor->RGBColor[
         0.7820837343680616, 0.5024230162609249, 0.9976723680876689],
        FontColor->RGBColor[
         0.7820837343680616, 0.5024230162609249, 0.9976723680876689]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.08167519049653738, 0.16842228225115763`, 0.20238642885486713`],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.054450126997691584`, 0.11228152150077175`, 0.13492428590324476`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.08167519049653738`", ",", "0.16842228225115763`", ",", 
                 "0.20238642885486713`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.08167519049653738, 0.16842228225115763`, 
               0.20238642885486713`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.08167519049653738, 0.16842228225115763`, 
         0.20238642885486713`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08167519049653738, 0.16842228225115763`, 0.20238642885486713`],
        FrontFaceColor->RGBColor[
         0.08167519049653738, 0.16842228225115763`, 0.20238642885486713`],
        BackFaceColor->RGBColor[
         0.08167519049653738, 0.16842228225115763`, 0.20238642885486713`],
        GraphicsColor->RGBColor[
         0.08167519049653738, 0.16842228225115763`, 0.20238642885486713`],
        FontColor->RGBColor[
         0.08167519049653738, 0.16842228225115763`, 0.20238642885486713`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4687893335463249, 0.22230208369434257`, 0.49509212811745273`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3125262223642166, 0.1482013891295617, 0.3300614187449685],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4687893335463249`", ",", "0.22230208369434257`", ",", 
                 "0.49509212811745273`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4687893335463249, 0.22230208369434257`, 0.49509212811745273`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4687893335463249, 0.22230208369434257`, 
         0.49509212811745273`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4687893335463249, 0.22230208369434257`, 0.49509212811745273`],
        FrontFaceColor->RGBColor[
         0.4687893335463249, 0.22230208369434257`, 0.49509212811745273`],
        BackFaceColor->RGBColor[
         0.4687893335463249, 0.22230208369434257`, 0.49509212811745273`],
        GraphicsColor->RGBColor[
         0.4687893335463249, 0.22230208369434257`, 0.49509212811745273`],
        FontColor->RGBColor[
         0.4687893335463249, 0.22230208369434257`, 0.49509212811745273`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.3950453791546007, 0.4491704092040558, 0.03641009882369839], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.26336358610306715`, 0.29944693946937057`, 0.02427339921579893],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.3950453791546007`", ",", "0.4491704092040558`", ",", 
                 "0.03641009882369839`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.3950453791546007, 0.4491704092040558, 0.03641009882369839]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.3950453791546007, 0.4491704092040558, 
         0.03641009882369839}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.3950453791546007, 0.4491704092040558, 0.03641009882369839],
        FrontFaceColor->RGBColor[
         0.3950453791546007, 0.4491704092040558, 0.03641009882369839],
        BackFaceColor->RGBColor[
         0.3950453791546007, 0.4491704092040558, 0.03641009882369839],
        GraphicsColor->RGBColor[
         0.3950453791546007, 0.4491704092040558, 0.03641009882369839],
        FontColor->RGBColor[
         0.3950453791546007, 0.4491704092040558, 0.03641009882369839]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.760020646063198, 0.907840632887712, 0.6420754164030129], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5066804307087986, 0.6052270885918081, 0.42805027760200864`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.760020646063198`", ",", "0.907840632887712`", ",", 
                 "0.6420754164030129`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.760020646063198, 0.907840632887712, 0.6420754164030129]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.760020646063198, 0.907840632887712, 0.6420754164030129}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.760020646063198, 0.907840632887712, 0.6420754164030129],
        FrontFaceColor->RGBColor[
         0.760020646063198, 0.907840632887712, 0.6420754164030129],
        BackFaceColor->RGBColor[
         0.760020646063198, 0.907840632887712, 0.6420754164030129],
        GraphicsColor->RGBColor[
         0.760020646063198, 0.907840632887712, 0.6420754164030129],
        FontColor->RGBColor[
         0.760020646063198, 0.907840632887712, 0.6420754164030129]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9169920770408351, 0.2672799968791273, 0.750731825579749], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6113280513605568, 0.17818666458608487`, 0.5004878837198328],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9169920770408351`", ",", "0.2672799968791273`", ",", 
                 "0.750731825579749`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9169920770408351, 0.2672799968791273, 0.750731825579749]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9169920770408351, 0.2672799968791273, 0.750731825579749}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9169920770408351, 0.2672799968791273, 0.750731825579749],
        FrontFaceColor->RGBColor[
         0.9169920770408351, 0.2672799968791273, 0.750731825579749],
        BackFaceColor->RGBColor[
         0.9169920770408351, 0.2672799968791273, 0.750731825579749],
        GraphicsColor->RGBColor[
         0.9169920770408351, 0.2672799968791273, 0.750731825579749],
        FontColor->RGBColor[
         0.9169920770408351, 0.2672799968791273, 0.750731825579749]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8598086071427626, 0.6932068956883184, 0.6641937385133825], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5732057380951752, 0.46213793045887896`, 0.44279582567558834`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8598086071427626`", ",", "0.6932068956883184`", ",", 
                 "0.6641937385133825`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8598086071427626, 0.6932068956883184, 0.6641937385133825]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8598086071427626, 0.6932068956883184, 0.6641937385133825}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8598086071427626, 0.6932068956883184, 0.6641937385133825],
        FrontFaceColor->RGBColor[
         0.8598086071427626, 0.6932068956883184, 0.6641937385133825],
        BackFaceColor->RGBColor[
         0.8598086071427626, 0.6932068956883184, 0.6641937385133825],
        GraphicsColor->RGBColor[
         0.8598086071427626, 0.6932068956883184, 0.6641937385133825],
        FontColor->RGBColor[
         0.8598086071427626, 0.6932068956883184, 0.6641937385133825]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5642412845555596, 0.2052562458293643, 0.7089153192359465], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.37616085637037305`, 0.13683749721957622`, 0.47261021282396437`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5642412845555596`", ",", "0.2052562458293643`", ",", 
                 "0.7089153192359465`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5642412845555596, 0.2052562458293643, 0.7089153192359465]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5642412845555596, 0.2052562458293643, 0.7089153192359465}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5642412845555596, 0.2052562458293643, 0.7089153192359465],
        FrontFaceColor->RGBColor[
         0.5642412845555596, 0.2052562458293643, 0.7089153192359465],
        BackFaceColor->RGBColor[
         0.5642412845555596, 0.2052562458293643, 0.7089153192359465],
        GraphicsColor->RGBColor[
         0.5642412845555596, 0.2052562458293643, 0.7089153192359465],
        FontColor->RGBColor[
         0.5642412845555596, 0.2052562458293643, 0.7089153192359465]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8512671741650204, 0.08503075754377165, 0.505101838898212], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.567511449443347, 0.05668717169584777, 0.3367345592654747],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8512671741650204`", ",", "0.08503075754377165`", ",", 
                 "0.505101838898212`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8512671741650204, 0.08503075754377165, 0.505101838898212]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8512671741650204, 0.08503075754377165, 0.505101838898212}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8512671741650204, 0.08503075754377165, 0.505101838898212],
        FrontFaceColor->RGBColor[
         0.8512671741650204, 0.08503075754377165, 0.505101838898212],
        BackFaceColor->RGBColor[
         0.8512671741650204, 0.08503075754377165, 0.505101838898212],
        GraphicsColor->RGBColor[
         0.8512671741650204, 0.08503075754377165, 0.505101838898212],
        FontColor->RGBColor[
         0.8512671741650204, 0.08503075754377165, 0.505101838898212]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.19252908598019025`, 0.4895496282722731, 0.7986403189051714], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.1283527239867935, 0.32636641884818207`, 0.5324268792701143],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.19252908598019025`", ",", "0.4895496282722731`", ",", 
                 "0.7986403189051714`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.19252908598019025`, 0.4895496282722731, 0.7986403189051714]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.19252908598019025`, 0.4895496282722731, 
         0.7986403189051714}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.19252908598019025`, 0.4895496282722731, 0.7986403189051714],
        FrontFaceColor->RGBColor[
         0.19252908598019025`, 0.4895496282722731, 0.7986403189051714],
        BackFaceColor->RGBColor[
         0.19252908598019025`, 0.4895496282722731, 0.7986403189051714],
        GraphicsColor->RGBColor[
         0.19252908598019025`, 0.4895496282722731, 0.7986403189051714],
        FontColor->RGBColor[
         0.19252908598019025`, 0.4895496282722731, 0.7986403189051714]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5848166001804718, 0.8490819906781362, 0.1573776234734907], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.38987773345364785`, 0.5660546604520909, 0.10491841564899382`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5848166001804718`", ",", "0.8490819906781362`", ",", 
                 "0.1573776234734907`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5848166001804718, 0.8490819906781362, 0.1573776234734907]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5848166001804718, 0.8490819906781362, 0.1573776234734907}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5848166001804718, 0.8490819906781362, 0.1573776234734907],
        FrontFaceColor->RGBColor[
         0.5848166001804718, 0.8490819906781362, 0.1573776234734907],
        BackFaceColor->RGBColor[
         0.5848166001804718, 0.8490819906781362, 0.1573776234734907],
        GraphicsColor->RGBColor[
         0.5848166001804718, 0.8490819906781362, 0.1573776234734907],
        FontColor->RGBColor[
         0.5848166001804718, 0.8490819906781362, 0.1573776234734907]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.24798037650370341`, 0.8822387418234758, 0.22735939241717062`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.16532025100246894`, 0.5881591612156506, 0.15157292827811375`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.24798037650370341`", ",", "0.8822387418234758`", ",", 
                 "0.22735939241717062`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.24798037650370341`, 0.8822387418234758, 0.22735939241717062`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.24798037650370341`, 0.8822387418234758, 
         0.22735939241717062`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.24798037650370341`, 0.8822387418234758, 0.22735939241717062`],
        FrontFaceColor->RGBColor[
         0.24798037650370341`, 0.8822387418234758, 0.22735939241717062`],
        BackFaceColor->RGBColor[
         0.24798037650370341`, 0.8822387418234758, 0.22735939241717062`],
        GraphicsColor->RGBColor[
         0.24798037650370341`, 0.8822387418234758, 0.22735939241717062`],
        FontColor->RGBColor[
         0.24798037650370341`, 0.8822387418234758, 0.22735939241717062`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9350574740732283, 0.39172856491295405`, 0.7896871327079393], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6233716493821522, 0.26115237660863605`, 0.5264580884719596],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9350574740732283`", ",", "0.39172856491295405`", ",", 
                 "0.7896871327079393`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9350574740732283, 0.39172856491295405`, 0.7896871327079393]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9350574740732283, 0.39172856491295405`, 
         0.7896871327079393}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9350574740732283, 0.39172856491295405`, 0.7896871327079393],
        FrontFaceColor->RGBColor[
         0.9350574740732283, 0.39172856491295405`, 0.7896871327079393],
        BackFaceColor->RGBColor[
         0.9350574740732283, 0.39172856491295405`, 0.7896871327079393],
        GraphicsColor->RGBColor[
         0.9350574740732283, 0.39172856491295405`, 0.7896871327079393],
        FontColor->RGBColor[
         0.9350574740732283, 0.39172856491295405`, 0.7896871327079393]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6246848906363063, 0.14078580677253716`, 0.6772271096578983], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4164565937575375, 0.09385720451502477, 0.45148473977193226`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6246848906363063`", ",", "0.14078580677253716`", ",", 
                 "0.6772271096578983`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6246848906363063, 0.14078580677253716`, 0.6772271096578983]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6246848906363063, 0.14078580677253716`, 
         0.6772271096578983}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6246848906363063, 0.14078580677253716`, 0.6772271096578983],
        FrontFaceColor->RGBColor[
         0.6246848906363063, 0.14078580677253716`, 0.6772271096578983],
        BackFaceColor->RGBColor[
         0.6246848906363063, 0.14078580677253716`, 0.6772271096578983],
        GraphicsColor->RGBColor[
         0.6246848906363063, 0.14078580677253716`, 0.6772271096578983],
        FontColor->RGBColor[
         0.6246848906363063, 0.14078580677253716`, 0.6772271096578983]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5653398504180438, 0.9143086004190759, 0.4430916505251692], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3768932336120292, 0.6095390669460506, 0.29539443368344614`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5653398504180438`", ",", "0.9143086004190759`", ",", 
                 "0.4430916505251692`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5653398504180438, 0.9143086004190759, 0.4430916505251692]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5653398504180438, 0.9143086004190759, 0.4430916505251692}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5653398504180438, 0.9143086004190759, 0.4430916505251692],
        FrontFaceColor->RGBColor[
         0.5653398504180438, 0.9143086004190759, 0.4430916505251692],
        BackFaceColor->RGBColor[
         0.5653398504180438, 0.9143086004190759, 0.4430916505251692],
        GraphicsColor->RGBColor[
         0.5653398504180438, 0.9143086004190759, 0.4430916505251692],
        FontColor->RGBColor[
         0.5653398504180438, 0.9143086004190759, 0.4430916505251692]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7805930988379326, 0.9065421257212931, 0.844447367199056], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5203953992252884, 0.6043614171475288, 0.5629649114660373],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7805930988379326`", ",", "0.9065421257212931`", ",", 
                 "0.844447367199056`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7805930988379326, 0.9065421257212931, 0.844447367199056]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7805930988379326, 0.9065421257212931, 0.844447367199056}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7805930988379326, 0.9065421257212931, 0.844447367199056],
        FrontFaceColor->RGBColor[
         0.7805930988379326, 0.9065421257212931, 0.844447367199056],
        BackFaceColor->RGBColor[
         0.7805930988379326, 0.9065421257212931, 0.844447367199056],
        GraphicsColor->RGBColor[
         0.7805930988379326, 0.9065421257212931, 0.844447367199056],
        FontColor->RGBColor[
         0.7805930988379326, 0.9065421257212931, 0.844447367199056]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.17459655187995504`, 0.4176621713445592, 0.474386502044682], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.11639770125330337`, 0.27844144756303946`, 0.31625766802978805`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.17459655187995504`", ",", "0.4176621713445592`", ",", 
                 "0.474386502044682`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.17459655187995504`, 0.4176621713445592, 0.474386502044682]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.17459655187995504`, 0.4176621713445592, 
         0.474386502044682}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.17459655187995504`, 0.4176621713445592, 0.474386502044682],
        FrontFaceColor->RGBColor[
         0.17459655187995504`, 0.4176621713445592, 0.474386502044682],
        BackFaceColor->RGBColor[
         0.17459655187995504`, 0.4176621713445592, 0.474386502044682],
        GraphicsColor->RGBColor[
         0.17459655187995504`, 0.4176621713445592, 0.474386502044682],
        FontColor->RGBColor[
         0.17459655187995504`, 0.4176621713445592, 0.474386502044682]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8541683773124575, 0.4618257764991276, 0.9109551121285244], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5694455848749718, 0.3078838509994184, 0.607303408085683],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8541683773124575`", ",", "0.4618257764991276`", ",", 
                 "0.9109551121285244`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8541683773124575, 0.4618257764991276, 0.9109551121285244]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8541683773124575, 0.4618257764991276, 0.9109551121285244}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8541683773124575, 0.4618257764991276, 0.9109551121285244],
        FrontFaceColor->RGBColor[
         0.8541683773124575, 0.4618257764991276, 0.9109551121285244],
        BackFaceColor->RGBColor[
         0.8541683773124575, 0.4618257764991276, 0.9109551121285244],
        GraphicsColor->RGBColor[
         0.8541683773124575, 0.4618257764991276, 0.9109551121285244],
        FontColor->RGBColor[
         0.8541683773124575, 0.4618257764991276, 0.9109551121285244]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.966802887593506, 0.31235467227178937`, 0.5732491833130988], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6445352583956707, 0.2082364481811929, 0.3821661222087326],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.966802887593506`", ",", "0.31235467227178937`", ",", 
                 "0.5732491833130988`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.966802887593506, 0.31235467227178937`, 0.5732491833130988]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.966802887593506, 0.31235467227178937`, 
         0.5732491833130988}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.966802887593506, 0.31235467227178937`, 0.5732491833130988],
        FrontFaceColor->RGBColor[
         0.966802887593506, 0.31235467227178937`, 0.5732491833130988],
        BackFaceColor->RGBColor[
         0.966802887593506, 0.31235467227178937`, 0.5732491833130988],
        GraphicsColor->RGBColor[
         0.966802887593506, 0.31235467227178937`, 0.5732491833130988],
        FontColor->RGBColor[
         0.966802887593506, 0.31235467227178937`, 0.5732491833130988]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.49895670921085733`, 0.894420709413253, 0.331685189772442], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3326378061405716, 0.5962804729421687, 0.22112345984829468`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.49895670921085733`", ",", "0.894420709413253`", ",", 
                 "0.331685189772442`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.49895670921085733`, 0.894420709413253, 0.331685189772442]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.49895670921085733`, 0.894420709413253, 0.331685189772442}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.49895670921085733`, 0.894420709413253, 0.331685189772442],
        FrontFaceColor->RGBColor[
         0.49895670921085733`, 0.894420709413253, 0.331685189772442],
        BackFaceColor->RGBColor[
         0.49895670921085733`, 0.894420709413253, 0.331685189772442],
        GraphicsColor->RGBColor[
         0.49895670921085733`, 0.894420709413253, 0.331685189772442],
        FontColor->RGBColor[
         0.49895670921085733`, 0.894420709413253, 0.331685189772442]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7919325580372523, 0.5376033046174853, 0.48632296664144925`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5279550386915015, 0.35840220307832354`, 0.3242153110942995],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.7919325580372523`", ",", "0.5376033046174853`", ",", 
                 "0.48632296664144925`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7919325580372523, 0.5376033046174853, 0.48632296664144925`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.7919325580372523, 0.5376033046174853, 
         0.48632296664144925`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.7919325580372523, 0.5376033046174853, 0.48632296664144925`],
        FrontFaceColor->RGBColor[
         0.7919325580372523, 0.5376033046174853, 0.48632296664144925`],
        BackFaceColor->RGBColor[
         0.7919325580372523, 0.5376033046174853, 0.48632296664144925`],
        GraphicsColor->RGBColor[
         0.7919325580372523, 0.5376033046174853, 0.48632296664144925`],
        FontColor->RGBColor[
         0.7919325580372523, 0.5376033046174853, 0.48632296664144925`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.6578101077598333, 0.8549476499064037, 0.22323012378518725`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.43854007183988886`, 0.5699650999376025, 0.14882008252345819`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.6578101077598333`", ",", "0.8549476499064037`", ",", 
                 "0.22323012378518725`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.6578101077598333, 0.8549476499064037, 0.22323012378518725`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.6578101077598333, 0.8549476499064037, 
         0.22323012378518725`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6578101077598333, 0.8549476499064037, 0.22323012378518725`],
        FrontFaceColor->RGBColor[
         0.6578101077598333, 0.8549476499064037, 0.22323012378518725`],
        BackFaceColor->RGBColor[
         0.6578101077598333, 0.8549476499064037, 0.22323012378518725`],
        GraphicsColor->RGBColor[
         0.6578101077598333, 0.8549476499064037, 0.22323012378518725`],
        FontColor->RGBColor[
         0.6578101077598333, 0.8549476499064037, 0.22323012378518725`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4526189616990839, 0.4575022613719364, 0.9659258868608551], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.30174597446605594`, 0.30500150758129096`, 0.6439505912405701],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4526189616990839`", ",", "0.4575022613719364`", ",", 
                 "0.9659258868608551`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4526189616990839, 0.4575022613719364, 0.9659258868608551]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4526189616990839, 0.4575022613719364, 0.9659258868608551}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4526189616990839, 0.4575022613719364, 0.9659258868608551],
        FrontFaceColor->RGBColor[
         0.4526189616990839, 0.4575022613719364, 0.9659258868608551],
        BackFaceColor->RGBColor[
         0.4526189616990839, 0.4575022613719364, 0.9659258868608551],
        GraphicsColor->RGBColor[
         0.4526189616990839, 0.4575022613719364, 0.9659258868608551],
        FontColor->RGBColor[
         0.4526189616990839, 0.4575022613719364, 0.9659258868608551]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.12889750701922087`, 0.9691448677564978, 0.050997712382072624`],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.08593167134614725, 0.6460965785043319, 0.03399847492138175],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.12889750701922087`", ",", "0.9691448677564978`", ",", 
                 "0.050997712382072624`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.12889750701922087`, 0.9691448677564978, 
               0.050997712382072624`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.12889750701922087`, 0.9691448677564978, 
         0.050997712382072624`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.12889750701922087`, 0.9691448677564978, 0.050997712382072624`],
        FrontFaceColor->RGBColor[
         0.12889750701922087`, 0.9691448677564978, 0.050997712382072624`],
        BackFaceColor->RGBColor[
         0.12889750701922087`, 0.9691448677564978, 0.050997712382072624`],
        GraphicsColor->RGBColor[
         0.12889750701922087`, 0.9691448677564978, 0.050997712382072624`],
        FontColor->RGBColor[
         0.12889750701922087`, 0.9691448677564978, 0.050997712382072624`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2864836379017939, 0.7627769913081246, 0.4028806477148419], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.19098909193452926`, 0.5085179942054164, 0.26858709847656126`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2864836379017939`", ",", "0.7627769913081246`", ",", 
                 "0.4028806477148419`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2864836379017939, 0.7627769913081246, 0.4028806477148419]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2864836379017939, 0.7627769913081246, 0.4028806477148419}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2864836379017939, 0.7627769913081246, 0.4028806477148419],
        FrontFaceColor->RGBColor[
         0.2864836379017939, 0.7627769913081246, 0.4028806477148419],
        BackFaceColor->RGBColor[
         0.2864836379017939, 0.7627769913081246, 0.4028806477148419],
        GraphicsColor->RGBColor[
         0.2864836379017939, 0.7627769913081246, 0.4028806477148419],
        FontColor->RGBColor[
         0.2864836379017939, 0.7627769913081246, 0.4028806477148419]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.08901059883170692, 0.26896819138489425`, 0.7751939138014687], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.05934039922113795, 0.1793121275899295, 0.5167959425343125],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.08901059883170692`", ",", "0.26896819138489425`", ",", 
                 "0.7751939138014687`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.08901059883170692, 0.26896819138489425`, 0.7751939138014687]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.08901059883170692, 0.26896819138489425`, 
         0.7751939138014687}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.08901059883170692, 0.26896819138489425`, 0.7751939138014687],
        FrontFaceColor->RGBColor[
         0.08901059883170692, 0.26896819138489425`, 0.7751939138014687],
        BackFaceColor->RGBColor[
         0.08901059883170692, 0.26896819138489425`, 0.7751939138014687],
        GraphicsColor->RGBColor[
         0.08901059883170692, 0.26896819138489425`, 0.7751939138014687],
        FontColor->RGBColor[
         0.08901059883170692, 0.26896819138489425`, 0.7751939138014687]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.03335073944152667, 0.5966918796328635, 0.6644447800253419], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.02223382629435111, 0.397794586421909, 0.44296318668356127`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.03335073944152667`", ",", "0.5966918796328635`", ",", 
                 "0.6644447800253419`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.03335073944152667, 0.5966918796328635, 0.6644447800253419]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.03335073944152667, 0.5966918796328635, 
         0.6644447800253419}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.03335073944152667, 0.5966918796328635, 0.6644447800253419],
        FrontFaceColor->RGBColor[
         0.03335073944152667, 0.5966918796328635, 0.6644447800253419],
        BackFaceColor->RGBColor[
         0.03335073944152667, 0.5966918796328635, 0.6644447800253419],
        GraphicsColor->RGBColor[
         0.03335073944152667, 0.5966918796328635, 0.6644447800253419],
        FontColor->RGBColor[
         0.03335073944152667, 0.5966918796328635, 0.6644447800253419]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.006694945161361376, 0.6917997556494826, 0.43468432273340785`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.004463296774240918, 0.46119983709965506`, 0.28978954848893856`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.006694945161361376`", ",", "0.6917997556494826`", ",", 
                 "0.43468432273340785`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.006694945161361376, 0.6917997556494826, 0.43468432273340785`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.006694945161361376, 0.6917997556494826, 
         0.43468432273340785`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.006694945161361376, 0.6917997556494826, 0.43468432273340785`],
        FrontFaceColor->RGBColor[
         0.006694945161361376, 0.6917997556494826, 0.43468432273340785`],
        BackFaceColor->RGBColor[
         0.006694945161361376, 0.6917997556494826, 0.43468432273340785`],
        GraphicsColor->RGBColor[
         0.006694945161361376, 0.6917997556494826, 0.43468432273340785`],
        FontColor->RGBColor[
         0.006694945161361376, 0.6917997556494826, 0.43468432273340785`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.045317683638739226`, 0.13115127847481078`, 0.6672736382214919],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.03021178909249282, 0.08743418564987386, 0.4448490921476613],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.045317683638739226`", ",", "0.13115127847481078`", ",", 
                 "0.6672736382214919`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.045317683638739226`, 0.13115127847481078`, 
               0.6672736382214919]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.045317683638739226`, 0.13115127847481078`, 
         0.6672736382214919}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.045317683638739226`, 0.13115127847481078`, 0.6672736382214919],
        FrontFaceColor->RGBColor[
         0.045317683638739226`, 0.13115127847481078`, 0.6672736382214919],
        BackFaceColor->RGBColor[
         0.045317683638739226`, 0.13115127847481078`, 0.6672736382214919],
        GraphicsColor->RGBColor[
         0.045317683638739226`, 0.13115127847481078`, 0.6672736382214919],
        FontColor->RGBColor[
         0.045317683638739226`, 0.13115127847481078`, 0.6672736382214919]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5448828612515066, 0.5425683468601814, 0.9400182372621568], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3632552408343378, 0.361712231240121, 0.6266788248414379],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5448828612515066`", ",", "0.5425683468601814`", ",", 
                 "0.9400182372621568`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5448828612515066, 0.5425683468601814, 0.9400182372621568]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5448828612515066, 0.5425683468601814, 0.9400182372621568}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5448828612515066, 0.5425683468601814, 0.9400182372621568],
        FrontFaceColor->RGBColor[
         0.5448828612515066, 0.5425683468601814, 0.9400182372621568],
        BackFaceColor->RGBColor[
         0.5448828612515066, 0.5425683468601814, 0.9400182372621568],
        GraphicsColor->RGBColor[
         0.5448828612515066, 0.5425683468601814, 0.9400182372621568],
        FontColor->RGBColor[
         0.5448828612515066, 0.5425683468601814, 0.9400182372621568]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.1435009301894259, 0.7829533568445519, 0.911403295961569], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.0956672867929506, 0.5219689045630347, 0.6076021973077127],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.1435009301894259`", ",", "0.7829533568445519`", ",", 
                 "0.911403295961569`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.1435009301894259, 0.7829533568445519, 0.911403295961569]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.1435009301894259, 0.7829533568445519, 0.911403295961569}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.1435009301894259, 0.7829533568445519, 0.911403295961569],
        FrontFaceColor->RGBColor[
         0.1435009301894259, 0.7829533568445519, 0.911403295961569],
        BackFaceColor->RGBColor[
         0.1435009301894259, 0.7829533568445519, 0.911403295961569],
        GraphicsColor->RGBColor[
         0.1435009301894259, 0.7829533568445519, 0.911403295961569],
        FontColor->RGBColor[
         0.1435009301894259, 0.7829533568445519, 0.911403295961569]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.47946819881867087`, 0.7531450433798597, 0.6473174900337464], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3196454658791139, 0.5020966955865731, 0.43154499335583096`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.47946819881867087`", ",", "0.7531450433798597`", ",", 
                 "0.6473174900337464`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.47946819881867087`, 0.7531450433798597, 0.6473174900337464]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.47946819881867087`, 0.7531450433798597, 
         0.6473174900337464}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.47946819881867087`, 0.7531450433798597, 0.6473174900337464],
        FrontFaceColor->RGBColor[
         0.47946819881867087`, 0.7531450433798597, 0.6473174900337464],
        BackFaceColor->RGBColor[
         0.47946819881867087`, 0.7531450433798597, 0.6473174900337464],
        GraphicsColor->RGBColor[
         0.47946819881867087`, 0.7531450433798597, 0.6473174900337464],
        FontColor->RGBColor[
         0.47946819881867087`, 0.7531450433798597, 0.6473174900337464]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.44481881345311236`, 0.3836192922560999, 0.5711286055818869], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.29654587563540824`, 0.25574619483739996`, 0.38075240372125796`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.44481881345311236`", ",", "0.3836192922560999`", ",", 
                 "0.5711286055818869`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.44481881345311236`, 0.3836192922560999, 0.5711286055818869]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.44481881345311236`, 0.3836192922560999, 
         0.5711286055818869}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.44481881345311236`, 0.3836192922560999, 0.5711286055818869],
        FrontFaceColor->RGBColor[
         0.44481881345311236`, 0.3836192922560999, 0.5711286055818869],
        BackFaceColor->RGBColor[
         0.44481881345311236`, 0.3836192922560999, 0.5711286055818869],
        GraphicsColor->RGBColor[
         0.44481881345311236`, 0.3836192922560999, 0.5711286055818869],
        FontColor->RGBColor[
         0.44481881345311236`, 0.3836192922560999, 0.5711286055818869]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4633102374290754, 0.6078402870406618, 0.3956445929967629], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3088734916193836, 0.4052268580271079, 0.26376306199784194`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.4633102374290754`", ",", "0.6078402870406618`", ",", 
                 "0.3956445929967629`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4633102374290754, 0.6078402870406618, 0.3956445929967629]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.4633102374290754, 0.6078402870406618, 0.3956445929967629}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.4633102374290754, 0.6078402870406618, 0.3956445929967629],
        FrontFaceColor->RGBColor[
         0.4633102374290754, 0.6078402870406618, 0.3956445929967629],
        BackFaceColor->RGBColor[
         0.4633102374290754, 0.6078402870406618, 0.3956445929967629],
        GraphicsColor->RGBColor[
         0.4633102374290754, 0.6078402870406618, 0.3956445929967629],
        FontColor->RGBColor[
         0.4633102374290754, 0.6078402870406618, 0.3956445929967629]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.0329414897537057, 0.8388727491713992, 0.7127863434656241], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.021960993169137133`, 0.5592484994475995, 0.4751908956437494],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.0329414897537057`", ",", "0.8388727491713992`", ",", 
                 "0.7127863434656241`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.0329414897537057, 0.8388727491713992, 0.7127863434656241]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.0329414897537057, 0.8388727491713992, 0.7127863434656241}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.0329414897537057, 0.8388727491713992, 0.7127863434656241],
        FrontFaceColor->RGBColor[
         0.0329414897537057, 0.8388727491713992, 0.7127863434656241],
        BackFaceColor->RGBColor[
         0.0329414897537057, 0.8388727491713992, 0.7127863434656241],
        GraphicsColor->RGBColor[
         0.0329414897537057, 0.8388727491713992, 0.7127863434656241],
        FontColor->RGBColor[
         0.0329414897537057, 0.8388727491713992, 0.7127863434656241]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.822934481889148, 0.830581310337406, 0.8109500115574135], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5486229879260986, 0.5537208735582707, 0.5406333410382758],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.822934481889148`", ",", "0.830581310337406`", ",", 
                 "0.8109500115574135`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.822934481889148, 0.830581310337406, 0.8109500115574135]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.822934481889148, 0.830581310337406, 0.8109500115574135}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.822934481889148, 0.830581310337406, 0.8109500115574135],
        FrontFaceColor->RGBColor[
         0.822934481889148, 0.830581310337406, 0.8109500115574135],
        BackFaceColor->RGBColor[
         0.822934481889148, 0.830581310337406, 0.8109500115574135],
        GraphicsColor->RGBColor[
         0.822934481889148, 0.830581310337406, 0.8109500115574135],
        FontColor->RGBColor[
         0.822934481889148, 0.830581310337406, 0.8109500115574135]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9070503290771343, 0.18011596259280438`, 0.10171711786909521`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6047002193847563, 0.12007730839520292`, 0.06781141191273014],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.9070503290771343`", ",", "0.18011596259280438`", ",", 
                 "0.10171711786909521`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9070503290771343, 0.18011596259280438`, 0.10171711786909521`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.9070503290771343, 0.18011596259280438`, 
         0.10171711786909521`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.9070503290771343, 0.18011596259280438`, 0.10171711786909521`],
        FrontFaceColor->RGBColor[
         0.9070503290771343, 0.18011596259280438`, 0.10171711786909521`],
        BackFaceColor->RGBColor[
         0.9070503290771343, 0.18011596259280438`, 0.10171711786909521`],
        GraphicsColor->RGBColor[
         0.9070503290771343, 0.18011596259280438`, 0.10171711786909521`],
        FontColor->RGBColor[
         0.9070503290771343, 0.18011596259280438`, 0.10171711786909521`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5821282997164183, 0.7221427104579536, 0.9941274015266295], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3880855331442789, 0.4814284736386358, 0.662751601017753],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5821282997164183`", ",", "0.7221427104579536`", ",", 
                 "0.9941274015266295`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5821282997164183, 0.7221427104579536, 0.9941274015266295]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5821282997164183, 0.7221427104579536, 0.9941274015266295}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5821282997164183, 0.7221427104579536, 0.9941274015266295],
        FrontFaceColor->RGBColor[
         0.5821282997164183, 0.7221427104579536, 0.9941274015266295],
        BackFaceColor->RGBColor[
         0.5821282997164183, 0.7221427104579536, 0.9941274015266295],
        GraphicsColor->RGBColor[
         0.5821282997164183, 0.7221427104579536, 0.9941274015266295],
        FontColor->RGBColor[
         0.5821282997164183, 0.7221427104579536, 0.9941274015266295]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8780910355870886, 0.9731677309560403, 0.01095338418816394], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5853940237247257, 0.6487784873040269, 0.007302256125442627],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8780910355870886`", ",", "0.9731677309560403`", ",", 
                 "0.01095338418816394`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8780910355870886, 0.9731677309560403, 0.01095338418816394]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8780910355870886, 0.9731677309560403, 
         0.01095338418816394}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8780910355870886, 0.9731677309560403, 0.01095338418816394],
        FrontFaceColor->RGBColor[
         0.8780910355870886, 0.9731677309560403, 0.01095338418816394],
        BackFaceColor->RGBColor[
         0.8780910355870886, 0.9731677309560403, 0.01095338418816394],
        GraphicsColor->RGBColor[
         0.8780910355870886, 0.9731677309560403, 0.01095338418816394],
        FontColor->RGBColor[
         0.8780910355870886, 0.9731677309560403, 0.01095338418816394]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8434753959062156, 0.9853839181823529, 0.5573814534840327], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5623169306041438, 0.6569226121215687, 0.3715876356560218],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8434753959062156`", ",", "0.9853839181823529`", ",", 
                 "0.5573814534840327`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8434753959062156, 0.9853839181823529, 0.5573814534840327]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8434753959062156, 0.9853839181823529, 0.5573814534840327}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8434753959062156, 0.9853839181823529, 0.5573814534840327],
        FrontFaceColor->RGBColor[
         0.8434753959062156, 0.9853839181823529, 0.5573814534840327],
        BackFaceColor->RGBColor[
         0.8434753959062156, 0.9853839181823529, 0.5573814534840327],
        GraphicsColor->RGBColor[
         0.8434753959062156, 0.9853839181823529, 0.5573814534840327],
        FontColor->RGBColor[
         0.8434753959062156, 0.9853839181823529, 0.5573814534840327]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5292712199201204, 0.8994401691247216, 0.12489023357243978`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3528474799467469, 0.5996267794164811, 0.08326015571495986],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5292712199201204`", ",", "0.8994401691247216`", ",", 
                 "0.12489023357243978`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5292712199201204, 0.8994401691247216, 0.12489023357243978`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5292712199201204, 0.8994401691247216, 
         0.12489023357243978`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5292712199201204, 0.8994401691247216, 0.12489023357243978`],
        FrontFaceColor->RGBColor[
         0.5292712199201204, 0.8994401691247216, 0.12489023357243978`],
        BackFaceColor->RGBColor[
         0.5292712199201204, 0.8994401691247216, 0.12489023357243978`],
        GraphicsColor->RGBColor[
         0.5292712199201204, 0.8994401691247216, 0.12489023357243978`],
        FontColor->RGBColor[
         0.5292712199201204, 0.8994401691247216, 0.12489023357243978`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8885416072226495, 0.43872391530100185`, 0.2704101967341208], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5923610714817664, 0.2924826102006679, 0.1802734644894139],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.8885416072226495`", ",", "0.43872391530100185`", ",", 
                 "0.2704101967341208`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8885416072226495, 0.43872391530100185`, 0.2704101967341208]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.8885416072226495, 0.43872391530100185`, 
         0.2704101967341208}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.8885416072226495, 0.43872391530100185`, 0.2704101967341208],
        FrontFaceColor->RGBColor[
         0.8885416072226495, 0.43872391530100185`, 0.2704101967341208],
        BackFaceColor->RGBColor[
         0.8885416072226495, 0.43872391530100185`, 0.2704101967341208],
        GraphicsColor->RGBColor[
         0.8885416072226495, 0.43872391530100185`, 0.2704101967341208],
        FontColor->RGBColor[
         0.8885416072226495, 0.43872391530100185`, 0.2704101967341208]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.519825151343208, 0.12756565815529486`, 0.28756154350122554`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.346550100895472, 0.08504377210352991, 0.1917076956674837],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.519825151343208`", ",", "0.12756565815529486`", ",", 
                 "0.28756154350122554`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.519825151343208, 0.12756565815529486`, 0.28756154350122554`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.519825151343208, 0.12756565815529486`, 
         0.28756154350122554`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.519825151343208, 0.12756565815529486`, 0.28756154350122554`],
        FrontFaceColor->RGBColor[
         0.519825151343208, 0.12756565815529486`, 0.28756154350122554`],
        BackFaceColor->RGBColor[
         0.519825151343208, 0.12756565815529486`, 0.28756154350122554`],
        GraphicsColor->RGBColor[
         0.519825151343208, 0.12756565815529486`, 0.28756154350122554`],
        FontColor->RGBColor[
         0.519825151343208, 0.12756565815529486`, 0.28756154350122554`]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.2695362373977601, 0.020981802227312496`, 0.9403043648643787], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.17969082493184008`, 0.013987868151541665`, 0.6268695765762525],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.2695362373977601`", ",", "0.020981802227312496`", ",", 
                 "0.9403043648643787`"}], "}"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.2695362373977601, 0.020981802227312496`, 0.9403043648643787]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.2695362373977601, 0.020981802227312496`, 
         0.9403043648643787}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.2695362373977601, 0.020981802227312496`, 0.9403043648643787],
        FrontFaceColor->RGBColor[
         0.2695362373977601, 0.020981802227312496`, 0.9403043648643787],
        BackFaceColor->RGBColor[
         0.2695362373977601, 0.020981802227312496`, 0.9403043648643787],
        GraphicsColor->RGBColor[
         0.2695362373977601, 0.020981802227312496`, 0.9403043648643787],
        FontColor->RGBColor[
         0.2695362373977601, 0.020981802227312496`, 0.9403043648643787]]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5068322698784218, 0.011353113424083405`, 0.47074530553876315`],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3378881799189479, 0.007568742282722271, 0.3138302036925088],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"{", 
               
               RowBox[{
                "0.5068322698784218`", ",", "0.011353113424083405`", ",", 
                 "0.47074530553876315`"}], "}"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5068322698784218, 0.011353113424083405`, 
               0.47074530553876315`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0.5068322698784218, 0.011353113424083405`, 
         0.47074530553876315`}],
        Editable->False,
        Selectable->False], 
       StyleBox["\<\"traffic sign black (nighttime)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[
         0.5068322698784218, 0.011353113424083405`, 0.47074530553876315`],
        FrontFaceColor->RGBColor[
         0.5068322698784218, 0.011353113424083405`, 0.47074530553876315`],
        BackFaceColor->RGBColor[
         0.5068322698784218, 0.011353113424083405`, 0.47074530553876315`],
        GraphicsColor->RGBColor[
         0.5068322698784218, 0.011353113424083405`, 0.47074530553876315`],
        FontColor->RGBColor[
         0.5068322698784218, 0.011353113424083405`, 0.47074530553876315`]]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8027426592158422`*^9, 3.802742703980402*^9, 3.802742764334619*^9, 
   3.80274279829029*^9, 3.8027428296557302`*^9, {3.802742867724454*^9, 
   3.802742882364188*^9}, {3.8027433422316113`*^9, 3.802743350374951*^9}, 
   3.8027777419317293`*^9, 3.80277796444425*^9, 3.802778037189809*^9, 
   3.802779033457739*^9, 3.802779105788878*^9, 3.803063477296159*^9, 
   3.8030635256310797`*^9, 3.803071416234454*^9, 3.803210954032379*^9, 
   3.803210999983623*^9, 3.803211379554183*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"de6e7ac6-93dc-48bb-b580-e3f4b4eb18fb"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing Graphics", "Subsection",
 CellChangeTimes->{{3.8028008378443832`*^9, 
  3.8028008537261667`*^9}},ExpressionUUID->"ebd4d8e3-16cd-4dd2-818a-\
e814a6b54295"],

Cell[CellGroupData[{

Cell["Basics about the symbol and the symbolic structure", "Subsubsection",
 CellChangeTimes->{{3.802918049777663*^9, 
  3.802918077558688*^9}},ExpressionUUID->"48c4d369-e3fc-4b59-ae33-\
d8480e3fc8cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "FullForm"}]], "Input",
 CellChangeTimes->{{3.80280135965359*^9, 3.802801363279153*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"549b39fc-d2bf-4886-9bb0-0a9ea3c75644"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FullForm",
              ButtonNote->"paclet:ref/FullForm"],
             "\"paclet:ref/FullForm\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FullForm\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) prints as the full form of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), with no special syntax. \"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FullForm", 
                    "paclet:ref/FullForm", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FullForm.html"]\
, None}, "http://reference.wolfram.com/language/ref/FullForm.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"NumberMarks", "\[RuleDelayed]", "True"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FullForm\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/FullForm",
              ButtonNote->"paclet:ref/FullForm"],
             "\"paclet:ref/FullForm\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FullForm\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) prints as the full form of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), with no special syntax. \"\>",
              "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"FullForm\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
prints as the full form of \!\(\*StyleBox[\"expr\", \"TI\"]\), with no \
special syntax. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/FullForm", "Web" -> 
      "http://reference.wolfram.com/language/ref/FullForm.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {NumberMarks :> True}, "Attributes" -> {Protected}, 
    "FullName" -> "System`FullForm"], True]]], "Output",
 CellChangeTimes->{3.8028013636079197`*^9, 3.803211211623843*^9, 
  3.8032113801780167`*^9},
 CellLabel->
  "Out[327]=",ExpressionUUID->"9b96ae24-b886-4711-8af9-e47855238c28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "InputForm"}]], "Input",
 CellChangeTimes->{{3.8028013767184362`*^9, 3.802801378911723*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"f38157a5-868b-408a-aa87-a99300ef679e"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/InputForm",
              ButtonNote->"paclet:ref/InputForm"],
             "\"paclet:ref/InputForm\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"InputForm\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) prints as a version of \\!\
\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) suitable for input to \
\\!\\(\\*StyleBox[\\\"the Wolfram Language\\\", \\\"RebrandingTerm\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/InputForm", 
                    "paclet:ref/InputForm", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/InputForm.\
html"], None}, "http://reference.wolfram.com/language/ref/InputForm.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"NumberMarks", "\[RuleDelayed]", "$NumberMarks"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`InputForm\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/InputForm",
              ButtonNote->"paclet:ref/InputForm"],
             "\"paclet:ref/InputForm\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"InputForm\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) prints as a version of \\!\
\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) suitable for input to \
\\!\\(\\*StyleBox[\\\"the Wolfram Language\\\", \\\"RebrandingTerm\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"InputForm\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) prints as a version of \!\(\*StyleBox[\"expr\", \"TI\"]\) suitable \
for input to \!\(\*StyleBox[\"the Wolfram Language\", \"RebrandingTerm\"]\). \
", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/InputForm", "Web" -> 
      "http://reference.wolfram.com/language/ref/InputForm.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> {NumberMarks :> $NumberMarks}, 
    "Attributes" -> {Protected}, "FullName" -> "System`InputForm"], 
   True]]], "Output",
 CellChangeTimes->{3.802801379405509*^9, 3.803211211746956*^9, 
  3.803211380357275*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"d3f21275-abac-4655-a39b-f218ccffb20a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Graphics"}]], "Input",
 CellChangeTimes->{{3.802869380707526*^9, 3.802869410108972*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"baa892cf-28d3-4297-aad9-dec7fc497477"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Graphics",
              ButtonNote->"paclet:ref/Graphics"],
             "\"paclet:ref/Graphics\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Graphics\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"primitives\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"options\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) represents a \
two-dimensional graphical image. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Graphics", 
                    "paclet:ref/Graphics", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Graphics.html"]\
, None}, "http://reference.wolfram.com/language/ref/Graphics.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "38", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "38", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Graphics\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Graphics",
              ButtonNote->"paclet:ref/Graphics"],
             "\"paclet:ref/Graphics\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Graphics\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"primitives\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"options\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) represents a \
two-dimensional graphical image. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Graphics\", \"[\", RowBox[{StyleBox[\"primitives\", \"TI\
\"], \",\", StyleBox[\"options\", \"TI\"]}], \"]\"}]\) represents a \
two-dimensional graphical image. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Graphics", "Web" -> 
      "http://reference.wolfram.com/language/ref/Graphics.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, 
      AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> 
      None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> 
      Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> 
      Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, 
      FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, 
      FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, 
      GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., 
      ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, 
      LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, PlotRange -> 
      All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, 
      PlotRegion -> Automatic, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RotateLabel -> True, Ticks -> Automatic, 
      TicksStyle -> {}}, "Attributes" -> {Protected, ReadProtected}, 
    "FullName" -> "System`Graphics"], False]]], "Output",
 CellChangeTimes->{{3.802869384640523*^9, 3.802869410700179*^9}, 
   3.803211380448544*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"3476a795-0972-43ca-8d9f-bfc26c6f2109"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphicsWLProperties", "=", 
   RowBox[{"AllPropertiesForSymbol", "@", "Graphics"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.80286996121526*^9, 3.802870002325316*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"ac9e4740-aa3f-484d-924a-3b5dcd1ccb81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"wlEntityProperties", ",", "graphicsWLProperties"}], "}"}]}], 
    "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8028700105191927`*^9, 3.802870069126396*^9}, {
  3.8028701034865923`*^9, 3.80287010553242*^9}, {3.802870140423221*^9, 
  3.8028701423245897`*^9}, {3.802870203240108*^9, 3.802870265974687*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"ef4905d5-9593-44a1-8e06-85f8e9f9c08d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"attributes\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Attributes\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Attributes\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Protected\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Protected\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Protected\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ReadProtected\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ReadProtected\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ReadProtected\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"character count\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CharacterCount\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CharacterCount\\\"]\""},
      "EntityProperty"], "8"},
    {
     TemplateBox[{"\"common option values\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CommonOptionValues\""}],
          "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CommonOptionValues\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Epilog\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Epilog\""}], "]"}], 
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Epilog\\\"]\"", 
          "\"Wolfram Language symbol\""},
         "Entity"], "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        TemplateBox[{"\"Method\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Method\""}], "]"}], 
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Method\\\"]\"", 
          "\"Wolfram Language symbol\""},
         "Entity"], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\<\"{\\\"AxesInFront\\\"->False}\"\>", 
          ",", "\<\"{\\\"FrameInFront\\\"->False}\"\>", 
          ",", "\<\"{\\\"GridLinesInFront\\\"->True}\"\>", 
          ",", "\<\"{\\\"TransparentPolygonMesh\\\"->True}\"\>"}], "}"}]}]}], 
      "}"}]},
    {
     TemplateBox[{"\"date introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateIntroduced\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 23 Jun 1988\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1988", ",", "6", ",", "23"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False]},
    {
     TemplateBox[{"\"date last modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateLastModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateLastModified\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Wed 9 Jul 2014\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2014", ",", "7", ",", "9"}], "}"}], ",", "\"Day\"", ",",
            "\"Gregorian\"", ",", 
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False]},
    {
     TemplateBox[{"\"dates modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DatesModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DatesModified\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Tue 3 Sep 1996\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1996", ",", "9", ",", "3"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Tue 1 May 2007\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2007", ",", "5", ",", "1"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Tue 18 Nov 2008\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2008", ",", "11", ",", "18"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Mon 15 Nov 2010\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2010", ",", "11", ",", "15"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Wed 9 Jul 2014\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2014", ",", "7", ",", "9"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}], "}"}]},
    {
     TemplateBox[{"\"documentation basic examples\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationBasicExamples\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{Cell["\<\
Use lines, polygons, circles, etc. to build up a graphics image:\
\>", "ExampleText",ExpressionUUID->"359a9216-52aa-4ed0-a86c-77b6e5638de2"], 
        ",", Cell[BoxData[
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Green", ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", "Red", ",", 
            RowBox[{"Disk", "[", "]"}], ",", "Blue", ",", 
            RowBox[{"Circle", "[", 
             RowBox[{"{", 
              RowBox[{"2", ",", "0"}], "}"}], "]"}], ",", "Yellow", ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", "Purple", 
            ",", 
            RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"4", ",", 
                 RowBox[{"3", "/", "2"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"3", "/", "2"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "Black", 
            ",", "Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
          "]"}]], "Input",
         ShowStringCharacters->True,ExpressionUUID->
         "5989ae19-66a0-4a18-8a71-745583edac1e"], ",", Cell[BoxData[
         GraphicsBox[
          {RGBColor[0, 1, 0], Thickness[Large], RectangleBox[{0, -1}, {2, 1}], 
           {RGBColor[1, 0, 0], DiskBox[{0, 0}]}, 
           {RGBColor[0, 0, 1], CircleBox[{2, 0}]}, 
           {RGBColor[1, 1, 0], PolygonBox[{{2, 0}, {4, 1}, {4, -1}}]}, 
           {RGBColor[0.5, 0, 0.5], Arrowheads[Large], 
            ArrowBox[
             NCache[{{4, Rational[3, 2]}, {0, Rational[3, 2]}, {0, 0}}, {{
               4, 1.5}, {0, 1.5}, {0, 0}}]], 
            {GrayLevel[0], Dashing[{Small, Small}], 
             LineBox[{{-1, 0}, {4, 0}}]}}}]], "Output",
         ShowStringCharacters->True,ExpressionUUID->
         "ee866bee-6ade-47e4-893b-560585279fad"]}], "}"}], "}"}]},
    {
     TemplateBox[{"\"documentation example counts\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationExampleCounts\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleCounts\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", "2"}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", "13"}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", "68"}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", "1"}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", "5"}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", "2"}]}], "}"}]},
    {
     TemplateBox[{"\"documentation example inputs\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationExampleInputs\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleInputs\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Green", ",", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", "Red", ",", 
               RowBox[{"Disk", "[", "]"}], ",", "Blue", ",", 
               RowBox[{"Circle", "[", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "0"}], "}"}], "]"}], ",", "Yellow", ",", 
               RowBox[{"Polygon", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
               "Purple", ",", 
               RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"4", ",", 
                    RowBox[{"3", "/", "2"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"3", "/", "2"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
               "Black", ",", "Dashed", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "b55c2ad0-ea3f-4b54-86bd-7298f6505f2a"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"n", ",", "x"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
               RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "7ffcc5df-3797-46f1-ae66-b6e2bbf51a81"], ",", Cell[BoxData[
             RowBox[{"GraphPlot", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"i", "\[Rule]", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"i", "^", "2"}], ",", "102"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "0", ",", "102"}], "}"}]}], "]"}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "0aad2a04-fd84-4ccc-b143-dd8d795de5e2"], ",", Cell[BoxData[
             RowBox[{"ReliefPlot", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"i", "+", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"i", "^", "2"}], "+", 
                    RowBox[{"j", "^", "2"}]}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"-", "4"}], ",", "4", ",", ".03"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{"-", "4"}], ",", "4", ",", ".03"}], "}"}]}], "]"}],
                ",", 
               RowBox[{"ColorFunction", "\[Rule]", "\"\<SunsetColors\>\""}]}],
               "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "8765dfae-a58e-4379-a06b-a08c72519759"]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"Disk", "[", "]"}], ",", "Green", ",", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", "Blue", ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "2"}], "}"}], "]"}]}], "}"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "fadd2f95-a200-4a7d-af30-c45fd6b94f2a"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "06907352-e382-417c-bb20-941db42506dc"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{
              RowBox[{"v", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"15", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "t", "]"}], ",", 
                    RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", 
                   RowBox[{"4", "Pi"}], ",", 
                   RowBox[{"4", 
                    RowBox[{"Pi", "/", "5"}]}]}], "}"}]}], "]"}]}], ";"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "753174cc-ac3a-464e-915c-f46e1d326236"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{"GraphicsComplex", "[", 
               RowBox[{"v", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                    "}"}], "]"}], ",", "Green", ",", 
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                    "}"}], "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "0957c75a-396a-4979-8243-595d420192b0"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "^", "2"}], "+", 
                   RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "6d3ec3fd-d42b-4a9d-a8d1-4a900c30adae"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Green", ",", 
                 RowBox[{"Disk", "[", "]"}], ",", "Yellow", ",", 
                 RowBox[{"Opacity", "[", ".7", "]"}], ",", 
                 RowBox[{"Disk", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Hue", "[", 
                  RowBox[{
                   RowBox[{"2", "/", "3"}], ",", 
                   RowBox[{"1", "/", "2"}], ",", "1"}], "]"}], ",", 
                 RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], "}"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "ca209e87-712b-49e4-9467-2c63bc047ab9"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{"Blue", ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "Blue", ",", 
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", "Red", ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "Dashed", ",", "Red", ",", 
                  RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                "]"}]}], "}"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "23e7fd58-7dd8-4358-87be-6ac291d30239"], ",", Cell[BoxData[
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{"Pink", ",", 
                  RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Pink", ",", 
                  RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", "Dashed", "]"}], ",", "Pink", ",", 
                  RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"EdgeForm", "[", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "]"}], 
                   "]"}], ",", "Pink", ",", 
                  RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], "}"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "9d0aedd9-321a-4f6c-9efc-81768f6ec881"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Dashed", ",", "Red", ",", 
                 RowBox[{"Arrowheads", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", ".1"}], ",", ".1"}], "}"}], "]"}], ",", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
               "]"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
               "]"}]}], "}"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "fb303298-d791-459f-a8e0-31d327e18318"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Disk", "[", "]"}], ",", "Pink"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Blue"}], 
                "]"}]}], "}"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "8eef4f0e-ee7b-4403-8693-a6e3f3066ef6"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Pink", ",", 
               RowBox[{"Disk", "[", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"Disk", "[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"{", 
                 RowBox[{"2", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "1ba9a303-9282-4df4-ad16-4186cde3180d"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Rectangle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "4"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"10", ",", "6"}], "}"}]}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "583e2e1d-cbfd-4552-979a-2b344863dde8"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Rectangle", "[", 
               RowBox[{
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", ".4"}], "}"}], "]"}], ",", 
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", ".6"}], "}"}], "]"}]}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "08dfe79b-80dd-484d-a49c-7f8df4467362"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Rectangle", "[", 
               RowBox[{
                RowBox[{"ImageScaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", ".4"}], "}"}], "]"}], ",", 
                RowBox[{"ImageScaled", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", ".6"}], "}"}], "]"}]}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "f59f5f58-65c0-4dbe-b9ea-6c32ba120b72"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Rectangle", "[", 
               RowBox[{
                RowBox[{"Offset", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"10", ",", "20"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                RowBox[{"Offset", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "10"}], ",", 
                    RowBox[{"-", "20"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "629de2bb-fe27-4f0b-915c-0ea26755202c"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Graphics", "[", 
                    RowBox[{
                    RowBox[{"Circle", "[", "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "30"}], ",", 
                    RowBox[{"AlignmentPoint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "0"}], "}"}]}]}], "]"}], ",", 
                    "Center"}], "]"}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "70"}], ",", 
                 RowBox[{"Axes", "\[Rule]", "True"}], ",", 
                 RowBox[{"Ticks", "\[Rule]", "None"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}],
               "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "4e400737-f637-43d3-b7d3-ef3141fcc963"], ",", Cell[BoxData[
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Inset", "[", 
                   RowBox[{
                    RowBox[{"Graphics", "[", 
                    RowBox[{
                    RowBox[{"Circle", "[", "]"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "30"}], ",", 
                    RowBox[{"AlignmentPoint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "a"}], "}"}]}]}], "]"}], ",", 
                    "Center"}], "]"}], "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "70"}], ",", 
                 RowBox[{"Axes", "\[Rule]", "True"}], ",", 
                 RowBox[{"Ticks", "\[Rule]", "None"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}],
               "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "34ce0612-a2b6-44d2-bef8-8bd83328adf5"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Circle", "[", "]"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", 
                 RowBox[{"1", "/", "k"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "2aaf3444-1f34-4a20-9241-39807c8fe84d"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "94327d5e-f92e-4001-bbc1-917d350a22ce"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "25672271-38c4-4beb-8730-7ba73b56cb9b"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", "y"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "e483e4c4-bfd3-4559-bc85-e6dfe3978130"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "9a340f26-a895-4ef7-afcd-d1cc0321a129"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "10f35a66-e00e-409f-bdb0-d6844ac13922"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesOrigin", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "36c759ad-a1e7-4557-b608-6875c89f1158"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"AxesStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Orange", ",", "12"}], "]"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "54c7ad7a-fd21-409f-9e2f-655af52af6fb"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"AxesStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Directive", "[", 
                   RowBox[{"Dashed", ",", "Red"}], "]"}], ",", "Blue"}], 
                 "}"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "ac4b84ea-7847-4c2f-87d5-b3ff1de58feb"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "048f3dff-9848-4bf9-85e4-cc146b6aa4a4"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Circle", "[", "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "50"}], ",", 
                RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "]"}], 
              ",", "y"}], "}"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a2b4b9aa-316f-4477-9685-0b9c8564ab20"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"Circle", "[", "]"}], ",", 
                  RowBox[{"BaselinePosition", "\[Rule]", 
                   RowBox[{"Scaled", "[", "b", "]"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0.5", ",", "1"}], "}"}]}], "}"}]}], 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "7b06eef1-9291-459a-8206-6a1930a99885"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"Circle", "[", "]"}], ",", 
                 RowBox[{"Axes", "\[Rule]", "True"}], ",", 
                 RowBox[{"BaselinePosition", "\[Rule]", "Axis"}]}], "]"}], 
               ",", "y"}], "}"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "1a3352b4-d5d7-480d-9050-5cc54cb4120d"], ",", Cell[BoxData[
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"Circle", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
                 RowBox[{"Axes", "\[Rule]", "True"}], ",", 
                 RowBox[{"BaselinePosition", "\[Rule]", "Axis"}]}], "]"}], 
               ",", "y"}], "}"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "62424cee-b43f-4fbd-8d39-2627e9b5028e"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"3", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"BaseStyle", "\[Rule]", "Blue"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "22c7cd49-0c5f-4f2f-8ec8-f6299244e4f3"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"3", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"BaseStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Green", ",", "Thick", ",", 
                 RowBox[{"EdgeForm", "[", "Dashed", "]"}]}], "}"}]}]}], 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "bee521af-64f9-4b72-8e05-f37c7f1a8e02"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"ContentSelectable", "\[Rule]", "True"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "9c22b721-dbc1-4b64-8207-dc930134bf22"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"ContentSelectable", "\[Rule]", "False"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "910c2813-a2ba-4969-ac03-b7d38540b3e0"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]}], "]"}]],
             "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "c7b7cfb7-2651-4da5-a458-02d74e677218"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"Epilog", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"Disk", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", ".4"}], "]"}]}], 
                "}"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "9eaaa772-f23b-4519-8ad9-f06635c05abb"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Text", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], ",", "20"}],
                  "]"}], "]"}]}], "}"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "eb9f42b8-29ed-4489-a98b-1287b15f33de"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Circle", "[", "]"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], ",", "20"}],
                   "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a647b67b-ea4e-476e-9bc6-eadc4cd18870"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}], ",", 
              RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "d5eb8c8d-a6a2-4ec7-bd0b-4d24ca22f1c1"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "edbd7da1-5b0d-4c7a-bed9-d3cc878ffe14"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"True", ",", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", "False"}], "}"}]}], "}"}]}]}], "]"}]],
             "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "fe150d23-393f-4042-be1a-b5f6b712bed7"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "a0d9d1f1-97d8-4b85-958a-e659d3c59932"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"a", ",", "b"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}]}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "ded8d6a4-f292-479f-8a39-75f87b64d95e"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Thick", ",", "Gray"}], "]"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "98035234-649e-4e54-9be1-900759c9f93c"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{"Thick", ",", "Dashed"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Blue", ",", "Red"}], "}"}]}], "}"}]}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "ee5bf412-7bb0-4afb-9ff6-4ca09b10b89b"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"FrameTicks", "->", "None"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "e1611e82-743a-4fc1-9b1b-0f1dffb55594"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "cd25ba12-e3c4-42f0-8453-3cf6a6593282"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}]}], 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "c5cc0b09-8338-43eb-b267-1224670c77ac"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameTicksStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Orange", ",", "12"}], "]"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "e8bc6335-62eb-4367-865e-48746efb2478"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
              RowBox[{"FrameTicksStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Black", ",", "Blue"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Red", ",", "Green"}], "}"}]}], "}"}]}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a3fa86ea-5bf8-465b-b077-c41d12db2161"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "bc53d3d3-6e80-4b6c-b2d8-d4b897562398"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"GridLines", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]],
             "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "41637216-a6f3-4af9-8ec3-67131f48abd5"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"GridLines", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "Orange"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".5"}], ",", "Dotted"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{".5", ",", "Dotted"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "Orange"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".5"}], ",", "Dotted"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{".5", ",", "Dotted"}], "}"}], ",", "1"}], "}"}]}],
                 "}"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "0498ffd0-be63-4cf1-a013-dbcfd6c1c225"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
              RowBox[{"GridLinesStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Red", ",", "Dotted"}], "]"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "f3dfeb1b-3be7-46f3-aa3d-43cea5b2b897"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Framed", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{"Disk", "[", "]"}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "50d51e21-d275-49d9-918f-e738e380ab36"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Framed", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Disk", "[", "]"}], ",", 
               RowBox[{"ImageMargins", "\[Rule]", "20"}]}], "]"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "e27ed05a-894c-4004-83fd-cfbe7f9be1e7"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Framed", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Disk", "[", "]"}], ",", 
               RowBox[{"ImageMargins", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"5", ",", "10"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"20", ",", "30"}], "}"}]}], "}"}]}]}], "]"}], 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "02efd9f2-9734-4046-b794-20773feb1988"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Thickness", "[", ".3", "]"}], ",", "Pink", ",", 
                RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", "None"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "7591cf17-ab4a-4591-ac1e-00ea682c0196"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Framed", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Thickness", "[", ".3", "]"}], ",", "Pink", ",", 
                  RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
                RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "8f6fc3ec-e75a-4a33-9b9a-52ca814c488c"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Framed", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".3", "]"}], ",", "Pink", ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5af86297-9cd5-4b25-bc3d-30a1191a97ee"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Framed", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".2", "]"}], ",", "Pink", ",", 
                 RowBox[{"Circle", "[", "]"}]}], "}"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"40", ",", "10"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"20", ",", "5"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "1740a8bc-1393-474c-b06a-1d0a51dd961f"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Circle", "[", "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "s"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"s", ",", 
                RowBox[{"{", 
                 RowBox[{"Tiny", ",", "Small"}], "}"}]}], "}"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "eb1eb39a-7b63-41c1-b7ab-e8e14d754260"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Circle", "[", "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}], "}"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "d4d372b0-6b46-47e5-aa61-0d9636a4a5c5"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Circle", "[", "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"100", ",", "100"}], "}"}]}]}], "]"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Circle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"100", ",", "100"}], "}"}]}]}], "]"}]}], "}"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "37c80776-d78f-426c-9ab1-aafb0da2014a"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", "Orange"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "3b7acf1d-826c-42ac-8108-a17c239f8b93"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"Disk", "[", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "i"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"Axes", "\[Rule]", "True"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<AxesInFront\>\"", "\[Rule]", "False"}], 
                 "}"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "2862a55f-66b6-4b97-8c5e-4b99bcfa8524"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"Polygon", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".5"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "79a138b1-4052-4562-b47c-2ac11eef0de2"], ",", Cell[BoxData[
             RowBox[{"Show", "[", 
              RowBox[{"%", ",", " ", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<FrameInFront\>\"", "\[Rule]", "False"}], 
                 "}"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "6204293d-3ad5-4071-bffb-5906e2b2ddfb"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Green", ",", 
                 RowBox[{"PointSize", "[", ".6", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<GridLinesInFront\>\"", "\[Rule]", "True"}], 
                 "}"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "3f0ed803-d9b2-48e8-9532-e6d77a034e42"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
                RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Polygon", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "}"}], "]"}]}],
                "}"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "33c14012-86a2-493c-b944-e5e7a2183fad"], ",", Cell[BoxData[
             RowBox[{"Show", "[", 
              RowBox[{"%", ",", 
               RowBox[{"Method", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<TransparentPolygonMesh\>\"", "\[Rule]", "True"}], 
                 "}"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "ff0e9d72-c0e6-4b35-8fac-bd5e07031637"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "^", "2"}], "+", 
                 RowBox[{"y", "^", "2"}]}], "==", "1"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "3f3f5aee-e09e-4403-82ac-6229d426c153"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"y", "^", "2"}]}], "==", "1"}], "]"}], ",", "16", 
                 ",", "Red", ",", 
                 RowBox[{"Background", "\[Rule]", "Yellow"}]}], "]"}]}]}], 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "8e61a422-09f6-4a40-ac0f-da7618320b07"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "5"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "bc938bb2-62aa-49f7-aadf-952d69e571f9"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Pink", ",", 
                 RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "44d8c6f8-973f-42d5-a0c8-ec363e215b4e"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Pink", ",", 
                 RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
               RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "98ef75c9-f78f-4912-ad0c-2a1f2b304dd8"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "5"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "4"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "9864e73a-4609-4358-b34d-159f26c1c269"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "5"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "4"}], ",", 
              RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a4aa362b-c0f7-4ac9-976f-60545e1b16a7"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", "5"}], "]"}]}], "}"}],
               ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", "4"}], ",", 
              RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "8218eec2-d19c-4e82-97bc-4171ee86dc75"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
              RowBox[{"PlotRangePadding", "\[Rule]", "1"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a61663db-8d51-4ba1-83e5-92c61991dd2a"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
              RowBox[{"PlotRangePadding", "\[Rule]", 
               RowBox[{"Scaled", "[", "0.1", "]"}]}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "9ad8c6cd-28de-4076-8c1f-6d3a54932f7d"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
              RowBox[{"PlotRangePadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.5", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.3", ",", "0.3"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "c785fd12-4dd6-473c-ab5a-642fee47991f"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", "False"}], ",", 
              RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "b0e454ca-0d9b-440a-b7c5-18ae53fe11c2"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", "False"}], ",", 
              RowBox[{"PlotRegion", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.25", ",", "0.75"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.25", ",", "0.75"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "cfd86fca-220d-48d3-8151-de5a1bdec2d2"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Pink", ",", 
                RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", "False"}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", "30"}], ",", 
              RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "700abf40-3d6d-4b56-80e5-18108dff7c89"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{
              RowBox[{"bg", "=", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"Polygon", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                   RowBox[{"VertexColors", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "Orange", ",", "Orange", ",", "White", ",", "White"}], 
                    "}"}]}]}], "]"}], ",", 
                 RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], 
              ";"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "521fc28e-4175-485a-a25d-6fe411fe588d"], ",", Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Circle", "[", "]"}], ",", 
               RowBox[{"Prolog", "\[Rule]", 
                RowBox[{"Inset", "[", 
                 RowBox[{"bg", ",", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "]"}]}]}], 
              "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "dfb2bc63-ee0f-4269-91d4-e5cd82bbd179"], ",", Cell[BoxData[
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
               RowBox[{"Prolog", "\[Rule]", 
                RowBox[{"Inset", "[", 
                 RowBox[{"bg", ",", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "]"}]}]}], 
              "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "dcf40a63-313d-4f88-8cd3-61dd4d2e088b"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"None", ",", "\"\<y axis\>\""}], "}"}]}], ",", 
              RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "419eadb4-73ae-430f-b098-dd2a0d259bec"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"None", ",", "\"\<y axis\>\""}], "}"}]}], ",", 
              RowBox[{"RotateLabel", "\[Rule]", "False"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "1fcfbd9b-e1ae-48d4-8734-3c0e79158090"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"Ticks", "\[Rule]", "None"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "e9ad20e5-df8f-4519-8bfa-bec0688b881f"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"Ticks", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a10ba1a5-f40b-46a0-9f97-7cb8af9315d5"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "3"}], "]"}], ",", 
              RowBox[{"Ticks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "3df6fa25-0397-4bf7-810c-35a58f1c4e31"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"TicksStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Red", ",", "Bold"}], "]"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "6debf5fc-e027-4564-987b-903a58849f31"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Circle", "[", "]"}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"TicksStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Directive", "[", 
                  RowBox[{"Red", ",", "Bold"}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                  RowBox[{"Blue", ",", "12"}], "]"}]}], "}"}]}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "6f2c59bc-6113-4d2a-ab40-e4528e232167"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{Cell[BoxData[
            RowBox[{
             RowBox[{"pts", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", "n", " ", 
                    RowBox[{"\[Pi]", "/", "9"}]}], "]"}], ",", 
                  RowBox[{"Sin", "[", 
                   RowBox[{"2", " ", "n", " ", 
                    RowBox[{"\[Pi]", "/", "9"}]}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "cf288190-35de-4017-9c0a-4f152448c22c"], ",", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.7", "]"}], ",", "Red", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"Tuples", "[", 
                 RowBox[{"pts", ",", "2"}], "]"}], "]"}], ",", "Blue", ",", 
               RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
               RowBox[{"Point", "[", "pts", "]"}]}], "}"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5377a409-05c4-41cc-b9f7-bce73ae09b0b"]}], "}"}], "}"}]}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Graphics", "[", 
              RowBox[{"Disk", "[", "]"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "16c6348b-7cbc-4364-9fab-7df69137ece0"], ",", Cell[BoxData[
             RowBox[{"InputForm", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "1ef87fd8-1232-4776-a111-d4f634b77dac"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{
              RowBox[{"makeDashed", "[", " ", "g_Graphics", " ", "]"}], ":=", 
              RowBox[{"g", "/.", 
               RowBox[{"l_Line", "\[RuleDelayed]", 
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", "l"}], "}"}]}]}]}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "742d88d1-f691-4ccf-b02c-6b53f14af87a"], ",", Cell[BoxData[
             RowBox[{"makeDashed", "[", 
              
              GraphicsBox[
               LineBox[{{1, -1}, {2, 1}, {3, -1}, {4, 1}, {5, -1}}]], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "d685cb41-2655-4b7a-a64e-ff3e66019ae6"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"ParametricPlot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"v", "+", "u"}], ")"}], " ", 
                  RowBox[{"Cos", "[", "u", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"v", "+", "u"}], ")"}], " ", 
                  RowBox[{"Sin", "[", "u", "]"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", "0", ",", 
                 RowBox[{"4", "Pi"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"v", ",", "0", ",", "5"}], "}"}], ",", 
               RowBox[{"Mesh", "\[Rule]", "False"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "326252f7-b76e-4c06-b188-177cb037a9bd"], ",", Cell[BoxData[
             RowBox[{"ContourPlot", "[", 
              RowBox[{
               RowBox[{"y", "+", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"x", "^", "2"}], "+", 
                  RowBox[{"3", "y"}]}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
               RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], 
              "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "3221ec3b-0372-452a-9d68-fc962d740de0"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"CountryData", "[", 
              RowBox[{"\"\<World\>\"", ",", "\"\<Shape\>\""}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "bd302b1c-aa5b-4c59-964f-516fd7fd2534"], ",", Cell[BoxData[
             RowBox[{"GraphData", "[", "\"\<DoubleStarSnark\>\"", "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "7a39ee27-514f-43cf-93cb-63bc73e155ad"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"First", "@", 
              RowBox[{
              "Import", "[", "\"\<ExampleData/mathematica.pdf\>\"", "]"}]}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "b77977d3-dae9-4fd2-af40-4f6cbdf8a898"], ",", Cell[BoxData[
             RowBox[{"Import", "[", 
              RowBox[{
              "\"\<ExampleData/coneflower.jpg\>\"", ",", " ", 
               "\"\<Graphics\>\""}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "dcce3493-5fd8-4169-b504-cb8a63904bc1"]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Dynamic", "@", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "hour", ",", "min", ",", "sec", ",", "ht", ",", "mt", ",", 
                 "st"}], "}"}], ",", 
               RowBox[{
                RowBox[{"Clock", "[", "]"}], ";", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"hour", ",", "min", ",", "sec"}], "}"}], "=", 
                 RowBox[{"Take", "[", 
                  RowBox[{
                   RowBox[{"DateList", "[", "]"}], ",", 
                   RowBox[{"-", "3"}]}], "]"}]}], ";", 
                RowBox[{"ht", "=", 
                 RowBox[{
                  RowBox[{"Pi", "/", "2"}], "-", 
                  RowBox[{"2", "Pi", " ", 
                   RowBox[{"hour", "/", "12"}]}], "-", 
                  RowBox[{"2", "Pi", " ", 
                   RowBox[{"min", "/", "720"}]}]}]}], ";", 
                RowBox[{"mt", "=", 
                 RowBox[{
                  RowBox[{"Pi", "/", "2"}], "-", 
                  RowBox[{"2", "Pi", " ", 
                   RowBox[{"min", "/", "60"}]}]}]}], ";", 
                RowBox[{"st", "=", 
                 RowBox[{
                  RowBox[{"Pi", "/", "2"}], "-", 
                  RowBox[{"2", "Pi", " ", 
                   RowBox[{
                    RowBox[{"Floor", "[", "sec", "]"}], "/", "60"}]}]}]}], 
                ";", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"0.6", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "ht", "]"}], ",", 
                    RowBox[{"Sin", "[", "ht", "]"}]}], "}"}]}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"0.85", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "mt", "]"}], ",", 
                    RowBox[{"Sin", "[", "mt", "]"}]}], "}"}]}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"0.85", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "st", "]"}], ",", 
                    RowBox[{"Sin", "[", "st", "]"}]}], "}"}]}]}], "}"}], 
                    "]"}], ",", 
                   RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Point", "[", 
                    RowBox[{"0.9", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "i", "]"}], ",", 
                    RowBox[{"Sin", "[", "i", "]"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", 
                    RowBox[{"2", "Pi"}], ",", 
                    RowBox[{"Pi", "/", "6"}]}], "}"}]}], "]"}], ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
                   RowBox[{"Circle", "[", "]"}]}], "}"}], "]"}]}]}], "]"}]}]],
             "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5cc517c6-6a09-4505-982c-e142e391d917"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Graphics", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Hue", "[", 
                  RowBox[{"t", "/", "20"}], "]"}], ",", 
                 RowBox[{"Circle", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", "Pi", " ", 
                    RowBox[{"t", "/", "20"}]}], "]"}], ",", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"2", "Pi", " ", 
                    RowBox[{"t", "/", "20"}]}], "]"}]}], "}"}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "20"}], "}"}]}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "09129512-2af7-492d-aa02-05557fac4ba3"], "}"}]}], "}"}]}]}], 
      "}"}]},
    {
     TemplateBox[{"\"documentation example text\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleText\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleText\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell["\<\
Use lines, polygons, circles, etc. to build up a graphics image:\
\>", "ExampleText",ExpressionUUID->"4d25f0e2-8dd6-4f5e-82ef-23eb4808c5d1"], 
           "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Use plot functions to automatically create ",
            Cell[BoxData[
            "Graphics"], "InlineFormula",ExpressionUUID->
             "b4a3b901-f5af-4258-941e-4aba860f4bf1"],
            " from different types of data: "
           }], "ExampleText",ExpressionUUID->
            "5ce334c8-d9cd-4408-87b7-540033b20c3e"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[TextData[{
            
            "Graphics primitives are drawn in the order in which they are \
given in ",
            Cell[BoxData[
            "Graphics"], "InlineFormula",ExpressionUUID->
             "b16ac626-3110-4119-a21c-c8e349421440"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "4b52275d-f803-4bb1-8fe2-ac951572de35"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Polygons can fold over themselves:", "ExampleText",ExpressionUUID->
            "39ac30e7-f0a0-4211-ba8d-1be7ac385ac1"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Vertices can be shared by using ",
            Cell[BoxData[
             ButtonBox["GraphicsComplex",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "c5cd5922-d873-4c29-a7f0-1efb115cb192"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "02f76684-68ba-406a-b23b-884b8d9690df"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Inset an expression in a graphic:", "ExampleText",ExpressionUUID->
            "f1d66f16-1c85-4600-a270-5f5cde1b6fd4"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Directives can specify color and opacity of faces:", 
            "ExampleText",ExpressionUUID->
            "51d72b13-9e41-4b6c-9a4a-103a6d15a94f"], "}"}], ",", 
          RowBox[{"{", Cell["\<\
Colors, thickness, and dashing directives affect lines, arrows, and edges:\
\>", "ExampleText",ExpressionUUID->"aab8f907-a5ee-42c5-9c86-0c545e4c1d1a"], 
           "}"}], ",", 
          RowBox[{"{", Cell["\<\
Some primitives have special directives to specify various properties:\
\>", "ExampleText",ExpressionUUID->"5a9547d1-9ccc-45a0-b3ac-b8cd66ecdff3"], 
           "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Directives can be applied to individual objects using ",
            Cell[BoxData[
             ButtonBox["Style",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "5ad2844e-ac31-49bb-8943-c91b2a699eee"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "8508a887-9abf-4aff-bda3-b94468877d40"], "}"}], ",", 
          RowBox[{"{", Cell["\<\
Graphics directives remain in effect only until the end of the list that \
contains them:\
\>", "ExampleText",ExpressionUUID->"413baf9b-85f2-45a5-b0dd-7ff548b1f753"], 
           "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Use an ordinary coordinate system:", "ExampleText",ExpressionUUID->
            "e98ba00c-1b13-4036-9cc7-b33070fd4ab0"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify coordinates by fractions of the plot range:", 
            "ExampleText",ExpressionUUID->
            "67ace023-e18b-4167-b339-f27e86dcbd74"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify coordinates by fractions of the whole image:", 
            "ExampleText",ExpressionUUID->
            "6ea935e5-fe4b-4327-9871-a4102a53a1df"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Offset coordinates by printer's points:", "ExampleText",
            ExpressionUUID->"bc3f9d55-2c70-48ce-9834-1e848af568bd"], "}"}]}], 
         "}"}]}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[TextData[{
            "Specify the coordinates within ",
            Cell[BoxData[
             ButtonBox["Inset",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "09bf89d1-bf08-4b1d-9192-7e09e916d8d1"],
            " to be aligned with the center of the enclosing graphic:"
           }], "ExampleText",ExpressionUUID->
            "ffeed778-914d-46ca-a2c3-ed6923f9e5bb"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Use numerical values for ",
            Cell[BoxData[
             ButtonBox["AspectRatio",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "d4f9185a-b8a6-424d-9644-5b6af1488175"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "76f68227-721b-4c68-a968-3694df184e63"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Draw all the axes:", "ExampleText",ExpressionUUID->
            "356aae11-6985-444a-bcde-19769ca12a1e"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            StyleBox["Draw the ",
             Deletable->True],
            Cell[BoxData[
             FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
             "44d008c2-1180-4823-b78a-e0eca64575e6"],
            StyleBox[" ",
             Deletable->True],
            "axis but not the ",
            Cell[BoxData[
             FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
             "9670db42-7036-4fdd-9bd4-dab265059722"],
            " axis:"
           }], "ExampleText",ExpressionUUID->
            "43d4718e-f592-48d1-a9ca-9fc321399173"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Place a label for the ",
            Cell[BoxData[
             FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
             "33e9b007-be7b-4599-a3d2-5134d5ab85a5"],
            " axis:"
           }], "ExampleText",ExpressionUUID->
            "71a1dbed-440e-4539-b730-4204168ad880"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[StyleBox["Specify a label for each axis:",
            Deletable->True]], "ExampleText",ExpressionUUID->
            "1be30977-1e70-4f35-a336-f72afe5ed2c7"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Determine where the axes cross automatically",
            StyleBox[":",
             Deletable->True]
           }], "ExampleText",ExpressionUUID->
            "40312201-a658-488e-b8b0-bb3837ffbc4f"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify the axes' origin explicitly:", "ExampleText",
            ExpressionUUID->"cef9fdf1-6c40-4ce8-96a5-e46112f0c730"], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{Cell["\<\
Specify the overall axes style, including the ticks and the tick labels:\
\>", "ExampleText",ExpressionUUID->"0bf41a4d-aa2e-40fa-9dce-e0f90bf58b1f"], 
            ",", Cell[
            "Specify the style of each axis:", "ExampleText",ExpressionUUID->
             "c2299b35-b0f3-44a6-9f31-ff48405fd99c"]}], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify a background color:", "ExampleText",ExpressionUUID->
            "1c2facfb-17ed-4e7b-b9b2-66a30f45dba0"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Align the center of a graphic with the baseline of the text:", 
            "ExampleText",ExpressionUUID->
            "97f0e2a9-425f-4351-b726-363105a9ec03"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            
            "Specify the baseline of a graphic as a fraction of the height by \
using ",
            Cell[BoxData[
             ButtonBox["Scaled",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "52c14abf-de7b-44f5-a92c-f044f07d8b64"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "630cd3a8-46c4-4f71-b714-2dc4738fe02f"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Use the axis of a graphic as the baseline:", "ExampleText",
            ExpressionUUID->"bbb8153c-8766-4ba7-9ac9-106c0d1bf351"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Set the starting style:", "ExampleText",ExpressionUUID->
            "017786ce-ad8b-4900-a6e9-af9b301dd9bd"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Set multiple starting styles:", "ExampleText",ExpressionUUID->
            "38a89f27-2a84-4f66-a9ef-45ad75622a8f"], "}"}], ",", 
          RowBox[{"{", Cell["\<\
Allow the individual graphics objects to be selectable by a single click:\
\>", "ExampleText",ExpressionUUID->"341532d6-aff2-4afb-bc05-181544a9fa00"], 
           "}"}], ",", 
          RowBox[{"{", Cell["\<\
No individual object is selectable; the whole graphic appears as one object:\
\>", "ExampleText",ExpressionUUID->"4e362c6e-dc6d-4c47-9ce1-66080b1c8199"], 
           "}"}], ",", 
          RowBox[{"{", Cell["\<\
The first click selects the whole graphic, and subsequent ones select \
individual objects:\
\>", "ExampleText",ExpressionUUID->"86702e40-20df-41c9-9c9a-89cd04fa7e0a"], 
           "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Draw a disk above the graphic, including the axes:", 
            "ExampleText",ExpressionUUID->
            "266f6a35-d025-45da-89e3-bdf76e7bb4df"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "By default, expressions are displayed using ",
            Cell[BoxData[
             ButtonBox["TraditionalForm",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "0de8fa86-c8cd-4c0b-8051-5ecffaad7131"],
            " in graphics:"
           }], "ExampleText",ExpressionUUID->
            "c4acf697-97aa-4ba3-b7b9-e4c3b97ec83f"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Display expressions using ",
            Cell[BoxData[
             ButtonBox["StandardForm",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "15c79f95-fce5-4f99-9957-9395a0cb6998"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "7a67c470-7ad1-4b36-8745-3d0523f7a91e"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Labels are also affected by ",
            Cell[BoxData[
             ButtonBox["FormatType",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "e96071ab-3095-4c4c-98ea-ca9e153662f7"],
            " setting:"
           }], "ExampleText",ExpressionUUID->
            "258a3850-3cd3-453e-918d-b07ce34f1777"], "}"}], ",", 
          RowBox[{
          "{", Cell[TextData[StyleBox["Draw a frame around the whole graphic:",
            Deletable->True]], "ExampleText",ExpressionUUID->
            "3827bc6d-10d9-464d-980f-58255088a1e3"], "}"}], ",", 
          RowBox[{
          "{", Cell[TextData[StyleBox[
           "Draw a frame on the left and the right edges:",
            Deletable->True]], "ExampleText",ExpressionUUID->
            "328fdecd-941a-458a-afc9-23668b3a4584"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           Cell[TextData[StyleBox[
            "Specify frame labels for the bottom and the left edges:",
             Deletable->True]], "ExampleText",ExpressionUUID->
             "642c3f0d-0d8e-4374-9898-735361646407"], ",", Cell[
            "Specify labels for each edge:", "ExampleText",ExpressionUUID->
             "aa19d895-d108-4f52-812e-722a61e73f32"]}], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify the overall frame style:", "ExampleText",ExpressionUUID->
            "012474f9-d056-4e75-a6f7-880fe3bb70fe"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify the style of each frame edge:", "ExampleText",
            ExpressionUUID->"d473b559-f5d1-4ff9-8862-582451d72806"], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
           Cell["Put a frame, but no ticks:", "ExampleText",ExpressionUUID->
             "8e633ebd-c194-44c6-97d1-6305631f973a"], ",", Cell[
            "Tick mark labels on the bottom and the left frame edges:", 
             "ExampleText",ExpressionUUID->
             "41f96544-0e82-4841-a262-2ecaee39db3c"]}], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Frame ticks on the bottom and the right edges:", "ExampleText",
            ExpressionUUID->"ac261f1b-f63b-4256-ba22-e833d0bfc085"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Specify frame tick and frame tick label style:", "ExampleText",
            ExpressionUUID->"f13550b1-d578-46d5-b95b-c70252a6df84"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Specify frame tick style for each edge:", "ExampleText",
            ExpressionUUID->"a8e592b3-6364-4865-9e06-299acd9ff121"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Put grids across a 2D graphic:", "ExampleText",ExpressionUUID->
            "ed45cdc7-1914-43e1-b9d1-859c182e07c9"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Draw grid lines at specific positions:", "ExampleText",
            ExpressionUUID->"06807c79-800b-4cd4-9ad1-11bf9acefea5"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Specify the style of each grid:", "ExampleText",ExpressionUUID->
            "bcc0dab2-a14b-480e-bf72-23c0503067fa"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify the overall grid style:", "ExampleText",ExpressionUUID->
            "9d4e3afc-8d72-455e-bc9c-be16d3a033c2"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Allow no margins outside of ",
            Cell[BoxData[
             ButtonBox["ImageSize",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "c0ef7486-491d-4c96-b424-71301b9dcaa0"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "358db185-926c-4e2e-9fd4-3abffd32c278"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Have 20-point margins on all sides:", "ExampleText",
            ExpressionUUID->"a9787bbc-d6c5-4955-aff5-40fc59593a1f"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Leave different margins on each side:", "ExampleText",
            ExpressionUUID->"71911a17-3c7c-43d1-8deb-167be881f796"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Leave no padding outside of the plot range:", "ExampleText",
            ExpressionUUID->"886fe35b-d5c2-46f1-97eb-242412df3257"], "}"}], 
          ",", 
          RowBox[{"{", Cell["\<\
Leave enough padding for all objects and labels that are present:\
\>", "ExampleText",ExpressionUUID->"01fad460-5c22-45b0-bd81-69be0ad0360d"], 
           "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify the same padding for all sides in printer's points:", 
            "ExampleText",ExpressionUUID->
            "db32fab0-7115-462b-a16c-b5f48722453a"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify different padding on each side:", "ExampleText",
            ExpressionUUID->"7bac7ae8-c9a8-449b-92cf-58e3ab41de23"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Use predefined symbolic sizes:", "ExampleText",ExpressionUUID->
            "94d71d75-cdad-4950-a5b8-7b4e4265b2ef"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Use an explicit image width:", "ExampleText",ExpressionUUID->
            "575ffd13-7caf-43eb-8a92-31a67657752d"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Use an explicit image width and height:", "ExampleText",
            ExpressionUUID->"0b5a6125-6e59-4700-9aca-f8df9288d207"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Specify the overall style of all the label-like elements:", 
            "ExampleText",ExpressionUUID->
            "22cc7b78-73c2-45b5-a0fa-ade44d4dafec"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           Cell["Force axes to be behind drawing primitives:", "ExampleText",
             ExpressionUUID->"572d55d0-bde1-485e-b1ed-0cf72988c1a5"], ",", 
            Cell["By default, frames draw in front of graphics primitives:", 
             "ExampleText",ExpressionUUID->
             "9a330e2b-40a9-4fcc-a966-48f34efdfc05"], ",", Cell[
            "Force the frame to draw behind graphics primitives:", 
             "ExampleText",ExpressionUUID->
             "2d3205c9-a7bf-4244-8ba2-1ae40faa407d"], ",", Cell["\<\
Force grid lines to be rendered in front of graphics primitives:\
\>", "ExampleText",ExpressionUUID->"c4105402-16f0-4163-82e5-4ee4eef7a746"], 
            ",", Cell["\<\
By default, polygon meshes double-paint their edges for efficiency reasons:\
\>", "ExampleText",ExpressionUUID->"0ce836b0-601a-4be0-a83c-db2f3950a7fe"], 
            ",", Cell[TextData[{
             "The behavior can be turned off using the ",
             Cell[
             BoxData["\<\"TransparentPolygonMesh\"\>"], "InlineFormula",
              ExpressionUUID->"616e15f6-749e-4ed5-9904-028a116cbd4e"],
             " method option:"
            }], "ExampleText",ExpressionUUID->
             "c17bebef-89e2-4755-bbeb-060c8585a2e0"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Display a label on the top of the graphic in ",
            Cell[BoxData[
             ButtonBox["TraditionalForm",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "918f0abb-c5c9-444e-ad2f-b044b9f7f359"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "6a36a79e-0d12-452f-9c7d-236dc5ac239b"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Use ",
            Cell[BoxData[
             ButtonBox["Style",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "5a31862c-7bfe-49c5-8041-cc85a88d70e0"],
            " and other typesetting functions to modify how the label appears:"
           }], "ExampleText",ExpressionUUID->
            "1569625b-2e0a-4d8d-bae1-4253729b7a1f"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[StyleBox["Display all objects:",
            Deletable->True]], "ExampleText",ExpressionUUID->
            "c247a912-3c8a-4b65-8565-5b50502cd9be"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[TextData[{
             "Explicitly choose ",
             Cell[BoxData[
              FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
              "d14232cd-aee8-4c92-b77d-31c540116eb2"],
             " and ",
             Cell[BoxData[
              FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
              "81374c02-9251-4361-a1f9-496e9074ceee"],
             " ranges:"
            }], "ExampleText",ExpressionUUID->
             "c476d2ed-469c-4696-b26a-a6b0f0445655"], ",", Cell[TextData[{
             "Force clipping at the ",
             Cell[BoxData[
              ButtonBox["PlotRange",
               BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
              "0418f63b-c107-4011-81fa-117ee5f77add"],
             ": "
            }], "ExampleText",ExpressionUUID->
             "6896204a-05e9-4354-b36c-b4b0615b66f9"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
             RowBox[{
              ButtonBox["PlotRange",
               BaseStyle->"Link"], "->", 
              StyleBox["s", "TI"]}]], "InlineFormula",ExpressionUUID->
             "995aebfc-34db-4d69-9d01-a222ecc86c43"],
            " is equivalent to ",
            Cell[BoxData[
             RowBox[{
              ButtonBox["PlotRange",
               BaseStyle->"Link"], "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", 
                   StyleBox["s", "TI"]}], ",", 
                  StyleBox["s", "TI"]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", 
                   StyleBox["s", "TI"]}], ",", 
                  StyleBox["s", "TI"]}], "}"}]}], "}"}]}]], "InlineFormula",
             ExpressionUUID->"1ab75921-953f-4dcf-9677-bfce65fcc4e6"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "559faa9d-0dee-4ca4-8e47-4c837039f6da"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Allow graphics objects to spread beyond ",
            Cell[BoxData[
             ButtonBox["PlotRange",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "f7ea2017-d6b9-476f-a74c-e5e9d3a518a5"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "f771ad86-827e-4447-b15d-ee4d7efd9c70"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Clip all graphics objects at ",
            Cell[BoxData[
             ButtonBox["PlotRange",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "8b38a2e8-9d8c-4850-9326-5e05465e5a9b"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "d67280ad-78d6-488c-96d5-6cf229988c1a"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Include ",
            Cell[BoxData[
             FormBox["1", TraditionalForm]], "InlineMath",ExpressionUUID->
             "12724ff2-5446-421f-bb52-70719e1a6c78"],
            " coordinate unit of padding on all sides:"
           }], "ExampleText",ExpressionUUID->
            "43c2f73c-c883-4a4e-abcf-cf74dcc4d328"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Include padding using ",
            Cell[BoxData[
             ButtonBox["Scaled",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "f8c67f19-2674-4b72-bc6c-8e3c2e957ec0"],
            " coordinates: "
           }], "ExampleText",ExpressionUUID->
            "65e6f619-272c-45e7-812d-ef344251cb61"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify different padding on each side:", "ExampleText",
            ExpressionUUID->"e0a4be22-0f3f-457c-a2fc-d329a1c0c4c8"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "The contents of a graphic use the whole region:", "ExampleText",
            ExpressionUUID->"fa64d4d3-4229-4cfa-bf87-2e5475831190"], "}"}], 
          ",", 
          RowBox[{"{", Cell["\<\
Limit the contents of the graphic to the middle half of the region in each \
direction:\
\>", "ExampleText",ExpressionUUID->"47f08100-8e92-4d25-b5b1-1f0b010089b0"], 
           "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
             ButtonBox["ImagePadding",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "4d390e32-f738-46c1-a52f-d2a8ae217580"],
            " can also be used to add padding around a graphic:"
           }], "ExampleText",ExpressionUUID->
            "1f74e5db-eca8-4b46-9f19-671c23638515"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           Cell["Define a simple graphic to use as a background:", 
             "ExampleText",ExpressionUUID->
             "f46effd9-a317-4aa7-a97d-6bab31d4980d"], ",", Cell[
            "Use it in multiple graphics:", "ExampleText",ExpressionUUID->
             "2b7894f7-adf5-4080-8d43-31757c426e09"]}], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify that vertical frame labels should be rotated:", 
            "ExampleText",ExpressionUUID->
            "4893376e-3fce-47a7-8d43-79aa888ae4c8"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Specify that vertical frame labels should not be rotated:", 
            "ExampleText",ExpressionUUID->
            "5905fde2-5423-456a-a92b-8da63a19e9a9"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Draw the axes but no tick marks:", "ExampleText",ExpressionUUID->
            "34b6635c-4b11-4166-b1f5-bde01c3bbf9c"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Place tick marks automatically:", "ExampleText",ExpressionUUID->
            "bfcfc628-40a6-459e-bd1f-f17137a06529"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Draw tick marks at the specific positions:", "ExampleText",
            ExpressionUUID->"0d42d625-af81-4b22-86ac-23a8fc0e69a6"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Specify the styles of the ticks and tick labels:", "ExampleText",
            ExpressionUUID->"515bb4bd-bafe-446f-9e8d-c1af2a003056"], "}"}], 
          ",", 
          RowBox[{"{", Cell[TextData[{
            "Specify the styles of ",
            Cell[BoxData[
             FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
             "e3f2c114-f5b2-4736-bb7c-f1691f183304"],
            " and ",
            Cell[BoxData[
             FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
             "c1ebd770-0912-4174-96d0-421c9a1d3241"],
            " axis ticks separately:"
           }], "ExampleText",ExpressionUUID->
            "5cbcdbe5-45e7-465e-894d-ba3b8a8ca1c6"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "{", Cell[
          "Draw a complete graph with 9 vertices:", "ExampleText",
           ExpressionUUID->"75ec0192-c32d-4022-bf43-ee04141f199f"], "}"}], 
         "}"}]}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{Cell[TextData[{
             "The ",
             Cell[BoxData[
              ButtonBox["StandardForm",
               BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
              "2a4fc85a-1fd7-4cd8-84cf-de649e33e1dd"],
             " of ",
             Cell[BoxData[
             "Graphics"], "InlineFormula",ExpressionUUID->
              "4076f4df-c401-40ab-b724-87a0ae97df5f"],
             " is its rendered form:"
            }], "ExampleText",ExpressionUUID->
             "6f1303a4-7e0e-4f36-a571-59e7d73990b2"], ",", Cell[TextData[{
             "The ",
             Cell[BoxData[
              ButtonBox["InputForm",
               BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
              "971e6eff-4680-40eb-b394-23c549217c4b"],
             " is the textual expression form:"
            }], "ExampleText",ExpressionUUID->
             "9f7f61e6-17a1-4782-ad28-8f975b440180"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Graphics"], "InlineFormula",ExpressionUUID->
             "fc9c8238-b64a-4cf8-b96d-8132fe49903e"],
            " can be used as input to functions: "
           }], "ExampleText",ExpressionUUID->
            "34b949e1-d108-4275-ba7f-e56dfbc0d52c"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Two-dimensional plot functions return ",
            Cell[BoxData[
            "Graphics"], "InlineFormula",ExpressionUUID->
             "806d2358-7b70-4005-80bc-cc88a0692d17"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "ecc1f66c-d61c-4463-88b6-473be1c8f329"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Several integrated data sources return ",
            Cell[BoxData[
            "Graphics"], "InlineFormula",ExpressionUUID->
             "39f6f788-7ec5-4ccd-b845-ab45079334bb"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "cad2222f-5f3a-4ea7-b346-f81a2993ce76"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Many ",
            Cell[BoxData[
             ButtonBox["Import",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "5201d550-4a32-4ae2-b867-0d495eabd8c9"],
            " and ",
            Cell[BoxData[
             ButtonBox["Export",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "7ee464ee-a045-4517-8ebf-86304e9f3885"],
            " formats support ",
            Cell[BoxData[
            "Graphics"], "InlineFormula",ExpressionUUID->
             "4961aace-a103-4af0-8f99-3bff173a1b98"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "81fcf76a-71ae-41b2-8f62-5d44cad3f8c1"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "{", Cell[
           "Display an analog clock with current system time:", "ExampleText",
            ExpressionUUID->"b8af0518-01e3-4868-a62f-b37fdb6eccaf"], "}"}], 
          ",", 
          RowBox[{
          "{", Cell[
           "Digital dahlias:", "ExampleText",ExpressionUUID->
            "da92f757-37f1-40d6-b511-feaca1028399"], "}"}]}], "}"}]}]}], 
      "}"}]},
    {
     TemplateBox[{"\"entity classes\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EntityClasses\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EntityClasses\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"eponymous people\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"equal\[Hyphen]precedence symbols\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"EqualPrecedenceSymbols\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EqualPrecedenceSymbols\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]},
    {
     TemplateBox[{"\"external links\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ExternalLinks\""}], 
         "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"ExternalLinks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"\<\"Fast Introduction for Programmers: Graphics\"\>", 
       "\[Rule]", 
       TemplateBox[{
        "\"http://www.wolfram.com/language/fast-introduction-for-programmers/\
graphics/\"", 
         "http://www.wolfram.com/language/fast-introduction-for-programmers/\
graphics/"},
        "HyperlinkURL"]}], "}"}]},
    {
     TemplateBox[{"\"frequencies of usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Frequencies\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Frequencies\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"All\"\>", "\[Rule]", "0.0005742493178269993`"}], ",", 
       RowBox[{"\<\"StackExchange\"\>", "\[Rule]", "0.0020567794464774513`"}],
        ",", 
       RowBox[{"\<\"TypicalProductionCode\"\>", "\[Rule]", 
        "0.0014116268714476354`"}], ",", 
       RowBox[{"\<\"WolframAlphaCodebase\"\>", "\[Rule]", 
        "0.0001621456593571415`"}], ",", 
       RowBox[{"\<\"WolframDemonstrations\"\>", "\[Rule]", 
        "0.002665866070643428`"}], ",", 
       RowBox[{"\<\"WolframDocumentation\"\>", "\[Rule]", 
        "0.0033194442138813726`"}]}], "}"}]},
    {
     TemplateBox[{"\"full version introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"FullVersionIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionIntroduced\\\"]\""},
      "EntityProperty"], "\<\"1\"\>"},
    {
     TemplateBox[{"\"full version last modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"FullVersionLastModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionLastModified\\\"]\""},
      "EntityProperty"], "\<\"10\"\>"},
    {
     TemplateBox[{"\"full versions modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"FullVersionsModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionsModified\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"6\"\>", ",", "\<\"7\"\>", 
       ",", "\<\"8\"\>", ",", "\<\"10\"\>"}], "}"}]},
    {
     TemplateBox[{"\"functionality areas\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}],
          "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "\<\"BasicSymbols\"\>", "}"}]},
    {
     TemplateBox[{"\"symbol background\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionEssay\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionEssay\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"keyboard shortcuts\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KeyboardShortcuts\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"KeyboardShortcuts\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"link trails\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LinkTrails\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"LinkTrails\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeographicData\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/3DPrinting\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/3DPrinting\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Calculus\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Calculus\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/EarthSciencesDataAndComputation\"\>", 
         ",", "\<\"guide/GeographicData\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/DateAndTime\"\>",
          ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/DiscreteCalculus\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/DiscreteCalculus\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/EarthSciencesDataAndComputation\"\>", 
         ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/CloudFunctionsAndDeployment\"\>", 
         ",", "\<\"guide/CloudExecutionMetadata\"\>", 
         ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/CreatingAnInstantAPI\"\>", 
         ",", "\<\"guide/CloudExecutionMetadata\"\>", 
         ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/CreatingFormsAndApps\"\>", 
         ",", "\<\"guide/CloudExecutionMetadata\"\>", 
         ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/DiscreteMathematics\"\>", 
         ",", "\<\"guide/DiscreteCalculus\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/DiscreteMathematics\"\>", 
         ",", "\<\"guide/DiscreteCalculus\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/Finance\"\>", 
         ",", "\<\"guide/DateAndTime\"\>", ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/GeographicData\"\>", 
         ",", "\<\"guide/EarthSciencesDataAndComputation\"\>", 
         ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/InternetAndWebRelatedData\"\>", 
         ",", "\<\"guide/CloudExecutionMetadata\"\>", 
         ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/MeshRegions\"\>",
          ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/MeshRegions\"\>",
          ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PeopleAndHistory\"\>", 
         ",", "\<\"guide/DateAndTime\"\>", ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PhysicsAndChemistryDataAndComputation\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PhysicsAndChemistryDataAndComputation\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PlaneGeometry\"\>", 
         ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", ",", "\<\"guide/Calculus\"\>",
          ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polygons\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/SolidGeometry\"\>", 
         ",", "\<\"guide/GeometricSolvers\"\>", 
         ",", "\<\"guide/PDEModelingAndAnalysis\"\>", 
         ",", "\<\"guide/GeometricComputation\"\>", 
         ",", "\<\"guide/Polyhedra\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", ",", "\<\"guide/TimeSeries\"\>", 
         ",", "\<\"guide/DateAndTime\"\>", ",", "\<\"guide/Geodesy\"\>", 
         ",", "\<\"guide/LocationsPathsAndRouting\"\>", 
         ",", "\<\"guide/MapsAndCartography\"\>", 
         ",", "\<\"guide/SymbolicGraphicsLanguage\"\>", 
         ",", "\<\"ref/Graphics\"\>"}], "}"}]}], "}"}]},
    {
     TemplateBox[{"\"memberships\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Memberships\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Memberships\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"name\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Name\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Name\\\"]\""},
      "EntityProperty"], "\<\"Graphics\"\>"},
    {
     TemplateBox[{"\"option names\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"OptionNames\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"OptionNames\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"AlignmentPoint\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AlignmentPoint\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AlignmentPoint\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"AspectRatio\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AspectRatio\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AspectRatio\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Axes\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Axes\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Axes\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"AxesLabel\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AxesLabel\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AxesLabel\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"AxesOrigin\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AxesOrigin\""}], 
           "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AxesOrigin\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"AxesStyle\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AxesStyle\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AxesStyle\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Background\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Background\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Background\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"BaselinePosition\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BaselinePosition\""}],
            "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BaselinePosition\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"BaseStyle\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BaseStyle\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BaseStyle\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", "\<\"ColorOutput\"\>", ",", 
       TemplateBox[{"\"ContentSelectable\"", 
         RowBox[{"Entity", "[", 
           
           RowBox[{"\"WolframLanguageSymbol\"", ",", 
             "\"ContentSelectable\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ContentSelectable\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"CoordinatesToolOptions\"", 
         RowBox[{"Entity", "[", 
           
           RowBox[{"\"WolframLanguageSymbol\"", ",", 
             "\"CoordinatesToolOptions\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CoordinatesToolOptions\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"DisplayFunction\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DisplayFunction\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DisplayFunction\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Epilog\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Epilog\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Epilog\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"FormatType\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FormatType\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FormatType\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Frame\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Frame\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Frame\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"FrameLabel\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrameLabel\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FrameLabel\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"FrameStyle\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrameStyle\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FrameStyle\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"FrameTicks\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrameTicks\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FrameTicks\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"FrameTicksStyle\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrameTicksStyle\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FrameTicksStyle\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"GridLines\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GridLines\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GridLines\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"GridLinesStyle\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GridLinesStyle\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GridLinesStyle\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ImageMargins\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ImageMargins\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ImageMargins\\\
\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ImagePadding\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ImagePadding\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ImagePadding\\\
\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ImageSize\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ImageSize\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ImageSize\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", "\<\"ImageSizeRaw\"\>", ",", 
       TemplateBox[{"\"LabelStyle\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LabelStyle\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LabelStyle\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Method\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Method\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Method\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"PlotLabel\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlotLabel\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PlotLabel\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"PlotRange\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlotRange\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PlotRange\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"PlotRangeClipping\"", 
         RowBox[{"Entity", "[", 
           
           RowBox[{"\"WolframLanguageSymbol\"", ",", 
             "\"PlotRangeClipping\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PlotRangeClipping\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"PlotRangePadding\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlotRangePadding\""}],
            "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PlotRangePadding\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"PlotRegion\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlotRegion\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PlotRegion\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"PreserveImageOptions\"", 
         RowBox[{"Entity", "[", 
           
           RowBox[{"\"WolframLanguageSymbol\"", ",", 
             "\"PreserveImageOptions\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PreserveImageOptions\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Prolog\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Prolog\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Prolog\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"RotateLabel\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotateLabel\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RotateLabel\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Ticks\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ticks\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Ticks\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"TicksStyle\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TicksStyle\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TicksStyle\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"options\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Options\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Options\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"AlignmentPoint\"\>", "\[Rule]", "\<\"Center\"\>"}], ",", 
       RowBox[{"\<\"AspectRatio\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"Axes\"\>", "\[Rule]", "\<\"False\"\>"}], ",", 
       RowBox[{"\<\"AxesLabel\"\>", "\[Rule]", "\<\"None\"\>"}], ",", 
       RowBox[{"\<\"AxesOrigin\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"AxesStyle\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"Background\"\>", "\[Rule]", "\<\"None\"\>"}], ",", 
       RowBox[{"\<\"BaselinePosition\"\>", "\[Rule]", "\<\"Automatic\"\>"}], 
       ",", 
       RowBox[{"\<\"BaseStyle\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"ColorOutput\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"ContentSelectable\"\>", "\[Rule]", "\<\"Automatic\"\>"}], 
       ",", 
       RowBox[{"\<\"CoordinatesToolOptions\"\>", 
        "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"DisplayFunction\"\>", 
        "\[RuleDelayed]", "\<\"$DisplayFunction\"\>"}], ",", 
       RowBox[{"\<\"Epilog\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"FormatType\"\>", 
        "\[RuleDelayed]", "\<\"TraditionalForm\"\>"}], ",", 
       RowBox[{"\<\"Frame\"\>", "\[Rule]", "\<\"False\"\>"}], ",", 
       RowBox[{"\<\"FrameLabel\"\>", "\[Rule]", "\<\"None\"\>"}], ",", 
       RowBox[{"\<\"FrameStyle\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"FrameTicks\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"FrameTicksStyle\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"GridLines\"\>", "\[Rule]", "\<\"None\"\>"}], ",", 
       RowBox[{"\<\"GridLinesStyle\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"ImageMargins\"\>", "\[Rule]", "\<\"0.\"\>"}], ",", 
       RowBox[{"\<\"ImagePadding\"\>", "\[Rule]", "\<\"All\"\>"}], ",", 
       RowBox[{"\<\"ImageSize\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"ImageSizeRaw\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"LabelStyle\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"Method\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"PlotLabel\"\>", "\[Rule]", "\<\"None\"\>"}], ",", 
       RowBox[{"\<\"PlotRange\"\>", "\[Rule]", "\<\"All\"\>"}], ",", 
       RowBox[{"\<\"PlotRangeClipping\"\>", "\[Rule]", "\<\"False\"\>"}], ",", 
       RowBox[{"\<\"PlotRangePadding\"\>", "\[Rule]", "\<\"Automatic\"\>"}], 
       ",", 
       RowBox[{"\<\"PlotRegion\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"PreserveImageOptions\"\>", 
        "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"Prolog\"\>", "\[Rule]", "\<\"{}\"\>"}], ",", 
       RowBox[{"\<\"RotateLabel\"\>", "\[Rule]", "\<\"True\"\>"}], ",", 
       RowBox[{"\<\"Ticks\"\>", "\[Rule]", "\<\"Automatic\"\>"}], ",", 
       RowBox[{"\<\"TicksStyle\"\>", "\[Rule]", "\<\"{}\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"plaintext usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlaintextUsage\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PlaintextUsage\\\"]\""},
      "EntityProperty"], "\<\"Graphics[primitives, options] represents a \
two-dimensional graphical image.\"\>"},
    {
     TemplateBox[{"\"precedence ranks\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PrecedenceRanks\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PrecedenceRanks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]},
    {
     TemplateBox[{"\"ranks of usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ranks\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Ranks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"All\"\>", "\[Rule]", "72"}], ",", 
       RowBox[{"\<\"StackExchange\"\>", "\[Rule]", "47"}], ",", 
       RowBox[{"\<\"TypicalProductionCode\"\>", "\[Rule]", "66"}], ",", 
       RowBox[{"\<\"WolframAlphaCodebase\"\>", "\[Rule]", "111"}], ",", 
       RowBox[{"\<\"WolframDemonstrations\"\>", "\[Rule]", "38"}], ",", 
       RowBox[{"\<\"WolframDocumentation\"\>", "\[Rule]", "24"}]}], "}"}]},
    {
     TemplateBox[{"\"related entities\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedEntities\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedEntities\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"related guide pages\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedGuidePages\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedGuidePages\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Plane Geometry\"", "paclet:guide/PlaneGeometry"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Symbolic Graphics Language\"", 
         "paclet:guide/SymbolicGraphicsLanguage"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{"\"Polygons\"", "paclet:guide/Polygons"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{"\"Polygons\"", "paclet:guide/PolygonsNew"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Polygons & Polyhedra\"", "paclet:guide/PolygonsAndPolyhedra"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{"\"Popular Functions\"", "paclet:guide/PopularFunctions"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Graphics & Visualization\"", 
         "paclet:guide/GraphicsAndVisualization"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"WDF (Wolfram Data Framework)\"", 
         "paclet:guide/WDFWolframDataFramework"},
        "HyperlinkPaclet"]}], "}"}]},
    {
     TemplateBox[{"\"related symbols\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedSymbols\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedSymbols\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Plot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Plot\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Plot\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ListPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ListPlot\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ListPlot\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ListLinePlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ListLinePlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ListLinePlot\\\
\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ParametricPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ParametricPlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ParametricPlot\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"DensityPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DensityPlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DensityPlot\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ArrayPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ArrayPlot\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ArrayPlot\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"RegionPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RegionPlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RegionPlot\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ContourPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ContourPlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ContourPlot\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Show\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Show\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Show\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Graphics3D\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Graphics3D\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Graphics3D\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Image\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Image\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Image\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Import\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Import\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Import\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"GeometricScene\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GeometricScene\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GeometricScene\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Sound\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Sound\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Sound\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"relationship community graph\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"RelationshipCommunityGraph\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipCommunityGraph\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[{{
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{4.77112553242641, -1.2138365572824819`}, {
           4.935632824429033, -2.4438380400079502`}, {
           5.3227398593257895`, -2.665039609258323}, {
           5.6020030639406215`, -2.665039609258323}, {
           5.771496716818596, -1.8753407009318541`}, {
           5.771496716818596, -1.5960774963170226`}, {
           5.050388737041242, -0.9345733526676503}, {
           4.77112553242641, -0.9345733526676503}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{3.7666913105310336`, -3.3544110276702006`}, {
           3.7666913105310336`, -3.0751478230553686`}, {
           3.5930759169504953`, -2.6961824898685434`}, {
           3.1071992398074766`, -2.499045888335369}, {
           2.8279360351926446`, -2.499045888335369}, {
           2.5751201929684817`, -2.9450397774223176`}, {
           2.5751201929684817`, -3.2243029820371496`}, {
           3.447701821155906, -3.5272719171868268`}, {
           3.726965025770738, -3.5272719171868268`}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{1.3548486692748816`, -2.2099651847552444`}, {
           1.3548486692748816`, -1.9307019801404126`}, {
           1.3333843545031465`, -1.4244388963124726`}, {
           1.0146370811326817`, -1.0586019940582585`}, {
           0.7353738765178501, -1.0586019940582585`}, {
           0.20728168343837633`, -2.311392013603507}, {
           0.20728168343837633`, -2.590655218218339}, {
           0.9000753173663385, -2.632966512919845}, {
           1.17933852198117, -2.632966512919845}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{3.172621315483227, -0.8024386438702418}, {
           3.172621315483227, -0.5231754392554102}, {
           3.028301593198642, -0.20728168343837589`}, {
           2.74903838858381, -0.20728168343837589`}, {
           2.673665009931051, -0.6137526174728845}, {
           2.673665009931051, -0.893015822087716}, {
           2.952928214545883, -0.893015822087716}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{0.2072816834383761, -4.221098488678411}, {
           0.4865448880532078, -4.221098488678411}, {
           0.4865448880532078, -3.941835284063579}, {
           0.2072816834383761, -3.941835284063579}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{3.1966708835668625`, -4.221098488678411}, {
           3.4759340881816945`, -4.221098488678411}, {
           3.4759340881816945`, -3.941835284063579}, {
           3.1966708835668625`, -3.941835284063579}}, SplineClosed -> 
           True]]}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         StyleBox[{
           LineBox[{{3.148246241799897, -2.879580762497801}, {
            3.4534443146430793`, -2.8358140921759594`}}], 
           LineBox[{{3.148246241799897, -2.879580762497801}, {
            2.9675676375000606`, -2.638677490642785}}], 
           LineBox[{{4.910757134733826, -1.074204954975066}, {
            5.116196097071367, -1.514985152151984}}], 
           BezierCurveBox[{{4.910757134733826, -1.074204954975066}, {
            4.441315279344322, -0.971355476622006}, {
            3.9718734239548183`, -0.868505998268946}, {
            3.502431568565315, -0.765656519915886}, {
            3.032989713175811, -0.662807041562826}},
            SplineDegree->2], 
           LineBox[{{5.07588443014875, -1.8911925569161545`}, {
            5.116196097071367, -1.514985152151984}}], 
           LineBox[{{5.07588443014875, -1.8911925569161545`}, {
            5.63186511451118, -1.7357090986244383`}}], 
           LineBox[{{5.07588443014875, -1.8911925569161545`}, {
            5.075264426736449, -2.3042064377005342`}}], 
           BezierCurveBox[{{5.07588443014875, -1.8911925569161545`}, {
            4.777898584025391, -2.4351407919945096`}, {
            4.351290395211314, -2.6300125834664874`}, {
            3.924682206397237, -2.824884374938465}, {
            3.4534443146430793`, -2.8358140921759594`}},
            SplineDegree->2], 
           LineBox[{{5.07588443014875, -1.8911925569161545`}, {
            5.327194013451939, -2.024758457342413}}], 
           LineBox[{{5.116196097071367, -1.514985152151984}, {
            5.327194013451939, -2.024758457342413}}], 
           LineBox[{{1.2152170669674658`, -2.0703335824478284`}, {
            1.1937527521957307`, -1.5640704986198883`}}], 
           LineBox[{{1.2152170669674658`, -2.0703335824478284`}, {
            0.7504432716821272, -2.1925876289645228`}}], 
           BezierCurveBox[{{1.2152170669674658`, -2.0703335824478284`}, {
            1.6533047096006146`, -2.2124195594965674`}, {
            2.091392352233763, -2.3545055365453065`}, {
            2.5294799948669118`, -2.496591513594046}, {
            2.9675676375000606`, -2.638677490642785}},
            SplineDegree->2], 
           LineBox[{{1.2152170669674658`, -2.0703335824478284`}, {
            1.0397069196737543`, -2.493334910612429}}], 
           LineBox[{{3.032989713175811, -0.662807041562826}, {
            2.888669990891226, -0.3469132857457917}}], 
           BezierCurveBox[{{3.032989713175811, -0.662807041562826}, {
            2.573180472930791, -0.8881229058270916}, {
            2.113371232685771, -1.1134387700913573`}, {
            1.6535619924407507`, -1.3387546343556227`}, {
            1.1937527521957307`, -1.5640704986198883`}},
            SplineDegree->2], 
           LineBox[{{3.032989713175811, -0.662807041562826}, {
            2.813296612238467, -0.7533842197803002}}], 
           LineBox[{{2.888669990891226, -0.3469132857457917}, {
            2.813296612238467, -0.7533842197803002}}], 
           LineBox[{{0.34691328574579217`, -2.451023615910923}, {
            0.7504432716821272, -2.1925876289645228`}}], 
           LineBox[{{1.1937527521957307`, -1.5640704986198883`}, {
            0.8750054788252659, -1.1982335963656743`}}], 
           LineBox[{{3.6270597082236176`, -3.2147794253627846`}, {
            3.587333423463322, -3.3876403148794108`}}], 
           LineBox[{{3.6270597082236176`, -3.2147794253627846`}, {
            3.4534443146430793`, -2.8358140921759594`}}], 
           BezierCurveBox[{{3.587333423463322, -3.3876403148794108`}, {
            3.924682206397237, -2.824884374938465}, {
            4.351290395211314, -2.6300125834664874`}, {
            4.777898584025391, -2.4351407919945096`}, {
            5.4623714616332055`, -2.525408006950907}},
            SplineDegree->2], 
           LineBox[{{3.587333423463322, -3.3876403148794108`}, {
            3.4534443146430793`, -2.8358140921759594`}}], 
           LineBox[{{5.4623714616332055`, -2.525408006950907}, {
            5.327194013451939, -2.024758457342413}}], 
           LineBox[{{2.7147517952758977`, -3.0846713797297336`}, {
            2.9675676375000606`, -2.638677490642785}}], 
           BezierCurveBox[{{5.075264426736449, -2.3042064377005342`}, {
            4.777898584025391, -2.4351407919945096`}, {
            4.351290395211314, -2.6300125834664874`}, {
            3.924682206397237, -2.824884374938465}, {
            3.4534443146430793`, -2.8358140921759594`}},
            SplineDegree->2], 
           LineBox[{{5.075264426736449, -2.3042064377005342`}, {
            5.327194013451939, -2.024758457342413}}], 
           LineBox[{{3.4534443146430793`, -2.8358140921759594`}, {
            2.9675676375000606`, -2.638677490642785}}], 
           BezierCurveBox[{{2.813296612238467, -0.7533842197803002}, {
            2.851864368553865, -1.2247075374959215`}, {
            2.890432124869264, -1.6960308552115426`}, {
            2.9289998811846623`, -2.1673541729271637`}, {
            2.9675676375000606`, -2.638677490642785}},
            SplineDegree->2]},
          ImageSizeMultipliers->1]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         StyleBox[{{
            {Hue[0.14, 1, 0.9], 
             DiskBox[{3.148246241799897, -2.879580762497801}, 
              0.0446534066539129]}, 
            InsetBox["\<\"$DisplayFunction\"\>", 
             Offset[{2, 2}, {3.19289964845381, -2.834927355843888}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{4.910757134733826, -1.074204954975066}, 
              0.0446534066539129]}, 
            InsetBox["\<\"ArrayPlot\"\>", 
             Offset[{2, 2}, {4.955410541387739, -1.0295515483211533}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{5.07588443014875, -1.8911925569161545}, 
              0.0446534066539129]}, 
            InsetBox["\<\"ContourPlot\"\>", 
             Offset[{2, 2}, {5.120537836802662, -1.8465391502622417}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{5.116196097071367, -1.514985152151984}, 
              0.0446534066539129]}, 
            InsetBox["\<\"DensityPlot\"\>", 
             Offset[{2, 2}, {5.16084950372528, -1.470331745498071}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.2, 1, 0.6], 
             DiskBox[{0.34691328574579194, -4.081466886370995}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Directive\"\>", 
             Offset[{2, 2}, {0.3915666923997049, -4.0368134797170825}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{5.63186511451118, -1.7357090986244383}, 
              0.0446534066539129]}, 
            InsetBox["\<\"GeoGraphics\"\>", 
             Offset[{2, 2}, {5.676518521165093, -1.6910556919705255}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.1, 0.6, 0.7], 
             DiskBox[{3.3363024858742785, -4.081466886370995}, 
              0.0446534066539129]}, 
            InsetBox["\<\"GeometricScene\"\>", 
             Offset[{2, 2}, {3.3809558925281915, -4.0368134797170825}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{1.2152170669674658, -2.0703335824478284}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Graphics3D\"\>", 
             Offset[{2, 2}, {1.2598704736213786, -2.0256801757939153}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.07, 1, 1], 
             DiskBox[{3.032989713175811, -0.662807041562826}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Image\"\>", 
             Offset[{2, 2}, {3.077643119829724, -0.6181536349089131}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.07, 1, 1], 
             DiskBox[{2.888669990891226, -0.3469132857457917}, 
              0.0446534066539129]}, 
            InsetBox["\<\"ImageGraphics\"\>", 
             Offset[{2, 2}, {2.933323397545139, -0.3022598790918788}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{0.34691328574579217, -2.451023615910923}, 
              0.0446534066539129]}, 
            InsetBox["\<\"ImageMarker\"\>", 
             Offset[{2, 2}, {0.3915666923997051, -2.40637020925701}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{1.1937527521957307, -1.5640704986198883}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Import\"\>", 
             Offset[{2, 2}, {1.2384061588496436, -1.5194170919659755}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{0.7504432716821272, -2.1925876289645228}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Inset\"\>", 
             Offset[{2, 2}, {0.7950966783360401, -2.1479342223106097}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{3.6270597082236176, -3.2147794253627846}, 
              0.0446534066539129]}, 
            InsetBox["\<\"ListLinePlot\"\>", 
             Offset[{2, 2}, {3.6717131148775306, -3.1701260187088716}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{3.587333423463322, -3.3876403148794108}, 
              0.0446534066539129]}, 
            InsetBox["\<\"ListPlot\"\>", 
             Offset[{2, 2}, {3.631986830117235, -3.3429869082254977}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{5.4623714616332055, -2.525408006950907}, 
              0.0446534066539129]}, 
            InsetBox["\<\"NumberLinePlot\"\>", 
             Offset[{2, 2}, {5.507024868287118, -2.480754600296994}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{2.7147517952758977, -3.0846713797297336}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Overlay\"\>", 
             Offset[{2, 2}, {2.7594052019298108, -3.0400179730758206}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{5.075264426736449, -2.3042064377005342}, 
              0.0446534066539129]}, 
            InsetBox["\<\"ParametricPlot\"\>", 
             Offset[{2, 2}, {5.119917833390361, -2.259553031046621}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{3.4534443146430793, -2.8358140921759594}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Plot\"\>", 
             Offset[{2, 2}, {3.4980977212969924, -2.7911606855220463}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.07, 1, 1], 
             DiskBox[{2.813296612238467, -0.7533842197803002}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Rasterize\"\>", 
             Offset[{2, 2}, {2.85795001889238, -0.7087308131263873}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{5.327194013451939, -2.024758457342413}, 
              0.0446534066539129]}, 
            InsetBox["\<\"RegionPlot\"\>", 
             Offset[{2, 2}, {5.371847420105851, -1.9801050506885003}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{2.9675676375000606, -2.638677490642785}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Show\"\>", 
             Offset[{2, 2}, {3.0122210441539736, -2.594024083988872}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{0.8750054788252659, -1.1982335963656743}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Sound\"\>", 
             Offset[{2, 2}, {0.9196588854791788, -1.1535801897117615}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{1.0397069196737543, -2.493334910612429}, 
              0.0446534066539129]}, 
            InsetBox["\<\"Texture\"\>", 
             Offset[{2, 2}, {1.084360326327667, -2.448681503958516}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}},
          ImageSizeMultipliers->1]}}},
      BaseStyle->{ImageSizeMultipliers -> 1},
      FormatType->TraditionalForm,
      FrameTicks->None]},
    {
     TemplateBox[{"\"relationship graph\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelationshipGraph\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipGraph\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{
          "$DisplayFunction", "ArrayPlot", "ContourPlot", "DensityPlot", 
           "Directive", "GeoGraphics", "GeometricScene", "Graphics3D", 
           "Image", "ImageGraphics", "ImageMarker", "Import", "Inset", 
           "ListLinePlot", "ListPlot", "NumberLinePlot", "Overlay", 
           "ParametricPlot", "Plot", "Rasterize", "RegionPlot", "Show", 
           "Sound", "Texture"}, {Null, 
           SparseArray[
           Automatic, {24, 24}, 0, {
            1, {{0, 2, 4, 9, 12, 12, 13, 13, 17, 21, 23, 24, 27, 29, 31, 34, 
              36, 37, 40, 46, 49, 53, 58, 59, 60}, {{19}, {22}, {4}, {9}, {
              4}, {6}, {18}, {19}, {21}, {2}, {3}, {21}, {3}, {12}, {13}, {
              22}, {24}, {2}, {10}, {12}, {20}, {9}, {20}, {13}, {8}, {9}, {
              23}, {8}, {11}, {15}, {19}, {14}, {16}, {19}, {15}, {21}, {
              22}, {3}, {19}, {21}, {1}, {3}, {14}, {15}, {18}, {22}, {9}, {
              10}, {22}, {3}, {4}, {16}, {18}, {1}, {8}, {17}, {19}, {20}, {
              12}, {8}}}, Pattern}]}, {
          BaseStyle -> {ImageSizeMultipliers -> 1}, GraphLayout -> 
           "RadialEmbedding", VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/cyDfYu6zQv7T62eC0+8+G3P7PWWg0H5ob3QmdmH
Q77+sr9TvsNgYvdV+561v3xY5H/aGxwuW6Tkd8z+T7p06JPWb/YPrLdvrc5b
Z//+waU5HuGf7Rmg4N+h7r7Mqe/h/IdQez5A1TNB7bGBmncJas8jKK0CFWeF
qoPpewI1B2LqApvfaPa8hboD5q7vUHfKQM3rgPrjHNQeAag/f3hC7YGGw3W0
cHkLtUcMqv451J5JUPM+Qe1hyYDQLVDxP1B1vFB9Uoch5sDsAQBo67wQ
            "], VertexLabels -> {"Name"}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
            StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmVmYGCQA2ImKH7mwb5F3eaF/adWz4UnXvyG028PdfdlTn1vjy7P
kiEd+qT1m33L2l8+LPI/7Zm93nIwKD+0Fzoz+3DI11/2BofLFin5HbP/kw5R
hy5vA5W/VL7DYGL3Vfs7ULoHah66fnR5Bij4B3UfuvwHqDuvQ92NLo/uP3T5
STB1UPvR3YMu/8F6+9bqvHX2TFB/PoHaC3HlAht0+d9Qe2H+QJdHD190eanD
EP0wf6KH5yMorQIVR5dHdx+6vBg0np4/uDTHI/wzhnno8qxQd8Hcie4/dPv+
QPXxQs15C+U/gOr/Dg1XGah96PLo8YeuvgMabueg7kaXR9ePrh49fgWg7vzh
iSN+0NIbuvno8ujmo6tHNx89vNHlAaBr4dc=
              "]],
             ImageSizeMultipliers->1]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            
            StyleBox[{{
               DiskBox[{0.7573431507283004, 1.744331960704923}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"$DisplayFunction\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.731599570654062, 1.7570272894682044},
                 ImageScaled[{1.1726545561495159, 0.16828348233574814}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.5355224775651667, 1.6848952904663332}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"ArrayPlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.5514694075121752, 1.7087615577218493},
                 ImageScaled[{0.0833223252352982, -0.1236022092269089}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.3366435027872947, 1.5700724608421721}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"ContourPlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.3274169958026908, 1.5972528739425937},
                 ImageScaled[{0.7410795989773696, -0.2101975971213298}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.1742594998627509, 1.4076884579176285}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"DensityPlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.14774072454184067, 1.3967040215221826},
                 ImageScaled[{1.1929096493834654, 0.7870125742738163}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.05943667023858956, 1.208809483139756}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Directive\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], 
                Offset[{2, 2}, {0.07993932421620359, 1.22931213711737}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 0.9869888099766226}, 0.020502653977614027], 
               InsetBox[
                StyleBox["\<\"GeoGraphics\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {-0.014351857784329809, 0.9621306631111605},
                 ImageScaled[{0.8749999999999998, 1.149519052838329}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 0.7573431507282998}, 0.020502653977614027], 
               InsetBox[
                StyleBox["\<\"GeometricScene\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], 
                Offset[{2, 2}, {0.020502653977614027, 0.7778458047059138}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.05943667023858967, 0.5355224775651666}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Graphics3D\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.030978518935706627, 0.531775890869422},
                 ImageScaled[{1.243583646030358, 0.5978946441650377}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.17425949986275124, 0.33664350278729416}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Image\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.1465338396845273, 0.3292144345329193},
                 ImageScaled[{1.2244443697168013, 0.6941142838268908}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.33664350278729505, 0.17425949986275058}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"ImageGraphics\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.3347661899685727, 0.14561724115246075},
                 ImageScaled[{0.5490523469226078, 1.2483941924289526}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.5355224775651669, 0.05943667023858967}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"ImageMarker\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.5070643262622839, 0.06318325693433424},
                 ImageScaled[{1.2435836460303578, 0.40210535583496054}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.7573431507283002, 1.1102230246251565*^-16}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Import\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.7683275871237462, -0.026518775320910105},
                 ImageScaled[{0.21298742572618262, 1.192909649383465}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.9869888099766223, 0.}, 0.020502653977614027], 
               InsetBox[
                StyleBox["\<\"Inset\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.0141692230770438, -0.009226506984603996},
                 ImageScaled[{-0.21019759712132924, 0.7410795989773715}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.2088094831397556, 0.05943667023858956}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"ListLinePlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.1885128912159064, 0.03914007831474048},
                 ImageScaled[{1.0303300858899114, 1.03033008588991}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.4076884579176274, 0.17425949986275036}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"ListPlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.4251621728250645, 0.15148731123758466},
                 ImageScaled[{0.043428928243460674, 1.0950150052184273}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.5700724608421712, 0.33664350278729394}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"NumberLinePlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.5965912361630814, 0.32565906639184794},
                 ImageScaled[{-0.19290964938346433, 0.7870125742738191}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.6848952904663328, 0.5355224775651655}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Overlay\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.6923243587207075, 0.5077968173869414},
                 ImageScaled[{0.3058857161731112, 1.2244443697168017}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.7443319607049226, 0.7573431507282987}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"ParametricPlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.7586838184892524, 0.7324850038628367},
                 ImageScaled[{0.12500000000000178, 1.14951905283833}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.744331960704923, 0.9869888099766208}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Plot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.772057620883147, 0.9944178782309955},
                 ImageScaled[{-0.2244443697168017, 0.3058857161731112}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.6848952904663341, 1.2088094831397542}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Rasterize\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.7133534417692173, 1.2050628964440095},
                 ImageScaled[{-0.24358364603035754, 0.5978946441650408}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.5700724608421734, 1.4076884579176263}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"RegionPlot\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.5889981355801919, 1.4292690539046988},
                 ImageScaled[{0.005490638674947812, -0.0638798556092326}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.4076884579176303, 1.5700724608421703}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Show\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.423635387864639, 1.5939387280976862},
                 ImageScaled[{0.08332232523529604, -0.12360220922690734}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.208809483139759, 1.6848952904663321}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Sound\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.2162385513941338, 1.7126209506445562},
                 ImageScaled[{0.3058857161731082, -0.22444436971680093}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.9869888099766257, 1.7443319607049226}, 
                0.020502653977614027], InsetBox[
                StyleBox["\<\"Texture\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.0044625248840628, 1.7671041493300883},
                 ImageScaled[{0.04342892824345823, -0.09501500521842532}],
                BaseStyle->"Graphics"]}},
             ImageSizeMultipliers->1]}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      BaseStyle->{ImageSizeMultipliers -> 1},
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None]},
    {
     TemplateBox[{"\"short notations\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShortNotations\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"ShortNotations\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]},
    {
     TemplateBox[{"\"subject classifications\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SubjectClassifications\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SubjectClassifications\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"symbols linking to\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SymbolsLinkingTo\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsLinkingTo\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Directive\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Directive\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Directive\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"GeoGraphics\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GeoGraphics\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GeoGraphics\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"GeometricScene\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GeometricScene\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GeometricScene\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Graphics3D\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Graphics3D\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Graphics3D\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Image\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Image\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Image\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ImageGraphics\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ImageGraphics\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ImageGraphics\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ImageMarker\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ImageMarker\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ImageMarker\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Inset\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Inset\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Inset\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ListLinePlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ListLinePlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ListLinePlot\\\
\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ListPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ListPlot\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ListPlot\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"NumberLinePlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NumberLinePlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NumberLinePlot\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Overlay\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Overlay\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Overlay\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ParametricPlot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ParametricPlot\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ParametricPlot\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Plot\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Plot\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Plot\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Rasterize\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Rasterize\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Rasterize\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Sound\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Sound\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Sound\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Texture\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Texture\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Texture\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"$DisplayFunction\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$DisplayFunction\""}],
            "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$DisplayFunction\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"symbols using as attribute\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsAttribute\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsAttribute\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"symbols using as option\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsOption\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsOption\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"text strings\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TextStrings\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"TextStrings\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"\<\"Graphics[primitives,options] represents a two-dimensional \
graphical image.\"\>", 
       ",", "\<\"Graphics is displayed in StandardForm as a graphical image. \
In InputForm, it is displayed as an explicit list of primitives.\"\>", 
       ",", "\<\"The following graphics primitives can be used:139436543\"\>",
        ",", "\<\"The following graphics directives can be \
used:362437821\"\>", 
       ",", "\<\"The following wrappers can be used at any level:\"\>", 
       ",", "\<\"The following options can be given:\"\>", 
       ",", "\<\"Nested lists of graphics constructs can be given. Directive \
specifications such as GrayLevel remain in effect only until the end of the \
list that contains them.415812662\"\>", 
       ",", "\<\"Style[obj,opts] can be used to apply the options or \
directives opts to obj.59755747\"\>", 
       ",", "\<\"The following Method options can be given:\"\>", 
       ",", "\<\"The settings for BaseStyle are appended to the default style \
typically given by the \\\"Graphics\\\" style in the current stylesheet. The \
settings for AxesStyle, LabelStyle, etc. are appended to the default styles \
given for \\\"GraphicsAxes\\\", \\\"GraphicsLabel\\\", etc.\"\>", 
       ",", "\<\"Graphics[] gives an empty graphic with the default image \
size.\"\>", 
       ",", "\<\"Use lines, polygons, circles, etc. to build up a graphics \
image:\"\>", 
       ",", "\<\"Use plot functions to automatically create Graphics from \
different types of data:\"\>", 
       ",", "\<\"Graphics primitives are drawn in the order in which they are \
given in Graphics:\"\>", ",", "\<\"Polygons can fold over themselves:\"\>", 
       ",", "\<\"Vertices can be shared by using GraphicsComplex:\"\>", 
       ",", "\<\"Inset an expression in a graphic:\"\>", 
       ",", "\<\"Directives can specify color and opacity of faces:\"\>", 
       ",", "\<\"Colors, thickness, and dashing directives affect lines, \
arrows, and edges:\"\>", 
       ",", "\<\"Some primitives have special directives to specify various \
properties:\"\>", 
       ",", "\<\"Directives can be applied to individual objects using Style:\
\"\>", ",", "\<\"Graphics directives remain in effect only until the end of \
the list that contains them:\"\>", 
       ",", "\<\"Use an ordinary coordinate system:\"\>", 
       ",", "\<\"Specify coordinates by fractions of the plot range:\"\>", 
       ",", "\<\"Specify coordinates by fractions of the whole image:\"\>", 
       ",", "\<\"Offset coordinates by printer's points:\"\>", 
       ",", "\<\"Specify the coordinates within Inset to be aligned with the \
center of the enclosing graphic:\"\>", 
       ",", "\<\"Use numerical values for AspectRatio:\"\>", 
       ",", "\<\"Draw all the axes:\"\>", 
       ",", "\<\"Draw the y axis but not the x axis:\"\>", 
       ",", "\<\"Place a label for the y axis:\"\>", 
       ",", "\<\"Specify a label for each axis:\"\>", 
       ",", "\<\"Determine where the axes cross automatically:\"\>", 
       ",", "\<\"Specify the axes' origin explicitly:\"\>", 
       ",", "\<\"Specify the overall axes style, including the ticks and the \
tick labels:\"\>", ",", "\<\"Specify the style of each axis:\"\>", 
       ",", "\<\"Specify a background color:\"\>", 
       ",", "\<\"Align the center of a graphic with the baseline of the text:\
\"\>", ",", "\<\"Specify the baseline of a graphic as a fraction of the \
height by using Scaled:\"\>", 
       ",", "\<\"Use the axis of a graphic as the baseline:\"\>", 
       ",", "\<\"Set the starting style:\"\>", 
       ",", "\<\"Set multiple starting styles:\"\>", 
       ",", "\<\"Allow the individual graphics objects to be selectable by a \
single click:\"\>", 
       ",", "\<\"No individual object is selectable; the whole graphic \
appears as one object:\"\>", 
       ",", "\<\"The first click selects the whole graphic, and subsequent \
ones select individual objects:\"\>", 
       ",", "\<\"Draw a disk above the graphic, including the axes:\"\>", 
       ",", "\<\"By default, expressions are displayed using TraditionalForm \
in graphics:\"\>", ",", "\<\"Display expressions using StandardForm:\"\>", 
       ",", "\<\"Labels are also affected by FormatType setting:\"\>", 
       ",", "\<\"Draw a frame around the whole graphic:\"\>", 
       ",", "\<\"Draw a frame on the left and the right edges:\"\>", 
       ",", "\<\"Specify frame labels for the bottom and the left edges:\"\>",
        ",", "\<\"Specify labels for each edge:\"\>", 
       ",", "\<\"Specify the overall frame style:\"\>", 
       ",", "\<\"Specify the style of each frame edge:\"\>", 
       ",", "\<\"Put a frame, but no ticks:\"\>", 
       ",", "\<\"Tick mark labels on the bottom and the left frame \
edges:\"\>", ",", "\<\"Frame ticks on the bottom and the right edges:\"\>", 
       ",", "\<\"Specify frame tick and frame tick label style:\"\>", 
       ",", "\<\"Specify frame tick style for each edge:\"\>", 
       ",", "\<\"Put grids across a 2D graphic:\"\>", 
       ",", "\<\"Draw grid lines at specific positions:\"\>", 
       ",", "\<\"Specify the style of each grid:\"\>", 
       ",", "\<\"Specify the overall grid style:\"\>", 
       ",", "\<\"Allow no margins outside of ImageSize:\"\>", 
       ",", "\<\"Have 20-point margins on all sides:\"\>", 
       ",", "\<\"Leave different margins on each side:\"\>", 
       ",", "\<\"Leave no padding outside of the plot range:\"\>", 
       ",", "\<\"Leave enough padding for all objects and labels that are \
present:\"\>", 
       ",", "\<\"Specify the same padding for all sides in printer's \
points:\"\>", ",", "\<\"Specify different padding on each side:\"\>", 
       ",", "\<\"Use predefined symbolic sizes:\"\>", 
       ",", "\<\"Use an explicit image width:\"\>", 
       ",", "\<\"Use an explicit image width and height:\"\>", 
       ",", "\<\"Specify the overall style of all the label-like \
elements:\"\>", ",", "\<\"Force axes to be behind drawing primitives:\"\>", 
       ",", "\<\"By default, frames draw in front of graphics \
primitives:\"\>", 
       ",", "\<\"Force the frame to draw behind graphics primitives:\"\>", 
       ",", "\<\"Force grid lines to be rendered in front of graphics \
primitives:\"\>", 
       ",", "\<\"By default, polygon meshes double-paint their edges for \
efficiency reasons:\"\>", 
       ",", "\<\"The behavior can be turned off using the \
\\\"TransparentPolygonMesh\\\" method option:\"\>", 
       ",", "\<\"Display a label on the top of the graphic in \
TraditionalForm:\"\>", 
       ",", "\<\"Use Style and other typesetting functions to modify how the \
label appears:\"\>", ",", "\<\"Display all objects:\"\>", 
       ",", "\<\"Explicitly choose x and y ranges:\"\>", 
       ",", "\<\"Force clipping at the PlotRange:\"\>", 
       ",", "\<\"PlotRange->s is equivalent to \
PlotRange->{{-s,s},{-s,s}}:\"\>", 
       ",", "\<\"Allow graphics objects to spread beyond PlotRange:\"\>", 
       ",", "\<\"Clip all graphics objects at PlotRange:\"\>", 
       ",", "\<\"Include 1 coordinate unit of padding on all sides:\"\>", 
       ",", "\<\"Include padding using Scaled coordinates:\"\>", 
       ",", "\<\"Specify different padding on each side:\"\>", 
       ",", "\<\"The contents of a graphic use the whole region:\"\>", 
       ",", "\<\"Limit the contents of the graphic to the middle half of the \
region in each direction:\"\>", 
       ",", "\<\"ImagePadding can also be used to add padding around a \
graphic:\"\>", ",", "\<\"Define a simple graphic to use as a background:\"\>",
        ",", "\<\"Use it in multiple graphics:\"\>", 
       ",", "\<\"Specify that vertical frame labels should be rotated:\"\>", 
       ",", "\<\"Specify that vertical frame labels should not be \
rotated:\"\>", ",", "\<\"Draw the axes but no tick marks:\"\>", 
       ",", "\<\"Place tick marks automatically:\"\>", 
       ",", "\<\"Draw tick marks at the specific positions:\"\>", 
       ",", "\<\"Specify the styles of the ticks and tick labels:\"\>", 
       ",", "\<\"Specify the styles of x and y axis ticks separately:\"\>", 
       ",", "\<\"Draw a complete graph with 9 vertices:\"\>", 
       ",", "\<\"The StandardForm of Graphics is its rendered form:\"\>", 
       ",", "\<\"The InputForm is the textual expression form:\"\>", 
       ",", "\<\"Graphics can be used as input to functions:\"\>", 
       ",", "\<\"Two-dimensional plot functions return Graphics:\"\>", 
       ",", "\<\"Several integrated data sources return Graphics:\"\>", 
       ",", "\<\"Many Import and Export formats support Graphics:\"\>", 
       ",", "\<\"Display an analog clock with current system time:\"\>", 
       ",", "\<\"Digital dahlias:\"\>"}], "}"}]},
    {
     TemplateBox[{"\"timeline\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Timeline\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Timeline\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[{
       {AbsolutePointSize[0], Opacity[0], 
        PointBox[
         NCache[{{2.7769824*^9, 1}, {3.802851988*^9, Rational[107, 20]}}, {{
           2.7769824*^9, 1}, {3.802851988*^9, 5.35}}]], 
        PointBox[
         NCache[{{2.7769824*^9, Rational[-1, 2]}, {3.802851988*^9, 0}}, {{
           2.7769824*^9, -0.5}, {3.802851988*^9, 0}}]]}, {}, {
        {PointSize[0], Opacity[0], 
         PointBox[
          NCache[{{2.727557194220667*^9, 1}, {
            3.6971534105456*^9, Rational[97, 20]}}, {{
            2.727557194220667*^9, 1}, {3.6971534105456*^9, 4.85}}]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
         AbsoluteThickness[1.6], Opacity[1], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                EdgeForm[
                 Directive[
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  Thickness[Large], 
                  Opacity[0.2]]], 
                FaceForm[{
                  RGBColor[
                  0.24561133333333335`, 0.3378526666666667, 
                   0.4731986666666667], 
                  Opacity[1]}], 
                CapForm["Round"], 
                AbsoluteThickness[2.5], 
                AbsolutePointSize[10], 
                FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
                 Directive[
                  Opacity[0.2]], {
                  Directive[
                   Opacity[0.2]], 
                  EdgeForm[], 
                  
                  RectangleBox[{2792016000, 1}, {3613852800, 
                   1}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2792016000, 1}], 
                    Offset[{0, -1}, {3613852800, 1}]}, {
                    Offset[{0, 1}, {2792016000, 1}], 
                    Offset[{0, 1}, {3613852800, 1}]}}]}, {
                    AbsolutePointSize[10], 
                    GrayLevel[1], 
                    PointBox[{{2792016000, 1}, {3613852800, 1}}]}, 
                    PointBox[{{2792016000, 1}, {3613852800, 1}}], 
                    LineBox[{{2792016000, 1}, {3613852800, 1}}]}}, {}, {{
                    AbsolutePointSize[4], 
                    GrayLevel[1], 
                    
                    PointBox[{{2792016000, 1}, {3613852800, 
                    1}}]}}}, {}}, {{}, {}}}}}, {{
                 CapForm["Butt"], 
                 LineBox[{{2792016000, 3}, 
                   Offset[{0, 3}, {2792016000, 1}]}], 
                 PolygonBox[
                  NCache[{
                    Offset[{0, 
                    Rational[-16, 3]}, {2792016000, 3}], 
                    Offset[{
                    Rational[16, 3], 1.5}, {2792016000, 3}], 
                    Offset[{
                    Rational[-16, 3], 1.5}, {2792016000, 3}]}, {
                    Offset[{0, -5.333333333333333}, {2792016000, 3}], 
                    Offset[{5.333333333333333, 1.5}, {2792016000, 3}], 
                    Offset[{-5.333333333333333, 1.5}, {2792016000, 3}]}]], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    FrameBox[
                    StyleBox["\"Graphics\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                    5, FrameMargins -> 5, Background -> GrayLevel[1], 
                    StripOnInput -> False], TraditionalForm]], 
                  Offset[{0, 0}, {2792016000, 3}], {Center, Bottom}, {
                  Automatic, Automatic}]}, {
                 EdgeForm[], 
                 FaceForm[], 
                 RectangleBox[{2.727557194220667*^9, 3}, 
                  NCache[{2.856474805779333*^9, 
                    Rational[87, 20]}, {2.856474805779333*^9, 4.35}]]}}}},
             
             ImageSizeCache->{{6.118148796865171, 
              470.9082189349008}, {-45.92114728381047, 24.908218934900788`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{"\"start: \"", 
                TemplateBox[{
                  RowBox[{
                    StyleBox[
                    "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                    Plain], "\"06/23/1988\""}], 
                  RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1988", ",", "6", ",", "23"}], "}"}], ",", 
                    "\"Day\"", ",", "\"Gregorian\"", ",", 
                    RowBox[{"-", "3.`"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
                 Editable -> False]}, {"\"end: \"", 
                TemplateBox[{
                  RowBox[{
                    StyleBox[
                    "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                    Plain], "\"07/09/2014\""}], 
                  RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2014", ",", "7", ",", "9"}], "}"}], ",", 
                    "\"Day\"", ",", "\"Gregorian\"", ",", 
                    RowBox[{"-", "3.`"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
                 Editable -> False]}}, RowSpacings -> 1, ColumnSpacings -> 0, 
              RowAlignments -> Baseline, ColumnAlignments -> Right], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, TableAlignments -> Right, 
               TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            TableForm[{{"start: ", 
               
               DateObject[{1988, 6, 23}, "Day", "Gregorian", -3., {
                "Month", "/", "Day", "/", "Year"}]}, {"end: ", 
               
               DateObject[{2014, 7, 9}, "Day", "Gregorian", -3., {
                "Month", "/", "Day", "/", "Year"}]}}, TableAlignments -> 
             Right, TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, {{{{}, 
           InsetBox[
            StyleBox["\<\"V10\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontColor->GrayLevel[0]], Offset[{6, 0}, {3613852800, 1}], 
            ImageScaled[{0, 0.5}]]}, InsetBox[
           StyleBox["\<\"V1\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], Offset[{-6, 0}, {2792016000, 1}], 
           ImageScaled[{1, 0.5}]]}, {}}}, {}, {}},
      AspectRatio->NCache[
        Rational[923, 6000], 0.15383333333333332`],
      Axes->{False, False},
      AxesOrigin->{0, 0},
      Frame->{{None, None}, {True, None}},
      FrameTicks->
       FrontEndValueCache[{{None, None}, {
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 7, {{0.01, 0}, {0.005, 0}}, Automatic]& , 
          Automatic}}, {{None, None}, {{{2.5245216*^9, 
            FormBox["\"1980\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {2.8401408*^9, 
            FormBox["\"1990\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.1556736*^9, 
            FormBox["\"2000\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.4712928*^9, 
            FormBox["\"2010\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.7868256*^9, 
            FormBox["\"2020\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {4.1024448*^9, 
            FormBox["\"2030\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {2.5245216*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.58768*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.650752*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.7139104*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.7769824*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.8401408*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.9032128*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.9663712*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.0294432*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.0926016*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.1556736*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.218832*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.281904*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.7237536*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.7868256*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.849984*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}}, Automatic}}],
      GridLines->{None, None},
      ImagePadding->All,
      ImageSize->{600, Automatic},
      PlotRange->{{2.7769824*^9, 3.802851988*^9}, {0, All}},
      PlotRangePadding->{{
         Scaled[0.06], 
         Scaled[0.06]}, {None, 
         Scaled[0.05]}},
      Ticks->{{{2.5245216*^9, 
          FormBox["\"1980\"", TraditionalForm], {0.006666666666666666, 0}}, {
         2.8401408*^9, 
          FormBox["\"1990\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.1556736*^9, 
          FormBox["\"2000\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.4712928*^9, 
          FormBox["\"2010\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.7868256*^9, 
          FormBox["\"2020\"", TraditionalForm], {0.006666666666666666, 0}}, {
         4.1024448*^9, 
          FormBox["\"2030\"", TraditionalForm], {0.006666666666666666, 0}}, {
         2.5245216*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.58768*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.650752*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.7139104*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.7769824*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.8401408*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.9032128*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.9663712*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}}, None}]},
    {
     TemplateBox[{"\"timeline events\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TimelineEvents\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TimelineEvents\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       RowBox[{"Interval", "[", 
         RowBox[{"{", 
           RowBox[{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"Thu 23 Jun 1988\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1988", ",", "6", ",", "23"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "3.`"}]}], "]"}]}, "DateObject", Editable -> 
              False], ",", 
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"Wed 9 Jul 2014\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2014", ",", "7", ",", "9"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "3.`"}]}], "]"}]}, "DateObject", Editable -> 
              False]}], "}"}], "]"}], "\"Graphics\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]},
    {
     TemplateBox[{"\"translations\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Translations\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Translations\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:56fe\:5f62\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:5716\:5f62\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"graphique\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"Graphik\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\[Gamma]\[Rho]\[Alpha]\[CurlyPhi]\[Iota]\[Kappa]\:03ac\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:30b0\:30e9\:30d5\:30a3\:30c3\:30af\:30b9\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:adf8\:b798\:d53d\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"grafika\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"grafika\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"representa\[CCedilla]\[ATilde]o \
gr\[AAcute]fica\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0433\:0440\:0430\:0444\:0438\:043a\:0430\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"gr\[AAcute]fico\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", "\<\"\:0433\:0440\:0430\:0444\:0456\:043a\:0430\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0111\:1ed3 h\:1ecda\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"typeset usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TypesetUsage\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TypesetUsage\\\"]\""},
      "EntityProperty"], 
     InterpretationBox[Cell[BoxData[
       FormBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*RowBox[{\\\"Graphics\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"primitives\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"options\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) represents a \
two-dimensional graphical image. \"\>"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {None, {
               GrayLevel[0.84]}, None}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
         "Grid"], TextForm]], "InlineText",ExpressionUUID->
       "3a55c86a-1557-4d57-bff6-7ac590f6339e"],
      Text[
       Grid[{{
         "\!\(\*RowBox[{\"Graphics\", \"[\", RowBox[{StyleBox[\"primitives\", \
\"TI\"], \",\", StyleBox[\"options\", \"TI\"]}], \"]\"}]\) represents a \
two-dimensional graphical image. "}}, Dividers -> {None, {None, {
            GrayLevel[0.84]}, None}}, Alignment -> Left, 
        Spacings -> {Automatic, 0.8}]]]},
    {
     TemplateBox[{"\"URL\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"URL\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"URL\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
      "\"http://reference.wolfram.com/language/ref/Graphics.html\"", 
       "http://reference.wolfram.com/language/ref/Graphics.html"},
      "HyperlinkURL"]},
    {
     TemplateBox[{"\"version introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionIntroduced\\\"]\""},
      "EntityProperty"], "1"},
    {
     TemplateBox[{"\"version last modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"VersionLastModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionLastModified\\\"]\""},
      "EntityProperty"], "10"},
    {
     TemplateBox[{"\"versions modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionsModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionsModified\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"3", ",", "6", ",", "7", ",", "8", ",", "10"}], "}"}]},
    {
     TemplateBox[{"\"Wolfram documentation link\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"WolframDocumentationLink\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"WolframDocumentationLink\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{"\"Graphics\"", "paclet:ref/Graphics"},
      "HyperlinkPaclet"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.802870020482168*^9, 3.8028700713555613`*^9}, 
   3.802870106146912*^9, 3.802870142935422*^9, 3.802870219505802*^9, 
   3.8028702676792603`*^9, 3.8028893063208437`*^9, 3.803211380914502*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"c691a9a2-88fa-41ea-8c94-5b8c2da86e8f"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"simplePlot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"2", " ", "x"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8028011925834627`*^9, 3.802801196906369*^9}, {
  3.802801237233472*^9, 3.8028012588361588`*^9}, {3.802828234963826*^9, 
  3.8028283046354847`*^9}, {3.802869029003207*^9, 3.802869046167142*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"bfd4eaab-312b-484b-8890-828d4a7d9167"],

Cell[CellGroupData[{

Cell[BoxData["simplePlot"], "Input",
 CellChangeTimes->{{3.802801201639764*^9, 3.802801202774337*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"197036a1-76ad-4167-9266-80a02b9a2ebf"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1P9P1HUcwPHj4BQO+bzBhY3yMECZX5gTqmNp7vWapRMVJzcdOFM4XNZA
o1gGjM3UaFGj6Uo3NGttByrZIPwSQ4H3G5WBLsMQO/mSjrv4oohwHFx3B967
2uv9w3OP/+AZl1tgeVev0+nS/+t/V8KCJ1JKTjJR4Eso9/klJ5n45VJyonta
cpKJlKXpuUOjkpNMpEaV9f5ml5xkAp2u26fqJCeZsHxx58Kr2ZKTTBR1lh14
ryXASU10d4c/abU+52SEMImCF1IXznJynriSf9PA/vJz0ihyKpIneo76OBkm
vN+UlnPwcjJU2LSHMZUDHk7OEWc2JRfe+3KakwZxdL+1eFnaFCdDRGnwT0WF
Y5Oc1Avr4c7Ff553cTJInGwerDyTN8FJnbj6aOm8n+OfcTLAEyJx3fYfRpUz
/OLy8jyHc0Tp5Y/a6l8xm4eUHj6YdDKF/+pUunnUoRrzyqABpYsnmceTqt39
yqf8s7fH7jYW25XDPHp77fGdL3YpHfyip411LL6t7OXVfYNfPy5rUf7Od2cs
vNy3t0p5mTcaS+9fP2gD8hK87giKPZLFlZ2QMHHNt/r6LWUPpNl67mzN6lI6
YH36/ODpK3blMBzLth9e1dCvfArtW00R2+YPKF0wFhd9qOu0U+mGgx+vsB5b
MKT0gL0/0rKvY0TphZySN4fnbhlVzsCNFalf3TA8UwYgMaxppGrjhFKHpqb8
9YZyF5BBqPPrawodk0Dq8Z+M5j1tS6aADMG+17JfXlI2DaQBP8yMjIrv9wA5
B2NO/J0VYvICGYq1u3485y72ARmGmWs/3djR7AfSiPV7DsSvnp0BMhy9xreC
G3c8BzICLX+sMZsqA0BqaFwT3tr0fQBIDVureje/YwsAqeGq4hLrd7UBIDXU
FjVUxLQFgNTw1v4UZ/RkAEgNMXTZcW2LBJKh9yPvS7UZEkiGdX3t1emZEkiG
sXX7rlXkSiAZzu6oGjKWSCAZNtgWrZ17VgLJ8IOI8fazFySQDBOLWiwb6iWQ
DE9s2v3+500SSIaFrtPfBt+TQDJcvisv1vZAAslw4OYbNeseSiAZbqt80HLk
sQSSYaj+fFrcuASSIc8v6hZTEkiGn9zfkJ3jl0AyVP8C9S/8F+B4bYI=
       "]]},
     Annotation[#, "Charting`Private`Tag$70233#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-3.999999836734694, 3.999999836734694}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.802801204018673*^9, {3.802801240521563*^9, 3.8028012603525867`*^9}, 
   3.8028283333877172`*^9, {3.802869035070787*^9, 3.802869049158401*^9}, 
   3.803211381510066*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"11702827-1bb0-4f42-8402-291a3db73b9d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"simplePlotFullForm", " ", "=", " ", 
   RowBox[{"FullForm", "[", "simplePlot", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802801207988429*^9, 3.80280121314885*^9}, {
  3.8028013345341587`*^9, 3.8028013350569468`*^9}, {3.802801466069165*^9, 
  3.802801584460384*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"cd72e5af-3feb-4c1b-b35d-957b1db74806"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simplePlotInputForm", " ", "=", " ", 
   RowBox[{"InputForm", "[", "simplePlot", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8028016490032797`*^9, 3.8028016701176863`*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"a1031b33-b94d-4916-a14a-3a5516c1fb0e"],

Cell[CellGroupData[{

Cell[BoxData["simplePlotFullForm"], "Input",
 CellChangeTimes->{{3.8028691475935717`*^9, 3.802869154646076*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"c4a21e9b-c83a-43b7-bd1a-42c97efae3cd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"List", "[", 
        RowBox[{"List", "[", 
         RowBox[{
          RowBox[{"List", "[", "]"}], ",", 
          RowBox[{"List", "[", "]"}], ",", 
          RowBox[{"Annotation", "[", 
           RowBox[{
            RowBox[{"List", "[", 
             RowBox[{
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}], 
                 "]"}], ",", 
                RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"List", "[", 
                RowBox[{
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.999999918367347`"}], ",", 
                   RowBox[{"-", "3.999999836734694`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.9987731283177614`"}], ",", 
                   RowBox[{"-", "3.997546256635523`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.997546338268176`"}], ",", 
                   RowBox[{"-", "3.995092676536352`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.995092758169005`"}], ",", 
                   RowBox[{"-", "3.99018551633801`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.9901855979706633`"}], ",", 
                   RowBox[{"-", "3.9803711959413266`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.9803712775739797`"}], ",", 
                   RowBox[{"-", "3.9607425551479594`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.9607426367806124`"}], ",", 
                   RowBox[{"-", "3.921485273561225`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.9214853551938782`"}], ",", 
                   RowBox[{"-", "3.8429707103877564`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.8363665716581652`"}], ",", 
                   RowBox[{"-", "3.6727331433163304`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.7568884657193913`"}], ",", 
                   RowBox[{"-", "3.5137769314387826`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.6789694047244954`"}], ",", 
                   RowBox[{"-", "3.357938809448991`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.594446123367355`"}], ",", 
                   RowBox[{"-", "3.18889224673471`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.515563519607154`"}], ",", 
                   RowBox[{"-", "3.031127039214308`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.4300766954847084`"}], ",", 
                   RowBox[{"-", "2.860153390969417`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.3461489163061406`"}], ",", 
                   RowBox[{"-", "2.6922978326122813`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.2678618147245122`"}], ",", 
                   RowBox[{"-", "2.5357236294490244`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.1829704927806393`"}], ",", 
                   RowBox[{"-", "2.3659409855612785`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.1037198484337056`"}], ",", 
                   RowBox[{"-", "2.2074396968674113`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "1.0260282490306498`"}], ",", 
                   RowBox[{"-", "2.0520564980612996`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.9417324292653497`"}], ",", 
                   RowBox[{"-", "1.8834648585306994`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.8630772870969888`"}], ",", 
                   RowBox[{"-", "1.7261545741939777`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.7778179245663834`"}], ",", 
                   RowBox[{"-", "1.5556358491327669`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.6941176069796561`"}], ",", 
                   RowBox[{"-", "1.3882352139593122`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.6160579669898679`"}], ",", 
                   RowBox[{"-", "1.2321159339797358`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.5313941066378353`"}], ",", 
                   RowBox[{"-", "1.0627882132756705`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.4523709238827418`"}], ",", 
                   RowBox[{"-", "0.9047418477654836`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.3667435207654039`"}], ",", 
                   RowBox[{"-", "0.7334870415308078`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.282675162591944`"}], ",", 
                   RowBox[{"-", "0.565350325183888`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.20424748201542325`"}], ",", 
                   RowBox[{"-", "0.4084949640308465`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.11921558107665804`"}], ",", 
                   RowBox[{"-", "0.23843116215331608`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"-", "0.03982435773483204`"}], ",", 
                   RowBox[{"-", "0.07964871546966408`"}]}], "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                  "0.03800782066311598`", ",", "0.07601564132623197`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                  "0.12244421942330848`", ",", "0.24488843884661696`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                  "0.20123994058656178`", ",", "0.40247988117312355`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                  "0.28663988211205954`", ",", "0.5732797642241191`"}], "]"}],
                  ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"0.3704807786936793`", ",", "0.7409615573873586`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                  "0.44868099767835984`", ",", "0.8973619953567197`"}], "]"}],
                  ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"0.533485437025285`", ",", "1.06697087405057`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"0.6126491987752708`", ",", "1.2252983975505416`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"0.6902539155813786`", ",", "1.3805078311627572`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"0.7744628527497309`", ",", "1.5489257054994618`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"0.853031112321144`", ",", "1.706062224642288`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"0.9382035922548017`", ",", "1.8764071845096033`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.01773539459152`", ",", "2.03547078918304`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.0957081519843606`", ",", "2.191416303968721`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.1802851297394454`", ",", "2.360570259478891`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.2592214298975912`", ",", "2.5184428597951825`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.3447619504179815`", ",", "2.689523900835963`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.4287434259944938`", ",", "2.8574868519889876`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.507084223974067`", ",", "3.014168447948134`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.5920292423158844`", ",", "3.1840584846317688`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.6713335830607627`", ",", "3.3426671661215255`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.749078878861763`", ",", "3.498157757723526`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.8334283950250079`", ",", "3.6668567900500157`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9121372335913134`", ",", "3.8242744671826268`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.913510088040939`", ",", "3.827020176081878`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9148829424905645`", ",", "3.829765884981129`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9176286513898155`", ",", "3.835257302779631`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9231200691883177`", ",", "3.8462401383766354`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9341029047853218`", ",", "3.8682058095706435`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9560685759793301`", ",", "3.9121371519586603`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9574414304289558`", ",", "3.9148828608579116`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9588142848785812`", ",", "3.9176285697571624`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9615599937778323`", ",", "3.9231199875556646`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9670514115763345`", ",", "3.934102823152669`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9780342471733385`", ",", "3.956068494346677`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.979407101622964`", ",", "3.958814203245928`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9807799560725896`", ",", "3.961559912145179`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9835256649718405`", ",", "3.967051329943681`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9890170827703426`", ",", "3.9780341655406852`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9903899372199683`", ",", "3.9807798744399365`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9917627916695937`", ",", "3.9835255833391874`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9945085005688448`", ",", "3.9890170011376895`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9958813550184704`", ",", "3.991762710036941`"}], 
                  "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9972542094680958`", ",", "3.9945084189361917`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.9986270639177213`", ",", "3.9972541278354425`"}],
                   "]"}], ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"1.999999918367347`", ",", "3.999999836734694`"}], 
                  "]"}]}], "]"}], "]"}]}], "]"}], ",", 
            "\"\<Charting`Private`Tag$70233#1\>\""}], "]"}]}], "]"}], "]"}], 
       ",", 
       RowBox[{"List", "[", "]"}]}], "]"}], ",", 
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"Rule", "[", 
        RowBox[{"DisplayFunction", ",", "Identity"}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"Ticks", ",", 
         RowBox[{"List", "[", 
          RowBox[{"Automatic", ",", "Automatic"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"AxesOrigin", ",", 
         RowBox[{"List", "[", 
          RowBox[{"0", ",", "0"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"FrameTicks", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"Automatic", ",", "Automatic"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"Automatic", ",", "Automatic"}], "]"}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"GridLines", ",", 
         RowBox[{"List", "[", 
          RowBox[{"None", ",", "None"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"DisplayFunction", ",", "Identity"}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"PlotRangePadding", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.02`", "]"}], ",", 
             RowBox[{"Scaled", "[", "0.02`", "]"}]}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.05`", "]"}], ",", 
             RowBox[{"Scaled", "[", "0.05`", "]"}]}], "]"}]}], "]"}]}], "]"}],
        ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"PlotRangeClipping", ",", "True"}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"ImagePadding", ",", "All"}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"DisplayFunction", ",", "Identity"}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"AspectRatio", ",", 
         RowBox[{"Power", "[", 
          RowBox[{"GoldenRatio", ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"Axes", ",", 
         RowBox[{"List", "[", 
          RowBox[{"True", ",", "True"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"AxesLabel", ",", 
         RowBox[{"List", "[", 
          RowBox[{"None", ",", "None"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"AxesOrigin", ",", 
         RowBox[{"List", "[", 
          RowBox[{"0", ",", "0"}], "]"}]}], "]"}], ",", 
       RowBox[{"RuleDelayed", "[", 
        RowBox[{"DisplayFunction", ",", "Identity"}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"Frame", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"False", ",", "False"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"False", ",", "False"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"FrameLabel", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"None", ",", "None"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"None", ",", "None"}], "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"FrameTicks", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"Automatic", ",", "Automatic"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"Automatic", ",", "Automatic"}], "]"}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"GridLines", ",", 
         RowBox[{"List", "[", 
          RowBox[{"None", ",", "None"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"GridLinesStyle", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"GrayLevel", "[", 
           RowBox[{"0.5`", ",", "0.4`"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"Method", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"Rule", "[", 
            RowBox[{"\"\<DefaultBoundaryStyle\>\"", ",", "Automatic"}], "]"}],
            ",", 
           RowBox[{"Rule", "[", 
            RowBox[{"\"\<DefaultGraphicsInteraction\>\"", ",", 
             RowBox[{"List", "[", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"\"\<Version\>\"", ",", "1.2`"}], "]"}], ",", 
               RowBox[{"Rule", "[", 
                RowBox[{"\"\<TrackMousePosition\>\"", ",", 
                 RowBox[{"List", "[", 
                  RowBox[{"True", ",", "False"}], "]"}]}], "]"}], ",", 
               RowBox[{"Rule", "[", 
                RowBox[{"\"\<Effects\>\"", ",", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"Rule", "[", 
                    RowBox[{"\"\<Highlight\>\"", ",", 
                    RowBox[{"List", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<ratio\>\"", ",", "2"}], "]"}], "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Rule", "[", 
                    RowBox[{"\"\<HighlightPoint\>\"", ",", 
                    RowBox[{"List", "[", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<ratio\>\"", ",", "2"}], "]"}], "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Rule", "[", 
                    RowBox[{"\"\<Droplines\>\"", ",", 
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<freeformCursorMode\>\"", ",", "True"}], 
                    "]"}], ",", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<placement\>\"", ",", 
                    RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<x\>\"", ",", "\"\<All\>\""}], "]"}], ",", 
                    RowBox[{"Rule", "[", 
                    RowBox[{"\"\<y\>\"", ",", "\"\<None\>\""}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"Rule", "[", 
            RowBox[{"\"\<DefaultMeshStyle\>\"", ",", 
             RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
           RowBox[{"Rule", "[", 
            RowBox[{"\"\<ScalingFunctions\>\"", ",", "None"}], "]"}], ",", 
           RowBox[{"Rule", "[", 
            RowBox[{"\"\<CoordinatesToolOptions\>\"", ",", 
             RowBox[{"List", "[", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"\"\<DisplayFunction\>\"", ",", 
                 RowBox[{"Function", "[", 
                  RowBox[{"List", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "1"}], "]"}], "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "2"}], "]"}], 
                    "]"}]}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"Rule", "[", 
                RowBox[{"\"\<CopiedValueFunction\>\"", ",", 
                 RowBox[{"Function", "[", 
                  RowBox[{"List", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "1"}], "]"}], "]"}],
                     ",", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"Identity", "[", 
                    RowBox[{"Slot", "[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"Part", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", "1", "]"}], ",", "2"}], "]"}], 
                    "]"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"PlotRange", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"-", "2"}], ",", "2"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"-", "3.999999836734694`"}], ",", "3.999999836734694`"}],
             "]"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"PlotRangeClipping", ",", "True"}], "]"}], ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"PlotRangePadding", ",", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.02`", "]"}], ",", 
             RowBox[{"Scaled", "[", "0.02`", "]"}]}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.02`", "]"}], ",", 
             RowBox[{"Scaled", "[", "0.02`", "]"}]}], "]"}]}], "]"}]}], "]"}],
        ",", 
       RowBox[{"Rule", "[", 
        RowBox[{"Ticks", ",", 
         RowBox[{"List", "[", 
          RowBox[{"Automatic", ",", "Automatic"}], "]"}]}], "]"}]}], "]"}]}], 
    "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.8028691554804*^9, 3.802889331133854*^9, 
  3.803211381547305*^9},
 CellLabel->
  "Out[336]//FullForm=",ExpressionUUID->"88370358-a486-4459-8a45-\
bf6258a358aa"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData["simplePlotInputForm"], "Input",
 CellChangeTimes->{{3.8028691616547337`*^9, 3.802869165220016*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"fb3fbddc-b155-4547-89b3-401e84438e0a"],

Cell["\<\
Graphics[{{{{}, {}, Annotation[{Directive[Opacity[1.], RGBColor[0.368417, \
0.506779, 0.709798], AbsoluteThickness[1.6]], 
      Line[{{-1.999999918367347, -3.999999836734694}, {-1.9987731283177614, \
-3.997546256635523}, {-1.997546338268176, -3.995092676536352}, 
       {-1.995092758169005, -3.99018551633801}, {-1.9901855979706633, \
-3.9803711959413266}, {-1.9803712775739797, -3.9607425551479594}, 
       {-1.9607426367806124, -3.921485273561225}, {-1.9214853551938782, \
-3.8429707103877564}, {-1.8363665716581652, -3.6727331433163304}, 
       {-1.7568884657193913, -3.5137769314387826}, {-1.6789694047244954, \
-3.357938809448991}, {-1.594446123367355, -3.18889224673471}, 
       {-1.515563519607154, -3.031127039214308}, {-1.4300766954847084, \
-2.860153390969417}, {-1.3461489163061406, -2.6922978326122813}, 
       {-1.2678618147245122, -2.5357236294490244}, {-1.1829704927806393, \
-2.3659409855612785}, {-1.1037198484337056, -2.2074396968674113}, 
       {-1.0260282490306498, -2.0520564980612996}, {-0.9417324292653497, \
-1.8834648585306994}, {-0.8630772870969888, -1.7261545741939777}, 
       {-0.7778179245663834, -1.5556358491327669}, {-0.6941176069796561, \
-1.3882352139593122}, {-0.6160579669898679, -1.2321159339797358}, 
       {-0.5313941066378353, -1.0627882132756705}, {-0.4523709238827418, \
-0.9047418477654836}, {-0.3667435207654039, -0.7334870415308078}, 
       {-0.282675162591944, -0.565350325183888}, {-0.20424748201542325, \
-0.4084949640308465}, {-0.11921558107665804, -0.23843116215331608}, 
       {-0.03982435773483204, -0.07964871546966408}, {0.03800782066311598, \
0.07601564132623197}, {0.12244421942330848, 0.24488843884661696}, 
       {0.20123994058656178, 0.40247988117312355}, {0.28663988211205954, \
0.5732797642241191}, {0.3704807786936793, 0.7409615573873586}, 
       {0.44868099767835984, 0.8973619953567197}, {0.533485437025285, \
1.06697087405057}, {0.6126491987752708, 1.2252983975505416}, 
       {0.6902539155813786, 1.3805078311627572}, {0.7744628527497309, \
1.5489257054994618}, {0.853031112321144, 1.706062224642288}, 
       {0.9382035922548017, 1.8764071845096033}, {1.01773539459152, \
2.03547078918304}, {1.0957081519843606, 2.191416303968721}, 
       {1.1802851297394454, 2.360570259478891}, {1.2592214298975912, \
2.5184428597951825}, {1.3447619504179815, 2.689523900835963}, 
       {1.4287434259944938, 2.8574868519889876}, {1.507084223974067, \
3.014168447948134}, {1.5920292423158844, 3.1840584846317688}, 
       {1.6713335830607627, 3.3426671661215255}, {1.749078878861763, \
3.498157757723526}, {1.8334283950250079, 3.6668567900500157}, 
       {1.9121372335913134, 3.8242744671826268}, {1.913510088040939, \
3.827020176081878}, {1.9148829424905645, 3.829765884981129}, 
       {1.9176286513898155, 3.835257302779631}, {1.9231200691883177, \
3.8462401383766354}, {1.9341029047853218, 3.8682058095706435}, 
       {1.9560685759793301, 3.9121371519586603}, {1.9574414304289558, \
3.9148828608579116}, {1.9588142848785812, 3.9176285697571624}, 
       {1.9615599937778323, 3.9231199875556646}, {1.9670514115763345, \
3.934102823152669}, {1.9780342471733385, 3.956068494346677}, 
       {1.979407101622964, 3.958814203245928}, {1.9807799560725896, \
3.961559912145179}, {1.9835256649718405, 3.967051329943681}, 
       {1.9890170827703426, 3.9780341655406852}, {1.9903899372199683, \
3.9807798744399365}, {1.9917627916695937, 3.9835255833391874}, 
       {1.9945085005688448, 3.9890170011376895}, {1.9958813550184704, \
3.991762710036941}, {1.9972542094680958, 3.9945084189361917}, 
       {1.9986270639177213, 3.9972541278354425}, {1.999999918367347, \
3.999999836734694}}]}, \"Charting`Private`Tag$70233#1\"]}}, {}}, 
 {DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> \
{0, 0}, 
  FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, GridLines \
-> {None, None}, DisplayFunction -> Identity, 
  PlotRangePadding -> {{Scaled[0.02], Scaled[0.02]}, {Scaled[0.05], \
Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
  DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), Axes -> \
{True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
  DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, \
FrameLabel -> {{None, None}, {None, None}}, 
  FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, GridLines \
-> {None, None}, GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]], 
  Method -> {\"DefaultBoundaryStyle\" -> Automatic, \
\"DefaultGraphicsInteraction\" -> {\"Version\" -> 1.2, \"TrackMousePosition\" \
-> {True, False}, 
      \"Effects\" -> {\"Highlight\" -> {\"ratio\" -> 2}, \"HighlightPoint\" \
-> {\"ratio\" -> 2}, 
        \"Droplines\" -> {\"freeformCursorMode\" -> True, \"placement\" -> \
{\"x\" -> \"All\", \"y\" -> \"None\"}}}}, 
    \"DefaultMeshStyle\" -> AbsolutePointSize[6], \"ScalingFunctions\" -> \
None, \"CoordinatesToolOptions\" -> 
     {\"DisplayFunction\" -> ({(Identity[#1] & )[#1[[1]]], (Identity[#1] & \
)[#1[[2]]]} & ), 
      \"CopiedValueFunction\" -> ({(Identity[#1] & )[#1[[1]]], (Identity[#1] \
& )[#1[[2]]]} & )}}, 
  PlotRange -> {{-2, 2}, {-3.999999836734694, 3.999999836734694}}, \
PlotRangeClipping -> True, 
  PlotRangePadding -> {{Scaled[0.02], Scaled[0.02]}, {Scaled[0.02], \
Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}]\
\>", "Output",
 CellChangeTimes->{3.802869165592558*^9, 3.802889335352309*^9, 
  3.80321138159791*^9},
 CellLabel->
  "Out[337]//InputForm=",ExpressionUUID->"a5dc781b-c090-4dba-b201-\
91c610658d42"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"anotherPlot", "=", 
   GraphicsBox[
    {RGBColor[0, 1, 0], Thickness[Large], RectangleBox[{0, -1}, {2, 1}], 
     {RGBColor[1, 0, 0], DiskBox[{0, 0}]}, 
     {RGBColor[0, 0, 1], CircleBox[{2, 0}]}, 
     {RGBColor[1, 1, 0], PolygonBox[{{2, 0}, {4, 1}, {4, -1}}]}, 
     {RGBColor[0.5, 0, 0.5], Arrowheads[Large], 
      ArrowBox[NCache[{{4, Rational[3, 2]}, {0, Rational[3, 2]}, {0, 0}}, {{
         4, 1.5}, {0, 1.5}, {0, 0}}]], 
      {GrayLevel[0], Dashing[{Small, Small}], 
       LineBox[{{-1, 0}, {4, 0}}]}}}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802870593807432*^9, 3.802870602579392*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"ce233e06-4d1a-42f7-81cb-c223edd53c5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anotherPlot", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.8028706046562033`*^9, 3.802870610525227*^9}, {
  3.802870649852189*^9, 3.802870701327836*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"1c8831d5-cfea-4d85-aa4a-a9b2238564d9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Graphics", "[", 
    RowBox[{"List", "[", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "Large", "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"List", "[", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "]"}], ",", 
        RowBox[{"List", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], "]"}], ",", 
      RowBox[{"List", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{"List", "[", 
          RowBox[{"0", ",", "0"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"List", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"Circle", "[", 
         RowBox[{"List", "[", 
          RowBox[{"2", ",", "0"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"List", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"2", ",", "0"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"4", ",", "1"}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"4", ",", 
             RowBox[{"-", "1"}]}], "]"}]}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"List", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], ",", 
        RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"List", "[", 
          RowBox[{
           RowBox[{"List", "[", 
            RowBox[{"4", ",", 
             RowBox[{"Rational", "[", 
              RowBox[{"3", ",", "2"}], "]"}]}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"0", ",", 
             RowBox[{"Rational", "[", 
              RowBox[{"3", ",", "2"}], "]"}]}], "]"}], ",", 
           RowBox[{"List", "[", 
            RowBox[{"0", ",", "0"}], "]"}]}], "]"}], "]"}], ",", 
        RowBox[{"List", "[", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"List", "[", 
            RowBox[{"Small", ",", "Small"}], "]"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"List", "[", 
            RowBox[{
             RowBox[{"List", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0"}], "]"}], ",", 
             RowBox[{"List", "[", 
              RowBox[{"4", ",", "0"}], "]"}]}], "]"}], "]"}]}], "]"}]}], 
       "]"}]}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.80287061091164*^9, {3.802870675265882*^9, 3.802870698837303*^9}, 
   3.8028893423278646`*^9, 3.803211381651752*^9},
 CellLabel->
  "Out[339]//FullForm=",ExpressionUUID->"55a52a90-264c-4f16-9bc7-\
498bc6117f47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anotherPlot", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.802870618161788*^9, 3.802870621683222*^9}, {
  3.802870654210742*^9, 3.802870690516412*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"b4d8d586-a0bd-41e4-b87a-3d9469fd8b4e"],

Cell["\<\
Graphics[{RGBColor[0, 1, 0], Thickness[Large], Rectangle[{0, -1}, {2, 1}], \
{RGBColor[1, 0, 0], Disk[{0, 0}]}, 
  {RGBColor[0, 0, 1], Circle[{2, 0}]}, {RGBColor[1, 1, 0], Polygon[{{2, 0}, \
{4, 1}, {4, -1}}]}, 
  {RGBColor[0.5, 0, 0.5], Arrowheads[Large], Arrow[{{4, 3/2}, {0, 3/2}, {0, \
0}}], {GrayLevel[0], Dashing[{Small, Small}], 
    Line[{{-1, 0}, {4, 0}}]}}}]\
\>", "Output",
 CellChangeTimes->{
  3.8028706219843893`*^9, {3.802870685698762*^9, 3.8028706908396606`*^9}, 
   3.802889345355255*^9, 3.803211381665229*^9},
 CellLabel->
  "Out[340]//InputForm=",ExpressionUUID->"f1654c96-2cb4-4a61-b9b9-\
2bcb2f737ce0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Getting every Wolfram Language symbol that is a graphic primitive\
\>", "Subsubsection",
 CellChangeTimes->{{3.802917983064765*^9, 
  3.802918013366185*^9}},ExpressionUUID->"6317a4e2-766b-4ce9-bd7a-\
68a1cb3096bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphicsPrimitiveSymbols", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"functionalityAreasOfAllWLSymbols", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{
         RowBox[{"Last", "@", "#"}], ",", 
         "\"\<GraphicsPrimitiveSymbols\>\""}], "]"}], ">", "0"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802889444350655*^9, 3.802889535287775*^9}, {
  3.802889707213162*^9, 3.8028897558100843`*^9}, {3.802889970130727*^9, 
  3.802890004152857*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3f5eabe9-dcea-4f0a-b416-fac63ba8c017"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graphicsSymbols", "=", 
  RowBox[{"graphicsPrimitiveSymbols", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.8028958365263567`*^9, 3.8028958543224792`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"be05fbdb-1ee1-452a-aa6a-5674e48a2d5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"AASTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AASTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AASTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ASATriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ASATriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ASATriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AffineHalfSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AffineHalfSpace\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AffineHalfSpace\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AffineSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AffineSpace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AffineSpace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Annulus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Annulus\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Annulus\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Arrow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Arrow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Arrow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BSplineCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BSplineCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BSplineCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ball\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ball\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Ball\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BezierCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BezierCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BezierCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CapsuleShape\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CapsuleShape\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CapsuleShape\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Circle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Circle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Circle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Circumsphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Circumsphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Circumsphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cone\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cone\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cone\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConicHullRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConicHullRegion\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ConicHullRegion\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cube\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cube\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cube\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cuboid\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cuboid\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cuboid\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cylinder\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cylinder\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cylinder\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiskSegment\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DiskSegment\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DiskSegment\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dodecahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Dodecahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Dodecahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ellipsoid\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ellipsoid\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Ellipsoid\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EmptyRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EmptyRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EmptyRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FilledCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FilledCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FilledCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FullRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FullRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FullRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GraphicsComplex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GraphicsComplex\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GraphicsComplex\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfLine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfLine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfLine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfPlane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfPlane\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfPlane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfSpace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfSpace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hexahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hexahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hexahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hyperplane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hyperplane\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hyperplane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Icosahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Icosahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Icosahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InfiniteLine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InfiniteLine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"InfiniteLine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InfinitePlane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InfinitePlane\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"InfinitePlane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Insphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Insphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Insphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JoinedCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JoinedCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JoinedCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Octahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Octahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Octahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Parallelepiped\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Parallelepiped\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Parallelepiped\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Parallelogram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Parallelogram\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Parallelogram\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Polyhedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Polyhedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Polyhedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Prism\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Prism\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Prism\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rectangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Rectangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Rectangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RegularPolygon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RegularPolygon\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RegularPolygon\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SASTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SASTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SASTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SSSTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SSSTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SSSTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShellRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShellRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ShellRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Simplex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Simplex\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Simplex\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Sphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Sphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SphericalShell\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SphericalShell\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SphericalShell\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StadiumShape\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StadiumShape\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StadiumShape\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tetrahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tetrahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tetrahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Triangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Triangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Triangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tube\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tube\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tube\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8028958550987377`*^9, 3.8028978692828197`*^9, 3.803071527027203*^9, 
   3.803211102574625*^9, 3.8032112069423923`*^9, 3.8032113817777576`*^9, {
   3.803225013248088*^9, 3.803225020207692*^9}, 3.8036027093614397`*^9, 
   3.803641819513728*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"1427c735-8eda-48c8-9759-4d49a36ff5fc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GraphicsPrimitiveQ function", "Subsubsection",
 CellChangeTimes->{{3.803033748760223*^9, 3.803033773884035*^9}, {
  3.803065265606989*^9, 3.803065268500287*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"3ba80b64-96b2-4de7-a926-801cc2fb3fe0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GraphicsPrimitiveQ", "[", "string_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"GraphicsPrimitiveQ", "[", "string", "]"}], "=", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"functionalities", "=", 
       RowBox[{
        RowBox[{"Entity", "[", 
         RowBox[{"\"\<WolframLanguageSymbol\>\"", ",", "string"}], "]"}], 
        "@", "\"\<FunctionalityAreas\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"functionalities", ",", "\"\<GraphicsPrimitiveSymbols\>\""}], 
       "]"}], ">", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsPrimitiveQ", "[", "symbol_Symbol", "]"}], ":=", 
  RowBox[{
   RowBox[{"GraphicsPrimitiveQ", "[", "symbol", "]"}], "=", 
   RowBox[{"GraphicsPrimitiveQ", "[", 
    RowBox[{"ToString", "@", "symbol"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsPrimitiveQ", "[", "expression_", "]"}], ":=", 
   RowBox[{"GraphicsPrimitiveQ", "[", 
    RowBox[{"Head", "@", "expression"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"GraphicsPrimitiveQ", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8030445742455606`*^9, 3.803044574609819*^9}, {
   3.803045041475271*^9, 3.803045047967004*^9}, {3.8030461080097637`*^9, 
   3.803046117802561*^9}, 3.803065432907547*^9, {3.803065463392075*^9, 
   3.803065472660275*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"486389d3-a2ef-47bc-a1a4-54014a8f5526"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803065484603656*^9, 3.803065486299971*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"3c0a366e-715e-478a-8ddb-5eca41eef499"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsPrimitiveQ", "@", 
  RowBox[{"EntityValue", "[", 
   RowBox[{"graphicsSymbols", ",", "\"\<Name\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8030347922556257`*^9, 3.803034835639675*^9}, {
   3.8030348692958803`*^9, 3.8030348943728027`*^9}, {3.803034951925241*^9, 
   3.803034954899005*^9}, 3.803039982315939*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"c35b94ea-0f91-4216-8bb4-13e997887e62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.803034896810481*^9, 3.803034956122631*^9, 3.803039528868458*^9, 
   3.8030408948644123`*^9, {3.803044492684868*^9, 3.803044512741431*^9}, 
   3.803044579421473*^9, 3.803045077272814*^9, 3.803046126605699*^9, 
   3.8030655335418997`*^9, 3.8030715571621*^9, 3.803211014815873*^9, 
   3.803211104909705*^9, 3.8032113818737097`*^9, 3.8032116897836113`*^9, 
   3.803641819634206*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"faa89d3a-a518-4ba2-a6dd-6de745e2a878"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsPrimitiveQ", "@", 
  RowBox[{"{", 
   RowBox[{
   "AASTriangle", ",", "ASATriangle", ",", "AffineTransform", ",", "Red", ",",
     "Green", ",", "Blue", ",", "Graphics", ",", 
    RowBox[{"2", "+", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.80303431191394*^9, 3.8030343966254683`*^9}, {
  3.803034557523629*^9, 3.803034558940555*^9}, {3.803035297966565*^9, 
  3.8030353010226297`*^9}, {3.803044525998719*^9, 3.803044537966084*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"75998bd8-358d-4430-892d-da1cffe51830"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "False", ",", "False", ",", "False", ",", "False",
    ",", "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.803035301679653*^9, 3.8030353268396883`*^9}, 
   3.803039531225131*^9, 3.8030408969850607`*^9, {3.8030445143366833`*^9, 
   3.80304453859344*^9}, 3.80304458100389*^9, 3.8030450788085127`*^9, 
   3.8030461298304996`*^9, 3.803046717673695*^9, 3.803065536508326*^9, 
   3.803071559081846*^9, 3.8032110148274527`*^9, 3.803211104918578*^9, 
   3.80321138188853*^9, {3.803211689799419*^9, 3.803211705998074*^9}, 
   3.803641819669351*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"68109a08-4bf0-4ed6-8cd2-775ec489ec5e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Description and TranslatedDescription functions for GraphicsPrimitive\
\>", "Subsubsection",
 CellChangeTimes->{{3.802918105640974*^9, 3.802918129269177*^9}, {
   3.8030354232102823`*^9, 3.803035433029114*^9}, {3.80303954353528*^9, 
   3.8030395454743433`*^9}, 3.803066633763335*^9, {3.803066932426043*^9, 
   3.803066943920727*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"cb29b891-508e-4cda-898d-dbf330820a9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Description", "[", "expression_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Description", "[", 
     RowBox[{"Head", "@", "expression"}], "]"}], "/;", 
    RowBox[{"GraphicsPrimitiveQ", "@", "expression"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Description", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3bNjfsru0DeOszTWgOmTTaFFIFoj9yWY/vUzpAJE
u57UrgbRu24Xd4LoGYenTQLRUkKb5oLoJ8ZmS0D0uh3JTHuAtJf4C1YQfWd1
ET+I3rXJUBxE83AyWYBoQT5RaxC9SbDOHkSLRWR7gOhtRrkxIPrwsddgWkZ6
bQKIXnD7dwqIFm+wyATRz11zwTTD6tp6EM2V+rIBRK84b9IKomfq9IHpS92l
vSBao+XABBCd/fn8dBBt/YFxBoi+Ufp5JYhucrZdDaIrODcpHAPS4TnciiB6
k6aVPojuDlI3ANE9vtamIFqjYboFiJ41M+M5iNbK6HwNoi+cvG5wHGROpZ85
iH5+dEEoiH42/ReY3hgQPeEEyL+ZfZNAtNfbPwt5wt447ihbuAREAwAv3c+B

  "],
 CellLabel->"In[36]:=",ExpressionUUID->"b91842e1-4442-4228-b9f8-29e268786d6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TranslatedDescription", "[", 
   RowBox[{"expression_", ",", "language_String"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"TranslatedDescription", "[", 
    RowBox[{
     RowBox[{"Head", "@", "expression"}], ",", "language"}], "]"}], "/;", 
   RowBox[{
   "GraphicsPrimitiveQ", "@", "expression"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TranslatedDescription", "[", "expression_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Description", "[", 
     RowBox[{"Head", "@", "expression"}], "]"}], "/;", 
    RowBox[{"GraphicsPrimitiveQ", "@", "expression"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"TranslatedDescription", ",", "Listable"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8030446449912777`*^9, 3.8030446453799562`*^9}, {
   3.803044754672215*^9, 3.8030447592945747`*^9}, {3.8030448026555147`*^9, 
   3.803044825368319*^9}, {3.803044939620572*^9, 3.803045012711376*^9}, {
   3.8030451015647097`*^9, 3.8030451536938343`*^9}, {3.803045582516329*^9, 
   3.8030456178416977`*^9}, {3.803045648018176*^9, 3.803045785590054*^9}, {
   3.803047179831214*^9, 3.803047225103881*^9}, {3.8030472816840963`*^9, 
   3.803047336870998*^9}, {3.8030475497794867`*^9, 3.803047562815764*^9}, {
   3.803047665198462*^9, 3.8030476683649673`*^9}, 3.803047744420781*^9, {
   3.803066643075448*^9, 3.803066644245105*^9}, {3.803066978207711*^9, 
   3.8030670005388947`*^9}, {3.803067125531249*^9, 3.803067145967855*^9}, {
   3.8030672617363977`*^9, 3.803067293630785*^9}, {3.803067324593215*^9, 
   3.803067349838043*^9}, {3.8030682353146133`*^9, 3.80306825089923*^9}, {
   3.803068877076333*^9, 3.803068953323247*^9}, {3.803069113283553*^9, 
   3.8030691146370573`*^9}, {3.803071647656475*^9, 3.803071664532481*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c2b7325a-5a56-42fb-a1c8-fdb4b830b707"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.80306683319981*^9, 3.803066847617836*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"20bfdcff-5bb9-4082-9f61-6287d38843b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Description", "@", 
  RowBox[{"{", 
   RowBox[{
   "AASTriangle", ",", "ASATriangle", ",", "AffineTransform", ",", "Red", ",",
     "Green", ",", "Blue", ",", "Graphics", ",", 
    RowBox[{"2", "+", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.803046486224038*^9, 3.803066860417265*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"936af9e2-4f8a-4203-a161-b570a13dd9f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AASTriangle\"\>", ",", "\<\"ASATriangle\"\>", 
   ",", "\<\"Affine Transform\"\>", ",", "\<\"Red\"\>", 
   ",", "\<\"Light Green\"\>", ",", "\<\"Blue\"\>", ",", "\<\"Graphics\"\>", 
   ",", 
   RowBox[{"Description", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.803047051136569*^9, 3.803047106755589*^9, 3.803047151439621*^9, 
   3.803047262858032*^9, 3.803048249284568*^9, 3.8030511856521482`*^9, 
   3.8030668640719357`*^9, {3.8030673095899487`*^9, 3.803067328001225*^9}, 
   3.803068362546784*^9, 3.803071672196207*^9, 3.8032110492164717`*^9, {
   3.803211088200803*^9, 3.803211110629755*^9}, 3.803211382214505*^9, 
   3.803211747827066*^9, 3.803212105948332*^9, 3.8036038778757277`*^9, 
   3.803603921490904*^9, 3.803603975920327*^9, 3.803641819771303*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"b2957d8d-e2d4-4a57-be79-0141088633a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TranslatedDescription", "@", 
  RowBox[{"{", 
   RowBox[{
   "AASTriangle", ",", "ASATriangle", ",", "AffineTransform", ",", "Red", ",",
     "Green", ",", "Blue", ",", "Graphics", ",", 
    RowBox[{"2", "+", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.803047375101946*^9, 3.80306731558657*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"236adb57-9edd-4665-ae2b-d944e79ac8fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Symbol\"\>", ",", "\<\"Symbol\"\>", ",", 
   RowBox[{"TranslatedDescription", "[", "AffineTransform", "]"}], 
   ",", "\<\"Red\"\>", ",", "\<\"Light Green\"\>", ",", "\<\"Blue\"\>", ",", 
   RowBox[{"TranslatedDescription", "[", "Graphics", "]"}], ",", 
   RowBox[{"TranslatedDescription", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.803047376342256*^9, 3.803047412029215*^9, 3.803047571124627*^9, 
   3.8030477499401693`*^9, 3.8030482708087873`*^9, 3.803051196688837*^9, 
   3.803067330193681*^9, 3.803068382394072*^9, 3.803071676033453*^9, 
   3.8032110506558313`*^9, {3.803211088242779*^9, 3.803211110676345*^9}, 
   3.8032113822639313`*^9, 3.803211752420265*^9, 3.8032121079141397`*^9, 
   3.803603877888274*^9, 3.803603921550501*^9, 3.8036039759336*^9, 
   3.8036418198097773`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"09801642-0073-4088-a0e3-35bd7f99a392"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphicsPrimitiveExamples", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tetrahedron", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Hexahedron", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SASTriangle", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "2"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Hyperplane", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Cuboid", "[", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.803071936638637*^9, 3.803072014105228*^9}, {
  3.8030720514979067`*^9, 3.80307205281328*^9}, {3.803072185293807*^9, 
  3.803072231231742*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"2061adba-4216-406f-94ff-74275ebf7aaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"primitivesDescriptionTest", "=", 
   RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "}"}], "&"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Description", "@", "graphicsPrimitiveExamples"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"TranslatedDescription", "[", 
        RowBox[{"graphicsPrimitiveExamples", ",", "\"\<Spanish\>\""}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"TranslatedDescription", "[", 
        RowBox[{"graphicsPrimitiveExamples", ",", "\"\<Portuguese\>\""}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"TranslatedDescription", "[", 
        RowBox[{"graphicsPrimitiveExamples", ",", "\"\<Japanese\>\""}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.803072232837158*^9, 3.803072264502844*^9}, {
   3.803072295035306*^9, 3.803072400492441*^9}, 3.803072444361453*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"1e1282b4-4f02-49b1-9e7c-868bf51d648d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"primitivesDescriptionTest", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803072418785512*^9, 3.8030724261088943`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"7247ac94-11c5-4f5c-b733-3def38a2a94b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Tetrahedron\"\>", 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Spanish\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Portuguese\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Japanese\"\>"}], "]"}]},
    {"\<\"Hexahedron\"\>", 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Spanish\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Portuguese\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Japanese\"\>"}], "]"}]},
    {"\<\"Triangle\"\>", 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Spanish\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Portuguese\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Japanese\"\>"}], "]"}]},
    {"\<\"Arrow\"\>", 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Spanish\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Portuguese\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Japanese\"\>"}], "]"}]},
    {"\<\"Hyperplane\"\>", 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Spanish\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Portuguese\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Japanese\"\>"}], "]"}]},
    {"\<\"Cuboid\"\>", 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Spanish\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Portuguese\"\>"}], "]"}], 
     RowBox[{"TranslatedDescription", "[", 
      RowBox[{"Symbol", ",", "\<\"Japanese\"\>"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803211810912076*^9, 3.803211817250441*^9}, {
   3.8032120052499123`*^9, 3.803212031860031*^9}, 3.803212133462296*^9, 
   3.803603877987597*^9, 3.803603921724718*^9, 3.803603984228867*^9, 
   3.803641819865507*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"1a7548b7-0082-4906-b8b0-db6887baf8c0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Description function for Graphics", "Subsubsection",
 CellChangeTimes->{{3.8030684177814217`*^9, 3.803068430728127*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"85034e69-91ec-4a7b-a47d-54ef33723b7c"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "ToGraphics", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToGraphics", "[", "arg_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"ToExpression", "@", 
      RowBox[{"StringDelete", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"#", ",", 
          RowBox[{"FormatType", "\[Rule]", "StandardForm"}]}], "]"}], ",", 
        "\"\<Global`\>\""}], "]"}]}]}], "&"}], "@", 
   "arg"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"ToGraphics", ",", "Listable"}], "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.8028959581026697`*^9, 3.802895969698352*^9}, {
  3.802896761629704*^9, 3.802896775127728*^9}, {3.802897002591516*^9, 
  3.8028970186493263`*^9}, {3.802897747498891*^9, 3.802897749280809*^9}, {
  3.802897894895358*^9, 3.8028978951878967`*^9}, {3.802913312874753*^9, 
  3.802913329632691*^9}, {3.802917492083027*^9, 3.8029174940042877`*^9}, {
  3.802917571110785*^9, 3.80291757148663*^9}},
 Background->GrayLevel[0.5],
 CellLabel->"In[46]:=",ExpressionUUID->"12ac63b7-b657-4617-9109-d2114d7a16ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Description", "[", "graphics_Graphics", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "elements", ",", "primitives", ",", "sorted", ",", "descriptions"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"elements", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"List", "@@", "graphics"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"primitives", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"elements", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ColorQ", "@", "#"}], "||", 
           RowBox[{"GraphicsPrimitiveQ", "@", "#"}]}], ")"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sorted", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ColorQ", "@", "#1"}], "&"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{"primitives", ",", "2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"descriptions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Description", "[", "#", "]"}], "&"}], "/@", "sorted"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Description", "[", "Graphics", "]"}], "<>", "\"\<: \>\"", "<>", 
      RowBox[{"ToString", "@", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"#", ",", "\"\< \>\""}], "]"}], "&"}], "/@", 
          "descriptions"}], ",", " ", "\"\<, \>\""}], "]"}]}], "<>", 
      "\"\<.\>\""}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.803052269215263*^9, 3.8030524261281557`*^9}, 
   3.803052668156299*^9, {3.8030534796495237`*^9, 3.803053486924922*^9}, {
   3.803053526300123*^9, 3.8030535329665127`*^9}, {3.803053580204733*^9, 
   3.8030536024354353`*^9}, {3.803055405588593*^9, 3.803055435505726*^9}, {
   3.803055732674384*^9, 3.803055899135805*^9}, {3.803055929181059*^9, 
   3.803055935352083*^9}, {3.803055966452196*^9, 3.8030559938262777`*^9}, {
   3.803056075995322*^9, 3.8030560808071947`*^9}, {3.8030568227085238`*^9, 
   3.8030568232406693`*^9}, {3.803056880804653*^9, 3.803056881058213*^9}, {
   3.8030569701660147`*^9, 3.803056975730714*^9}, {3.803057198469253*^9, 
   3.8030572219246473`*^9}, {3.8030573849744463`*^9, 3.80305740317451*^9}, 
   3.803058090886632*^9, {3.8030685584869013`*^9, 3.8030685927349863`*^9}, {
   3.803068645368252*^9, 3.8030686920190907`*^9}, {3.8030687252954683`*^9, 
   3.803068749869322*^9}, {3.803069005070991*^9, 3.803069015689135*^9}, 
   3.8030725149699383`*^9, {3.803072814091381*^9, 3.803072831273314*^9}, {
   3.803072890123773*^9, 3.8030729229754744`*^9}, {3.803122020163496*^9, 
   3.803122032436612*^9}, {3.8031221524999247`*^9, 3.803122199924108*^9}, 
   3.803122265338254*^9, {3.8031223251524467`*^9, 3.803122341043371*^9}, {
   3.803122591894331*^9, 3.8031226627057257`*^9}, {3.8031227349301443`*^9, 
   3.803122795460795*^9}, {3.803122835973007*^9, 3.803123044842288*^9}, {
   3.803123109040992*^9, 3.8031231109304132`*^9}, {3.803123316231221*^9, 
   3.80312340819188*^9}, 3.8036440748158283`*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"2ea36503-f0ba-4c62-a688-2d39cfa76234"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Description", "[", "graphics_Graphics", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "elements", ",", "primitives", ",", "sorted", ",", "descriptions"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"elements", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"List", "@@", "graphics"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"primitives", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"elements", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ColorQ", "@", "#"}], "||", 
           RowBox[{"GraphicsPrimitiveQ", "@", "#"}]}], ")"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sorted", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ColorQ", "@", "#1"}], "&"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{"primitives", ",", "2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"descriptions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ToLowerCase", "[", 
         RowBox[{"Description", "[", "#", "]"}], "]"}], "&"}], "/@", 
       "sorted"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\"\<A graphic consisting of \>\"", "<>", 
      RowBox[{"ToString", "@", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"#", ",", "\"\< \>\""}], "]"}], "&"}], "/@", 
          "descriptions"}], ",", " ", "\"\<, \>\""}], "]"}]}], "<>", 
      "\"\<.\>\""}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.803644082410158*^9, 3.80364412786762*^9}, {
  3.803644162547771*^9, 3.803644162936081*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"14091c90-e981-4ded-b2d0-40421c6b9372"]
}, Closed]],

Cell[CellGroupData[{

Cell["Testing Description function for Graphics", "Subsubsection",
 CellChangeTimes->{{3.803123874936015*^9, 3.8031238843566217`*^9}, {
  3.8032130166211*^9, 3.803213023540818*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"59284484-577d-49a5-b6cd-e4c9f60c3431"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Description", "[", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{"Red", ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "Blue", ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.5"}], "}"}], "]"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellLabel->
  "In[304]:=",ExpressionUUID->"a96e8944-7101-4a0b-8dd9-53ab1f05d893"],

Cell[BoxData["\<\"A graphic consisting of red rectangle, blue \
rectangle.\"\>"], "Output",
 CellChangeTimes->{
  3.803123610800535*^9, 3.8032113828821363`*^9, 3.8032118336767473`*^9, 
   3.803212147980857*^9, 3.803604294667034*^9, {3.803644141558668*^9, 
   3.803644165577673*^9}},
 CellLabel->
  "Out[304]=",ExpressionUUID->"4c152dac-2f36-48de-9571-629141d3d165"]
}, Open  ]],

Cell["AASTriangle", "Item",
 CellChangeTimes->{{3.803035503815548*^9, 3.8030355316359577`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"0db2baf7-305c-4265-9bff-968d06aa53de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalR]", "=", 
    RowBox[{"AASTriangle", "[", 
     RowBox[{
      RowBox[{"Pi", "/", "6"}], ",", 
      RowBox[{"Pi", "/", "3"}], ",", "1"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aasTriangles", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "\[ScriptCapitalR]"}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Pink", ",", 
        "\[ScriptCapitalR]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Dashed", "]"}], ",", "Pink", ",", 
        "\[ScriptCapitalR]"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "]"}], "]"}], ",", 
        "Pink", ",", "\[ScriptCapitalR]"}], "}"}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.803042254793928*^9, {3.803048339006921*^9, 3.803048343264163*^9}, {
   3.80312363703513*^9, 3.8031236453281097`*^9}, {3.803123792055313*^9, 
   3.8031238027567053`*^9}, 3.803296625024654*^9},
 CellLabel->
  "In[305]:=",ExpressionUUID->"9e4d4049-c6a5-4d0b-8e67-4258ad2a36e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aasTriangleTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"InputForm", "@", "#"}], ",", 
       RowBox[{"Description", "@", "#"}]}], "}"}], "&"}], "/@", 
    "aasTriangles"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"aasTriangleTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.803123808925284*^9, 3.803123841821241*^9}, {
  3.803124086982729*^9, 3.803124088815173*^9}, {3.8031246691934853`*^9, 
  3.8031246729578543`*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"2d9a7340-d79e-488e-9bc1-fe6dc3efde34"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"2", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "2"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {2, 0}, {
            Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Thickness[Large]], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Thickness", "[", "Large", "]"}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"2", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "2"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Thickness[Large]], 
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {2, 0}, {
            Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Dashing[{Small, Small}]], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], "]"}], ",", 
          " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"2", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "2"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Dashing[{Small, Small}]], 
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {2, 0}, {
            Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
       Dashing[{Small, Small}]}], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Thickness", "[", "Large", "]"}], ",", " ", 
             RowBox[{"Dashing", "[", 
              RowBox[{"{", 
               RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], ",", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}]}], "]"}], 
           "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"2", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "2"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Directive[
           Thickness[Large], 
           Dashing[{Small, Small}], 
           RGBColor[0, 0, 1]]], 
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {2, 0}, {
            Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803124663827876*^9, 3.803124673424642*^9}, 
   3.803211382957797*^9, 3.803211833743948*^9, 3.803212148042211*^9, 
   3.803604294799727*^9, 3.803644182909636*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"d6b3faf8-4fda-4054-969c-66c830436cb2"]
}, Open  ]],

Cell["ASATriangle", "Item",
 CellChangeTimes->{{3.8031237101190033`*^9, 3.803123721254137*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"8d8e12ca-0af0-40a7-b89e-1b3ac46ee7de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalR]", "=", 
   RowBox[{"ASATriangle", "[", 
    RowBox[{
     RowBox[{"Pi", "/", "6"}], ",", "1", ",", 
     RowBox[{"Pi", "/", "3"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"asaTriangles", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "\[ScriptCapitalR]"}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Pink", ",", 
        "\[ScriptCapitalR]"}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Dashed", "]"}], ",", "Pink", ",", 
        "\[ScriptCapitalR]"}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "]"}], "]"}], ",", 
        "Pink", ",", "\[ScriptCapitalR]"}], "}"}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.803123987545947*^9, 3.803123996869164*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"25c9fab0-475d-4677-981c-a3bd7fc8dad8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"asaTriangleTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"InputForm", "@", "#"}], ",", 
       RowBox[{"Description", "@", "#"}]}], "}"}], "&"}], "/@", 
    "asaTriangles"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"asaTriangleTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803124000018608*^9, 3.8031240690601263`*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"0a1c42e3-610c-44ce-919b-7c855fdf64a1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "4"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "4"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {1, 0}, {
            Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Thickness[Large]], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Thickness", "[", "Large", "]"}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "4"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "4"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Thickness[Large]], 
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {1, 0}, {
            Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Dashing[{Small, Small}]], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], "]"}], ",", 
          " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "4"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "4"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Dashing[{Small, Small}]], 
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {1, 0}, {
            Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
       Dashing[{Small, Small}]}], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Thickness", "[", "Large", "]"}], ",", " ", 
             RowBox[{"Dashing", "[", 
              RowBox[{"{", 
               RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], ",", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}]}], "]"}], 
           "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"3", "/", "4"}], ",", " ", 
               RowBox[{
                RowBox[{"Sqrt", "[", "3", "]"}], "/", "4"}]}], "}"}]}], "}"}],
            "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Directive[
           Thickness[Large], 
           Dashing[{Small, Small}], 
           RGBColor[0, 0, 1]]], 
         RGBColor[1, 0.5, 0.5], 
         Triangle[{{0, 0}, {1, 0}, {
            Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink triangle.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803124050190774*^9, 3.803124070989097*^9}, 
   3.8032113830355*^9, 3.80321183380088*^9, 3.803212148090622*^9, 
   3.803604294884441*^9, 3.803644197609346*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"31a8b7c6-e670-4e30-9606-a9a943e96e6e"]
}, Open  ]],

Cell["AffineHalfSpace", "Item",
 CellChangeTimes->{{3.8031243554851027`*^9, 3.803124367815959*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"d16c2636-8632-48db-93ad-dcabe9cb1b9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"affineHalfSpace", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"AffineHalfSpace", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8031244702911997`*^9, 3.803124480315587*^9}, {
  3.8031250214877033`*^9, 3.803125030796999*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"fe9e6c98-5934-48b4-978f-3ee344dbd789"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"affineHalfSpaceTest", "=", 
   RowBox[{"{", 
    RowBox[{"affineHalfSpace", ",", 
     RowBox[{"InputForm", "@", "affineHalfSpace"}], ",", 
     RowBox[{"Description", "@", "affineHalfSpace"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "affineHalfSpaceTest", "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803124485400806*^9, 3.803124594593499*^9}, {
   3.8031249680592318`*^9, 3.803124975903729*^9}, 3.8036442177889957`*^9},
 CellLabel->
  "In[319]:=",ExpressionUUID->"a13de8d6-f369-48b7-ab4c-2bd5bd45cd9a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}, {{1, 1}}],
        AffineHalfSpace[{0, 0}, {{1, -1}}, {1, 1}]]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
          RowBox[{"AffineHalfSpace", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", 
               RowBox[{"-", "1"}]}], "}"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "1"}], "}"}]}], "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         RGBColor[1, 0, 0], 
         AffineHalfSpace[{0, 0}, {{1, -1}}, {1, 1}]}]],
      AutoDelete->True,
      Editable->
       True], "\<\"A graphic consisting of red affine half space.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803124536344385*^9, 3.80312459517083*^9}, 
   3.803124978855497*^9, 3.803125033065208*^9, 3.8032113831682043`*^9, 
   3.803211833880143*^9, 3.8032121481424017`*^9, 3.803604294950234*^9, {
   3.803644203557177*^9, 3.8036442182296124`*^9}},
 CellLabel->
  "Out[320]=",ExpressionUUID->"3ebfa846-dd19-4f72-8cb0-5de2d63d6416"]
}, Open  ]],

Cell["AffineSpace", "Item",
 CellChangeTimes->{{3.803125329316728*^9, 3.803125337383524*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"1e48b0f6-fad9-46c4-8f4c-e2818dde01d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"affineSpace", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Green", ",", 
      RowBox[{"AffineSpace", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.803125340328568*^9, 3.8031253712540827`*^9}, {
  3.80312681406577*^9, 3.803126835543943*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"74ce3dde-c9aa-4475-8965-cda75ed871c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"affineSpaceTest", "=", 
   RowBox[{"{", 
    RowBox[{"affineSpace", ",", 
     RowBox[{"InputForm", "@", "affineSpace"}], ",", 
     RowBox[{"Description", "@", "affineSpace"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "affineSpaceTest", "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803126837515101*^9, 3.803126897158276*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"9d2af677-b55d-400c-b204-c2e3140636fa"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {RGBColor[0, 1, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}],
        AffineSpace[{0, 0}, {{1, -1}}]]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}], ",", " ", 
          RowBox[{"AffineSpace", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", 
               RowBox[{"-", "1"}]}], "}"}], "}"}]}], "]"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         RGBColor[0, 1, 0], 
         AffineSpace[{0, 0}, {{1, -1}}]}]],
      AutoDelete->True,
      Editable->
       True], "\<\"A graphic consisting of light green affine space.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803126886895834*^9, 3.8031269042817917`*^9}, 
   3.803211383479075*^9, 3.803211834046446*^9, 3.80321214829637*^9, 
   3.8036042950043383`*^9, 3.8036442300503798`*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"50b4b7c8-8ea3-4355-aea2-040f09b982d1"]
}, Open  ]],

Cell["Annulus", "Item",
 CellChangeTimes->{{3.8032122234824944`*^9, 3.803212238544457*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"0b26a03a-972f-45de-bd21-ba497287c2f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"annulus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", 
        RowBox[{"Annulus", "[", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Pink", ",", 
        RowBox[{"Annulus", "[", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Dashed", "]"}], ",", "Pink", ",", 
        RowBox[{"Annulus", "[", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EdgeForm", "[", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "]"}], "]"}], ",", 
        "Pink", ",", 
        RowBox[{"Annulus", "[", "]"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8032122848057632`*^9, 3.8032122904653463`*^9}, {
  3.803212325458466*^9, 3.8032123330364656`*^9}, {3.803212496884186*^9, 
  3.803212527740281*^9}, {3.803212560738522*^9, 3.803212575544574*^9}, {
  3.803212610611966*^9, 3.803212615125635*^9}},
 CellLabel->
  "In[324]:=",ExpressionUUID->"94fffe8e-9073-4e01-aca6-87b08838fe88"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"annulusTests", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"InputForm", "@", "#"}], ",", 
       RowBox[{"Description", "@", "#"}]}], "}"}], "&"}], "/@", "annulus"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"annulusTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8032123420937967`*^9, 3.803212386891986*^9}, {
  3.80321244650325*^9, 3.803212461350274*^9}, {3.8032126259727983`*^9, 
  3.803212626348566*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"b6911215-d79e-49c4-a9af-b50b7dc654db"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       InterpretationBox[
        FilledCurveBox[
         NCache[{{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {0, Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[-1, 2]}, {0, Rational[-1, 2]}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}, {{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, -0.5}, {0.5, -0.5}, {0.5, 0.5}, {0, 0.5}, {-0.5, 
              0.5}, {-0.5, -0.5}, {0, -0.5}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}]],
        Annulus[{0, 0}, {
          Rational[1, 2], 1}]]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Annulus", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", " ", "1"}], "}"}]}], "]"}]}], 
         "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         RGBColor[1, 0.5, 0.5], 
         Annulus[{0, 0}, {
           Rational[1, 2], 1}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink annulus.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Thickness[Large]], 
       InterpretationBox[
        FilledCurveBox[
         NCache[{{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {0, Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[-1, 2]}, {0, Rational[-1, 2]}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}, {{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, -0.5}, {0.5, -0.5}, {0.5, 0.5}, {0, 0.5}, {-0.5, 
              0.5}, {-0.5, -0.5}, {0, -0.5}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}]],
        Annulus[{0, 0}, {
          Rational[1, 2], 1}]]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Thickness", "[", "Large", "]"}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Annulus", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", " ", "1"}], "}"}]}], "]"}]}], 
         "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Thickness[Large]], 
         RGBColor[1, 0.5, 0.5], 
         Annulus[{0, 0}, {
           Rational[1, 2], 1}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink annulus.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Dashing[{Small, Small}]], 
       InterpretationBox[
        FilledCurveBox[
         NCache[{{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {0, Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[-1, 2]}, {0, Rational[-1, 2]}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}, {{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, -0.5}, {0.5, -0.5}, {0.5, 0.5}, {0, 0.5}, {-0.5, 
              0.5}, {-0.5, -0.5}, {0, -0.5}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}]],
        Annulus[{0, 0}, {
          Rational[1, 2], 1}]]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", 
             RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], "]"}], ",", 
          " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Annulus", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", " ", "1"}], "}"}]}], "]"}]}], 
         "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Dashing[{Small, Small}]], 
         RGBColor[1, 0.5, 0.5], 
         Annulus[{0, 0}, {
           Rational[1, 2], 1}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink annulus.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
       Dashing[{Small, Small}]}], 
       InterpretationBox[
        FilledCurveBox[
         NCache[{{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {0, Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[-1, 2]}, {0, Rational[-1, 2]}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}, {{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, -0.5}, {0.5, -0.5}, {0.5, 0.5}, {0, 0.5}, {-0.5, 
              0.5}, {-0.5, -0.5}, {0, -0.5}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}]],
        Annulus[{0, 0}, {
          Rational[1, 2], 1}]]}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Thickness", "[", "Large", "]"}], ",", " ", 
             RowBox[{"Dashing", "[", 
              RowBox[{"{", 
               RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], ",", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}]}], "]"}], 
           "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
          RowBox[{"Annulus", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", " ", "1"}], "}"}]}], "]"}]}], 
         "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         EdgeForm[
          Directive[
           Thickness[Large], 
           Dashing[{Small, Small}], 
           RGBColor[0, 0, 1]]], 
         RGBColor[1, 0.5, 0.5], 
         Annulus[{0, 0}, {
           Rational[1, 2], 1}]}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light pink annulus.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.803212387781623*^9, {3.803212441049591*^9, 3.8032124618108273`*^9}, 
   3.803212577919991*^9, {3.8032126192768297`*^9, 3.803212626951632*^9}, 
   3.803604295063011*^9, 3.803644236394908*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"3bd1dac9-1ba7-4328-9863-a232428156c1"]
}, Open  ]],

Cell["Arrow", "Item",
 CellChangeTimes->{{3.80321265351042*^9, 3.803212667683069*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"26c76089-8871-42a7-bfaf-7c14a1e4159d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", ".5"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arrows", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Green", ",", "a"}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "a"}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue", ",", "a"}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Dashed", ",", "Red", ",", "a"}], "}"}], "]"}]}],
     "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.803212767693014*^9, 3.803212811448413*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"f61efbf6-d8ed-41fc-b3ff-1afab13bcbd8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"arrowTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"InputForm", "@", "#"}], ",", 
       RowBox[{"Description", "@", "#"}]}], "}"}], "&"}], "/@", "arrows"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"arrowTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803212814986743*^9, 3.803212845792856*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"7771dffa-eace-47e5-bc3b-8208cba84894"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {RGBColor[0, 1, 0], Dashing[{Small, Small}], 
       {Arrowheads[Large], ArrowBox[{{0, 0}, {1, 0.5}}]}}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", "Large", "]"}], ",", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         Dashing[{Small, Small}], 
         RGBColor[0, 1, 0], {
          Arrowheads[Large], 
          Arrow[{{0, 0}, {1, 0.5}}]}}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of light green arrow.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       {Arrowheads[Large], ArrowBox[{{0, 0}, {1, 0.5}}]}}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", "Large", "]"}], ",", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         RGBColor[1, 0, 0], {
          Arrowheads[Large], 
          Arrow[{{0, 0}, {1, 0.5}}]}}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of red arrow.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0, 0, 1], Thickness[Large], 
       {Arrowheads[Large], ArrowBox[{{0, 0}, {1, 0.5}}]}}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "Large", "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", "Large", "]"}], ",", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         Thickness[Large], 
         RGBColor[0, 0, 1], {
          Arrowheads[Large], 
          Arrow[{{0, 0}, {1, 0.5}}]}}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of blue arrow.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0, 0], Thickness[Large], Dashing[{Small, Small}], 
       {Arrowheads[Large], ArrowBox[{{0, 0}, {1, 0.5}}]}}], 
     InterpretationBox[
      StyleBox[
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "Large", "]"}], ",", " ", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{"Small", ",", " ", "Small"}], "}"}], "]"}], ",", " ", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", "Large", "]"}], ",", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "0.5"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}], "}"}], "]"}],
       ShowStringCharacters->True,
       NumberMarks->True],
      InputForm[
       Graphics[{
         Thickness[Large], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0], {
          Arrowheads[Large], 
          Arrow[{{0, 0}, {1, 0.5}}]}}]],
      AutoDelete->True,
      Editable->True], "\<\"A graphic consisting of red arrow.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803212846525092*^9, 3.8036042951280947`*^9, 
  3.803644242307817*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"442db79c-94a8-495f-be24-8ba6701fb7d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["graphicsSymbols"], "Input",
 CellLabel->
  "In[188]:=",ExpressionUUID->"291320f2-aa3b-458d-bbca-7dd04e68f26b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"AASTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AASTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AASTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ASATriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ASATriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ASATriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AffineHalfSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AffineHalfSpace\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AffineHalfSpace\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AffineSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AffineSpace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AffineSpace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Annulus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Annulus\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Annulus\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Arrow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Arrow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Arrow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BSplineCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BSplineCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BSplineCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ball\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ball\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Ball\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BezierCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BezierCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BezierCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CapsuleShape\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CapsuleShape\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CapsuleShape\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Circle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Circle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Circle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Circumsphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Circumsphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Circumsphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cone\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cone\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cone\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConicHullRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConicHullRegion\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ConicHullRegion\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cube\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cube\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cube\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cuboid\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cuboid\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cuboid\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cylinder\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cylinder\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cylinder\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiskSegment\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DiskSegment\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DiskSegment\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dodecahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Dodecahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Dodecahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ellipsoid\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ellipsoid\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Ellipsoid\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EmptyRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EmptyRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EmptyRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FilledCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FilledCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FilledCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FullRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FullRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FullRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GraphicsComplex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GraphicsComplex\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GraphicsComplex\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfLine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfLine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfLine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfPlane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfPlane\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfPlane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfSpace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfSpace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hexahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hexahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hexahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hyperplane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hyperplane\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hyperplane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Icosahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Icosahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Icosahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InfiniteLine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InfiniteLine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"InfiniteLine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InfinitePlane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InfinitePlane\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"InfinitePlane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Insphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Insphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Insphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JoinedCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JoinedCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JoinedCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Octahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Octahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Octahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Parallelepiped\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Parallelepiped\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Parallelepiped\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Parallelogram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Parallelogram\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Parallelogram\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Polyhedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Polyhedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Polyhedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Prism\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Prism\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Prism\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rectangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Rectangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Rectangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RegularPolygon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RegularPolygon\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RegularPolygon\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SASTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SASTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SASTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SSSTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SSSTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SSSTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShellRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShellRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ShellRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Simplex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Simplex\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Simplex\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Sphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Sphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SphericalShell\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SphericalShell\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SphericalShell\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StadiumShape\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StadiumShape\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StadiumShape\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tetrahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tetrahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tetrahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Triangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Triangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Triangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tube\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tube\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tube\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8036042951768417`*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"09176ef6-e1b9-4793-8cbc-fa0230e3449b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"SSSTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SSSTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SSSTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"documentation basic examples\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationBasicExamples\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
    "EntityProperty"]}], "]"}]], "Input",
 CellChangeTimes->{{3.803123725719708*^9, 3.80312376156106*^9}, 
   3.803124348536895*^9, 3.8031252186337967`*^9, 3.80321225621478*^9, 
   3.803212690395351*^9, {3.803297408411323*^9, 3.803297426158146*^9}, {
   3.803297457473114*^9, 3.8032974704284573`*^9}, {3.803297505185206*^9, 
   3.803297529655012*^9}, 3.803297590903604*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"c3270d06-d715-4f96-aa21-b2a54f2b1839"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exploring NumericFunction symbols", "Subsubsection",
 CellChangeTimes->{{3.803213078715761*^9, 3.803213118829568*^9}, {
  3.803295612186345*^9, 
  3.803295619746408*^9}},ExpressionUUID->"50419dd1-f6de-4542-a9ac-\
182318a2b0f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"wlEntityProperties", ",", 
       RowBox[{"AllPropertiesForSymbol", "@", "Sin"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8032131842187643`*^9, 3.803213228497764*^9}, {
  3.803213259534333*^9, 3.80321339537636*^9}},
 CellLabel->
  "In[562]:=",ExpressionUUID->"3c37e0e8-d0f8-4228-a137-69a2818f9906"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{"\"attributes\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Attributes\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Attributes\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"Listable\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Listable\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Listable\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"NumericFunction\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NumericFunction\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"NumericFunction\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Protected\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Protected\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Protected\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"character count\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CharacterCount\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CharacterCount\\\"]\""},
      "EntityProperty"], "3"},
    {
     TemplateBox[{"\"common option values\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CommonOptionValues\""}],
          "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CommonOptionValues\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]},
    {
     TemplateBox[{"\"date introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateIntroduced\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Thu 23 Jun 1988\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1988", ",", "6", ",", "23"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False]},
    {
     TemplateBox[{"\"date last modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateLastModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateLastModified\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       RowBox[{
         StyleBox[
         "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
         "\"Mon 30 Mar 2015\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "3", ",", "30"}], "}"}], ",", "\"Day\"", 
           ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False]},
    {
     TemplateBox[{"\"dates modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DatesModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DatesModified\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Wed 19 May 1999\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"1999", ",", "5", ",", "19"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Wed 9 Jul 2014\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2014", ",", "7", ",", "9"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False], ",", 
       TemplateBox[{
         RowBox[{
           StyleBox[
           "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
           "\"Mon 30 Mar 2015\""}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"2015", ",", "3", ",", "30"}], "}"}], ",", "\"Day\"", 
             ",", "\"Gregorian\"", ",", 
             RowBox[{"-", "3.`"}]}], "]"}]},
        "DateObject",
        Editable->False]}], "}"}]},
    {
     TemplateBox[{"\"documentation basic examples\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationBasicExamples\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        Cell["The argument is given in radians:", "ExampleText",
          ExpressionUUID->"9606a961-5d2a-4b6f-8fb0-c8b8aa4cd58c"], ",", Cell[
         BoxData[
          RowBox[{"Sin", "[", 
           RowBox[{"Pi", "/", "3"}], "]"}]], "Input",
          ShowStringCharacters->True,ExpressionUUID->
          "3aebb446-deed-42f1-844d-334b67551532"], ",", Cell[BoxData[
          FractionBox[
           SqrtBox["3"], "2"]], "Output",
          ShowStringCharacters->True,ExpressionUUID->
          "0048f0be-2aa7-406a-b355-81d818c05d42"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{Cell[TextData[{
          "Use ",
          Cell[BoxData[
           ButtonBox["Degree",
            BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
           "da84299e-c686-41af-bb46-d3b31dca9930"],
          " to specify an argument in degrees:"
         }], "ExampleText",ExpressionUUID->
          "370c5697-b0b3-459d-a4f3-8f765ac2af3b"], ",", Cell[BoxData[
          RowBox[{"Sin", "[", 
           RowBox[{"60", "Degree"}], "]"}]], "Input",
          ShowStringCharacters->True,ExpressionUUID->
          "ef390d77-3fde-4508-9e6f-ac765ee0f87e"], ",", Cell[BoxData[
          FractionBox[
           SqrtBox["3"], "2"]], "Output",
          ShowStringCharacters->True,ExpressionUUID->
          "258f9931-c17a-496f-b520-43c2628885bc"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        Cell["Plot over a subset of the reals:", "ExampleText",ExpressionUUID->
          "be17cf00-19e5-4ecd-b225-a880e257f010"], ",", Cell[BoxData[
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Sin", "[", "x", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", 
              RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
          ShowStringCharacters->True,ExpressionUUID->
          "e9018251-a3a7-4482-923d-ff099986cac1"], ",", Cell[BoxData[
          GraphicsBox[{{{}, {}, 
             TagBox[
              {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6],
                Opacity[1.], LineBox[CompressedData["
1:eJwlmXk4lN/7x61ZUmaeISRF+0pKaaH7VEKRUqJFSFpIEhGSSiUk2SvZUpb4
RHZJTpSikKiEopAsM/NYx8xk+Z3v9fvrXK/rmvMs7/f7vu/zXKNhf27fCTER
EZFsURGR/63iWLauc921Lbyy/18X9ZZtnhtpC/cKmobnkFX4XMuhOeIcnI/O
N/hC1j8Kp/mFEVfg6tNyn2SythjeqEiJuAtq15Jq9pP1q23EkviIRFi/Y4bF
gfBE2Oes0nI/IhvWYeEr7zvZED5knRcTgWGD4lMDNT8Mmyt3yW5zr4ebpa92
yO6oB1cfs2N5rt+h6OIbndLmJjhbfCJUbMEvWJw595Mxuw2+9OyUSbPvgq7u
5kOV0p0QrMUTKTzUAxpSGaK7mN1wfkVV9OsUNgjd36/L5PdA14muq0mFbDjv
WbxgnXgvWCaJOF99z4bnV2eoFc/ohU2KG7ehXjY02Oksfjq/F8SmnnLxSg5s
7521Vde0FyIabhvhPA4cP5WsIJrQC7neewSvyrlg1tzkoavXB8LjZ7J+ugzA
f7N66u7Z94Mdc9ir1HMASqeOzHvh1A+VZT7bH/oNQKRDZG2jWz+EqQR/Pxg6
AC9MPDeP+vfDkk/pYl+eDcB6s+DFPcn9YLGp2/IDewByji+6HfK7H7IYx6YK
nQZBJcbibMUhNiiU9VRHuw1CSrlY9fRjbPA+4xp1wWcQTH60GJqdZoPBuyvL
1gQPgnujeHKZJxtaLyXsf/Z0EO7muqWYRrJB+m9r2uOeQfhoMNNuzkc22L+y
3Bt2cggCDmCe3zoOrClUplTODYEbb0Gwux4HxLJbGh9dHALv+atrbLdzIDnJ
xiovcAhWPbKzmGfOgY7rJ22+ZQyBbnL4lk3OHLDf5ek8hx6C1xt8a38mEW6K
Dky/OAyMM5s4deJcWFNvtUv76jAc7WrKLZDhgli1ilxJ4DAEOhSxI+W5kFwS
f/fjg2HoPRJeuF6VCx3xKTHcl8NglX/7guIaLtg7FDzRERmB329cV6+34cLx
wS+vXweOgKO/Y7sgmwt2PmFWxWEj0JY757hPPhesxU252fdHwFO3dudwMRcs
Fd+oJqaPQGhc8eY64qPxxhzPy1Uj0G60IHJpIxc0r91ZuUl6FGQmPmu4jHBh
uezON9qMUVCLdba4wOfCkkiJw8uUR+Ft8bJmt3EuqKdcuqW8dBTugNLXgxI0
sKodO3hGo7AlzPdSFYsGPsPwft6tUVifGZe1TpuGkQeiWpl3R6H9Y17Yax0a
Bue/qky+Nwr+osKC7Rto6NPRGQ5PG4Xi+gfv1gANPw/ON3N9Pwqiwfo9eaY0
VCRNiq+S4gGXrXxh60kaypaVxC6U50G1x5eFex1peJnroT1HiQec8sLpVs40
5L9l20xfwgNactBrtxsNaT0tL3oNeXB/QW7pj8s0hKwuOpcawIMjWudMbkTS
8GFNU7dHKA8GdyavkImhQXrd2NEdMTwwZovcDLhPw42NuqZdKeT6rM4kp3ga
Lm0rWjq/kgejV+XPfk+lodigKXGwhgf72k5O03hKA89wbFb5Fx7MkD6qYJ9J
g5uJrqRdFw9aboqG1GbT4GRR9DtefAze7Ypo3VlMQ7pl08Gz08dgVcym6ZYl
NHQfHPukxxqDMpHTmYdLaTh2VLesdf4YNESc2rz7NQ0HTxbFqmwbAwfdkZCm
9zQYeRXtj746BjrzxKOufiXP69P0wSFwDFac3hTDaiL6+Y5t1Qkbg6JINbHE
7zRsuaa7ujFxDJ77uComttKwPrhIjonH4PUyZ3WD3zRcCGm6/uvdGKRcUzkZ
20FDbuiYMLtuDFZH51G9nTSsitTtNWsbA3aZa+K5bhoWxhVVhkyMQf76Kj+N
fhrsE5r0rCX5cL351vAmNg1JSWN5K2bwYdZAT40ph4Y5KbrJH+bwIXdbyH+H
aBoOp1mpxC7kg7qzea7FAA33n14Mc1zJh01dr1SNB0m+sor8pPX40HwnVVl5
mIa9z5tGm7bzYUAzP3OEcGjumHOaCR+GJ24/qh6hQbZI94jhET7UCerzrXk0
GL+walA8zofps9s+zx6jIeDlxZ1/nMjz7Bnd+5mw2Osi3Rs+fDD/Gn1hiYCG
jBlU6oQ/H0Ikfu/9QnjfEWeFi7f58DO9ScdLSIMw/Z3/QCQfwqtM1Fn/aHjM
Ux90jOODFpfJSiFsanDJtvMJHwKWis7QHCf5D/9aa/2MDwWywzOyCBusCs7Y
U8aHiXTzhZETNLB9upSr3/HBTMNvI59wVNWWW9s+8WH8xcoDFpM06M16MPqy
iQ9WcdsvphH+c3z4+LpffFjvmZk4SDg0Z3dDVg8fprz31K2ZIn5OpaGlg3x4
ZqMmfoZwm6lY9iMBHxptJbfEEg6ItVZTFRNAir7Q7zVhzZ7C21GyAhjTG6z8
SfjbOqZwBksA25d0UEOE/a6fOX1LVQAZu96fmCC85HPlN5GFAhjxji+bIlw/
V32Hz0oBRMs5qAkIezn75A3rCCCzbY5/L2H1ki8aZ/UFML63hl1PuEpKK6x7
hwB4xt5Hswm7HgiatDUTQPbqVV9uEFZ+3OncbCmAdt7wXnPCrwf0W/fZEp75
o1GBsOOW+ztrTgngsSvP+hN5fypkqGiHqwBe3LdkXyVc0my6GHsJYEsg5b+M
sP2StKgN1wTw4+22udVEX1kPUfHcIAFUHBQrtyWcW3Hk/IoIASQ0uDhxiD+H
GYXtT2IFcHdH+mw3wmI2DLO5jwWwYOfnzxzib2amU+m9TAGYCGaG2RG2ELxd
zswXwG5e4IEPJB/jhvMeBJcK4JWD4/wVhE07Gj0u1wrgwiuq8TOf5EFLs4v3
lbz/Tb0iJcJxlwP3ubYJAPmGPrYgeeQo62sdpwVw5UhgdN4o8XdPao8xU0jm
j8sfySHib7yIVYWKEDLH7JkSpD7a+g5Xbp4vhGO5l4wEpJ60AuSTNdcKgdYx
bqwi9VZf6nVE4YAQ6kxU3cZ7iD+yjdV3jgpBXZoey/1L/Dm4aoPUSSFo6d8I
tiP17Dr8W0HoKQRxi/NNSaTemctN6trvC2FPlKVq4U/Sn6QSmVVJQug/66aF
fhC9/wxZPE8XQkKk76WKFhocHsW2Xi0WQm54Q2k26T/Fyn09Gt+FcOSYFr3y
Mw13ePorZX8JgWF5uNbrE/HnS/i5ob9CWBIT0V1aS8P0sI28ijEhcIPaPq76
QIONVJC4g9I/YJ/XdcmtoGHtnx+GpvP+gWcGpf2a9EPpN6uDdZb8g7qEyDXv
yoifft8Zkrr/oHXEc7iE9FNJ3pK5qZb/QGqwzMcol4b/ut5t6In+B8XCE4qc
RBquVcz2rY//B5/9skSukP5umeSCi1P+Qa3sxrUyD2kQsZ5lGFTwDypOXnad
RubD/sYT+5d//QcfB+SOPrlN+kG5hIuzwjgk8SpCXTxIv0nc9nggYhzeBcpt
3rqdhltV9T/9H45DsarHoigy394N2igrPiG/37FauW0zDTsMLt3ZWDAO8651
zrYi83Fbb95F/6Zx+HkjJ+/nQlL/axeZKsyZgMygMc0tZN6ufi81qpsyAddi
OnMtSrlwbiBa68OzCYDnN3uDi7iQpbLQybpwAt5a3dhTnMuFVc6o/er7CZCR
XZDNTyfzneldXd07AYV3dnTJR3Nh4ZG++COak+CceczxwRkuKNE1hleKJqFC
ssN3AcWF++H4WC+ehNBrxko2clxQ1sn13V81CS/TltmHTSPsfS93SfMknOms
lv8h5MBscfu59cJJWKUlwZfv5MBcpbFR9S1TMNoxfK4/hwOLQSOl4u0UpHqN
MS/v5EDs+xJRcUcRdETh1yJ3OzYM/HruTTuLIPvncema5PxnJEwdbHUVQScz
Yg91mrNhZGXk73wvEbRQ7djuDdvZYBZxpvxkoAhSdE56FraIDWJH51z7kCaC
ShoCOsZ7+uHM0GWRiG4R5NskIlJPzqd6alun1B1EUf2twEO1h/vA2PqLm/1p
UfS9/U23hnkfWDw81f3YWRQdFtwUPWfUB2dUQmsXe4iitn+xfUNr+yBWsfXh
ygBR9Kn4xPdHcn3An+GxYUO6KLpUZhiVUNoL+ZPp5/ewRdGtCMPAJUq9sOIX
o+vyBTF0SHe4S63oLzxLp04XuIkjOZ7UJ9f2LvBtO9q4IkAC/dx3Ytl1l99w
Xm+DSUKUJPKtN4pa69cKwkQD+/6waail2/RRleYXqHeNtbuYLIXmynkvdfvy
HjYazZ/8+Ugaff4md3JS5DlU79iYjuJk0MZ6m7nZIVk4JefBxo5MWVTPUtdL
uViFFResdLJ5Oh1ZLMldaPinETeISvurlMohiQ+JT3VaWnGBtHtqffUMFOW9
uuBNzG+8UpHhZF85E60Me3zQ+mUXpkN5Cmu/ySOtO8zOxdV/MXtgbsWqFnlk
mPimpLrxL+7bZ3RuaZs8qqT3PzvZ9hd3zbpfrdZNePzu99Dhv7glYaOfNE8e
bYownbyn1oPtrcqGubIMpL7cfttt1x68+5To0bfLGWh7vENTJ7MXL7h1S+uc
EwPJVFv6N27tw27fdPzsnRlofaF47Mtdffj1oo6aAy4MtLTt5Pn4/X3Y5q2e
k54bA4W3tlmanejDsaJDT2R8GOhM/+dyh8A+TPlaz34SxEBeZmGG9rV9WOy8
tmRzOgM5HhuvD9/Xj81ft+2vyWCgVUGKf54d7sdJ8iHJ+D8G8o3R83pj34+3
ZHVD6nMG+pEjqdDq1o99+h/6uBczUNBfFvtlRD8eOjFtYEYVA9V/Krm47XM/
7jjc2rLtLwNp79g6x3InG8vpW6XZ9TJQwqvWT3rmbLxuXqO7Xz8DcWbKx6ge
YuPAzg9yJTQDzbZ0My8/zcZaziVbtPkM5FQ0zejZLTb2vfwgeZ4ME2XYRZpI
vmVjxSQrp/HlTLRPOkQjbT0Hb/FvXD97FRO9OtUwM0Sfg0877BHfoMVEhkuD
a04bcHDpUqM497VMpNeXlCOzj4Ptc9bX9W1mojf12pweZw7OqlBc02zKRBrq
ybdUH3Gw8Z9GQYELE3UtMM0xEOfiyytCL2W7MpFRadTwS2kuzj1vPJHuxkSX
w9W7VszkYtXJUpE4TyZ63174YVSZi7mzUqX8/ZhoMkwnSFuTi6OMvRTNQpmo
YZX0f0ZWXPwrc4529zMmqk2UZ/95zMWKQ99y27OZaM1zw0DXdC7etSFcpzmH
iVIvfM0c/o+L895KbqgpYKKsP9E3Ogu4OOAnd0vuKyZawTCxcXxPPmXly039
aplIkFddKdfLxV5uJ07P4jDR/mR728zFNA404Z7aRDPR1urV0yKW0/jewoun
bAaZ6BRb7PU5TRoXfgs8mTrKRMH9RqcZ62k8vOk/h/WTTNTpPurcbUBjF/Fh
O0t5CoU4mlp32dH48o9Ldj5MCi0em5W/2YHGIQUSdgksChn+PTYz+BSNM0/N
su1WohDFy3k33YXGPR83HvVUpxDH5PDKxz40Ph519VCMNoUYciCpEUFjt7My
h0rWUqj3nqJKTxSN/Q0jDrato9CBiUsaqfdonMR/bLV4E4Ui877JScXTuM36
/YHCbRRaEOK4wTqNxpx1ew+0GFAo0X9fa8tTGo/PbLaYNKTQ5ksfnff+R2PV
8r79hiYUOvct4aB6Do0PLpq579t+Cmm6F6L9JTQ+PRljLjxAoeAQvkFQKY0v
Ns0zn3uQQsskz68pLKNxTJD23pPWFFrxPOjdSAWNGzkWZjwHCjnKhFRIfKSx
WeHDXbM8KbRJdfj2uWZyvWH7KUUvCm2Te7iX30Lj66uX5yv6UEhvtFXd+weN
izOK1RT9KORmmtFh307j+YlfB1gBFFqU4v77WxeN9X7EpbACiV7i9fx53TS2
UnE4zAqmkN22ceVjf4nekUNvqFAKvXxw0+1jL415t+TvMWMoxMIsf8SlMaPy
mwnzPtm/+UHTTprGK8QSRJixxI/aJ2tNBmhs57vSiZFAoScqeybXDdHY58Xw
XEYShTwM3Z3nDdM4mlfSKJ9M2GnpL5ERGn9w3akvn0qhBIeTTZmjNO56xhia
mU4hi7gbhz14NJ7qa0qdmUH0DbXpWD9GY50TJxkzsyg0xzxg6hGf6JO8qnLG
c3J/D+8oEwGNHdtHvGfkUshI6LaKQzjh0PVOuUIKnXrV7KT8j+gTs+u+XDGF
hreOz0wm3NjI3C1XQiGFgruFC8ZpzGU0i8qVUsil0P1YPGFps6TC6WUUWtcV
JC8/QfS8ferM9NcU2tJa8NqLsH6Vpvr0CgqJ6/680EL4oCTvi+xbCqWF/12h
M0nyt+1VkOw7Ck1cL/tzk3DIlRtbZKsoFJGyO5mct3FaqcmwzAcK/Rfif4w5
ReMKAZUuU0OhfXWmC0wI/1jfYi1TR6G9k/F/fQnz3B8xZeoptDHbMSuVMDPn
9DvpBgqddSPTiPBKrtYl6S8UUvpuvL2DsOGKMS3pbxRae243c4Sw3emyLqnv
FAqrzPpNvj/wpZSbD6RaKFR3yimffH/gmA5TM6kfJA+/rwSR7w/8fJ6CuFQb
qc/SAbt+wh+sW4um/SL383+96SvhPw+Snad1kDyUjMwqIizS5KgxrYtC1eyo
0TDCsxW0v0l2k/3xGd/sCeuY84Mleyh0x3xryUrCe0IxSPaR/bdPJnGJHk4f
A0Yk2ESfumVB6YRvSJs9leBSaEls3IXDhBN2KNpIDFCI6dJgL0H4hf8PSmKI
Querfu1PJfpzx518xXkUChX7u6WB+HfooMkywRiFztiLxNsQfpu34htXQKGm
ytLdncT/B05srZYJCok0xKR9FdJY4l3Nj09TJD9rR/duJ+yi8SyoUpSFNGS8
dj8leTL4frbzuSQL+by/imxI/rLXmoWlSrGQxSJL3Wckn7PvaurHybCQXQf3
2gjJ78AOOubWDBaanqbGcib5fpjnustGkXDuq+VTgzSeJm8+tl+JhQ75ct8y
CLs6aT/ZqcJCYz+98meTejLUGJrQUWOhZ5cCo5RI/Q2FuudMX8RCnoW+tgWk
Po/27bcRXcJC77mWmUE9NK7aoTN9bCkLJZTEmFmSeo4fH3HoWEn2C8/FfSf1
b+zkqfxCh4Wyb860uUb6Q16lZWXWehbidN05q9xG47kaum5PNrBQqNfItzTS
T4abxj7e1WMh/aGW4uzm/+nvfeWkAQsV9a56c7yRxjKPDq20NmShno/CzFef
aXxhfGOzuTELXRVNHZSvp/HOPOEafVMWMqlbFx1fQ+MRdd9ulgULzbbhGR+t
pLGtr3WkjCUL5Xs4LPR5Q/LVpIemrIiee9Xs7pbTODF04kHfERbavcdYmPyK
xrvG/XaXH2ehpX++v3MpoPGjpmv5Lu4sFDP7rvaDxzTurlzdHurBQkJUWCT9
iNRDfrtM9kUWmgEGe84lkHkUpm9LX2Khm+yAAo0HNK7ZKZBxvcFCG20a3VVD
acx/6Wp7Pppc31zT8bgnjbdkzAsOv8dCWrWHjxu4k357vy4/5wHxt77l0hxX
Gs/0WCk7FM9CXkGnp+c60niBZk++WyoLXe43LXOzJv0pyVb2QhELKYiLGpsg
GkeFzlwX9YKFWswa7iXo0bjZ95Vt/ksWqm06odi7gcYOh1QLRjALTWVNSziu
TWNvqsnWo4qFAtaoi9MaNH5yw6zAs5mFutm2CnaiNBae1rfz/sdCDbXBEXkv
yHx/uRx5TLDQm5yMa4jM84czlNXPT7GQ81nJzsrnXKyXO9R+WlwBNfp9FSlJ
42K/f2m2B6crIM5lzSqjaC4WD6VsdVUV0LNskwChCxfL5f09OrpJAZX/d2BR
5Rwutpb8qj+op4C218xNtlfi4mdWFWqcLQqoluIX8ZlcbDYe97NrmwKKjVid
P1OKi8N27Dv6ZZcCSkvwUOgY4GCF76XWeYcVUE/VovQlbzhYbSL8yHkfwn9j
VTbYk/NRx+4X93wVUEddnpbDEQ6+8F5GqcxPARUONHy4ZcHBH8KvNcheV0Az
G1n3Cww52HPx+Z1Pbiugn9eL32Uu5+D6PXt1m+IU0DUJc32JQTb2T57J0scK
qKVY8cCFi2zcbXT7g7SEIrK25az9dKYf25vYqS+apoiu7PTRVjrej3+arfPc
Kq2IxgW/Q63IefXLgXYNHzlF9EdLzL3cuB9XHF/r3a9AWAkt2rSoH8dfaV1S
t0gR7R1xsSn/0YctilbcjDRSREn1R8Y2GPbhN4trYO5tRdR0/K2GvXgvdpJO
ldCQmYU8d8juqrXtxkVJC/XfhM9CUq9WOZVqdOK6zXqV+5hKKMCtpPLNvXbM
d3q43y5UCWkVWZS8j/yOq/YmHpgxSxlNtH1/rx5aj+036qWlRSmjh57W6Wpx
5diRUzv6I0YZlUraaapZlmPXR7YG1ANlVNP78YwSoxxfkbn+2zdeGbGmbbYf
v/4axzVXq+5LVUZBF94uVmwqw9+8rcLGi5RRY88sz2j3EryrxM3bvFUZNTgn
zPiVmoPNXSSqAn4qo43fm1rbVXLwwfkxs0rbldGC61/dW0Ke41PBL/IWdymj
4/7U4Wt/svCNwyLcf2xlVOWjOZDpm4HLhHfsUyeVkefT6MWRTx/hyqx5Oa0i
KojndM5U4W4SrrHPmWKIq6DWsPwa9d4E3PrhS9wlKRX02ehB/KhfLObHqjbt
ZaigX9sTS7ZnhOMps2eLAigV5LB412ZGXyieJg4XXiqooDXD9tF3rwRjhTP2
zMUqZP/Xv6cuZlzDqvNGbI+oqqCFVPv8yis+eH7jzawwNRX0ItXDPjLjPF5+
S2micp4K0o07e6U44xjW3vzU5J8G+b32nf/9v1X2f7v62XI=
                "]]},
              Annotation[#, "Charting`Private`Tag$4670#1"]& ]}, {}},
           AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
           Axes->{True, True},
           AxesLabel->{None, None},
           AxesOrigin->{0, 0},
           DisplayFunction->Identity,
           Frame->{{False, False}, {False, False}},
           FrameLabel->{{None, None}, {None, None}},
           FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
           GridLines->{None, None},
           GridLinesStyle->Directive[
             GrayLevel[0.5, 0.4]],
           ImagePadding->All,
           
           Method->{
            "DefaultBoundaryStyle" -> Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
             None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}},
           
           PlotRange->
            NCache[{{0, 2 Pi}, {-0.9999998592131705, 0.9999998782112116}}, {{
              0, 6.283185307179586}, {-0.9999998592131705, 
              0.9999998782112116}}],
           PlotRangeClipping->True,
           PlotRangePadding->{{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}},
           Ticks->{Automatic, Automatic}]], "Output",
          ShowStringCharacters->True,ExpressionUUID->
          "1ccc56b5-d2b0-4c5e-8f94-a196cda0c0c7"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        Cell["Plot over a subset of the complexes:", "ExampleText",
          ExpressionUUID->"59b623a5-116a-4511-9693-1192a8754e86"], ",", Cell[
         BoxData[
          RowBox[{"ComplexPlot3D", "[", 
           RowBox[{
            RowBox[{"Sin", "[", "z", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Pi]"}], "-", 
               RowBox[{"2", " ", "I"}]}], ",", 
              RowBox[{
               RowBox[{"2", " ", "\[Pi]"}], "+", 
               RowBox[{"2", " ", "I"}]}]}], "}"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
          ShowStringCharacters->True,ExpressionUUID->
          "bee4ad08-352d-43d2-a009-0d95f48ff836"], ",", Cell[BoxData[
          GraphicsBox[
           TagBox[RasterBox[CompressedData["
1:eJzsnQdc01m697cNRaTYJYWuSE+vlNB779I7CKKCBRVUrIgoIoIVQVCk95aQ
3nvoXex1HJ0+s+3mDXKX1zvjsrN31+vsTL6fMxFCEv5Dzi9POc95jmHijqDU
3/3mN7/JVVPcBCXsc8zJSdgfrKP4JjQ7NyMtOyXZM3t3SlpKDibx94o7Xyr+
g/z2N79Z+FquRIkSJUqUKFGiRIkSJUqUKFGiRIkSJUqUKFGiRIkSJUqUKFGi
RIkSJUqUKFGiRIkSJUqUKFGiRIkSJUqUKFGiRIkSJUqUKFGiRIkSJUqUKFGi
RIkSJUqUKFGiRIkSJUqUKFGiRIkSJb9WUv/Gx74QJUp+7bwrQ6UklSj5+aDU
oxIlPxOUYlSi5GeCUoxKlPxMUIpRiZKfCan/k499OUqUKFGiRIkSJUqUKFGi
RIkSJUr+CR4+fCiTyRS3H/tClCj5tUMmk3e+JTU1VXFbU1PD4XC++eabj31d
SpT8ulCIrrGxcVGGeXl5ChPZ1dV17NixxRUQxT2Knyru/NiXqUTJLx+FGCsr
K5fMooJ3f6qQoUKMCkkuarOkpETx7fT09Me6WiVK/uP46cv6ilBRoTWFBhW6
2/k33vtIhWwV7qvCiV1UrgKFihVmVKlNJUqW4aeX2Sj0tSiuV69eLX6rsH2h
oaEBbzl8+HB7ezuNRrt3794PnqjQoCLYVOhxqapnUZvKRJASJe+yqMR/qMd3
A8Z3DaJCkgYGBrp6n5gYr/zN/0RHRwcCgSh0Gh8fr5CqQqdv3ryRv3VoFUpU
+LHvalOh1kWNK1GiZHk9LgWMCtX84EcCgUBFRcU1/JPKVtXaZpXqa2rH9q3I
T1+Zu1UzxlHLw1ITAtDYuFJlUZ6KW4V4Fa+jMKOLT/+BNheTtIo7lUlaJb9m
ltHjYsCoeIDCFP74p729vQqVbTumerVVtb5ZpeXWis4qrb7K1aTSddRTG1iF
QHaeASd7MzvZfCDE/CBULwy0YZOGxqIBXQxCl15qMRG0lKRVJoKU/Gr5e3pU
yEGhGoVGFJJ8rx4Vjqiaxm/L2tVutKo0NKm21Wl0X9ceqFhDPruefnIj+zCI
s9eIk2XKSbDghFtzvKEcewQPY1trgUkGbtZVU1eokkAgVFdXv/uai4kghRiV
iSAlv07eq0eFBBSKUNipZbxHhZosML+v6FCrbVNpblTruKnZe20VqXwttWQD
64Qut0CPu9uEu20LN86SFwLhesB4eBQf48BHePAhgTyLyCJdZ+81xkvm8seJ
IEVQ+d5EkFKbSn49KASoiOMWncZlHvbmzRuFjiJ2qFztUK1vU2lrUO+q0eq/
spp8YR29eCPnOIB3UJ+3axMvzZwXbcUPhPJc4QIcVoh2FsC9BTYhfLNonkkK
B7z9xrp4D23LRVUGBAT8wFwusZik/XEiSJmkVfILRjG9FQ7qomVUqHKZR7a3
tysUdKRK7UanamOrSnv9it5qbeLlNZTz65mnN3KPgvj7DQU7TPkpFoKtNgI/
mMAJKcTZitCuIpif0DpcsCVOYJTOBe1kAfZTdY+RdM+mrQ5Yr6a9ZC5pNNrf
+9XvTQQpq/WU/MJYChh/itGJj48HGP2uslutrlOlpUW16/bK/iqdwcq1tNIN
7CJd/hGwYJ+xYPsWQaKlMBwi9IaL7FFirIMY5SGGBoost4pME4WGmTxQLgtQ
QNM9RdI936t7tW1j7aE1R9zWuSytmyhcYsUlKYymQp7vrcFTVusp+UWyWB+u
mNI/0coYGBjYB/zhWo/anU6V9ha1njpN4vVVlIvrGGc38E4ChIf0hXs2CbeZ
C+OsRSFQkQdCbIuRYp0kSG8JJERsESPenCrSz+YB97EAhTTdYpLuxV7dqjbd
+juAthuGXRe39KQbnfbUS4EbuK3UWPWDxU3Fr15c2SwtLVWY6aXAU5mkVfIL
4N2AUTGZf4oeFTNfoYvkApXqHtXmTpXOJvW+Wu3Bq6tp5etZZzYKTgBF+Yai
HFNRuoU4xkYSCJO4IqW2tjKMqwzhJ7UJl5rHS00yxOBdfMABNuA4TfccSfdy
j+7NVt2m26DO68Y95eZ9p20GDsNJe1CUbThqsiM1yOG2HaoQiyvcbBNliIjc
YOGorW+mumrtkkgVClXIc7HqQFmt97NBVvWDjkuFfc8+9jX9nHn16pVChop5
+94Vjb/H4cOH1Vf+9lyL2q1e1bYO1e4GjYEaHcqVtcyyDZxiXeExsPiAsXjH
FkmKlXQrROoHlzmih/AOQxiPYXjgkPVWmVmSzDhLDN7NBx5iA4poumUk3Wvd
urdadFtv6XVf29xXZjlQBCEVIMk5aFq6LS3JmRrjRQkPoASGDXpFk12SyM6Z
JMfdfYSCHuyh+s2JeRt9QjW2mL83KaSs1vvYyKoWNfisr0qpxWVZDBj/3nL/
MijCOkvc76/3qzX2qnS2q/XWaw5Wr6JdWsc+v4FfBBAX6ov3bZJsN5cmWsvC
YTJv5JA9ZgTnNIL2GYGFDFvFDJumDhnuEIPy+MBCNuAMDVBB0q3u1m1oAXTU
GfRe2dJfakU8ASMfRFF3YOhp9vREN1q0DzUsiOIfQfaIpbikkp2ziY77+ghH
emxPd6IutNlca7K6edvm1nVQbLCm2aa/t4aiMOvvTdIqq/X+IcbHz/7DsXfv
3uF3+O9nPusrrJK986+S97MYMC5Ozn/KkVtc6Ug9onpzQLW1R6W7VX3gthal
ajWzYj3n3EbRKaDkkKF0t6l0m6UszmYoBD7kjhqxsx3DuY2h/EehESOWCSOb
M4b1cyTAgwLgcTbgHA1wmahb26Xb3ATqvmnUf8mceM5m8BickoembccyUh3p
CR60KD9qSAjFbyvFPZ7qkkFx3kVyPNDncKwHV9KJqGizvtFkXVcHqb8KbSyD
tpwyv7odmOC6ZC7fm6pVJmn/KTadOIWkMpYfhw4d+vETl2So1OPfY6k+XHGr
MA3/rH1UhGmKeX6yTu32gGpHt2pvswapTod2bS374gZ+ia74BFh60FiWYzaU
ZjUcDR0OQIw4Y8ZsHcaxnuPIoDFI1Jh58pjJ9mG9PRLgYQGwiA24QANcHwDc
7gS0NYJ7qzcNVFgOlkAoR5C0vRhGJp6R4syI86JHBtCCw6g+0VTXJJpLFsV5
N8mxoN/+ZA/2fCfsSpvVzSab27XQhsuw5lJo2wlI10HLnp1mvSngFKTa2oU1
FAgEovCxF6PLH6NMBP1DTE8eRdOIy4/36PGZwln9mwr/5rf+glnyu376Uxbr
wxfFuHiPQpL/lFFQWByg8e+qSGpN/SrdXWr9jZqUm6uYV9dxL2wUFgOkR/WH
9m8a2mE+nGwzEgkb9UWOEbCTts6TGN8JeOiETdy4Wdq40c4R8H4p8KgAWMIG
VFIBNf2Axg5A1x39/ipT0kUr8mkY9RCKnotlbrNnJrsyY33oEcH0wEiqdxzN
NZXmsoPivI/keKTP7nQPprwTWtVmdasRcqcG2nQJ1noW2nnMpme/Re92y74k
VP9Wu/4A6wIbsL3+krlcKmh/7x9HWa33XkxP5WMYHcuP99rHXw+p//zRb4p5
tbihWPH4H+/X+CkoTIyOjo5X3Ce1JLW2fpXeDnXSHS1a9Rr25fX80o2S08Ch
I4bD+0xHsixHEyFjYYhxT/Skg+003n0KHTAFi5y0TpzckjlhmDsCypeCTgqA
ZWzANSrgVh+gtR3YW29EvG5GvmBDPYWg56OZO3GsdAIryZ0Z48cIC6UHRNE8
E+iuGXSXHIrTARLheJ/t2R7UpS5ITZtNfQO08QaspQLWfgbafdS6b595f6bN
QAJmIMJhwM+138mzD+Xbs8U6YdUa4Mp3Vzbfu2FzkaVqPaU2FZgW7ccwW5Yf
Sj2+9+u/x1LA+M8axHdZLMs5dVutYVC1u0+1v02DfFuHcWMtt3KD8Kyu7BR4
+JDxyG6z0W3W43HQiWDkpBtm2p4wg/eaQQVPQ6NnrFKnN++YNNg3AjoiBZ0R
ACvYwGoKoKEP0NkKHrhlMnjVgloKpR1HMvZjWNl4TpozO9GLGRXICA2n+8XQ
3ZOZrll0lz0UpwIi4VQ/vqwXca3Lpq4N0lAPa66Ct5XDO09D+45Y9+8xI6bD
iXF4Ypgj0dt9gODdD/frNQ7uWZXcrZVVrxGYpY7Eaqmr/eHHa5qH37JYgbD0
f62s1jM9nYNh1S0/lHp879c/ZilgrKmp+RfzFQvOqsnvaqjqrYOqvb1qxGZN
Wt1q9rV1/PKN4hLA8HGDkYObRndajKfaTETBJ/1R0064WTuXWZzfHDJ8FhI/
a5ExuylnUv/gKOi4FFgqAF5hA+vIgJZeYG+LPqnWlHLZinYWzjiKYu3DcrLs
OKmu7Hgf1tZgZnAkwzeO6ZbKdN1Bd8mjOBWSHM704yp6YdVd1nfaoE23Ya3X
4B0X4D1F0IFDVsQcS1IqcjDGjhTsTPL0INr5DNgE9OlF9Opk9Gjmda080bmi
rF3teqtKWeUf9u5SyU7QiHTVdrbWsgZpbNBU+XHtweKW6sW/wHsTQQpt/rIT
QabF2zGca8uPpfzqx77Yj8NP1OO7HagUE+lf+Y2LzqpP/Ce3qWpdJJX+LnVy
oxbj5hrulfXCMl1ZMXDkqNFonul4ttVEEnQqAjntjZkl2N2187iLDbyL2HrX
Jumu+fZZ4z2TeodGQUVSYLkAWMUC3hkEdPQAiU1GlBozWoUN4wyCdRjDycVx
MwncFA9OnD8rIpQVGMXwSmC5ZTBdc+guBylOJ0j25wYwV3qhtV02ja2wljp4
+1VE93l430kI8aDl4A4bcgqGHOVADnQddPMi4fwGLAP7N8b2aWf3aBZ0axR3
qle0q1W3qjQ1f9J+S6OrSru3YjWxdC3l9AbGMV1WPpiVa3QjTP+AHSDBfCN0
tebKP/x+UZ4KA/pu+PnrqdYzLUlF8y4sP5T28b1fv8u7HaheveVf+Y2Lzurp
RrUmqmovUZXYrkG9o8OqXsuv3CA+Bxgu0hs9ZDK+x3xim81UHGw6BDXjjr3r
4HTP1uceOvQePPaeddr8ll1zhvunwEdHQSVS4CUB8CYT2EwC9nSBBxtMaDcs
GeVQVhGKk4/l7cTzMpy5yd6cmEB2WDjLP4bpkcx2y2K67qU5HyY7FpHsLgyg
rvdCbndBmpthbbWIrsuI3lIY8bjN4H4LynYYJQlPiXSk+LuTXbwH0f7ELUED
q5P6tHJ7NQt7NM51qV9pV61r/aSlSbWjbmXPNZ3+i2sGz62jFW1kHwWwD+iz
dxqz07ew4yzYodZsbyjbAVFubpkEMtRVU1tmcfMXnKTdVJKA5BcvP37lepT/
o/zqYhc4xQz5d613Kzw30Kbf1TLU2ykq/X1q5BZNxq3V3OvrhBc3ykoAoycM
xg+aTuZYTqVBZqIRswHou074+w5u9/H+D1CR96GJ9y0z72/eM2dQMAU+OQo6
LwVeEwBvM4DtROBAhz613pRx3ZpVBuecQPP24/jZ9vx0N16iLzc6hB0SyfKN
Z7uncdx2MF3305yPkQklJHzlAKKm16axC9baCO+oQfRUIvrPwgaPWlP2WlC3
IWkJdtRwF5qvB8XRdxAeSDIKH1iV3q+V17fyRM+KC11q19tV77R90tao1nVT
s/fqqoELayhn1zNObeQUAjgLbQ02cVLNODGWnCAbjjuMY4fiYOy4CFcuxLfC
kJCsu9wGsV9ktd6mszEIwYnlh1KPf4+lgPFf91GXWHRWfRM/uUNX6yarkLrV
qU3arNo1/KvrxRd0R4pB40eNJ/ebTWVbzyTD5iJRd32w9x0dHtl7PcQFP0RG
P4SkPLTY8cAk765+4RT4zCioQgqq5gMb6cCuAeBgmyH9ljnrCoRzDsk9iuHv
xQu2E/hpHrz4AO7WME5QFMsnkeO+jeOWy3QtoDmdJDucJ+GuDsBu9UJaOuHt
DYjuG8i+iwhSMZRyxIq225qejqHHOdBDXWleXlQ7P7JNEAkcTdTJHtDK71tZ
3LOiokutpkOlue2TjoYVPTVa/ZdXk8rW0ko2sE7qcg+DOHuMuNs3c5PNuVut
uAEQnguca4vhoQk8hAcPEsC3jOCaxnMM07JX2emqrlyMMRUB5nv/aL+Yaj2j
c+FQUf7yQ6nH9/JuByrFB/W/62N50Vk906zWQlftJ6mQOzQYDas4NWuFlzZI
SwFjRXqTRzZN7TWfybSZS4DPh6Lve+AfObo8tvN9jA1/jIh/bJPx2Cz3gVH+
Xb0T0+DSMdBVGegWD9hKA/b1gaktJsxaS/YlGPcMin8YK8ixFWY6C1K8+XFB
3IgITmAs2yuF676d47aP6XKE5lRMsb84iKkmQhv6oG3t8K56ZO915MAFBLkI
SiuwZOyCMdLwjBgnRrA73d2HivOnWAQPbkgkaecSNQv7Nc71ql/pUrvVodLW
ptJVr9F7Q3vg0mry+XWM4o2cEwBegR4315iXuYWbaMGLsOb7wviOCD4Ox0c7
8+FeAptggUUUb1MS12AbG7iLAThYujbJfbXVT9m2+R+dpDUoDbQS5y4/fuX5
nPfybsD4733lRWf1Nku9i6YyOKBGbdNi3V7Nr1ovrtAdPgucOGk4lW86k2M5
lw6dj0HeD8Q+dLF7QvB4ahv4FB31FJ781Gr7E9N9Dw2P3NU7PQ2+OAa6IQU1
cIFdVBCpx4DRbMqutuZehPOK0IJ8nHCnvSjDTZjkx48J4YVt5fgncD3See67
OG4HmC7HaY7nKHaXycg6IqSlD97Riui5heq/ihw8j6CdhDAOWLCyUcxke1aU
CyvAk+HiR0cFUkzDyGvSBrX2ETVP9Gtc6FWv6lJt6FDpaFHruaXZX6VDqlhD
LV3POr2RfwzAO2jA27WJn2HGj7Pkh0IEXnCBA0qAtROgXIUwX5F1mNAshm+S
wtPfzgbuYQIO0QCnSLqlvbqXk9aFrFfX1lBVUXgR77bRey//cdV6m877ICVZ
yw+lffwBS/Xh/7u1/mVYdFb9kz5pZqkN0FTIvSvozTqcurXCqxukZYCxM+DJ
oybTeeazO2zmk+H3I9EPffBPnByfO/g8x4c+R8c9h6Y/t8h5uunAQ4Pj83rn
psGXx0B1ElArB9RHAdG6jdiNZtwqCL8MKTiBFeXZirMdRemewsQAflQYLzia
45vE88jku+/muB1iOhfRHcup+Coy4g4R2t6L6G5B9tWiSFeQ1HNwxnEbVp4N
OwvDTiSwI9zYvt5Mgj8dFkw1iKas2j6olU9cWdy/orJX7Wa3akuHSlezel+d
FvHaqsGLaxnnNnCLdAVHQfw8I/6OzfxUc0GMlTAYKnRHCO0xQixBhPQQQwPE
VpGiLfFC43S+3k4OMG9h8yagmKRb3qN7rV33ViOg5cCGE74g/9UrdJYCzKUO
tH+v8OAHSdrFRNDPLUm75bwnVpK+/FDq8V2WOlAtftL+e1+8tLR0heZvz7eq
dbJUB8mqlM6VrIZV/Jp14ksbh0qBE0UGU4c2z+6xvJsJvR+PfBiCfexu99zJ
7YV9wEtc5AtU0ktI1gvzvc+MDz3UL5rXuzANvj4GuiMGdbJBpEE9Zucmbr0l
/ypMeA4tOoqT7LaTbHcRp/oI44P5EZG8wDiuVyrfYwffPY/tepThXEJ3uETD
3qTAm4mwrm5EbxOKeBNFvoSkl8BYhdacPTDONjwn3pkb6snx8mXZBTKsQ2iA
BKpOLlmrkLSydGDFtV61290qHR0qPY0a/Te1SVdXU8vXsc5u4J8CCA7r8fcu
tDUQJlsIt9qIAmAiF6TIFi/GOIsR3hJIsMQyWmyaJDLK5INyucCDLMAJqu45
om5lj+6NNt07DYD2GoPuy6a9pZb9KSZn/EwzzcF43fUmP1jQJBAICp0q3qwf
6PTnXK1ned7FQZKw/FDqcZGlDcWK9+4DOTyKKQR1+H0TV72PoUIeUKe3aXHq
1wivb5Be1B07C5o6bjxz0OzuLut7abCH0ejHAbhnLoRPHb0/tQv5FBvzKSLt
U+tdn2458Mzo6CP9knm9ymnwzVFwiwjUywRRiQacdlN+nY3wEkJ0BiM5hJfu
cpBkuouT/YQxoYKwKF5AIt8jQ+CRw3PPZ7ueZDqdp9tfo6HrydB2IqKnEznQ
gB6sRtEqkKwzMM5hK14Okpduz4t15QV7c9z92dggpnkYfW0aTTuPonlyUOMi
Ub26T7WxW6WrXbWvYSWxRod8eQ39wnpOyUbhSYCwwECQu0mYaSZKtBJHQCS+
cLEjSoK3k2LcpAg/mU2Y1CJWsjlVbJAtAO7lAg+zAEVU3TKi7tVu3dpWQHMD
sKvauKdyS985a+Jx6OBBJDkHQ82wpSc7LeyndsaVIFA5myERAFOCNshcVXvt
uzpdVOhS+Plzq9aDlDm4SrcuP5R6lP+tA9WH8FGXWOwGsKNYtZ2jRqKpUHs1
mM06/Nq14isbh8oAE8X6M4Wb5vIs72VDHiQhHkdgnvnYvnRx/Yzg/5ltxGeY
hM9gmZ9Z7Xm1+dBzw1OP9MvmwdemwfUj4E4hiMgAs/qN+C3mghqo+CJKcgon
PWAn2+EkzfASJwYKoyIEITE832SBR5bAYy/X/QjbpZjpWMGwraYhmiiwbiKy
vwNFqkdTq1DMC0hOEZSXb8PfgeGnOAqiPPgBPlyXQA4yhGUSzViznaZVQNE8
M6hxmahe16fa1q3S06Y+UK81eGMVpXIt8/wGXrGu6DhIeMBIuOttW4M4a0ko
VOqFkBKwUhxBhvYYggcO2UQOmScsdDbQ3yUE7ucBj7EAJVTdCqJuVbfu7VZA
Wz24p2pTX4X5QInN4FE4eT+KuhNLT7dnJLnQYrwoEQHk4FCy71ayexzZOWXQ
afuA455ezPbr5lH79QMSVmMc3tXmj7dUf9xEEKIM5yUNWn4o9bjUgep/saf4
p6NwqxTOahVZrYetSiar0Ts0OXdWC6vXSyt1R88Bp08ZzR3aMr/b+sE22ON4
1LMQ3EsPh9fOXq8dgt/go9+gUj+H7nhjsf+VydHnBmce6VXOg2umwc3D4B4+
iELT4/aaCBstRVVwaRlGdgwv22s/tN1VmuYjjg8RRm4VBMXzvdOEnjsFHgd4
bsfZLqUswhUG7hYd3k6B9/WjiG1oyi004xqKfR7BPwER7ocLs/HCJGdhhJfA
149HCOJAw1jgROaqXLrWMerK8+QV1wfU7vSpdHWr9LVokG5pU66vplWs45zb
IDgNEBfqifJMRDu2iFMtJdE20iCYzA0ps8cP4ZyHUN7DsJAR65hhs2SZcZZE
L1cIzOcDT7IApVTA5QHdmi5AYwuw87Z+3/XNA+WWpGII+QiCsg9Ny8Yz0giM
t/upKeGBlKBwik80xS2B4pxOctrZ75jX63Cky7aoA3W+FXK5yfJGvfGBfbpB
vppbTJepOvgo1XroMrif1HP58SvPry7Vhyveiw9nH9+8eaMIedwiP2njq5FY
KrSBFcxWbf6tteLrG4YuACZLwDPHNt09YHF/F+RRKvJZNPZFgO1nbs5fOPl9
YR/+BS7hC+S2L2x2f77l0GdGp17on3+kd20eXD8F7hgCE3lgJsVA0GUqqreR
XkXKzmKHDtsO5RCGsjykKf7i2DBReLTAP0nguU3kuVvgcYjnVsR2LmfZ32Ci
G+mwbgpyoBdFbsHQajGsKyjeObjgqLV4L0qU6SCOdxOH+Qi9Avi2IVzLcPaG
dJb2foZWEXVlBXlFzYBac59KT5fqQPPKwVod6tU1zPL1vLMbxaeA4sMG4r2b
JdvNJUnW0q3QIX/EkDN62NZ+BOs2gvQbhYaPWsWPmKYNGWVLQXtFwCN8YDEL
UE4FXBvQvdUFaG0B9tQZ9V/dQiyzJhfBKIeQtD0YRpYtK9WJEe9B2+pHDQum
BkRSvWKpLkkU50ySU26/44Fe+6Nd+DMdyPJW62vNVjW3bG5VQe9UQJvOmp7N
XO+FW6bqQP6+ar0P5yNhyiABMtflx6/WPi4FjIrYf/GDUWEcP1DTiaUNHT08
VSpdlda9ktO0WnBznfTSxpFS4FSRwdyRLfN7rR5mwZ8moV+E4155O3zu4vGl
Y/BXdtFfY1K+hu/4ymr/F5sLPzMsfqFf8Uivel6vaRLcIwVTOWDeoJG43UJS
C5VVoodO44cP2g/vdB7a5i1NChZHR4pCYgW+qSLPbLFnnsDjKM/1LMfpMtuu
joVsY8D7yajBbjS1CcOswXArUcIzMPFhqCQXK8lwksR6SIL9RG5BAkwod3M0
Z202S/sQQ7OEqnGFrH5rQLW9T6WvQ53UoEWpWUW7vI59YYOgRFd6EiTJN5Lk
mkq3WcgSbIbCYcPeyBFH7AjecRTjOYYIHIdsHbNIGt28bdhglxR0QAw8zgee
YwEqKYDqAcCdLkBHM6i/dhPxsvlgqQ3lJJyWj6LnYFnb7NkpLow4L1pkADU0
lOYfRfOMpzmnUpy3k5z29DsW9Nqd7Mad64BfarW80WxVWwe5fQ3WeBHacgba
ftS6M8+yO1s3Ga9tpvebv51GtMyW6kVhfiAnFl9mHiKzXX78OvW42IFq8SPx
/2C5ikAgbEH8vlWkTuSo0AbVme3avPo14qoNQxcBEyWg6eMmdw+aP8iBPMlA
Po/FfBps+8bd6WsXv68J4d/Yxn+L3vYtLPcbi4IvN518bVD6Qv/qI71bd/Xa
x8FEMZjJ0hcObJa2WMmqEcMXsCMnbEf2OYxmuw2l+0kTQsVbo0RBCULvDIln
rsgzX+B+iud6getYxcE3sBHdDASRhKZ0YhgNWM4NjOAiUlwEleYjZDvtZKku
smhvqX+A2ClYCA/nGyRyV+eytY4xNMtoGlWDag0Dqt19KgNtGoP12tQbqxmV
67nnN4rPAKTH9KQHTKS7zGTpVsNx0JEQ+KgHatTBdgzvMo72mUCETtjETpin
jm3aPqK/RwY6JAYW8YFlTMBVCqC2H9DcCexu1CfWbB68ZEk+C6UdR9APoJk7
8ex0AjvJ7e1+6iBacDjNN4bmnkhzSac47yQ55fUTjvTane7GlHVAr7ZZ1TRa
36qF3rkKa74AbTsN6Thi3bXXoifLqi8J2R8FuegEcDBZpupAIcN3T+f8t2NX
ZhQugy4/fmF6/Cl7GBc3FC8ecLNkHD8ci5mctELVboEalalC79VgN68S1K6T
Xtk4ch44edpgrtD0fp7V42zYs2T0y0jcaz+Hr9zdv3UO+s4h+jtcynfI7O9s
8r41K/zSuPi1wcUX+tWP9Jrm9HrGwFSRHo9uKOk1G2qADF9DjZzDjRXaj+Y6
jmR5DqUGSmPDxeExwoAUkWeWxHOvyKNQ4H6G51LJdbjJxbSy4f0MJJmIobdj
2fVY/nWM+AJCetJmOA89lE0YSnYfjvCV+QRJ7EOFNhEC3XSezgG21mnGykra
itpBtRaiSl+vKqlFk3JLh359Datig6BUV3oaKCs0lO7bLNthPpxqPRINGwtE
jrmix+zsJ3Buk6iAKXjElHXCpFnGuPHOEXDeEOioBFTCB15kAqoogPp+QFsH
qO+OIenGFnKFNfUMjH4UycjDsrNtOWlO7EQPZrQfPTyEHhRJ94mjuyXTXTIp
zrkkp/x+h+O9tiXd6IpOm6o2q9oGSP1NWNMVWGsZtKMI0nXIqme3Zd82m/4E
9ECkfb+/c5+rey/eIsFYY7XGkrlcFKZiGix5rR9Ijw4XdLcOmSw/fkl6/Clt
N94NGP9vrmoxk1NDVx/gqdKpaowOLe6dNaIb64cqdMdKQDMnjecLzB/utnm6
DfkiHvNZqO2Xno7fufl87xj+R7v4P2Iy/gjP/aNV/remJ74yLH1tcOW5/q1H
eu2zesQRMFOgJ6KaDHVZjtyGj17GjBXbjh90GNvlMrLNZyg5RBq1VRwcL/RN
E3vulHgeFHqcELid5ztd49nVc1BdbMQgDUXrw7JacbxbWNFVtKwUPnwMNrIX
N5LpPJLgNRIaMOQRIsWGi7bECNZl83QOc7TOMTWu0dTryaqdAyoD3erkJi1a
7SrG1XXcixtF5wBDRaChQ8ayPabD2y1HkyBjkfBxX9S4M27CznEK5zWNCp6G
RU9bJU9tyZowzB0F5w+BTkpApTzgZSbgJgXQ1AfsageR6k3I182p5Tb003DG
ETRrD46TZc9NdWEneDGjAhhhYYyFLWPxDJdUuks22XkvyfHwgMOpPnxpD/Jy
h1VNm/XtO9CGaljLZVh7KazzJKQn36ovx2ogHUaMxxHDCQO+rv3OHn0Ynz5L
/16wXf6KLfhVamqfKISpeI8WlywVIYzig/oDzQTChbVRQ6Dlxy9Gj6n/6Jzi
pfrw/0sxLtbkBGWodInUKGwVxoAGu0VHULdWcnXjcBlwqlh/7ujm+/utHu+E
vUhFfxaN/yLA4VsPtz+5Bv6JEPVn2+S/oLP/DMv7s0Xhd5uKvzIsf21w47l+
4yO9nmk9ypAej2sgHTQdabcZu4kcL8eNn7Ab30sY3+Exku4/lBAmjYwRByaJ
vLZJPXeLPQ+L3IsFrhV8xxoevoWL7GcjqRQMsxfHbcYJa7HSS6jhEtjoEeTY
bruxDLexWJ/RoMBhl1ApMlJsmCRcs4evfYKjeZGlUUNTbxpU7R1QIXVqUBp0
6DVrWJfX8y9slJYAh0/oDx00Gc4xG9lmNRYPnQhFTHihJx3tpmxdZrC+s8iw
WWjcjGXaYmeDMfCRYVCxBFTOA15nAm+TgW29wL5WffKtzdSrlvQyKPMUklWA
YefiudsIvBQ3drwPc2sQIzSCubBlLInpkkF32UV23k9yPDpgX9yHK++BX+u0
qmu1uVMPa7oBb6uEdZ6FdR+36TtgObDTmpiKJMXakkKdiN5uAwSvAaRf/5bg
Pt2YXu2sHs39XSt1DX9nZWW1mM2rrKxUWMkPNBncy1emDK9afuzatavzLR/o
Gv6P+Xt6XKoPP/aW/7Prqa6uXiggb1AbEKgyGKr0Tk1uw2qFcZRV6I4qIseT
xncPmT/cY/MsE/FpIvbzcLuvvR3/6O7zF5ewvzrE/Rc+47+QuX+FFPzF7OR3
Rue+Mrzy2uDWc/22B3rEST2mVE/EMhoZMB9rhk5UYSZK8RNHHMZzncayvEdS
goZiIyVhcSL/VLHnDqnnfrHHcZH7OYHLFT7hNg/TxYOT2WjGIJbTjRc04iQ1
2JEK1OhpyHg+ZnyX43iq50SU35hf8AghXAbZKgFsE63K52uf4a68wlpxi6rW
NqhC7Fclt2vS6lcxq9ZyKjeIzusOFYOGjxoO520e2WkxlmYzHgOfDEJOuWGm
HRxmbD3msIFziMi7kMQ5820zJjlTegfGwcdHQOckwEs8YA0D2DgI7OwBkVoM
qbVb6FesmaVw9gkU+wCWu9OOn+HES/bkxPoxI0OYwVuZvvFM9xSmSxbNZTfF
uWCQcIJod7YPU9kNre60vt0CabwNa62Cd1TAu85Ae4/aDORZkrbbDCZjyNH2
g8EuC10O7H2IMP8Bk7D+dYl9Wrt6NPc0rFi3UTM+Pn6xNdk/PALpXyGwXGP3
iM7y45+wj8/6qmTP3vaA/NuS6kfqPffo0SPS3/jBSs179fjh6sP/IQQCAe70
hy6pOpWnwiCtYLXq8N8ax6HzgMnTerOFm+/tt3qyC/YyDf06Bv9lkMP3nm7/
5R70X05RcvtkOS5bjsiTWx/9i2nx90YXvzK88dqg8bl+zz19yoQeT6wvo28a
77GauIOYuIydKLabOEiY2OU2ts1vODFMFhUtCU4Q+WRIvXKlXofEHkVCt3KB
c7XArlmA6uch6UwMm4jjd+LFd3DDVZixC4jxk4iJ/baT2S6Tyd4TEYFjXqEj
tpEy81jJ+p0inaMCrTLuyirmikaqavegymCvOq1Vi3FrNevaOn7FRsk5wEgR
eOSw8cjeLaPbLceTIZNbEdP+6BkX/Ky98xze+y4mZB4eM2+Tctcse9ZozzT4
0AS4aAR0QQy8xgPeYgBbBoG93WBKkwm9xoJ5CcIuQXCOorl5C/s3BemuvCRv
TkwAKzyMFRjN8k5kuaUzXXfQXPZRnI4MEoqItuf70Fd7bGo7be40Q5vr4O3X
4V3l8J5iaP8Ra9Jeq8EsGCUJR9lKIAe4Drp5kvC+JJtAokHkwKq0Pq09vZrx
hVq+vr6K6bHoMi12J/hAkyGqXKNwRHv58dP1+N+tymVVqf+/GWTqz60764/1
+G4Hqv/ji1lc5thbpjogUmMyVRjdmpyGtzUAFbojZ0BTJ4zuFpgpjOPzLOSr
JOwXEXbf+jr91cNH7houd4yX22XIMTlyWL7c4uRfTM59b3j5K8O6zwzanukT
5/VZY/pigeEoxWyiAzJVi566iJ86YT+113Fyh+doWuBwfIQsIlYcmCLx2i7z
ypN6HhV7nBW6XRE63RbiO4VICh/FpGN5A3hRO152Gzd2DT1RCp86ip7a6zCd
6T4V7zcZEjzuFj6K3jpknCJdu0+sUyTQrORo1DLVW6mqA4MqlG4NepMO8+Ya
zpX1wnJd2Vng6En9kfxNo7nm49usJxNg0+HIWW/MrJP9nJ3bPM7/HiriPizh
nlXGvOlCZ4MZ8NFJcMkIqFIMrOYC79CBHSQgsUuf3mDKvGHJugjjFCO5h7G8
PbbC7QRhmjsvwZcdFcQOjWAHxLI9k9mu25iuOTSXAxSnY4MOZwbwFX3Iqh7r
2502TU3w1lpE51VETxm8rwhKPGQ1uNuasg1JTbClhjtR/NzJzt6DGP9Bi2AS
KGZAe3u/1oG+lXvPYhTTY7GCbnEN+sPVhCRdVD87qrn8eJ8e339+h+xHJwf8
DLslv6vHdzcUf7hF3mUICAjQ3/K7Tpk6ha/KGFRnturw6taKr2xQGMfxogXj
eP+A5YJxTEd/Hov/Jtjhz15uco8guUuUnJAix2fLUXlyyFG5WfFfjcq/N7zx
lWHDZwbdT/Spc/q8Yf1hrvEE0XKqBT5dhZ0utZs+QpjOdRnP8h1NDhmOiZKG
xIv80qVeOTKvfInnKZF7ucilWkRoEmH6hUgGD8Ol4YV9ttIW/GgdbvIyavoM
fOYwdibXeTbDayYmYCogdMIpchQWPQzKlK0+JNY+K9C8xllRz1DrpKoMklRp
nZrMhlXs6rW8SxskZQufLaPHDEf3m47vtJhMg0zHImaCUXPu2LsEx3k7z/u4
4AeoqIfQlAeWWfc2776rnz8DPjkJPj8CuioG1nKBzXRgDxFE6TBk1puxrltz
LsC5p1C8Apwg106U6SxM8eTF+XO2hrJDoth+8RyPVLbrdobrHppzAcXx5KB9
KRF7uQ92s8emoQPa0gBvr0F0X0H0lcIHTkIG860oORDa213V1FAXqs9ClwMy
MoBsGja4MZGovWtAc1/VFsXcqK2tXXy/FH5U6j/ZZ/6fIu2ievmo5vLj79jH
H5/fIav6gfZ+htbxHd7dUPxRerDcu3dPYRzj9qn0i9UY7L8ZxxvrpRcXoq2p
E8bzBWaP9ti8yEK+ScZ+vdXuT/5Oci8fuXu43Dlebp8hx+bKEQVyq5Pyzef+
anT5e8O6Lw1bXxkQH+mzpvXFMsMxlulUn83MHdTsZfzsafuZA45TOz3GMwJG
EsOHImMlgcli7yyZ116pV6HYo0TkflnsfEts2yFCkYUoNgcnoNhKemxHmvAT
NdjpCuRsEWou325ul9tcqu/s1uBpn/BJu6gxi4SRDTkyneNirXLBymrOimaG
Wi9FhdK/UAnPur2ac32dsGLB8R47rTd22GRs75aJbKvpFOhsFHIuADPvanvP
weWBre9DbNgjZNwjSPpD8x33TfLm9Y7Mgs9Mgi+OgKpEoHoOsJ0GHBgA09tM
WLcsOFch3FIE/wRGcAAv2uUg3uYmTPbhxQZyIsI5wTGchf4G6WzXnQzXPJpz
IcXx9KBdORFzvR9yu9emqQ3WdgfRVY3su4QYOAcbPG5D2W9N2wFjpOIZMY60
YDeapxfV3o8CDaIYRQ6uTSNp7elek54Z7+bmtrTLUhHOfLjFDgU7K9SqxzSW
Hz/1/I7/KccFC/ozFuNHDBiXUPz2FVq/rWerUwSqTIo6o0WbW7tWdGWDrBQw
ekp/5sjme3mWT3fCXqWjv4yz/T6U8F/e7nLPILlrtNwxRW6bLUfnyWFH5RbF
cuPyvxrd+M6w4UuD7pcG1Af6vEn9IbHxFM1ipgs2V4udK7edPU6Y2eM8ud1n
LDV4JHarLCxe7Jcm8dop8zoo9Top8bggdr0hJjSJcf0SJEuE4bHwYpLdUKfd
eAN+5gZ27gLi7nHM/H7H+WzP+aSAubDQGfetk5iYceP0kXUHhnSKxZqXBRq3
OeodDFUSRYX2thKeU7eWd2W95KLuyDng+EmD8fxNE7vNp7NsZhPhdyNQ8z7Y
e84ODxzcH9kGPMZsfQpPemKd+WhL7gOjg/f0js+BSyfBl0dAN0WgZg6wmwok
9+mxWjZzblpxL8H4Z1GCo1hhnq0k21Gc7iFM8uPFBHPDI7kLW8ZSuG6ZbLdc
hms+zfk4hXCWbHuJiKrpt2nogbS0wjtuI3tuIAcqEKQzMEqhDW2fDWM7kpls
x4xyZgR60N18aPgAqnUIRS+GrJ1F0so64hUfH79+/fqlcp3F0ObDTYl9FapN
YyuWHz/x/I53zrlayOf8jLX43x2oFHr8iCcuKYyjjo5OaKYKUabG5KjSuzVZ
9W/7AJTrSotAE0eN5w6aP9oNeZmJ/DwJ981W+z/7O8u9feUe4XKXBDlhmxyf
K0cVyG1OybeUyo0v/9Wo7jvDti8NiM8NWPP6kjGDcf6mWbL1XCvy7nXc3Fn7
2UOOMznuE5kBo0nhw1Ex0qBEkc82qdcemdcRqecZifsliUudxL5TiqFI0VwB
TsSwlQ3YjbXbTdXj717DzJ9D3ivE39vrcj/T515c8N2g8FnnqCl47Dgoe3R1
4ZB2mVjzhmBFE1uth65CGVRjdGmyG1Zxq9cJLm2QXVjYRj1+zGh8v+nULsuZ
DOhcHHI+BHPfE//Q0emxvfdTfMhTdOxzWNpTqx2PTfc+NDh8X69oTq98Enx9
GHRbBGpng/opIHqPIafJjFdtw69ACIvRwsM48R77hf2baV6ChABeVBg3NJrn
n8DzTOO6ZbPd9jJcDtOdiqgOZWT8VRKirt+mqRvW3oLovoXsv44klSPIp6G0
w9aMPRBWJoad6MCKcGX6eS10OcAE0s3DqYBEhR4rkQpTaGZhqIgplt61mpqa
D5p7P1yp0juuvvz4aed3vOu2/jiy/BmxGDDufMtHvIyFGgCt397hqlOFqsxB
dVqTNufmWuGljZK37Y6nDpne32f1bAf8szTMV7F2fwpxlPt4yL1C5G7RcqdU
uf0OOTZPjjgqtzwj31QuN6r6i1HDd4bdnxtQnxrwZw1Gho2m2WZ3+6HzdzB3
L9nOnXKY3ec0vcN7PC14JC5SFh4n9k8Ve+2QeR2QeZ2UepRJ3KqkTk0y2/4h
FEuKEfDwUprdaJ/9ZKvdXB3+3iXU/WL0g0MOD3I9HqT7348KmfeLnLWPnrJI
nti4Z3TVqSGtS5KVdfwV7Qs9DVTpAytY7dqc22u419eJKzeOlAImTutNHDGZ
3Gs2nW09lwqbj0bdD8A+dLN/THB7auf/DBfxApX4ArrtmUXOk00HHukfu693
dk7v0iS4ZhjUKAR1s0CDZDC7y4TXYMGvggrLkaJTGHG+rTSHIM10E6f6COKC
eFsjeCGxPN8kvkcG120Xa6HfyDG60xmaQwUZe4MEuzMAae2CdzYje+tQxGtI
chmcegrKKLBh5cI4GThOvCM7zJ3l7cN09GcgghmbttLWpbXqp2XGZx62V9f4
7btNtCrf8uFmxbFKFdK42vLjF1MP8G7AqPj6IzY4WqwBCM1SGZCpM9iq9C5N
5u3VvKvrRed1xSfB40dM7h4wf5wL/XQb6osk/PdbCfIAF7m3v9wjUu6aIHfM
lNvulqML5NBTcvNSuclluVHdX4zavjUkfmbAfmwgmTaYlJjcpVvd60TM38TN
l9nfLXScy3WdzPIbSw4bjo6WBieKfBXGcfd/G0ePS1LXuiFC5zCOMozmS3ES
rt0wxX6ix362ye5+De7BReSjU9hHB50f7fR+lBL4IDzsnmfUHCZ22iRzcl3B
mM65Ia3rYo0Gnno3S5VCVWX2rmS3rFI43vwr6xe3UU+cNJzIN53KtZjNhNxN
RNyPQD/ywT92cXxK8HpuF/QCG/0pIvWlTfZzs71PjQse6596oFc2p3dtEnx7
CNQqAPUzQTSSHq/DVFBvLbwGF59HSY7jJAfshnY6ybZ5ipP9BLEh/Iit/IUt
Yyl89yyu226WWwHT5STd8TzN/goZXUuCNA9AOzoRPY2ogVoU+QqSWgpnnICw
DkI4O5G8NDturDMnxJPtudDlgAkNZRjEEten7Qvbtjc06qCmIsB/dyvWB13s
UFBc+Ql7XHX58cvQ488hYFxi0TheJy5EjozBFdRGbfaNtfyLG0TFgKFCg6l8
0/t7rJ9lI96kYr+Ns/9rqJPc11PuHSJ3j5U7p8oddspx++XIo3KbErnpRblx
ldyo4S9GPd8Y0j41EDwwGJkwmhVsuU+G3G9G379me++Mw/wBp5mdXhPpQaPx
kUMRCuOYIvLKlnrtl3odl3iWSd2rZM5NQ3b9wxjWMFYkth1i248POsx02d9r
sH1YhX18Hv3kmN2TPLcn2/0eJ4Q8DI685xIzB4+fAe2aXH18VPuiTPOmaEUr
V22AqUInq7G6tDgNq3nV64SXNgxfAIyf0Zs8ajK532xml/VcOux+HOphKPaJ
p91TJ5fnDr4vbcNeYeI+g2d8ap3zwnT/c8PCJ/pnHupVzoFrJsCNMlAnH0Ri
gFkDhoI2M1EdRHwZITmLkRbiZfschne4yNK9xQkBgugwflg0PyBR4JXOd9/B
dctjuxYynYvphHKqbRUFWT8IaeuHdXUg+xpQpBoU9RKSfg7OPGbDyYPysjH8
FAIvyo0b6M1x82fjgtmWEUxQ8llCWlbCwVawJe73EAjk3Tfugy52KCir/IN0
XGX58QvQ41IHqp+DGBeNo3fcJwuRI1uV1qFJr13NubRecFZXdFRvtGDTzD6L
RzuhrzLQXyXa/imSIPd3lfv4y70i5e5JcqdMuf0eOfaQHF4ktzwv33RFblwn
N277syHxK0P2cwPpvMHkiPE9juWDPsSDetyDCvt7xx3v7nGZ2u43lhI6Eh0l
DU4Q+mRI3tYASL2KJR6VC8bRsWMYTx1FC4fxMoHdGNNhmugw3+HwqN728VX0
0xLs0yOOz3Z7Pc0IfBId/sgv6r593F2LtBnd/ZOrike1rshW1gtXdHHUyAxV
JlGD3a7Dvb2Gf21hCXXsPGiyyGDq8ObpvRZz2Tb3UuAPo9FPAnFP3R2eO3q8
tA98hd/6GpX8Brb9M8s9n24qeK5/4qn++Yd6V+fAdePgVimolwei0cG8PhNR
i6W4BiapQEmLsbLDdsO7HUe2u8tSfcVxQYKtkYKQOMFCf4NMvnsOx+0g2/U4
0/ks3eESFXeTAm8ahHb0IXrbUMR6NKUaRa9AMs/AOIUQ/l6YIAsvSHLiR3rw
/H25zoEcVAjHNP4qbiGcuYIs6NRQX/k/nNXFxY4POoUqL6pMjKotP/7T9yO/
e0LxR1lk/AGKt1hD67dVg+p0kSqDuIJ8W4d5dS33/EbBSaCkwGg8b8u9HJvn
mcjPk3HfxdjLQ5zlvt5ynzC5Z6zcNV3uuEtuu1+OPiaHlsjNLspNbsiNG+VG
PX8ypH1uKHhiMDJrOCvd/IAOediBflht++Csw3yB0+wuj4mMwNGEiKGIWLF/
ssBru8QrT2EcpZ7npe7XZS5Nww79o1jOKFYqsx3hOUzSCLN9Dg9a7Z/W4p5V
op+fxj8vcH2xy+95asjTiMjHnjH3MQl3jbNn1xVO6pSNalZLNVoE6n0cVTpN
ldWryW1ZxVMEwlc2DF8ETJwDT50wmsrfMrvbaj4L+jAR+TgC+8zH9rmr06eO
Pp/Zh77BxX6BTP8csvO1Rd4r48IX+sVP9S8+1LsxC24YB3dKwCQuiEXTE/WY
ShqtpVUI6QX00Cn8UL79aI7zSKanLNlfFBsqiIwSLmwZSxN6bOe77+G4HWK7
nmI6XVjo/4O5TYW0DcK6e5D9rWjybTS9CsUsR7BPQ3mHIILdKNE2e2GCiyDM
i+/jzyME8eDhRIvUrIRt5wj5dM3YowtnFvzg+K0Putih4EqZ+oxUc/nxn2sf
f9CBSqHKf1cX8f81i30AHIP+QBpSYzDUKC1a1BtrWOXreUW6vAK94f2bFVP3
cfZCGuebeLu/RjjJ/d3lvkFy7yi5e7LcJUvusEeOOyxHFsmtz8tNLy8aR7kR
6TtD9meG0ocGU5NG9wXmjwbhjxqxDy/b3z/pOL/XZTrbdzwlZHjBOMYLfNJF
XjkLxtGzWKowjm51w06dY7a0cbR4DD8ssZ/gEGYohHs9hMfNds+rsS8uYF6e
cHh5wONlduCLxPBnwdGPneMewFLmwXtmVxdNal8e1ayXruhc6GmgyiSrc7q0
eQ1r+DfWSy5tHC0DThbrTxVums4zv7vT5n46/HEc+mkI7oWX/acubq8JAZ/b
RX6BSfoKkfWFze43ZvmfGZ54qV/6TP/KA726WXDLGLhXAqZxwTyykaTTXFoP
kV1FDpVih4/ZjuQRRne6jmT4SBODRNHhwoUtY0lCr21Cj5089/0ct6NslxKm
YyXDtpqOaqRCO0jw3m4UqQVDvYVmXkOxyxDck1BhPlS0CyvJIIhi3YUhPgLP
AL5dKBOWdCgkNScqh7y2kK5pH/zJD5xVxYf5T9ms969wtXTFnFhr+fEfqsfF
DlQKDS45/A/f8nGvatE4XmhVpfJVab0apJs69Mp17JKN3CMg8QHjiT3m93ZA
XmSgvkrC/zmaIA92lfv5yn0i5J7xcrcMuVOO3P6gHHtcDiuRW1yUb66SmzTI
jXvkRrRvDIUvDUfvGdwdMXnMsXnSg3pca/vwPOH+Yee7OR6Tb42jLCJW5JfE
99ou9sqTLESO56UeVcOuzaME4gSON4EdGrUbEztMsx3nBwmPuhye37F9eQ3z
6hz2VaHLq70+rzKDX8ZEPvOLfWyf8MAsc35jweyq85Na1SMrmyUrenmqNKYq
m7iS17aKf2ut4OoGWYXu+DnQ1EnD6QLT2T2W97ZDHqYgn0RhXgTYfurh9NrZ
63OHkC9tY75Gp30N2/mlVd7npkdeG57+VP/iM/0b9/XuzIA7RsEkMZjF1hOR
NsnarYbqYEOX0cMluJEj9qN7nMayPYbT/CTxwcKoraLQeJFfqsgzS+i+m+de
wHE7yXY5zyJcZeJv0eGtVFg3ETHQhaY0Yxh1aPZlFPccQnAcKt4Pl+y0laY6
i6M9xYF+QrcgATb2skdKVkJ66+Y8ltZJ+srVG3/7gwz84jk+H3R6VJVo3uet
Xn78J+pxKWD8cKX4/wv++yC5uE9IUjUGVX2wQZt8ZQ3j3Ab2MQB3v8HQHtOZ
ndZPtiFeJ2O/j7WXhznL/T3lfiFy7xi5R4rcZbucsFdue0SOOi23KZObXZFv
qpWbKIwj8S9G7C8NZc8MpmeNHkrNntJgT1uxj6/ZPzrt+GCfy0y2z9hb4ygJ
ihcsNK3KEXsViD0VkeMlmdutEefOcVv6JEYyaTs67DAldLzLdHxIdHzW7vDy
Fv7VJezrYrvXh9xf5wZ8lhb2MiLqmVf8Y2ziQ6Oce2tPzOpUTmjeGtboEKmT
uKosuhq3V4vXtJpfs050eePIBcBEid70MZPpA2Z3c6zvb4M9TkA9D8e98rH/
zNX1c0f/r+wjvsYnfofO+ga6+yuL/C9Mjr8xOPvK4PJT/dr7ei0zer2jYKoI
zGPpyfq3DLfYjNQgRyowo0X40XyH8VznsSzv4ZRASVyYKDJGFJwo9kkXe+wQ
euzjuRdy3c5wnC+yHW4wsQ0MaCcN3k9EDXZi6I0Y9k00txIlKIGLC2HSfaih
bAdZsps00lviFyBy3trsqpgtSZfssjnaBSytXVUrFM7qD5qfV1ZWKqKeDzpD
aoq0HzPXLT/+4/S4FDAqxPjRHdR3WTSO1SQ1Ok+V2rWy/9oqyvl1jJO6zANg
0Z5N47ss7mfBPk1Ffx1v+9dIR3mQm9zfX+4bKfdKkLtvk7vkyB3y5bgTckSJ
3KpCbnrjrXHsVhjHPxoJXhuOPja8O2n8VGD9bAD1rN72STnh0RGn+Rz3iYyA
EYVxVDh1volchRHx3CfyOi72PC9xrxpyaR51UBhH/hRuZMJuQkaY5Tk9oDk+
7Xf8tNX+VQ3udTn2zUmnzw94v9kR/Dox8tOQmGcuCU8g6Q/B+++tLpnRvj6+
slG2olegRmWrsska3E4dfv3axUzO+HnQVJHh9BHT2X0WCov/KA3x7G2bkdde
jp+7en7pGPyNffR3uNTvkTu+tdn3tdmRL42K3hhceGVQ9VS//p5ex/TbzdRC
sJhuNNxjMdIIHa1CjZXhxk7Yje93nNjlPrbNdygpWBwTKQ6PEwcki70zxR45
Ao+DPPcTXNdzb/v/1LLQLQxYDxVBHEBTOzCsBgy3GsO/iBIVw6SHYUN7sMOZ
TkMJHrIwX6l3MM8xJSsp8URAEk9nN1f7KFvTI2HhPIIfdNH50IsdCupO6Dyn
bFh+fFw9LtUV/JQH/7gD1c+HReMYka1ClanRSSv6arSJ5WupRRsYBUDObuOh
XWZz2yHP0lCfJ+L+FO0gD3WRB/jI/cPlPnFyz1S56w650z65faEcUyyHlsnN
FcaxbsE4GhPlRuxvjaSfGk7dM3w4suU5G/aiE/usyv5xseODPJeZ7QvGcShq
qzgwjueZyvfcJfQ8JPI8I/a4JHW7NezUPW7HnMYOTduOjznMSBzvcZweU5xe
9hA+a7R7cx37eSn+i2PuX+7z/yIr7HVM1Kd+cc/tkp5s2fFow9H5VRentWpH
V7ZJ1Yl8VSZTjdOvyW9Zzb+5Tnh5w3A5YOKs3vQJ45mDW+7utnqYBXuahHq5
Fffa3/5zd5cvXXy/IYR/bxf/J+y2P8Jzv7M6+I3psa+Mzn5ucOmVwc0nes3z
ej1TepRhME+gN0TZPNplPVaPGL+KGT+LHy90mNznPLHDayzdX5YQKoqKEocm
LBT+eWaLPPbwPQ7z3E9zXS5wHK+zbe+wEB1MeD8FSe7DMNqw3IWWI2jRBaSk
CDZUAB/JsRvNcBmO8xoK9pd5xJ+KTMlKjOXoZ/B1DvC0T7E1gSa/e7csZ5EP
2llukVvHVr0c3Lj8+Ij51dSffFa4/G0HqsXl/g+6QvS/ZtE4tvLUaEw1UpNm
T8XqwTPr6Ud06bsNRLtMJ7dbP0xHvE7CLXiq4c7yQA95QLDcL0runST3yJS7
5MoJ+XLbE3LUWblNhXxLlXxTg9ykW25M+6uR4CvDsWeG83NGzyRWLymoFw22
Ty8SHhUqjKPbRIb/cHy4JCyG75PA8sjke+YJPY+LPMsk7jeGXFvGCYNTeOEs
bmzafmrEcV7k9Ijl9GLQ6XUn4fPb+C8uY786Q/jqsNdXu4O+TIt4ExH7qWfi
C1TaU8O9j1YXz+tcm9JsHNXoEatRuKoc6gpetza/YY2gar2kUndsoa2BwXTh
5tk8i/u7bBQe+EKbkTDbz70JX7p5fOMc+L1D1J9sU/6Czv4TbN/3loe/3XTq
a8MLXxhcf6Vf/0S/fV5vYFKPKdMTcw1GSeZj7ZDxWtR4JXai2HaygDC123Uy
y2c0NVAaFy6OjBEHJUt8MiSKzxmP/XyPYzy3Eq5LJcfhJgfXzIb1MhEkMprW
g2H/P+reAyqqfMse/mZev9bGhIjabdtKBhFEMkXlnKAoKHLOScSMijnnHDHn
AGIABUVyzjnnnDOSw/nurWqZnn79mPefmcaes86qVZZYIHX33SfuXzAmVSg5
knVRK/eYZr6/buFmUqE7I9/WIJ9v/UiAXFp2r/UdM5ZuThM/kLJw6/0/CFaR
q2sW+mXPD0p0h62Y2f8i8erMeBQpUInkMWftR/rXTTStarnx+6i0OVGh80IC
xD+eWxp1+MeoHauSNsvnbVxb5anR5qI35IAHawoIWGDMB741GDoCxxOYm4G6
C4iHAHMKNC+Byk1QeAjywSD3CWQTx2RyeqTLGqQbSxTbU9U7QzGt9wlNZ8h1
uxFy5Ba4mmZbW6fzHZJY7smsrams/Wms0xmsm9mMZwXUDyX4xApMfhW+pIRU
lUupT6O2xFG7PpL7gon9D7EDV/UHT9AH9xp92Wze72LTI3DspLi2rdvY/POB
+sWXqxY9LJn/Ok/sY/rcuMS5yRHzU18vTnsimXZzee6VFUXnfyk9LlO2V6lq
h2q9r3qLu06HrX6vMaGfTRtkGIxSzMcJDpNY7ymdbePr94wpHxmRPTMofb1P
6mHH6sDG1e+rVqHL1NmrchPkisJVioM0i+/rllzWLzlOKN1DKdvCKvbm5bkI
suyssiwcs/juWVyfTFQ5dl8q83gK42IK5XYy4Vmy7luhHldUhF58KCYlSD/j
ESbrpm7uOc38I5pFu7DFvpQiV3ahlSBa4LbR1fGakU2OtGvmYr/0RUdTF7Cd
/yBYnYVmB2Iv90r2vVs5s/8V8DgzGKcTRuTJXyphnDbkx0PJMXFuTPQPHx8v
Cjm/JOLo8qjdK2N9ZTN9lEs91ze66PQ74sCGDOYMMDYEY3MwsgcDd2BvBMZ2
oOwD/HHQPQfrr8EahByfg3woyMWAbNqwTGGHdHWNdFueSkeMdkcgrvU6qfEw
tXYLs8iTn2tvkWFql8x2imP4JLN2pbCOpTEvZzAf5NJfF5Eiy7CZVdiSSmJF
Mbkuh9KcQu2MofZ9IA8E4r/cxQxdIA4fZQ/vMh70sey3t+vhOXfi3NsUtjUv
PVknHlC58EXxvFDh2mZS3A8pHxalBS5Ju7c047pIEA9tc5TvUq7ZotbordXq
rNdties3JA2ymCN043GK9STBFTC+oLVzct2BcaUTo7IXh6Rv90k97Vj9pnH1
p8pV8UWrMjJXF8UqFr9XK3muXXIbU3oBV3qYVLaTVrqJg/6/HM2ybGyzTJ2z
DD2z2Zsy2TvTWIdSmWdSUf2f+ym4wGSt90laETG6sZ8wSe/00wNRyZGcazr5
ZzSLDmqV+BFKfOjFTobZFs7+Ti7+9tYZ6g45P2/IEt+TsehU6gJ59b/9Y7CK
BF2zgMdXu5YOBq2a2WcNj/9MZONfUaD6CyaM0xYTE4PEP9Yb/x6XNicyeMHb
y4vDjy+L3LPis690ygalAg+1WhetTgd9tMFhQQcTDhgLgG8DPBcw2ACsrUDz
B9JhwJ4GrUugGgCKj1BylEfJcUome0CmrEW6sVyhI0O9KwzT8ZDQepbcsJte
7sPNcxZkWlqnGtrHM9ziGVsTkfSKdTadGZBFf56PkmNypX5RDaG8nFxTSGnK
pLYn0XqjqF9CSIPPcMMBeiNnqCMHDUe2mw152PRbOvawXDu1fdql9jRLXKxb
9KB8QXCB2MfMuXFJc5Ij56W+Rdsc6MDqlZ+KzqGyBmX7lCp3qNb5ajR76HTa
6/cJCINc6jDTYJxmNkVyAJxI2cAfVI5Myp8Zk7k2LP2gVyqwffX7+tVRFatS
ClblpkmXRCmXvtMoe6JbdlO/7AyhfD+5fBuj1MewwE2QY2+ZZemQbeKWbbAh
m701g70nDb3VXEyj3UojPUnVf52i+TFJOzpGLyFcP+0tNuuFfs5dvfwr2oUn
NUv265VtJ5d5sUrsbW/YI+RoFUO2zldyzlm2JUv8YMbCbY//IFgF4T1/FkKv
1zuWjTyTmtm/eT3nn/3Vb+fDZ/NH+n81Eom0bOW/v0uYGxMuFhogHnJCMmLf
TxGbVsd4KGS4qpQ4arTaY0ZsCWBFAwEbTPhgYgV8R+B5AmcTMHcCdT8QjgPm
HGhcg7V3QAEhxxAROY7LFPZI1zTItBWqdCVodwfjOq6TmpDMcTOzwN0o29Yi
zcQ2gekYTd8Qz9yVxDqeyrySzniYS3tbTIqtwObU4MqqSdWllIY8als6vSee
/iWCOvSaOPJIf/QafvQkc2yf8ehmyyFnu34T516ye5fK1vafjjUtvlG98Fnp
/JC8HyLT5yTG/5ASvjA1aEnq/aVpwtXj4q8zANVb1Ro3aLW76PVY4waNSMNs
5hiDP0W1BqIruryp4wfr94Py8Sm5i+PSt4aln/ZKvW5b/bFudXzZ6oy81UXJ
8mURquXBWhUP9Squ4MqPEyv8qeVb2CXe/AJns2xbm2xzp2wjj2yObxZ7Rzr7
YDrrdDrjajr1fhrhZZpuaKoWqscVjUkJw2a+weY808+/rVd4SavkuGb5HmzF
Flq5h8UzR+TSsn1qYlmkZVcg656zeGe2+PGMhYItc/4xWIVZaXYg9mbr8tHH
0jP7N9SX+50oyG//SjQfLtqcmv0f7F83kULO1uPfx8XP+fR40etTS8IPLP+4
9ZcIN/l4R+Vce/UGO91+WzxYUcCMCSY8MLEAY3swcgPDjcDeBgx/IB8G3GnQ
vQTrb4Iykjm+AvlwkEsA2ewhmbJ2mcYqhc6c9b0fMZ0PCS1I5riTXurNzXYU
pJtZJXLto+nu0Yxt8cyDScxzqYzb2fTAQkpEOT6tRr+0jlhZSakvprbm0rtS
Gf2xtKEwynAgYfQuZvwSZfwYd3y36aiPzZCd44CBay/Gu0tuV/uScw3i96oW
vCqeF56Ndm1SoualvhNPfSqZErA864rwUDwkc9yPzgDUb1Jv9dTpctQfMCMM
G1DHWNwpuhlQHIDgCfpbQdsf1A6D0pkp2avjMveHpF/2SIW2ro6sXZ1cujo3
Z3VZolJFmHrlS53Ku/oVFwgVh8iVOxnlmwyKPUzQCpW1fbbANdvAO4e9JYu9
O519NJ11Pp0ekE55nIZ7nab1MVU7JkEvKVI//QM25zU2/7F+YYBuyXmt8iPa
lbuIlb7cTFfXjW52N20sSgjWxWqOBSt9chfvy150JmOBgsYfBKvwJ8vKTdvr
jT+P3FaY2f8K+ePvTJQwHjlyJCcn589uCf1PDLnNIuSoove3mIw50W8XvLkg
EXpgWfi2lWGustEOazJs1KpsdbptsGi3EUkbBQYgMAUTGzB2Bp43cDcDyw9o
+4F0DPTPgdZVWHcHlJ6CwjuQjwLZ1EnZwn6ZmmaZ9tK1PUnaPSJyPECp3sTM
c+VnWFkk8Wxj6U4R9I0xDP94xslkxrU0+pNcamgxKb4Sl1+Hr6wl1VVQmoto
ndmMvmTGUDRtJIQ09gw3HoCfPMeYOMyf9LMY87AfsnAZYLj3qm/uWnm4TeJ6
/aJnFfNDCsUiM+cmJswVkqMEQo4pV3/MubCi6NSqkkNyZbvWoOToo9nuptdr
ixs2Jo1xmZNMPtCsgOwC+I2A8QPN/UKlkQsgGzAh82RQKrhbKrxldVzN6oyS
1UVZspWxKlUhmlVP9SpvYitPEyv3U6q2s8t9jIpcTXPsrLMtHLP57tlcn2z2
9gz2/nTWyXTm5XTa3XTSiwz90HStyFSd+HhM6mcsKjkShC18qF9yXaf8rFbl
QUy1H63Yx+Gom8sOV/N8jlWpvm2JskvBsm154keyF/k9FUPI8Q/PQJ+F5iNi
wR6/DF9Rntn/Unj8P5EwTtuFCxcQcjx7f05CpNj7m4tfHVz6YfuK924yn+2V
kqzXlVprtVvroxscKBg5YGoCAiswcQS+B/B8gbMdmP5APQSEk6B3ATRuwtoH
oBgI8mEgFw+yWaMypd0yTXUK3fnr+yIw3Y+IbWcoDX70Ek9uhp1psolVHNM+
guYZSd8ewzicwLiYTL+bSXtVQP5chs+swVU0EGtqKE1ltPYCRm8mYzCRPhpB
HXtNnHiEnbxGnjrFmdovmNxsPebkOGTsNkD06l3j1y15rmXxvbqFr8rnfcz7
ITZtTnLMvNQQ8dRnS5IDlqVf+in/7MqiY9IlexXLd6jU+aq3eGoj5PjFgjDK
o06yucAwA5o9kDwBtxV0/UH9MCifBvmrIHtvXOblF6mQLqnIZqnk6tW5RVLl
aYpVkWrVr7WrH+pXXcFXHSdX+9OrtnBL0cE/82wb22wzl2yeVw5nc5bwDKB0
5tl0xo0M6qMMQnCm7scM7ZhkvaRY/YwIXF4IrvAltuQ+puyqTuUprZr9+Nrt
lrc9EHK0iDG3KKfblOk4lMh5Fkr454ufylnIdf+Dyip8lZWbheWgYCepodPr
Zva/Dh7/rySMIhMNAFAF3yWkzI14JP7y8JLQHT+9c5MOt1WMs1ApsNRsssQM
WRLBggamCBj5YGoBAjswdgX+BjDYAuydwNgP5KOAOwM6V0DtNig9AYU3IP8Z
5FJANn9IprpdtqNibV+adt8bfNcNcss+apUPM9uJn2JuEc+1jaQ6f6RtiqTv
jaWfTqTdTKM9y6WElRCSq7HFDYTqOnJjFbWthN6dx/ySzhxLYIyHUyaDCFP3
CHCJBsd4sNt8YoPdqK3zENfji+6mXukDXRLXmhc9rV4QUiwWmTU3IXFuyid0
BiDl/tKkK8uzzq0oOLmq6KBc6S7lqi3rGjZotrvq9tnhRk1IEwZMYPGBbgUU
FyBuBH0/0N4PasdRpRE5dCR+TDp4QCq8UyquUSqjcnVRgXRVknJNuHpNoF71
HVz1BWL1IUqNH7PSl1fsLsj7WsnJ4frksLdlsvems46nMy9l0O9kUp5nYkMy
tSIzdBKSMGkxQsmRt7iSZ9iyO5jKS9o1x3Xq9hh89kWQZRXoYFrFs6ok2VWs
dy75ZVPR4oP5i87nLFDQ/ONg9c+WlZu2V/Yyg8fXz+x/ETz+X0kYpw0dAFj0
by8+zI15tTD45JLXO5YHu0qFWilEmankmGnUmen1mwuHVE1ZYMoDMzMwtQGB
E5h4gtFGMNgOLH+gHQLiCdA/D1rXQfUeKL4AhQ8gHwty2SBb1i/b1KjQXaT2
JRLTi5DjSXLtVnqhKzfFSpDAs46mOoRTvT/RdkbRj8XRLifRHmbR3hWR4ipx
efX46iZSfS2ltYLeVczsz2GOpDEnYmiToWR4gYdbJDjHhkMmsN1qwt1h1Nxt
iOY1oLa9d/np9sV3Gxa+qpgfXvBDbPqc5FgxhBxTnkom3VyWcuHHnNMrC45K
F+9RLNuuUiskxx4nLHK3QWV/OFxgmqLkSPYAwlbA+IPmYVA9Pb1MPSYdMiAV
2SGV3CCVWyFVniNfE6daG6pV+1S/5ia+5jSpZh+tehunfAO/0MUsB63kOGcb
eeZwNmWz/YSVnDMZzOuZyH+QFJyFCc/Sjk3XS0nEZkXjC8LxJW9wZU+wlQF6
Nee16o6QCne6+nrYn3UzrrUwr+bYVOHsK5TdSpfvKFp8PH/Rrhfz/rCyCrPV
7EAsyFJuYJ/mzP5XwKNIgeqvnzBOm2gAwMrr7xGh84LOL36xfdlL59VvLBQi
BGvTTdQrBbq9ZngwQ8DIBFMDMDMFMysQOIDAFYy9gbcZuH7A3AvUI0A4DXqX
QCMAlB+BYjAoRIB8MsgVTsnW9sp21ioPpGv1I5njFVLjbkq5JzPNjp9oYhHD
tPtEdv1A3RpBOxBNOxdPu5NGCy6gRJbjM+twFc3E+kZKcw2ts5zRV8gazmKO
JzEmP9PgDQkeE+A6BU4Zwn5z2GQ34eg8ZuQxhPUdkNvbs+Ryq/jjmgXvSuZF
5sxNSEbJMTlIIune0oRLyzPOrsg/gSo6luxcU7VFrXGDZqeb3oAdKvszZcgE
thEwLIHmDGQfwPuB7n5QPw5rz4OCcF9MJnhEOrxPKq5NKqNOqqhMqiZjTV3U
+vo3unUPcXVXiDVHybW7mVWbDUs9TQocvlZyuN45nC2ZbP909rEM1sVMxu0s
6rNsfEi2dlS2TmKafnoiLjeKUBxGKHuFq3ykX3Ndt+6sZuNB6/MbnP08jMod
BbWmljUMu2pdp0p5r1KJvcXiZ/IXGnr8cbAKf76s3LQFGsv3b9ee2b/5PrIo
YUQi1b9+wjhtJBJp6c///iRobuDVRc92Ln3m9MsrM/kw/tokI/UyY50OAW7K
lPIVjCZgbgFmtmDqDAIP4G8Ew63A3QXMA0A5BrizoHMV1O6A8jNQCAGFaJDL
ALnyMdmWdoXeUrWhSL3uB4SWY+SazfQ8R4N4M9NojvUnkmMoZWMY1T+CejKG
ej2R+jyb8rGUmFqLK24i1LWQW5tonTWM3jLWUAFrPJM5GU+HcCoEEeA+Hi4x
4bgx7LYEb4cJa7cxlteQ5taBFSe6JG43LQqqmh9ehK5RJ8WIpbwTT36yJOnG
sqSzP2afXJl3SLrAX7Fkq0rtxl/JcdiKOMWnApcLLFNg2AHVA0hbAesvVBo5
DWuugNwdkH0xJfNuWDqyVzq5VSqnRqq8SLY+ZW3DJ82GIEz9HXzdeXRlrHYH
u3Ijv8TVLNfOOgut5HhkczZms3dksA+ks09nMK9l0h9kkV9lY8NztOOy9VJT
sdkJ+MJIQtl7QuVLXM19/bqrOo2nDN5sR64iQZQHv8HWrI5vXUtxqFF3rVi1
uVTicJH4pfwFvyj+wcyqyP5sWblpe8FV7N2gO7N/Q34UJYx/kb3+f91EPQ7/
U98/uzXvif+Sx04rX5jIhxqujeeuL+bptPFxEyYiMHLB3BjMzcHCBswdwdQN
TLzAyBcMdgDHH+gHgXQcsOdBGwlW74PSS1AIA/l4kM0B2eovsp0Nyl8ytb68
RsmxYSelzJWZYMmPNrT4RLF/T/IMoewIpxyJpFyKpT5Io4QUkhKq8PmN+Jo2
UnMLrauJMVDLGipnj+ezptKYEEOHUAo8JwiDVQM4bArbbcHNedLUY5S0cWiN
/4Dk5Q7xJw0LQyrmReYh5DgnGSHHQImku0vjLixPPbUi++iqvL1yhdvXVGxS
a/BGMkeUHCdMycBjAoePynAxnIHqAwQ/wOwDreOgeh4Ub4DcI5B9NSkTNiQd
2yOd0SxVVC1dk6fYkKDW+F674Sm2/gah7iSlbg+jdqtBhbdJoaN5lrVdlsAl
Cz1zZHMma1ca+0g663wmMyCT+jSbGJKrG5mrk5SJyUjB5cURSiOIle+INc/x
dXcwjZfwOQddfD0s73kbNLsJGq0sGwzs6vGONSruFct2li4+WbTIP+ifBqvw
58vKTdsLllKPO2Zm/0M8fhV1/BPVHP/PJYwiQwKe9evX61D/FvhM7PEBiUfO
Pz8xknvLUo5hrS/g6jTzcGPGZBAw0RqOOR8szMDCCsztwcwFTD3AZAMYbQYD
P2DtBdphIJ4C/UugGQBrkWD1NSh8BrlUkC0akW3oku+rWDccg+l7RGg9TK70
pqfbGEYamX2i2X4gurwhbwml7P9IPhNJuZ1ICc4lR5UTsupxFW3ExjZqRwuj
v4k1XMMeK2VP5bIhhQmRNHhLgic4uE6H00aw3xI22YOD6yTPaxSzZWjV8T6J
222Lgmrnhxcj5Pg9Qo7J78STHkkmXF0Wf+rHtGMrs/dL5+9ULNqsUr1Bvdld
p9cRO2pJAmMaGBgA2wyV4aJ7AGUL4HeD7iFQPw1rL4P8HZB7DrLvJmU+D0on
dUnnNEmVV8g0ZCk3Rms0vtFrfIBvuESqO0Kt38mu9jUqdTPNE25XZfHdstho
myOdtS+NfTKddSWTcT+bEoSKVWrH5eqlZmBzkghFsaSKT6TqN4S6p7jGW9ia
s3YHNjgc8OLUbjRqcTZrMrNuZNnX6znXyPtULjlQKn6+eCHP658GqzBbzQ7E
npHXdNnqz+x/gEcEjSIgTj/5EywkJEQExj9bJOF/10R7HJeuzXlwdNFd558e
GMgF09ZG0dbnMnUaudhhIzKYiMBoBJamYGkBljZg4QjmrmDqCcY+YIQEqzuB
uQ+oR4FwBvSugPodWCMMVtFKDkKOlYOy7c1KQ9lag29xXchFu4WSZ8+KFJh8
Ylp/IDq+JvgEE3e/Ix4PI12LIT/PIH8qIaTW4IpbCA0dlPY2el8ra7CRNVrF
mSxmQxYLEhjwkQqviHCfCJfZcEIAu2zAywksPSboPqPrdg4vvdi9+HHjwncV
8z6j5Ph98scFSS8lEm4tjT6zPOn4TxmHVufsls/fqlzqs67eS6vTBTNoh58y
o6DkyOUD2wqYzqjSCMkPsPtA5xionQOl6yD3EGSDQPbDuEzsgHR6h3RRg3RN
iXxT6rqmT9pNgfroPvVZcv0+et02hByNC53Ms61tMqcHVlk7U1mH09jnMpgB
2fSnOaR3eZjIPJ2kHP3MdHxBIrEsmlQVTqp9RWh4hG25YXpzu4uvJydvG7fN
26TV3rLZ2LaJ6tig4Vbzy7ZKiWNl4leLF0qu+PcZbvt/tqzctD3FKHcY42b2
f8RjS9ihQ/8hfvxnKZGLItVp+yZHbPy/mqiMY2j+3aPzC++4Lb/Dkg0irv1M
Wp9F1Wlg4UYMKWDMEIKRB5YmYGUOVtZgZQcWTl/xuBF4ouRxP5o84s+BzjVY
dw+UAkEhHOSTQK4YZBt75fsq141EYnruEpr3U0rdGPFmvHC2eSjB9jXBM4iw
/RXhcAjxYgTpYTIpNJ+YiESqTfjaTnJrJ62nnTnYyhqtZ09WcKGQDRksiKXD
Bwq8xMMdKlwwhEPmsM0eXFzBxHsCv2lU+vCAZEC7eGDtgrDiH2Iy0cwx6Y14
wgPJ2EvLYo7/mHp4ZeYemdztioUbVaq8NVrcdfocsWhHFSVHLqpRybIHhgdQ
twBhN2AOgeYpUL0ECrdA7hnIvQXZiDGZpH7pnHbp8lrpxnyllgT1lve6zU9x
TddIDcepDbtZNZt4pe6CPDuLDAsH4YFcG7JY29JZe1PZJzJYV7IY93KoQXmE
sDyd+AK99BxsbjqhOJFUFU2ufU9qCCQ03+e9PYhcPIYROxid23jtHqZtNtYt
hvbNBOcGFc/apf6Vi8+ULfK+/MPvpKt+a7MgKzdtT9RV2hiEmf0P8fgVhH/i
AVai46GR3wMCQ4QrRbHrXxyYfD5/6c//fufyDwEeywKoci+xayNw6pkknXoG
bphLAb6w729uCFbGYG0KVhZgLcSjJYJHNzD1AmNfFI8cYTGHfAJwSPJ4A1Qf
guIrUIgE+QyQqxyX62hXGMnUGgzEt50hVftQ0q3YYVyTtySrILzrC/zml/h9
wYSzYYQ7scTX2cTYMnxOA76qg9TcSe3uZAx2sEZa2ON1XCjnQB4bUlkQRYd3
ZHhCghsMOGMM+6zA1wnsPIDjM6GxbWzZ+V6JR80LQyrnReaj5JgYhp5rEHdj
aeTJ5YlHfkrbJ5XpJ5/rq1zqrVbnrtXhhBm0IYApBVUaMTAGjjWwXIDuA2Q/
wO8DvWOgfg6Ur4P8fZALArn3QnGD9F7polbpmkq5liyVtmit1tf6LfcJzRfI
jQdoDTu4VT7GxS5mOdbWGaZOmYaemSzfDNbOFNahNOEZQFn0J7nkt/nYyAKd
5AL97Bx8YRqxPIFc+5lcH0Jsek7Pvezi62XyaDu5ew+na7Nxp4tFu4VtG9ux
BePaIOdbu+RQpfilsoU4/u+lq35rs7NpJbLHautbqfSZ/R/P05kdfhSdJSTS
EgdhXsbhcDQ1NR0dHUVxbEBAwKNHj/7ZbW32TVTGcfH4/sbGJdcIci91VCP0
NLLweg00/DBHBEY2WCBg5IO1CdiYgo0l2PwGjwIhHg23AWc3MA6ieNS/CJo3
QfkxKL4DhTiQzwO5hkG5gRrVsc+YngBiw05qoT0zkmf0jmQeiHN6jtv4HOv/
EncyBHfzMyEwjRhZTMisx5e3Exu7KR3d9IFu5kgHe7yZA7VcKOVANhsSmRBB
g2ASPCDDFQ6cMIXdduDlChbeQPWdUDg4vDSgSzyoYcHHUrHYjDkJUWIJr8Tj
70rGnF8WdfjH5P2/pO2SzdqslO+tUumh0eSi02uPnUAzRwbweGBoARxHYHkC
fSuQdgP2EKr8s/4SKN0C+acg90YkbjAsk90jXd4s01Sq1Ja6vv2jbtsLXEsA
sfkUpdGfWbeFV+4hKLD7VUQug+Odgepy+CezjqexLmUw7mahYpVhBXrxhXrp
+ag+XkkquSaeUv+J3PSGXPvQ9sQ2u4O+xNZD9J5dht0+gi5Hqw6BfTvNuUXT
vWGlX43EyUrx8xkLxBb8J53V39ksyMpN2+N1mq1k1sz+rfJHUZzwu9AduY+t
mCtDXcMREASivxUIBAhIVVRUEG5CfqvfCp6iMo4u7rtr2xZf0pML1Fgfqaud
i9dvohFHOFTgC3NGBIzWRmDDB1sTsDUDWwsUj9YIHoX5I4rHjb/iES2ungTM
JVC/DcrPhWMAySBfOinX1iM3nqM9HEToOkIqc6XFGnPfUkxf4uyfYb0f6+98
hj0WjL0Shn+aQAjPx6dUoWljfTepvYfW18sc6WGNt3OmGrlQzYFiDmSyIJ4B
4RQIJMJdKlw0giOWsN0RXDyA7wN6Wyd/Pj8g8bht4bsqtKwan/h9QujC+McS
sVeXRhxdHn8A1eBK36qQtWFtsYdanatWpyNmGCFHARWMOMATgIEtcNyAuRGo
fkLln6NflX8QcgxEyVE2elImbVCmsEumpkG2tWBtR7xWewim9RGh5TK56TCt
0Y9T42NcgpKjVaqpY7qhezprYzrTLxnV5TidxryeSX+cQ3lbgI8s1Ekp0s/O
wxdmkipTKPWxlKZwUmuw2YODLpu8qNmHiX0HWb3b+T2e5t22tp08pw6ia4uK
V4PkvprF5ysX+VxDg9UZwtFZa3Yg9khFt4VgNLPPWn31d3scoqHBaX4UmWhC
+6e5MgRxDmU+00iRZ02zEP0rQ0NDBJgLFixAMjgEmxcuXPhn5bI/w3x8fOYt
/Dd/10XntORfqWvF6GLy8fgWGnmcQwc+C21tWBmCrRHYG4O9CdgLwN4M7MzB
xgqsbcDSAcyF9VVjYfORvRtoB9Hiqt5lWH8X1gSilVX5TJCrHZXrr1MdC8d0
XybWbqJlmrNDGSZBWOvHGI8HmO2PMYdf6l98h30QjQ/NwieW4wqQtLGL1NpL
7eljDvWzxro5k20caDSASi4UcCCdBTEMCCXDMzwEMOGsAA7YwmYXsPcG9iZQ
PTD6440u8Zf1SOYoFpM+Jz5CLP7l4tgAyagzyyIP/JTgvyplm1yGz5pcd9VK
V41WJ70BO9yUBZIgM4FnBDxLMHAEthcwtgJlN+APgt5J0LgIawNA4Qmq/CP3
EWQSJoT7mx0yTVUK7VnrOiJ12l9hW++QWs5Sm/YxGrbyKjwE+Xbmab8eB+CV
xtySwtydyDyawryYwbyTTXuZTwwrxMQV6WUUYvNziWUZ5NpkalM0pfW9Qdw1
9JJ4fxA7cIo6sM+gf6ug182qx9K+i+PSiXFvkd3SsORo7eJrlQs1qd/NEKzC
bG1aiezhGlyzvtnMPjv9xz+UykFyRuTW9I/NRyRYXfT3JRhxBmUBiy5GZYoR
TBSZtrRfGZPBYKiqqn7//ffIfU8EzD/1J0duF1euXEG+HZv6wzm1Ne/U9RJ1
cSUEUjuNOsVlAJ8NZlywNgQHHjjxwdkYXEzASQAOIkgiFGkDVvZg7gym7mC8
AXhb0PwR4UfCKdC9Auvug1IwKMSAfAHINfcrjmZrDz0ltO0m5trQw9j8IKzF
I4zbPb0t9/UOPNE79xpz9yP2bRourgSXi6SNXcSWPkr3AH3wC2u0jz3RxYFW
LtQbQDkX8jiQwoJIOtrpeEyCa1w4YQ7+DuDtDhY+QNwKMqcGlzxoW/Sucv7n
3Llx8d/Hv10Yd39J1IVlHw8tj9mzMnG7TMpGxXT3tcUu6vVOOl322BErIioY
a8RFNSoN7YDrBmxfoO8A8l7AHQWds6B2FRU3UHiBihvIRoFM6phMYZ9MdYts
W8mazhSNzjC99mf4tuvk5qO0pp2cmo38YhfTbCvLFIFDqoFbGssHlR9n7k9i
nU5j3chiPM4VkmORTkqJfm4hvjiXVJ1BbUqitkYyy1+6bvK2urQT8+UiYfAY
48tuXr+vWZ+zTa+pYzfdtUPTs2WFf4PE2VrxS9n/RbAKs9jsQOyhAqlJx2Zm
n/15gGk8IvclkRDHP37N/fv3v/u3v6+Zr0VayKaJ0ZhiRLYYhiumZaHBdORb
TANTQUHh/xMa8j6/Pajof8tEinZSUlLSv/z97Jp14er4ND1SJZHSw6CDARNM
2GDOAVtDcOSBqxG488HDGDxMwM0EXAUoKu3MwMYCrG3RkBWdB9gAhtN4PI0W
V9FiDpI8JoF8xaRcb63aSKh+5ylCuSs9ztAgCGv6UM/5tu6m2zr7HuqeCdQN
eI95lYiNLsRm1eIqOojN/ZTuQdqXIcbYIGuijwNdXGg1gDph8pgjTB4/iTod
NLiEBKtWsN0ZXIUTCVr7JlZe618c2LzgY5lYbPrcmA/zoh4tjrgkGXZkWcSe
FbE7Vif6yqd4rMl2XlfhpNlqj/liLZzFNWaDER+MrMHACThewNwC1N1APAj6
J0HrIqjeBKWHoPAK5MJBNg5ks0ZkynplGuvlO/NVu+O0u95iO+4T285Tm1Fy
NKzwNMm3N083s0lGD3b0TGFuTmLsimceTWZeTGeg5JhHCi/Sjy/RyyzBFRYS
K3Ip9em01gRqe4T1xX1OO32J7dexQ+dJQ4c5gzuNBzagqiN9fOceonuHsk+L
5OGGxVdqFtnsQbePZ74wZnN/4YE8pVHbfmafzXm53+0di0qs/+yLfxu7Uucz
GGJklhiWI6ZtILaeN3+tlTbFydjsd8D830WlaHwIefOf5v5wQ1E3WpOci6E2
kOlDTCRmY6PVG0sOOBiAKw88jMCbDxsRNwYfE9hgAl5CVDoK0EQSiVot7VCK
NPEE3ibg+KHxKoJH7eug8kSYPGaAXP0XpaEs7aE7hMaNpBQ++xXe5KGu/U1t
3xtae+9qnXqmfeON7stY/chcbGY1trwd39RP7vhC+zLCGBlhTQyyp/q4KB6b
DaCGCyUcyGJDPBMdk3tJhttMOCcMVn3dwMYHrb+sOTki+aBnUUjDvOj8ubHR
cz+/WPT+ssSH40vD9/4Y5fdL7CbZRE+lVCeVIkf1enudHlvchCUZBAwwMgC+
Gar8Y+gGHF9g7ADqXsAfAb0zoHFFKG7wFOTfgtxnkE0G2YIhmeou2fYqpZ5M
9e7Pel0v8R03yK3HaU272LUb+SUIOVpaJBrbJ3Fdk5kbkhjb4hn74pmnkhnX
0umPcqhvCwhRJbqpZfq5xYTSAnJNDrUlndYeZxJyFfnEuSkXsEPX8aNnaMMH
DIe2mX7xsBmwduznuvbqe3ZI72hZcrJhcUD1wjW6f7zQMW2zIys3bfdlmA3q
bjP7N+RH0Vw9wo8z6Pwj4ei87xapLyKQf41d8WwxPa6YhuE8Vd5CJf4yJWs9
grPFr4yJ4HfFihWOjo7/c1SKwOji4uoiox64lpiiTS/FMdoozDE2C632m7LB
hgsuhuDBgw082GQEW/iw1Qi28dEnW4zB1xi8pyFpjjY+LBxA4A5GPsDZAfQD
gD8NWjeExZzPwmC1o3rd4Gtsuz8+z5L9gcR/pGN7XcvnqqZ/gMbJR5rXgrSf
R+p9ytJPq8AWt+Ab+kidQ9SBMfrIOHN8lD01zIF+LnRyockAqrhQxBV2Hhnw
ngLPiHCDC6eQYNURvDzBdBPo7wOpq4OLAzsWfCwXi0mZ+/nNvA8Bi0NOSobt
X/5xx89Rm6TjvBSSnJWzHdQq7bTbbfSHLAlgSgNjDvCNUVk8nhMYeAF7C9B3
AfkA4I6D7nlYfx2UH4BCIMh/ANlYkM2YlC39ItvYKt9VsrY3Sbv7PbbzIbH9
IqVlP6Npm2ElQo525qmm1vGGjolMj0TGpnj6TuEi5/kUxu1MhBzJ4cXYhFK9
zFJcYRGxMo/SmE1rTzHMeOG6aYP5k6OEofvY0SuE0ROskT384c0Wgy52X8yc
B+juPZqeHcv3NUtcqBc/9H6mGTmRzWazA7H7Utx61Q0z+zfMH0UtDwSPM/9C
kC9DILZ07i+6C8nUeXSmGIktps9FiVKNN1/ZaJECX0LaTH6NDQ7jam8rAiYG
g/H39/9voxKhZi8vL7426SnGMFadlafHqieyB+hs4LLRmM2CDQ5ccDeADQaw
mQfbeeDHg51GsIsHu5FHI/ATAnMzHzYYg7sJmksiUaulLTo1x/cG7jag70fx
qHlTWMyJBfnKkTVf0rSRdKjSkRpBNXioY31Nw/uiuv/19SfvqV97ofn0o054
ml5KqX5RE66ul9gxTOkdow1PMsYnWZNjbBgS4rHDAMVjJRcKOZAm7DwiyeMj
MlwxgmPW4OcCzhuAuxXUjo8tvd+7KLRpXlTenKhPP3y4vyjk3JL3h5Z98Pvp
0+bVUV5ycc5rUuxUi2w1Gmz0eq1wU+YUdOjImPerLB5CjtyNwNoOtD2oEpc+
QvSXYd0tUHwC8q+FMpVJIJs3LlvVL9ter9Cdq9YTrdv1Ct9xi9R2ktaym123
0ajE2TTTwjyebxvPdklgeMfTt8bS90YzTiaiKgePcihvC4lRJXqp5fp5pYSy
InJdPq0tm9kY43jQz+7UbkrnY/zoHdz4JfL4Ue7oLsGwj/WQg8Mg3/ULybNn
zeZ2yWPNi6/XLRJsmoNk/ciVg2Qc/2z8ZtY2rUR2d6VRrdKWmX3W+PEfdXJE
JdZ/cVQpJiYGyeOUlmsQF3Fo85CMkvBbojRaLMuXXGX844+WGmvs2ThXRxvk
nZHPIiAg4F8/ZAeBIZK3IhGO2o8KTkvXxqznZGlzq3CcDgpnjMUWxqgssGGD
Kxe8ubDJALYbwG5D2GMI+w3hgCEcRJwHB3iwjwf+RihCEcZEglg3Y7A3BStL
MHdAQ1aDLcDYi+JRIwDWvAaFNJBvqVb98hzb7EWMY3GfaVtcUfc8u87/surJ
2+uuPVN/+l4rLFk3pUS/sBFX20NsHSL3jNOGgDEKzIlJNkxwYJgrxCP31+Jq
PgcdW/1Mg9cEuMeAiyZw0A42u4OtL5D3gNzlIYnAzoUR5T9EJ8z9FLjgw1WJ
t0eWhu76MWzzLxFestHOSvG2Kjk266usdTqssKMWJDRSNeaisnjGNmDkAoZe
wNnyVYnrGKrEpXkNVO79qsQlHw2y6SBbPCrb0CnbVbGmL02zJ1y/6wmx4zKl
9QCjaatBhYdJro1ZiolltIFDHMM9nu4bS/OLoh+OY1xIod/5lRxxCWWY7Apc
cRmpuojanE/vyrS9dAQhR07ZQ9LwE9x4AG7yHH3iEG9sh/mop92IjfOQgfsA
xqt79e52ybNN4lcKFixd+e+2trYhISFHjhwRXXhIwIP88bfomx1ZuWm7+5Np
jezOmf3b7j+K5lcRivwXhVWR8HX9+vU//SCzfp4ufR6FJYbn/AcqFRFUGi9d
afLzMlOlJTa0NQ6mBDcXJ+T9kU8EyVX/8DaIYBBB+oEDB5C3XSWmaCzOOreS
EqLMztYyrNQ3aCNxhxkcMGCjiuJWLHDmgBcHNnFhBxf8DWC/ARziwlEuHDeA
EwZwkos+Is+PGsBhQxSY/gh7GoEvH1yNwdYUXfQQuKIpJGMP4E+hzUdULSd/
XKknTqtrHyGDxwrUMb2k5nFyrf955VM3115/vO7JO40PiTrJRZiCOmxNN6Fl
mNwzSRkE2igwJoAJwIZJDoxwf+XHxq/F1SRhMSeIDHdYcMYM9jiCpzeYbAXd
wxNL7/eJv2+aH5MzJyJELOz24rfHJUP2LA/Z9HOYp/RnZ4UYW+UUK7USS60m
S8wXCyIaqZqwUQFnY0swdgAjd1SJi7MdGLuBchDwJ0HvIqgjRP8QFIJQJS75
BOGKSsWwbFuzfG/huv543d43+K675PZTtGYkc/QxKnISZJiZx/JsY5jOsXTv
GNrWKOqeSPrJePq1VNqjLMrbAmJ0GSajCltQSagoozQU0zryBaH3kM/RKPUe
ZTiYOPYIN3mdMHWKPbnfZHyL1Zirw6i56zDDc0B9Y/ePh9slrjaJb771n9qO
yJ0fgZ7okFDR9SYaA5vNZgdid5aZV0v5z+zfFo9HhIZEFAgw//X9RwRBCPf9
JLn6lx8UdMT0vlZfNae50njZzwKppebq4ma4eZaG8mwWefqDQICPfDQIrpF3
QDA47zvxtQv0rCSsjiyzfyNjmbjOOF/bqBrLayMZDDE4U1wW2uu3ZIITCzzZ
sIkNO9jgz4FDHDjKgRMcOM2Bcxy4wIGLwkfEzwtfOY1gkwuHDWCfIRrN+hqh
rRBrczBDLukNwNqFyuao3QGFTyBfXaPUfxtfa04N1jG+oupxTGnPGcXT19Zc
f6jy5LX6hzjtpAK9vBpsdRe+ZZjYPUUeAOoo0MeBMfl7PHKhQTgplyssroZT
4AUZbiJ3CivwcwVnJMTcDYoXx5YEdS38XPpDVPQPYY8Wvju75O3eZW82rwjx
lAp3lo+0XRNvoZpjrlFjrtdtjkfPUhcwwcQQTEzBxBb4zmDkBQabge0H9L1A
PvIfYiNrnv5GbKRwUrauX7arTvFLlmZ/hH7vM2LnFUrbQUbjV3JMMrL4zLaP
prnHUH0jqX6fqIeiaOcTaLfSqC9zSOFFuKQK/fwafHkVua6c1lZsUBTpusnH
8sk52vB7ylggcfI+Fi5T4bjhpL/phK/NuKPTmIn7MMlrQNGve9mptsW3Ghdp
M74jkUh/ePEgIBVdb6JLYjaPSLslaVP5y6GZ/RvqPcLXEut/+9xGJFtH/jkC
q2Vzf5afI689V5UjhjFAgDlflbdIkb9ktUB6mTlmvgl5rr72d0SSNPIZTU8X
eOt5H/jR586KDe+kHJLXmhdomlRgeI0EXheFO8Rko0g0ZoAlA5yZ4MWCzSzw
Y8FeFhxmwQkWnGbBeRZcYsFVFtxgwk3EhU9Efo0FV9hwkQ1nOXCcCwcNYKch
bDQCR2N0/crYDdjbUaWO9Q+Q5HFcruWdVoMb8QOGd0XZ/ZDc3hMKZy6vuXFP
9ckr9Q8x2ol5v4KxeYjYOUHqB8ow0MaANgGMKRSPLJjiwOg0Hg1QPOaw0bWO
D2R4SoZrRnDUFrZ4gPUWwO+HpQ+GF39onBedMScscP67yxKhh5eFbv8p2H1V
iKNcmLVSlLlKupl6mZlOmxl2xFQYqZpwQSBS4nIAvjvwfNAclCUaaTj+H2Ij
Si9AIVS4opIFsmUTsq2d8n1lKgNJOn3v8N0IOZ6mtexCMkd+saNpusA8imvz
me4cSfX6TN36ibInnHoimnY1ifook/KugBBTismqwpbUkGqrqc3lzKZs+1MH
HQ/tYnaHU8dCyJPP8XAbC+eZcIQ/tdNy0tt+wtZlzNBzGOPdv2p/l+SlVvFz
KfMRckRSj5kvHtFGw6wlj4gFSDqW/3JqZv+2/CjaunL/H6sJIWEngk2E9RB4
OgqcrWhWAm0jQ0WGs66Vl77ZPitzE/IPPMYcFudvazX/hqUoGRnzRN/3tKWD
P556UHbtG3W9Hhp7kMUcN6CjQZoDHdzpsJEBWxjgx4B9DDjKgFMMOMeASwy4
RocAOtyhwz0a3KfDQxo8Ejry5AEN7fjdpcMtBlxnopg9w4EjXNhlCBuMwE6A
UiRCMaRjsA6J8TIr17QdI+QSONcU3fbK7j+iePaC8s07654GqodFaSfl6uXX
YKs6CU1DpI5JSh9Qh4A6AtRxoE9O4xE4MMaBL1zoNEDxWCacXI2jQygJHjPg
sgAOOsGGDWC8A9aeG13yqnthZNEPH8N+CAkQDzu59K3fj0Huv7y2lw2xUIww
XZtoolYg0KoXYPpNiSAQRqomPBCYg8AWTFyA74Uq43F3AGuPUGzkFDrypyHa
33yFrqjIJYJcPsjWjMp2NckP5Kr3RWJ6XhC7rlLaDiHkaFjhZpJjaZZgaPGR
aR9BdYug+H4k+32gHIqgno+j3kmjBuaSPhXjkiv0C2rwVbXkxipae7nl4xsI
OfLyX6ESeROiRc6bRPR3elAA26yn3JwmLNzHmV5D67f0rTjWKXGzZZHpPxE9
/q2JDtSe5fNDb0q6la68OLN/WzyKSqyzs3328s4xHv17BJJEzt90ON+t1vgb
yVzd1MH4t01M0o+LHZV+uoBXiDHVgO008KfBASocpcIpKlygwnUq3KLCXQo8
pMATCso/z8loVBhIglckdHAbeUSStiDhi88o8JiKAvYmAy6y0OAWSTm9jNC9
DyTqQ4K9dc9ANv8GpoRFuS7vulPu4H6l82fX3rql9jxQIzxSJzkHBWNlB7Fp
iNI+ResB+hdgCMs4tHGgTgJ96ldIsmGcA4PC/mPjb/D4jgIPEBa3gD0u4LIJ
qDth2f2RxR/q50Unff/2/oK3p5a82rks0GNloJ3Ma3OFMBPlaKN1WXzNSmO9
LhP8hEBYUzUxAIEATK1R8R8TN1QZD51nEO5vovtiZ9ERo/VIsCpSxosEuTSQ
KwG55gG5vlrlwTTt/lBcz31yxxmUHGu9+YX2pqnG5p/Z1uFU508Ur3Dy1g9k
//eUk5HUawnUx+nkd/nEuDJMdg2urI5YV0ttrTJK/IB8NKbh95gjcfTxcOpU
MBEeYuEqDU4awl5UBQicXCYFnmOkDYMK/r3Lz3Usvt+8aOnKmbYdRSZSMpxl
iZjrkp7FK6/O7N8Wj6ISK3Kbmp2jxtub6q6ccmOzv0Mgqcv5TpX9d1n2XFnu
UrwZxtLRcrqJKSUlhQQ84nO/c9T88Y2zClwhobfku0R4RIRnBHhJgFcEeI2H
t3gIwUEoDj7gIBwLH4WOPAkTvhKKh3cEQK4gBLMPqCgqzyIRLxfcjVGhOST/
Ug2qXVdpT3wu775N4dg+5UunVe4ErA8M1PwUpZOSi8mrwlV2kBqHaG1TjC5g
9wF7ANiDwBoB5hgKSZqQIhFnTU2yYYgL3VxoEuaPWSyIpcEbItzhwikb2OEJ
NltA/fToUpQc8+d+eCUWfE4icNfSF14rntlKBZnJh/DXRBiqJhuqF/N0Wvm4
ERPhcbFIpGpqDGYWYGoLAmcwEYn/bEPnb9H9lOOAOwc614X7m8+/BqvZIFc1
KdvRJTdcrjaSgBl8Tey/Qe04wKjbZFDsbJyO6v+Yf6Dah1Pcw8i+70l+IeRD
4eTz0eQ7SeSgLGJEMS61Sr+ojlDTQG6uZVdku27aaHvlBHM4lTkWQ5/8QIFA
AtwjoipAx/iw2wo2OIKd25Sh95jupsHVh3okrreLbxWefTzz3sFsssBv7Zqk
b+HKOzP7LOPxH7seoj/O5sFVNRV5G9x1KZy/6XG+W4dCcs5q9qJfWMuUeMr6
ZkRbZ/vpJuaKFStE83iOxGX3feTgjT68w8B7DITrwSc9iNSFKB2I0YFYHYjX
gUQtSNJGHXmSIHwlFvkCDHzSRzH7CoEzBa4wYR8XHM2BvhMUH52h5Eh7eSme
9F977cy6+wHqwUFan6N1U0Vg7CLXD9NbppgdwO0Bgz4w6AfDL2AwBJwRYAlL
OvQJYVUHgSSMcKCXA81cqED4kQUxVAgmQ4ARHHOAjT5gtBPkEHL8WDMvKnrO
qyviQfskg31XPLVZ/UIgH2yoFM5VieOsz+Fq1/P0B/hEdN0YiVQFRqhMpZk1
mDqAqatQ/GcTGG4Htj/QD6H7KdgLoHUTVB6AUhAofBTuUxeAXMOwXG+L0miR
9ngkfvgxuec0tXkbs9TNMN3SOJpnFsaw/kB2/kD2DiVtCyHuDSGd/ES6Fkt+
kkYKzcfHl2NyanEVDaSGBmp7re2lM867tnO6U1ljyYzJSBqEUABJHm9R0JLZ
YQHssAEPZ7DynGJsGF2368vPp3sW321bpM38LwbIRZHq7Ajm/M6uSG7LW/lk
Zp9NPP7hVICovjqbabXIjh/czDYUx3K+U+f8Xe4rJFewVi5nSSvxtXEWLFtn
B1ETcxqY62XF7vuthlh1SFCHpPWQsh7S1SBLDbLXQa4q5KlCvioUqECBqtBV
IA95fR1krYc0DUjSgmg9CMXCAwocY/ezzDLYH2VdbJUv7FUJOKv2+LbGu2Dt
6DjdtDz9glp8VTelfpjRNMVpA8NOMOoGfg8Y9wG/H4wGgPcFuEPAHkEhiRAl
YwLQqYCpfuE8eSUHclgQTYVXdLgugAMu4OEL+NPjK4O7F0ak/4BEqkFHJIM3
//TIZtVjvtxLrlIoSyWKqZbF1qrkYrp5BOALj4sVGP6qjGduC2ZOwuFbbxSP
Bn7AFon/nBaK/9yCtY9B8Y1wnzod5MpArrVfbrB23VgmZvwt8ct1Ssd+eu0G
To6tYYyx4BPLIpRs/57kEUra9I648w3xyAfShc+kuwmk4CxiZAk2rQpbXE+o
baK0NghCg5BfvnF6KHs8mzWZKGynoskjAW7Q4AwP9lvAFqHQgcBrkugzIr9/
YNnlrsUX0//rSo6ohPhNxAwvSe7OXvlqZv9Weo/TeBQdQT6beo/T555HRka+
Dbpq6iirxfluDft7Kfb8VSzJn1krfmRJLWHJL2YqK/IIFEtjJ1cX5IutrKwQ
YC5YsAAdlLWWqAmXg4I1ULQGSpSgTAkqlKBSEaoUoVoRahShVhHqRI8K6BPk
lRoFqFoD5cqQpwwf1930YSrv9lp77cC6e+fVX9zXCgvRjU/UyyxAojViVS+1
dpjVAAatYNQGxu0g6ATTLjDtRl3QAyZCYCJcyR4GOkKUY8Acn2JNDnKgnYMu
P6J4pMBLhIyR5NEDrHeDxt1RiYhKsc8h814cl3i+afl9m1X3ebLPWIpv6Gs/
0dQS6ZolLL12A/y4kXCjSsAFs69iXBbCyVt0WQyh2S1CMa59QDvyVfznNqpU
qRginDLKAbnaSbnuTqXRcs3JWPzoM0rfKYQcWaWuvDRzk2iu2XuKTQjJJYTk
85aw/TVh3xvi6XDi9WjS01Tih3x8Yjkmrw5f1URqajLISHTd5Gv1NIA9XsSe
EqkAfaLCayR5JKERxglj2GMNG53A3gMMN0zobBuWOt635FaHuPm2/6KSM70F
PztX2u/svOT+jJWhM/s3yR9/S5SiEuusxQ8iMP7u3PM3wZeNnWSRdFKa/cMq
lsRK1o8/sVYtZckuZipJMNYtoWuuM2IxrSx/t4m52Um8JkEKauWgThYaZKFZ
FlpkoE0GOmSgUxq6paBnNfSugv5fYHAlDP889UVyqGvZg0RJ8g2CyvVNqreP
rn98ReP1E+3P4brJaXo5JdiSZlJVP71mhFMHvCYwaQbTFjBvBYs2sBR5O1h0
gHknCkyTXjAcANYQ0EeEkJwYZU91c6COA3kIHsnwggkXbGGHF7BPT8m86VoY
Fin28oL4063L7lqvvGMg84iuGERZG0ZeF0/RyKfrNrFxQ4bkXyVHzHhgIRCK
cQnHbn9d3vRBl8WmxbjQYs5VULuLdjoUw9BgVb4I5JqG5b40qY7n6k2+Q8iR
2rGPUetjVGxvlsa3iKRZvCE6vCV6viZsDsbvfkU4FkK49Il4P574OhMfXYzO
yZc2ERtaaHXVjgf3258+xu0rZE+JVIDiGOhsfCARTR4vcuGoKewUCh1YeQFj
47jqnsEV53slblQsXPbLTJUc5KNHgrFvEqmK7JzkwbSV4TP7N5wnF5noljU7
9ZzpI0L+cKT/1ZtLRk6ySuw5UuyFoth1GUtGgqWwmLl2CUN9CV13CZWgamjE
srCZBqaqqqqfj2RN9groWAkdK6D3Zxj4GQZ/guHlMLoUxpfAlMTkhHj/6MLI
2vn3MiXYAaryJ21UbvmrPTqjEXRbOyxYNy5GNy0Lk1eBL2mjVAwwq8YMasG4
HkzrwbwBLBvAuhFsGsG2CWyFjzbNYN0Clq1g3gEmXcDrA5ZoXGdsgjXex5lq
4EIBkj/S4JkBnHUE711AuD20OLZULPzhosc7JB/YrbzNkblHVnyOVw7Fr4sh
amRTdGsZ2H4uCYzoaNpoZggWxkJxPMuv4nhfl6l/xeO0GNd14f7mK6GsejrI
V4BcR6/icI36VAJ+7Cml7wS1aQun2ImfKhBEMMzeEG1fE1yDCRuD8H5B+IPB
+LMf8DcjCS9SCR/zhT2OenxNK7ml1ebieYQceVVpnIlyNuSz0VncGOFsPCoh
S4VzPDhkCdscwNUdTDcAfsuY/OEvkje7xbc/EJtZCuB/2Oz+n9sZyePJK2Nm
9tmv5/zuFdHOyyzUu2YG47QlJr89eN5Zji22miW+krVcRJQSzDUSDLUldG1J
Gm4JhbKUyNJgmBmZO0z3Sq5fUqspFoeBRTCyEMbmT06J9Y2J1XyZF98y72Hp
gh2fJSg31iqeF6y9t0PtyTGNwGtaoU91osL1kpIxmQXYglpSaSe97AunYsKo
CgTVYF4NVjVgWwN2NWBfAw414FiNPqJeC/Z1YFcP1k1g0QKm7cDrAcYXtC/J
HBtiT7RyoJgNcVR4woNjLmB1ApTedS4Ifjn/kb/EQ4eV15nSt/AKTzDKbzDr
PuurpxF0KqnYHjYJDGlo2mjKBQsjsBKgo0RWVsLNzd/x47Sy+nnQvinc33yN
zqyiwWodyPV3qEwU6k69Jw5eo3bsZlS5cVPNjD6xTd8RLV8RnILw3oH4bS+x
e17iTrzFXQnHP4zDv8vCxZXoZ9egJx00tpm8eytMG6PY4zUcdJFzerEaVeXC
og3d08awzxo2uYCjFxj6TGnvHF11ZkDiQdciFf2ZtqtEqxzfVnn7pOTZ+JUp
M/ss13N+a6IXp1sef2r+iLy5aP35X1x2a2utDXxzyXYncxVb4mfWTz+yVksK
M0oRKhGilCTTf8RyV2ryCQwbM3Nn0f/o3GX2m2iV2KZ5z8vmBxQsOJAsbvVS
Vvc2TvGG7dqH29SeH9UIuqwV+kgnMlQ3MV4vLUs/p4JQ2EIt7mGXDPFKpwTl
YF4OVuVgUwZ25eBYDk5l4FwGLmXgWoq6i/CPThXgWAkO1WBbC1aNYNoKvG4U
kvSRSdZ4FwfKWRBPgsemsG8LsK4NSCTlir07u+S23YrLNOkbegoPtZSDtdd9
0tNIweqUkfU7mcRJg2kJIB5Y88FaiEcbIR6tHMDCBcxEYs5f+ZEsVFbXCkD3
N9HkMR7kC0GueURhuHE9pOAmnlH6j1Ebfdh51gafDU1CyOavcHYv8R4vcJtf
6O96hj0chD0fgrsdgQtMwX0uwKZXYUuaCPXtrNx8Ydp4nz3WyJ6q/qrKlSSa
jRcljxw4bgb+drDBDWy8gb5pUnXf8NKrfYtPxsy0XSWKVGdzVPUP7djyi9HS
WTP7Nz+/A74Kd/x5Mo8IBSPf4r8dq0QmvzsSsJPlTVzB/gWJYJcwFYVJJYrK
pUTmKj3WKlWB4lozKsnWxNhcBEzn/TzOBZraHUPlh26qz3apB53WeHNDO+wp
isT4WL2UTExWKT6vgZLfwSzoNywcMy4CsyKwLAKbIrAvAsdCcC4AlwJwLQC3
fHD/z+6GvF4ILiUoWu2rwLoOzFrAsBvog8AcHWRP1SDXMBseWkxt3ANrQ1vn
v7y66Lrj8gtkqasaivfWrw3SWB+uo5WM1S0hYVvpxDHuP+pxmaI7mzaWqPiP
lT1YOoOZOwiE4uq/xqsIHi+Cxi10bFXxAyikgHw5yHX3KI+X68BH0v/f3nmA
RXVtYfv/k5v8uRqNxppck2AB6UWkd5hhGkPviiJVkKqiYEEiKgpKBwtSBAvE
gkbU2GKLWJForDGaxBpjErGgxijfv/c5SOaiziVjYdDzPfuZ5zAC8sycb9ba
e6/17gcFDr+N558eKd7h6vIlz2u1pf9yy+BlFlEV5gkVZskrzNPXmBdssFi6
y7KmzvKb0+bHLlidv2b/4+WA2bMDP58mafhZ9PCSGMSPJ5nG6j0CBulsjRIH
ZEsplSshEGHh8CLJ6vi/Bs1q7FF8o5u9zzsqKirPWsn58ssv2zdTZZX6Uc7W
QfXyhzKcb9VSeE9etBe+8cEeTED8/vy/+dadG2u2lOcsnTUhM8p7ood9pJNt
pKttuL9DUKjKEKeB6p7qAz3VPrG0MOJ7eDTTflxnTbFbkmu8ZZXx15tM9uwm
TjQ/dNq67oJ93VXHut8kdbec6+67H2nyqceweoyoR2A9guoRUofQwwg7hHBm
RBxsHpHsxSGMPozwIwg9So0ZeBrDz8PrMsQ3wLv7SPTXVSH2O6BkBNzn3e51
YMf7ZaP7zrXun6OjvlhHt8rAcKOR8R4zs+PWlld5tvfFPLgwDGdfJ8rjCnBl
kFwMaYTy8fwYPh7Lq2T2OyQTmGMrZ8E8iy6ualQyJfF1GPQT1Bp/1cFBi0dL
7W9O5/0cITni5bxJ4LHaymeZeWC52ehSs/gy08kVprO+MM1ZZ1a61aJ6v8XX
x80Pn7M4c8X60m/eZeUhsbEuxw+J/rrGzIJpY7UYh0V0MWeDPSptUeSITDek
+GNsMEaRZDW6ySjpz4+zbn9YdL5r567P5OSQz3lyX73KDe5nKeWTvI2ax+QP
xf14dWNx/VUG1/o4AVUUR8dOtFkwsoJ/zDNEzMieZPcK9jcXrVhrxY8gltT+
xFOzt8hETWBtauvn50demOCoaI+sQuGar+32XeDvuyLcd91pX4PLvrse+//y
3g+//Ri+H4H7EbwfIfsQWouwvQjfi9HfIGIPInfTMWZX84gij+RL8vw3iNyH
0QcRVkeD6Yiz8L4EUQMc/7wlbDosfDgv7JHN5vPdFkT3mG2ukqWpWaRlUKVn
tNHQdLeJxTEr68sOdvdExIwCyjrwlSDAGYEuzUiup/C4gilf3YUpXnWcSk8C
MstmTjpYCbXtUD2GQVcb1R/8OBTbbB/m836L5R/1E38ldl1l7bXCLKDUNHSx
aWyxSWKZyfRlJvNWURBQ1W7zzfXm+743P3HR6ufrTju/YeriaoQPfhc1/cI0
qvwgfkzJ4zOUPFssECGDJOEBDHiEJKvxDzVT7vVcdLO7z4RncnJaMlVlOD1t
Sv/CtXon5Q+F/UjsSO0ng0xWmJ7cAgp4sRkF+8FI3o5X+V4srlhvaxNBLKnf
18Oot6t2V3PbQUKxtZjlPBN7Orj5DBkWqxk41T57h/8uBOxC4E4E70TIDoTt
QPjXCN+OiG2I2IoxZGxGFDOiNyFmE6I3Pr74CtHk+a2I+pqaNKIWoUcQeBJe
F8G/eEOMc66NKRm3TXdmf5Q6tH/WYL3FmkZVumYbh1jsNrH8ztLmsoP9XRGf
nsHhIYK/BCOlCHZGqAut5Qt3o5iRYIY0MsKreRbpM4ry8Vyj4DSOnlxpN5NW
ktPNjtUMyfk0VBtuauCQedMSuxvJ/HPBkloX57W2nivM/EpMgxYZRy00Tlhs
NG2J0ZwVxvnVphVbzdYfMN990vzoz5bnfuWdOh8SEzs8N1fwNyXvohPOMo3V
+x+DDipsUOCE2T5ICkQESVajYJXw16cZjT0qGrr1/uSZZ8mxmaqSEO8TVReu
HPq9/NEGPz6msYb9VxysL24dDRU+XYBd+3qxUYw1Y3t9MJaW1Wh+5qn/kbtx
b1fzHlIbipMVugx2acHJspznLl26vN9HRZUfaDO2NPCLG+EbEFGDiPWIXI8x
6xBFxlpEr0HMasSsoiN2JWJW0kd6Qb4k/1SNmC+pT4l5STANPgLXMw9Md62T
3Ju2s0Z1or5K1iCjYnXzL3QsNw2x3mNsc9zS7pK9wx0hY0ZPxoyBDJJrNIPk
imIYI5HuGN2KxzUCXsxhstKxtLmD9aNuCQavZSaP5x+p3r9sgK02D7N5v0YK
6jyc1tu7Ljf3LTEJXGAcOX/ouIVDpxYPTasYmrPSqKTGZM0es+1HzQ6dMz9N
MtUb/tm5QYmJohu/Mfs1v0tw7b+plVv5dDGn1AG5rpjhj4RgSsmTxsIg6c9e
hXc+nFDxzIJVNjtShkyV1fjBRctMz8kfbYuP9cVsLtocFJlnWnnvOc4WYJdY
XyAGkz3x9mWv2crXrVs3JyXk631Mo+RjSwoe42SFw3mestUFLE72Yy1bXXGc
a/KOMSsQtRwxyxC9FLEViC9H/BKMLcX4MoxbQh8nlCChmD6S6wTyTDnGLsf4
VRhDfmoDTGaXR1RHRKkOyh1gWTbYZpW27VcGtvuM7U9YOlyy490R8CFlzDhM
jCAnhDFIrhgXCvyJZ7A/sa5P8LiGwXtUMx9PlAT7GTRf1S3D4Bqo1UH16n1V
1Js9Kre/leh4cpjTNkeXSjPvMuOAQqPwAsO4AsPJi4bMKDXMXG64cI1R1XaT
rw6b7jtjduKS5U+/u62lHRwuBw4KHtwVProlplXx1xhq5RkJbayufUytLHZE
FgMeiQ/DyDEkWX00aOa9nqU3u2lbvP3U1mN2Rf0VZ0fyNVajuNz8R/njaed3
FH/eouJmG7KR7+8I+N92pBH0n5tRdi+S7dd+If1orBmJu5XhjThx+vzk+Pyh
fdzMejKW7NxsSQZoYOQ52C6A59qyiamjo/PO/32LGLPXJ/pmzilR2TcSFmLi
QiQuwKT5mFKI5DxMy0VKHqbnITUHM7IwMwuzspE2F+lZSEtCejIyxmDhsLqE
QVbz+ztUqDms1XbYZsA7aMw7Zcm/Ys9vFDoyZhRiuBjBEkQ4IUaKeGckOFMM
10QGxkXGeGJMt2YeVyDD4/IJoFXlLtEQTYR9KvUj3Xz8ih47onrzuj4Njun8
KyHivRKX1RbuJcbDCwxDc4bE5BgkFuhPL9KfW25Q+IXh0k1GNbWme46bHf3J
4odfRbX1IbGxPsuWO/75p/DhPVHTbQlusH50wmlJM0X2Kwd8YYdFIsz1wtRA
RI2Gbwysxj7sk9344Zzd7z9rm0OpMlVWMVqli60uyh9tiY8tNpS5aMlW6XqO
AoGxVZcH+1H2/PNH9niUV0acbqMOHDgqNQ4y7els1V1CEld+J16LJZ066Us7
a/sNdQh8vFciy3kerOMaMa4+NQMz0pGWjtlzkD4Tc1OROR3ZKchNQcEUFMSj
KBbFI5qWejettL27qH9BSk/HIhVhpZpwvZZgh4HjYRPH7y0df7EX3BUKaJrq
LUCACKESho/nhAQpkpwx2RlTpEh2pmPKYx7XOAYqSyxJeVx+8AqEWwQk4+Hw
OcXmaJYzizlnm1T/OmWGcofGWMc6N+mXVm6lxsMKhwRl6kdn6k3M0UuZr5de
ope/wqBs3dC1O4131JsePmt++qrd2asjp30eMCdD8MctwYMHwkf3mS7OBhk/
HmFABxsfg0fm+CIpiIKA3OJhMK2pz+K73R38nr7NwWaqynYbROguKbC7In/8
bz9eJcnq30s2TN4qm7Y+ObP832KdGPYEG/k5U322FFbZ3oUWVa/c7jwkxLK7
k10XIa8TC65kCc8GxJLOXdRduqn6m9iMcveUNea/3+v2cV99X+fSrCTkJCJv
AgrGY0EciqKwOBhLhmO5B1Y7YZ3FH0vUqnP6xBX2dVva33ntYOlmHfE3Q0RH
TYXnrYTXHYQPRAK6mkrMOFKIcDFiJBjnhEQnTHWiRJHpUorhokOKVCk+Z6B5
xKQJDCKP8ri8KLLSI4zy8XjJMMuC9jKmjPzKLT1ssrmfzD/r57TZ1rXCyDfP
IChDLypDJ2Ge9rQ87TmLdPIqdItXGazaOnTrQZMDp81Okkz1D/+sPBIcxWcv
OD5oEjx8KGx6wIDyGh7nq8SPlOrsiBo7LLWh4JFZw5AQilHRFHcyOBO9S65+
0PmDp29zkI/3xMREZUiQZBWivzST96v80Y77j09WlSvcCCPbsvHi/sCXoqWL
1rsPCaLUyk4t0HVjisjrpOPcRYPByQ7w+EzN39wiyLd58Ydt+OrXU3+kbeni
EJQEoNwPS12w0glr7O+vNfppudqWor7pi3qFLPnYq3qgx0Z1l+26kgOGkpNm
4gs2ohs84UOxgMEBCRAkRKQIcSJMFNNOzOkSzJRQMl66hDIw5jKPGRLMkVDy
D8vjopZkeVw+tPfKOZo2U5tnQmsFhVWq3fzBFEv494OFu/guy4288/QD5+hE
pmmOn6ORnKUxu1Azt1SrqFKvauOQTXuNKZuLZKrXXddspHPn/fVM5S0Ej5oY
ysFdCW4+9uMpCd183MnHl7aUhJLrhtQACgIaFgfrqei/8NGHfklP7+ZgcySl
ylRZBekvz+D/Jn8oiR/ZLQ/F1lef2rKh5Dqw/7sZUVn2Xfmyp5OwhGfnDwYz
ONnP3Hp/7K2uGsCzkuU8m6qLIrRLV9o1VltcX6N3ckX/jcUfFRT3Gl/WJ3DV
p74bVD23abnU6kuPGjv9YCG5aie67ShscnKkZKrhjggVIlqE8SJMEiFFhFli
zCHTMga9lStC/uORx3yZJaLeJK6cxiDyolwQ6E6RlW6jIUik2FWNSqgee6D3
YLV1Qxz/mMR5tbFXgf6IWVoRqerjZ6klZ6il5Q3OKdJYtFR7+Vr9mp1Dd9eb
HPnB/Ptr/MNnQmJivcurHO7RzhQKrmxqAeXdZMCVF5h8lfhxB49WrpYJkO2J
aYEYEwnPsRiajk8W/9Gtz6dvBQYGtnphyS2khJkqq+GGlanCG/KHkviRXWJV
oKq8pUq8A5lRVrs27pvq9zm/k72wk2VzoOysSwNlN1XXHipuvfu59e3jodLT
z1R9hMSihfPsZxswSXVaWd+C8t5TlvcZvfo/IzYO8Num4bFX16Xe0OWMmfSi
tdMfDqL7IkfateHDR6AjIgWIF2CiEMlCzGQReQLkClDA8PEWOWKxAIsd6UIm
eSxypIfUFQgp+SddRAMly+Ma7gnPURCPg0UGtKox+NxPxo8WCe55izeYuBfq
jZihEZmiOn76wOQ01bSswdnzNRaWaZev1F+71fDrg8aHzpidumLz/bXhaRkj
U1J51xsd7jP91I+awVwi/CluBuVRPzJHWH7NQ7UdSoSY54MpwQiLhiQJ2vno
FVv09IMdlTNTZeVvUpni3CB/tCPvMey/ez3Y7cJ/lGa0sWWjQ2hlQXWy7zSP
j5z+JjxTVw5y7Ulc+bHHJ708B/fw1u82XKA+0tOa/ewa5xM21y64Wnv4dg3P
vbpuR4a4njJx/snS6Vd70R2B4C8pnzLi/HkI4iOSj/GOmOKIVEekOyLTEXl8
zOejiE9peEt4WMrDMgcsd8AKB3qx1AEVDDpvMZ8SLEmsnClGkhPdpvT1o0hk
qznQ+LJJ91qFzdVQ6UEL9yLdgOlqkVMHJCQPmDpddVb64MxczfmLtcuW663Z
YLi11nj/CdPvLlie+8OrZFlITJyk/gwJjvZ/yoIriR9lQXmnGRDQDoayvpjk
0/6YGIZR8bS3ZNCSpg8H6Dylm4PNVJX2ZvCxqJzi2SB/KEP9KiuWjdz2JdZ/
2rLRUXTlwrXdNbWbln1VPqt42YyFWeFTk8RBk6TDxtoLPAb28tLt7m36vpdV
J1+pWoC/Q/Mymv+oMlf/Y/bO1+yFt4T8e1KHh+4O8LVHoANG8xDHQyIP03iY
w0MWD3kOmO+AIgeU2mOZPVbYUj7ealusscVam+ZRbUM34VfZotKeerOEhwJH
GignOSHEHW4hsJkJrS1X9BszXW/YuZTrDEsZOCZJJSFp4NSpajNnqs/L1Cxc
oF1arrdy3ZDNu4z2HjX99rzl2evONTtpLcT6bfw74N+jbZsOD8H7G5T3UNwM
5rokoaA8Nl9dbY9FzkgLwNgI+CbQhaS+SWs6P1kDoMyZKitPm8pE/wb5Q3n8
SF5J9u5qS6HOc7ZsdFzt37A5PynK26grsaSb/Xs2Zu/Y2vbn8ZoB7Hkj/b8a
7tY43AFBdoiwQ5wdJtpjmj3S7JFpj3x7LLDDYjIhs8UyGwrKW22FdVaoYfh4
my2wxQJbzbHNnD5uMafPbLTEemtqT2Jb4spsAZIkGO4H/mRoHdlr/cDdd5uW
31SVMeP6J4wbNDVRbWaK+rw5WoX52iWlel+sHrJpu9E3dWTaaHHmGu/YBTJt
9F9QKrgJ4R1KNmCpXCRE8ptYKhex5H0x3YK84tQMyqMgIB4WuGJGIGKi4JIM
rYWPPtS1egp+nGRKSpupsvKwq5wQ0CB/KI8f2Q1cEuz+51b+C2zZ6LiqWVoY
4alJLCkVvCsSv61r+JaDUE8qlbLGLIz0rx3njOk2SLdBtg3ybbDQGsXWKLfC
ckustES1BdabY5MZtplihwnDxzOi0K19htg3FAcMsZ8ZtUOxx4j+6zYzbLDA
ShssdqC7JI5Jd1VPzh1xW90rQSUqesDEaNXk8YPTpmhkzdIqzNYpKdKrrBqy
YbPR7oMmdWfMT12xO3VtWGZ+0IQkp8uNkpuQ3KZILsk9iP6EIwPK4zOgPFHT
XyK0gLmOCKgfV9qhwAOfk8ljPAQz0W/OwS5PQquUPFNl5cqvHBvUIH8ojx/b
WFX+Kls2lF8bqvJdrbtKBe8QS9qL3zbh/+sTzbfNHWSMmeC3fByvOlr9x2xD
VJphlSnWmWKjMbYYYQfxGnGfAQ4YUEpevS5F5H2njePaOKGNk1o4pY1TmvT6
hBYl5h3TwWEDSrOsMUea61G3Wr2QGf3jQgcmhaumxKqnT9LMTtWeP0+nZIF+
5XLDmo1GO/eZHDppdvyizQ833FdtJtNGj1310t8p0MC5Aa634XIH0kaKr3R8
wFiSgvIeiZoaxXRJpwXM9QWPgrmmhmPkRBhlowd/WOsagHaBjSsgqagyZnSD
/KEM/cisWHCH/OMg26VlQ8l15+bN3JmRzo4UvW4nftuMIVhqit5VsXrf2tvI
L/C/Dqt1Ne8W59Gremb/G1u0cUgbR7TxLfGaJk5q4LQGzmpQSt75wfiJweJd
VMMlNVxWxVVV/DIQvw7A7wNwQwU3evxYZxGal68y1mfglFFqM6M05k7QzEnR
np+uW1qoX1lhWFNjtPMbkwPHTI/9bPP9H9Ld3xEz+pdUufwKVwb74/EHPBqa
QXksvpLlrjPsyvviJjKFZMFcO4gfhcjxx4Qx8J2E/llnn1ID8E/PY2oviaWV
EdEN8ofyxMcWcMezvqF9WzaUXD+e+i4nPUTEWNJU/C998Tvqonf7i/79mbCb
lrOahZfl8KAA2eoCkvLZGnWKC+henf/xjcODcE4NP6ni4iBcHoSrAykl77f+
uNEfN1Vw51Pc/Q8e9gX6PHrUo+5Wl8n16lZ59irJbgOnB6jNHq0+b6xW3lSd
hbN1y/L1K5cYrl9ntGO3yf6jpkfPW5++zj/5W+DU6YGz5rr/2OjxC7zI+JUi
8sjwYiCWxJgutyBphCOz/SF4+FD06KYYl8Q4LqQgoCoBsgIQHw3eDPQeNrl1
DUB7wcYVkNC5Mjy2Qf5o3/3HVlWsZFYY9gz2I1sl/ioxrR1R39XtCQhQtWei
pJ74ncEUKtuJJVh+LOyn5TrEyoc/jAGws5znHj160JMRur7lKuhcmt0Tv6rg
D4ZReYcCKvFnXzzqDXwIvA90PdbYZfX1D/zX9zNeYDEgTTIgzVctPUQjK1ar
YLJOUZreklyDylLDmrWU6rz/W2rGU9d5Z+8EZBSQ4Oh1+ILXJfhchu9l+F2l
iDwy/H6hEEuf69SVrg0Q32lmVwofNoqafhHjlBC77VEpRvooRMXCMPt6j1bB
sR1h4wqI51Y5anyD/NFefgx7GqucxD7y2j6ZrypVy4bya93q3GGjBpozUXIw
jZKdPxX26Cf86CPhJ32E/XsKVLXdLO18pSzn2WuYPzFm1+7d2Qr2uKjOO7Z2
p6RKdEdTV+LEW+h09q/OVZe6pBzt7v7lQOOFlmrzRAPmeatlBmnkx2ovmKxb
MkuvItdgZdnQDWuNduw03nfE9MgP1id+4Z257V21hfwXflvqvX6G788YxpDx
yBhxkbkgj5coKM+XBM3rlMEuvg0enU7+JXr4mwRnhdjrgEoXpIVg2CSo+01+
rxUHoB1h4wrI1rNyWGKD/KFUfmS3PFoFwZaWjY7ysiuJqqtzLET/73Hi2hIl
qSV7CFS7U4Klro6Lg8C/uXzd2c2NbZGmJyPov1VQ8u7lR52ONHZedaVL5pkP
Qrb3FlRpGi+00siTDMzxGpwfrLkgVrtost6SNP1leUPWLBm6aZ3xzl0m++qJ
GW2OX+OfuuWy51xodNyIRVU+5+B/jkJ+RpxH4Dk6Rj0eLMcy4GfqSu9rcP0d
wtuUXSl8cFvc9JMIB3iodMWMcDjNvf5ZqwK59oWNKyBL30qvqQ3yh1L5kX2F
ZZdrlLxlQ/m1enXu8EgjDdG7A6glu7dYksFXUkv2cDTsyTfVdRHLAth1dHTe
fffdzzTf8kz9d3xtN8/1/7Ffpm9cZKc5X6q60E998Wit4nE6pcn6S9MNqgoN
1y412rzeeNduasa6H2yO/cI/cVNa3xA0OTV4Sqrfd43DzmDEGQSeYfCVpykZ
L6RlnG4mWI48R6OnzxW64CO4TeaSJEReFaHODpXuSBwPu5hF77c6grx9YeMK
yDJgudeM3+WPdj+/Q/a6FbS2o7RsKL/Onvs2eW64mug9FVGXx8cGqTy2pE4P
xyE9+SYU9exgN8TF3X3435xnNTW1dzq//R/RfwyL+JqL3dRKR2qUjdEuS9Bb
On3Iyqyh6xYbbfrCePsm4917jfd/a3b4B9tvrwqONTh9dz+gsIoEx+E7Lww/
gZHHMer43+zK8KMI//bvR0qwPI7gk9SwAecpkt3lOsXJCh80iHHUEV/4YWzm
A4NWBXLtDhtXQBYjl3mmXZc/lCo+tlSVk1e7w7VsdAgtq86RRhp/JurGTCc/
ZXCyzQciMJa06OFg28POsY+1yELq4+kfKGvMDwW6WuXxuksnG3wx27C6YGhN
udHmNcZfbzPeXWtce9TswPe2hy461v0mrb/nX1VLfmpk+baAeoysR3A9xW2F
1SH8MEaz+MoDdEQyg1yQJ8PrEPotRc6OPENnmk6/g3/3gegRmUIuD0FMYnUv
2QI5ZYCNKyDz4HKPeVflD6VaX8XjqnK2MJUz48vTttp1uRUzvSe4Go806yUc
SCHPAm0mdzXr6WDdw57f21r0sblTfxNXK6G/37Dglk1M4+hRQ2tKSVg02rrJ
aMcuo90Hjfd+Z7n/B4cDl0UHf3c+dNd7x2+hUXFBc0tHHETgQQQdQMh+hO/D
6FpE7qWkSjp2N7Mr6dhJryP3UEre6P0IrcOoE/D7CZI/IHjwC6+pKqVJqmf9
d4GcksDGFZDZ6FK3/Ivyh/LsP7JqYSMrDxbsTdClX37esndT5ZaVK7asnlOe
P3l+ljQ+ppet40fmkn5GLp/quasP8bZ1GD5iRAj77rjOnWtXtcZod735N6dt
v/nRce9VSe0fbrX3fHY1Bs0oDB2bNHJHY+AeBO9B6C6E78ToHRjzNcZsQ/RW
RG+hsEqKrPyKsitjZAmW2xG5kzo3pB5+5yG59cAbq6Zs/VQWkqMksHEFZBJV
7LLoR/lD2fxIYmJL3GzZ+OBWVttL33x7JL2kwtQt8FN9dxVNz0GDPU2G+vHt
fFnOc0hUtM+8xW5V+1x2Nnju/NNnJwLz1pPgOKqiftR2hGxD6FaEb0bEVxiz
CVEbEV2D6C8RvQ4xaxFbjZg1FFkZu4qOOIZmGbua/hP5nqjN1MX+55CGWebS
v488Vh7YuAIyiSlyLj4nfyibH8FscLCFAeyeI3nxyZdctWr7auOePfHJuSpa
nqpqnuoDPLU+9TRUF9pY27Oc55C4xMD0ypELa0PHxAVnrQ/aiJANCK1B+HpE
rENkNcasQdQqRK9ETBViKhG7HPHLEFeBceWUYJlQhgllmFiCxBIkFSOxFEkl
mLAQGQVYmFHSUj2uVLBxBWQ0doGk4oz8oTz1q61EPgnZ9VXWmB1u8v5a6vj3
53yDkoglNfrTYxF0P/IY2M3USN2KTO7Ydyo0cW5QVWPwaoStQvhKRFQhspKy
ZKOWIqocsUsQX4qxxRQeO7EIkxZhygIkFyIlH6l5mJGDtEykz8Xcz5EVh9KJ
mGX2dZ/3PiPBkS2QU0KE4z+SwcRCxy9OyB9KGB9biTixZVJJwiUXKNtdm3bu
s7ELp5bs56n/kcfQPq4DuxiQKEZiZcicbSEVCC1H+BKMLkNEKcaUIGYxYhdh
7EIkLEDifEwuoCDZz3MwIxuzMjEnHRlpyEql+MrCZCxKQGk4SpxuuHwS3flf
HxCnswU5ygYbV0C6U/Ls1h6VP5Tfj6zI28HWBrA9ILJLr2xC20FzmI6r4oov
eZYR1JJ93Y16uxLv0MR1Rm3ofITPx+hCRBYgJh/xeRifh4m5mJSNqVlIyUTq
XMxKR3oaA5KdiqwE5E/EwvEojsWSIIqvzLaqt+jl2q1bt6ysLDYyKiFsXAFp
J+dYr6+XPxQ+v6O9VF9fLxsu2RK7Dv2x2aFVVlKj08/ToK+7pQo9Ys/cITAy
A1EZiM3A2AwkZCAxHZPnIDkNn6dhxkykpSI9BZnJyE5C7jjkRaEgFPMDUOKL
Fb5YJUW8ZimxtoqKiix1vKNnqqzUpmcabz4kfyh6fkc7i2Stsss+3OyyHXXz
1p3J8fmmA2gdLPHREJO48dMwIQVJKZgyDdOmYXoyZkzF7MnImITMROQkIDcW
+aNROAoL/FHkiSUuWCFCpslhs55SNu+V7ahSTti4AlrfBil4fofSiITLlmUf
ctHRP0I7rvbV1pG3QLe/CTEU3yZrajymjcX0cZgxDrPjkRGPzDhkRyMnHPlB
KAzAQl8UuaNMiuUilNlel/aLJGGR5KhPHsahzAjHdtGT53cooVrCJZllkPSm
5e3j3sdXI7aG7ZtdhyJDYoklDQYFzghGWijmhGBuCDJHITsAuX4o8MYCDxS5
oFSCZcKmUptriVrLe7/3CXHitGnTOhBsvN30lPM7lFey4bKwsJC97oi1HB1O
soT50tJSYsmPuup46y+a6/Iw0xnZzsiXYoEERaKHpYIHS3l3i60ueH82QaWz
NiUV2No+FUWl/AhHTm1Uq6ICbpfkZYstrGrJRoi/yDSQeK3He/3s+wUHqmcn
6FdP1FsTp1Xq8ek4lc5anf/VlUw2n+VEVlymqsySXeJt44/IFhWQcMkVqL88
sYllqydZVxLfkXT0/zwWuSZPtuxlyP+FSo5wfJPVdhs+qWcVFXBx80WJTUjk
fMOPjNr427hMVcmlQHB8UmQi2UJBJ/ZksTzcXskLEVuV8aJ+m/LDxt9whT2t
f1lhyRYVkISWW/B5fpGXMTU19YX8Ki5TVTZdvHhxy2M9Wev+/H5kRZIi9lOd
3SXhAuXziES0F9Ij3FFg42+4Xmx8bCXZXRKS0MrudnEpUxtVyOj5f09HgY1z
ev75o3yRe6BVUQFXqd52keD4/EGtA8HGOb0yyYZL4kfu9miLyAv1nMuhHQs2
zunVqyVcsjcbtzkiR8/vRxbhyL3InORLTlEBl8q26Dl3jjocbJxTu4vcLWRe
2bLsc+HCBWJP7hZi9Tzzvo4IG+ekJJItKgiTe0DemyMWZK3wjmFHhI1zUja1
IhW8ybcTe5auYn7soLBxTsop2aKCVmAfMIHjTTiZi3wWKdal2HFh45yUXE8t
KmAzsde+9IuNcQosjXZc2DinDiHZogL28U1gbSnmxw4NG+fUsdSKVPB6Eyda
NSO3RR0dNs6pg+pNKCp4ajOyfL0eCEdOHVTPKip4PaZObCdp27//NYCNc3o9
1Kqo4PXoLfpHzcivB2yc0+ukVqSCjl6y/o+akdlgymWqnF6qFGsHez2KCogf
27iHyIFxOL0CPWe7NHtaELlRO2i4bDscgEM4cnoFelH4gieLClgy3ov4G1+i
2tiMzMHGOb0avViciGxRAbtRouQBhUwe/2cKymWqnF6ZXhLep6MUFbSlGZlD
OHJ6ZXqpuC0ofVEB+avkbyZyCEdOr1gvG7eFZxcVtPt9Lr8ZmctUOb3eki0q
IMZs3/5BthlZjh+5TJXTmyDZooJ2PC1IfjMyl6lyetP0rNOCXo3kNCNzsHFO
b6zaq6iAbX58amURBxvnxOnJogJilpfXafisZmQONs6JU4uIQWSLCv5pv3Db
9dRmZA42zonTU/WyiwpYP7Z6koONc+IkX/+zqIAENQUc9GQzMgcb58SpjZJz
/AH58h+1+bNq1YzMwcY5cVJArUgFxFaKbRSSn5VtRuZg45w4KSwSLluKCoiP
FFgOlW1G5mDjnDi9EClcVNDSjMwhHDlxerFSoKigpRmZg41z4vSSRCaSbKV6
mMzxB2DCaKvvJDGR+JGDjXPi9LIlW1TAQgCeXPMh/8ry5TiEIydOr0ZyigqI
H+MYKS2+gBMnJVeYjP7RD8oWFZDslG22Cnszjg3ixOkl6Tk5BrJFBWwqy2Wq
nDgpJoWD45Mi4ZJERm5NlRMnhfWy6VucOHFSTJwfOXFqX3HxkRMnpdIroFNy
4sSJEydOnDhx4sSJEydOnDhx4sSJEydOnDhx4sSJEydOnDhx4sSJEydOnDi1
o/4/5wUJ/Q==
             "], {{0, 234.}, {304., 0}}, {0, 255},
             ColorFunction->RGBColor,
             ImageResolution->72],
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True],
            Selectable->False],
           DefaultBaseStyle->"ImageGraphics",
           ImageSize->Automatic,
           ImageSizeRaw->{304., 234.},
           PlotRange->{{0, 304.}, {0, 234.}}]], "Output",
          ShowStringCharacters->True,ExpressionUUID->
          "5ac989ab-4677-4e50-9302-f7ee0fe9e70d"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{Cell[TextData[{
          "Series expansion at ",
          Cell[BoxData[
          "0"], "InlineFormula",ExpressionUUID->
           "c4bb9c1c-965d-4ea4-890e-3e29e5cf001b"],
          ":"
         }], "ExampleText",ExpressionUUID->
          "258e273e-e8c1-4aec-a376-ae11d599ce17"], ",", Cell[BoxData[
          RowBox[{"Series", "[", 
           RowBox[{
            RowBox[{"Sin", "[", "x", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
          ShowStringCharacters->True,ExpressionUUID->
          "5b596ac8-1313-4f10-9fa3-435faee2d098"], ",", Cell[BoxData[
          InterpretationBox[
           RowBox[{"x", "-", 
            FractionBox[
             SuperscriptBox["x", "3"], "6"], "+", 
            FractionBox[
             SuperscriptBox["x", "5"], "120"], "-", 
            FractionBox[
             SuperscriptBox["x", "7"], "5040"], "+", 
            FractionBox[
             SuperscriptBox["x", "9"], "362880"], "+", 
            InterpretationBox[
             SuperscriptBox[
              RowBox[{"O", "[", "x", "]"}], "11"],
             SeriesData[$CellContext`x, 0, {}, 1, 11, 1],
             Editable->False]}],
           SeriesData[$CellContext`x, 0, {1, 0, 
             Rational[-1, 6], 0, 
             Rational[1, 120], 0, 
             Rational[-1, 5040], 0, 
             Rational[1, 362880]}, 1, 11, 1],
           Editable->False]], "Output",
          ShowStringCharacters->True,ExpressionUUID->
          "454961ec-6614-447f-8250-1051e99efa0e"]}], "}"}]}], "}"}]},
    {
     TemplateBox[{"\"documentation example counts\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationExampleCounts\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleCounts\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", "5"}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", "45"}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", "12"}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", "12"}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", "6"}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", "0"}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", "5"}]}], "}"}]},
    {
     TemplateBox[{"\"documentation example inputs\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationExampleInputs\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleInputs\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "38f3a3de-098f-4be1-b485-7237dd9d5dee"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Sin", "[", 
             RowBox[{"60", "Degree"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "671d6839-4032-4ea9-be0f-a7e8d3c75d9e"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "75716175-eb90-42eb-9a76-e74d6bea4a36"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ComplexPlot3D", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "z", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "\[Pi]"}], "-", 
                 RowBox[{"2", " ", "I"}]}], ",", 
                RowBox[{
                 RowBox[{"2", " ", "\[Pi]"}], "+", 
                 RowBox[{"2", " ", "I"}]}]}], "}"}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "70da9ca9-62e4-438e-9e55-bf8841fca3b1"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "245335e8-447c-41e7-b866-c355a68b6d6a"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Sin", "[", "1.2", "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "754161e8-7d4a-43d3-859b-1752395effba"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"12", "/", "10"}], "]"}], ",", "50"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "7f30c228-8065-4546-958f-693b266a565a"], ",", Cell[BoxData[
             RowBox[{"Sin", "[", "1.20000000000000000000000", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "e7cbb1d1-5e91-40e5-baae-844b5fbbd21a"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Sin", "[", 
             RowBox[{"2.5", "+", "I"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5439651a-2168-463b-91cf-48de7c85d340"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{
              RowBox[{"Sin", "[", "1.2`500", "]"}], "//", "Timing"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "83090003-ded9-4eee-80a0-f8dcb089386b"], ",", Cell[BoxData[
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "1.2`100000", "]"}], ";"}], "//", 
              "Timing"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "f4f5625a-93eb-492a-9c47-fb6b8ddb4cc6"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Sin", "[", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], "]"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "417b6f99-ba78-4d90-9655-d81deb47074b"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{"{", 
               RowBox[{"1.2", ",", "1.5", ",", "1.8"}], "}"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "d20e3162-6dd1-423a-a00b-481755c9f901"], ",", Cell[BoxData[
             RowBox[{"Sin", "[", 
              TagBox[
               RowBox[{"(", "\:f3a2", GridBox[{
                  {"\[Pi]", "u"},
                  {"v", 
                   FractionBox["\[Pi]", "2"]}
                 },
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                 
                 GridBoxSpacings->{
                  "Columns" -> {0.28, {0.7}, 0.28}, "ColumnsIndexed" -> {}, 
                   "Rows" -> {0.2, {0.4}, 0.2}, "RowsIndexed" -> {}}], 
                "\:f3a2", ")"}],
               Function[BoxForm`e$, 
                MatrixForm[BoxForm`e$]]], " ", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "2a2cfeb1-9a06-4f8d-951c-5808af005db2"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"n", " ", 
                FractionBox["\[Pi]", "6"]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "bc720ab0-7acd-48fc-aae9-32396820412f"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"n", " ", 
                FractionBox["\[Pi]", "6"]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "d74b65a4-0aa9-4972-bdc3-279541b6fbb4"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Sin", "[", "Infinity", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "8c39e3d5-26ae-4d1c-a683-12d2df64582a"], ",", Cell[BoxData[
             RowBox[{"Sin", "[", "ComplexInfinity", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "3ef9f041-577b-431b-ba8b-8a702a9c0228"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{"Pi", "/", "5"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "cfea2c4e-9602-4e7e-a134-f01494bdfbaa"], ",", Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{"Pi", "/", "24"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "63d55911-bc38-416c-85b5-355c360c2e94"], ",", Cell[BoxData[
             RowBox[{"FunctionExpand", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "0b8f8e40-be79-48e2-87cf-855021d7beae"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Assuming", "[", 
             RowBox[{
              RowBox[{"m", "\[Element]", "Integers"}], ",", 
              RowBox[{"Refine", "[", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Pi]", " ", "m"}], "]"}], "]"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "2cc82a80-e00e-4f1c-a9b6-3ac57b0a591f"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Assuming", "[", 
              RowBox[{
               RowBox[{"m", "\[Element]", "Integers"}], ",", 
               RowBox[{"FullSimplify", "[", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox["1", "2"], "+", "m"}], ")"}]}], "]"}], 
                "]"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "3218f09d-8261-45df-8694-4c8e84fb6de4"], ",", Cell[BoxData[
             RowBox[{"sol", "=", 
              RowBox[{"Solve", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}], 
                  "\[Equal]", " ", "0"}], "&&", 
                 RowBox[{"0", "<", "x", "<", "\[Pi]"}]}], ",", "x"}], 
               "]"}]}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "f06b3d1c-2248-404e-a1e6-13cd9c83a289"], ",", Cell[BoxData[
             RowBox[{"xmax", "=", 
              RowBox[{"x", " ", "/.", " ", 
               RowBox[{"First", "[", "sol", "]"}]}]}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "bf0aacb5-cd96-45a5-bafa-66f5cda71aa6"], ",", Cell[BoxData[
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Point", "[", 
                   RowBox[{"{", 
                    RowBox[{"xmax", ",", 
                    RowBox[{"Sin", "[", "xmax", "]"}]}], "}"}], "]"}], ",", 
                  RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red"}], 
                 "]"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "d623df42-2c06-4b9f-86db-fbe95997abd2"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "6d07549f-80ef-44bb-94b9-426c05bbd3fa"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"ContourPlot", "[", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{
                  RowBox[{"-", "2"}], "\[Pi]"}], ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
               RowBox[{"Sequence", "[", 
                RowBox[{
                 RowBox[{"Contours", " ", "->", " ", "24"}], ",", " ", 
                 RowBox[{"FrameTicks", " ", "->", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], ",", " ", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", "0", ",", " ", 
                    RowBox[{"Pi", "/", "2"}], ",", " ", "Pi"}], "}"}], ",", 
                    " ", "None"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"-", "Pi"}], ",", " ", "0", ",", " ", "Pi", ",", 
                    " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", "None"}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "edd53b80-afc5-499c-959a-e0491bfc5c48"], ",", Cell[BoxData[
             RowBox[{"ContourPlot", "[", 
              RowBox[{
               RowBox[{"Im", "[", 
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"\[ImaginaryI]", " ", "y"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{
                  RowBox[{"-", "2"}], "\[Pi]"}], ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
               RowBox[{"Sequence", "[", 
                RowBox[{
                 RowBox[{"Contours", " ", "->", " ", "24"}], ",", " ", 
                 RowBox[{"FrameTicks", " ", "->", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], ",", " ", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", "0", ",", " ", 
                    RowBox[{"Pi", "/", "2"}], ",", " ", "Pi"}], "}"}], ",", 
                    " ", "None"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "Pi"}], ",", " ", 
                    RowBox[{"-", "Pi"}], ",", " ", "0", ",", " ", "Pi", ",", 
                    " ", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", "None"}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "a2001258-e77b-4f87-b1e8-75dc90cb84ee"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"PolarPlot", "[", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"k", " ", "\[Phi]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Phi]", ",", "0", ",", 
                  RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
                RowBox[{"Sequence", "[", 
                 RowBox[{
                  RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                  RowBox[{"FrameTicks", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "0.5`"}], ",", "0", ",", "0.5`", ",", "1"}], 
                    "}"}], ",", "None"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "0.5`"}], ",", "0", ",", "0.5`", ",", "1"}], 
                    "}"}], ",", "None"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"\"\<k=\>\"", "<>", 
                    RowBox[{"ToString", "[", "k", "]"}]}]}]}], "]"}]}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "8"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "408adaee-9a37-4029-b6a4-ff99e2749c0d"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"FunctionDomain", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "77963043-6d59-4734-98cc-fa5099a837dd"], ",", Cell[BoxData[
             RowBox[{"FunctionDomain", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "z", "]"}], ",", "z", ",", "Complexes"}], 
              "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "e6072217-2a82-495d-8de7-33f87b319641"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"FunctionRange", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], ",", "x", ",", "y"}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "edb180ee-4df6-4675-b604-97ae99f669be"], ",", Cell[BoxData[
             RowBox[{"FunctionRange", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "z", "]"}], ",", "z", ",", "y", ",", 
               "Complexes"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "96f52c83-dba9-49b4-8bb3-5802d2681aef"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"FunctionPeriod", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "9c3c768a-4dec-4b08-a45f-445378335054"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Sin", "[", 
             RowBox[{"-", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "61fdd8f4-1927-4ff0-aa93-f258ac762899"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"FullSimplify", "[", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"Conjugate", "[", "z", "]"}], "]"}], "==", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"Sin", "[", "z", "]"}], "]"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5a5f15ab-2cef-41fd-9fef-bd950d13a4c8"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], "//", 
             "TraditionalForm"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "bfcdd042-74a6-433e-b3f0-589629a9abc0"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "30d40ff3-d60f-4f19-af8e-3235484f23ea"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Sin", "[", "x", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "n"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "80588676-1e3e-4de8-9191-63ecc6d95a9e"], ",", Cell[BoxData[
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", "%", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{
                  RowBox[{"-", "2"}], "\[Pi]"}], ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<First Derivative\>\"", ",", "\"\<Second Derivative\>\"",
                   ",", "\"\<Third Derivative\>\"", ",", 
                  "\"\<Fourth Derivative\>\""}], "}"}]}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "6d2afcc7-3f48-42b1-a0e4-0f5131218023"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "n"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5411bf32-878c-40b1-a156-0f5190fd2d65"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "b1e8ea3f-768c-49a0-a345-8294cae996a4"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "4d4b85e0-4b78-4c27-90d8-5ce05414110a"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Integrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "x", "]"}], 
                RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "2af2967e-ca4a-4a14-a0f3-4c1051b00e13"], ",", Cell[BoxData[
             RowBox[{"Integrate", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", "z", "]"}], "^", "a"}], ",", "z"}], 
              "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "f29a2aff-cf94-4c86-b604-8ec657959b26"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Series", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "38508958-e829-40d2-8912-04c7aad79675"], ",", Cell[BoxData[{
             RowBox[{
              RowBox[{"terms", "=", 
               RowBox[{"Normal", "@", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Series", "[", 
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "m"}], "}"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"m", ",", "1", ",", "5", ",", "2"}], "}"}]}], 
                 "]"}]}]}], ";"}], "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "x", "]"}], ",", "terms"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{
                  RowBox[{"-", "2"}], "\[Pi]"}], ",", 
                 RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}]}], "]"}]}], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "f7b68793-3a01-42e3-84cb-cad1f1e533e8"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"SeriesCoefficient", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "620e676e-b692-46ef-b7e2-32472f5f05b0"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"FourierSeries", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "z", "]"}], ",", "z", ",", "1"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "fb112e37-a74d-459f-b823-303330a7d0c4"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Sin", "[", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", "x", "+", 
              FractionBox[
               SuperscriptBox["x", "2"], "2"], "+", 
              FractionBox[
               SuperscriptBox["x", "3"], "3"], "+", 
              SuperscriptBox[
               RowBox[{"O", "[", "x", "]"}], "4"]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a5bb56cc-8ae0-4cb7-b280-8c6363ed13a9"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"FourierTransform", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "t", "]"}], ",", "t", ",", "\[Omega]"}], 
             " ", "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "b876826f-37c4-4dc0-bb66-34d43b623f40"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"LaplaceTransform", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "t", "]"}], ",", "t", ",", "s"}], " ", 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "367d7605-1f7e-467c-a69f-0ec4b176cf3b"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"MellinTransform", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", "x", ",", "s"}], " ", 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5f2dfec3-1287-470e-8875-58fbb19cdd54"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"TrigExpand", "[", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "x"}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "6f178722-cd42-464a-b23f-f4ccfb3b6dd0"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"TrigExpand", "[", 
             RowBox[{"Sin", "[", 
              RowBox[{"x", "+", "y"}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "d2d7ba5d-36bd-4cac-9c6f-9cfecbdbc913"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"TrigExpand", "[", 
              RowBox[{"Sin", "[", 
               RowBox[{"4", "x"}], "]"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "764f8f47-7afc-4182-a31f-977ee908ffcf"], ",", Cell[BoxData[
             RowBox[{"TrigReduce", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "8df4d3bd-1fcf-456c-a8cc-dbd0f68f3ae1"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"TrigFactor", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], "+", 
              RowBox[{"Sin", "[", "y", "]"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "c476c5ae-f974-40c0-94cb-3e0dbd4b17b6"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ComplexExpand", "[", 
             RowBox[{"Sin", "[", 
              RowBox[{"x", "+", 
               RowBox[{"I", " ", "y"}]}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "a6934605-2a2b-4a5a-aef9-7097c7595ef5"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"TrigToExp", "[", 
             RowBox[{"Sin", "[", "z", "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "7ca5ed30-e13e-43e4-a568-95a1a1bc0120"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Simplify", "[", 
             RowBox[{"Cos", "[", 
              RowBox[{
               FractionBox["Pi", "2"], "-", "x"}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "17cbff14-dd3d-424b-a4a0-c79ef5d65e5f"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                FractionBox[
                 RowBox[{" ", 
                  RowBox[{"\[Pi]", " ", "x"}]}], "2"], "]"}], 
               RowBox[{"BesselJ", "[", 
                RowBox[{
                 FractionBox["1", "2"], ",", "x"}], "]"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "b502392d-15e2-4802-8cf0-690f85433ccb"], ",", Cell[BoxData[
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{"-", " ", "I"}], " ", 
               RowBox[{"Sqrt", "[", 
                FractionBox[
                 RowBox[{" ", 
                  RowBox[{"\[Pi]", " ", "I", " ", "x"}]}], "2"], "]"}], 
               RowBox[{"BesselI", "[", 
                RowBox[{
                 FractionBox["1", "2"], ",", 
                 RowBox[{"I", " ", "x"}]}], "]"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "6b8f837d-e86c-4b03-8448-d56eae2f7486"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"8", " ", 
                RowBox[{"\[Pi]", "/", "3"}]}], "]"}], 
              RowBox[{"SphericalHarmonicY", "[", 
               RowBox[{"1", ",", 
                RowBox[{"-", "1"}], ",", "\[Theta]", ",", "0"}], "]"}]}], 
             "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "7231bb03-a4b0-408e-94ea-d09915bbf481"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"MeijerGReduce", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "fbd467c4-20ee-48bb-afad-05b1c4b1b58e"], ",", Cell[BoxData[
             RowBox[{"Activate", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "c3dbe86d-2bfa-4f7d-bfcd-e964ca8460f0"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"DifferentialRootReduce", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "337ac36c-975a-419a-9a2e-6e23002085b5"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ParametricPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "t", "]"}], ",", 
                RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", 
                RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "1987171a-df93-4f52-a232-74074de197ca"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ParametricPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", "t", "]"}], ",", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", "t"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", 
                RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "4328da05-a9a2-4097-88a1-2544bd395031"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ParametricPlot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"t", "/", "10"}], "]"}], 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Sin", "[", "t", "]"}], ",", 
                 RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", 
                RowBox[{"10", "Pi"}]}], "}"}], ",", 
              RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "c480611a-b9ad-4620-a913-2819e352db9c"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Animate", "[", 
             RowBox[{
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", "t", "]"}], ",", 
                    RowBox[{"Cos", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], 
                ",", 
                RowBox[{"PlotRange", "->", "1.2"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", 
                RowBox[{"10", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "889fbc14-584d-4419-96f6-41bdc9f8d909"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Play", "[", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "Pi", " ", "440", " ", "t"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "b7237b3c-3b5d-4cd2-9a6b-1956706e4a89"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"DSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
                RowBox[{
                 SuperscriptBox["\[Omega]", "2"], 
                 RowBox[{"x", "[", "t", "]"}]}]}], "==", "0"}], ",", 
              RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "04980c88-0155-41fd-8d47-6727c0bc7bc5"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"RotationMatrix", "[", "\[Theta]", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "1cbc4380-90b8-45c7-9ca0-ba6a092fee4a"], ",", Cell[BoxData[
             RowBox[{"%", ".", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "42d8cebe-4551-4b3c-890d-f219f68adf33"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ParametricPlot3D", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Phi]", ",", 
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "6a5fc0f6-d8e4-4a63-a991-ebeb0a7309ba"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ParametricPlot3D", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]", "]"}], "+", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Phi]", "]"}], "+", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], " ", 
                  RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "/", "2"}]}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"\[Phi]", ",", 
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", 
                RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "b5c37e2c-101d-42de-b1df-2d79d6e986f3"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Plot3D", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], 
               RowBox[{"Sin", "[", "y", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"10", "Pi"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y", ",", "0", ",", 
                RowBox[{"10", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "90586599-1805-433a-be61-0253993301b2"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ContourPlot3D", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], "+", 
               RowBox[{"Sin", "[", "y", "]"}], "+", 
               RowBox[{"Sin", "[", "z", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi"}], ",", 
                RowBox[{"2", "Pi"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y", ",", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi"}], ",", 
                RowBox[{"2", "Pi"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", 
                RowBox[{
                 RowBox[{"-", "2"}], "Pi"}], ",", " ", 
                RowBox[{"2", "Pi"}]}], "}"}], ",", 
              RowBox[{"Contours", "\[Rule]", 
               RowBox[{"{", "0", "}"}]}], ",", 
              RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
              RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"ContourStyle", "\[Rule]", 
               RowBox[{"Opacity", "[", "0.8", "]"}]}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "9736a57a-a68b-40d3-865b-ae54578a759a"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"N", "[", 
                 RowBox[{
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"j", "^", "2"}], " ", "x"}], "]"}], "/", 
                  RowBox[{"j", "^", "2"}]}], "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"j", ",", " ", "1", ",", " ", "12"}], "}"}]}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "135b3dfe-3b4f-4880-9eed-f3059f895b80"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{"x", "+", 
               RowBox[{"2", "Pi"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "8933520f-4c16-4b75-8c2b-4b0877a203a0"], ",", Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{"-", "x"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "d8f5b91d-e45a-427e-b00b-093e369feb56"], ",", Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{"I", " ", "x"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "08882ce7-5988-4269-ac76-88833ef92787"], ",", Cell[BoxData[
             RowBox[{"1", "/", 
              RowBox[{"Sin", "[", "x", "]"}]}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "fddf0a11-0f01-4646-a802-3dc0dd68ee5f"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{"3", "z"}], "]"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"Cos", "[", "z", "]"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "z"}], "]"}]}], "-", 
                 RowBox[{"Cos", "[", "z", "]"}]}], ")"}], "2"]}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "9c7dd4b1-a6dd-47e4-9dc9-c6df9d714b02"], ",", Cell[BoxData[
             RowBox[{"Simplify", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "5d285e9d-3403-4300-893c-5eeda90eb5be"], ",", Cell[BoxData[
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], "-", 
              RowBox[{"Sin", "[", "y", "]"}], "-", 
              RowBox[{"2", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"x", "+", "y"}], "2"], "]"}], 
               RowBox[{"Sin", "[", 
                FractionBox[
                 RowBox[{"x", "-", "y"}], "2"], "]"}]}]}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "e03210a6-1d9c-4bc2-bfb7-3b64c3c2b498"], ",", Cell[BoxData[
             RowBox[{"Simplify", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "fb105187-bb10-4d72-9572-3fb0e8904d8f"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"ArcSin", "[", "z", "]"}], "]"}], ",", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", 
                 RowBox[{"ArcSin", "[", "z", "]"}]}], "]"}], ",", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"3", 
                 RowBox[{"ArcSin", "[", "z", "]"}]}], "]"}]}], "}"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "3eb13628-5457-49ea-ac95-5d93346a4193"], ",", Cell[BoxData[
             RowBox[{"FunctionExpand", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "faa2ad6a-b8e5-4612-ad27-fbb144e68ec2"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Reduce", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Sin", "[", "z", "]"}], "2"], "+", 
                RowBox[{"3", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"z", "+", 
                   RowBox[{"Pi", "/", "6"}]}], "]"}]}]}], "==", "4"}], ",", 
              "z"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "e68d17b2-675d-4640-8287-d618b20aba8c"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Sin", "[", "z", "]"}], "2"], "+", 
                RowBox[{"3", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"z", "+", 
                   RowBox[{"Pi", "/", "6"}]}], "]"}]}]}], "==", "z"}], ",", 
              RowBox[{"{", 
               RowBox[{"z", ",", " ", "2"}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5e88e225-7d47-4382-8698-482e76dd48b0"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Reduce", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", "x"}], "+", "\[Beta]"}], "]"}], "==",
                "0"}], ",", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "bfd36ef4-d95d-4956-8f85-1784ae20583d"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"FourierTransform", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "e6cdaf96-528b-45ef-a915-7180474177b0"], ",", Cell[BoxData[
             RowBox[{"LaplaceTransform", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "d311c2cd-f476-4f57-80f5-eaef7d90d18a"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"{", 
             RowBox[{
              RowBox[{"BesselJ", "[", 
               RowBox[{
                FractionBox["1", "2"], ",", "z"}], "]"}], ",", 
              RowBox[{"MathieuS", "[", 
               RowBox[{"1", ",", "0", ",", "z"}], "]"}], ",", 
              RowBox[{"JacobiSN", "[", 
               RowBox[{"z", ",", "0"}], "]"}], ",", " ", 
              RowBox[{"HypergeometricPFQ", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", 
                RowBox[{"{", 
                 FractionBox["3", "2"], "}"}], ",", 
                RowBox[{"-", "z"}]}], "]"}], ",", 
              RowBox[{"MeijerG", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "}"}], ",", 
                  RowBox[{"{", "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   FractionBox["1", "2"], "}"}], ",", 
                  RowBox[{"{", "0", "}"}]}], "}"}], ",", "z"}], "]"}]}], 
             "}"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "8af7baf6-b64b-4236-9931-f36feb225daf"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"NumericQ", "[", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "+", "E"}], "]"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "f144a58a-b164-40d0-9193-7d8b83ab9f9a"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"DifferentialRootReduce", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "e02ceb1e-e719-4e04-aaa4-af8e506b1d9c"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"GeneratingFunction", "[", 
              RowBox[{
               RowBox[{"Sin", "[", "n", "]"}], ",", "n", ",", "x"}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "4abee633-b103-409a-a980-502d5c6fc3d3"], ",", Cell[BoxData[
             RowBox[{
              RowBox[{"Series", "[", 
               RowBox[{"%", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", 
              "FullSimplify"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "96e3c0d7-09a5-4318-97e9-7e596a9df0f9"]}], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ExponentialGeneratingFunction", "[", 
             RowBox[{
              RowBox[{"Sin", "[", "n", "]"}], ",", "n", ",", "x"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "6ac5b30f-faea-4558-afa3-effb4d95f983"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{"10.", "^", "30"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "86e292f1-87fb-4252-8e47-d14f0f03f54a"], ",", Cell[BoxData[
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"10", "^", "30"}], "]"}], ",", "20"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "7c1b2cff-d204-4bd8-a02f-cf2cb796655e"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"10", "^", "100"}], "]"}], ",", "20"}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "e085d6de-bc9d-468e-8e6e-9434c41793e8"], ",", Cell[BoxData[
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"$MaxExtraPrecision", "=", "200"}], "}"}], ",", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"Sin", "[", 
                  RowBox[{"10", "^", "100"}], "]"}], ",", "20"}], "]"}]}], 
              "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "5f121dc0-2ced-4a9f-87e0-f9d107963837"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"10.", "^", "3"}], "I"}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "d969a586-3da2-409e-853b-abd53e702c02"], ",", Cell[BoxData[
             RowBox[{"MachineNumberQ", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "52ec2124-2515-43ae-94cc-051f56e0b06a"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"Pi", "/", "8"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{"Pi", "/", "12"}], "]"}], ",", 
               RowBox[{"Sin", "[", 
                RowBox[{"Pi", "/", "15"}], "]"}]}], "}"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "182d7c52-5b2b-48a0-89a7-c1b4ceffe0e4"], ",", Cell[BoxData[
             RowBox[{"FunctionExpand", "[", "%", "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "1b8f60fa-396d-460c-a668-986efafc8e4a"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             RowBox[{"Integrate", "[", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", "+", 
                 RowBox[{"Sin", "[", "x", "]"}]}]], ",", "x"}], "]"}]], 
             "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "763c2155-ef73-4325-bdbd-ca04d2bb085c"], ",", Cell[BoxData[
             RowBox[{"Plot", "[", 
              RowBox[{"%", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", 
                 RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "32c8a55d-4010-4fa9-be62-9fe5d88174fd"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[BoxData[
             FormBox[
              RowBox[{"sin", " ", "x"}], TraditionalForm]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "966d82b7-26e5-42c0-adc3-54af8e9a8e60"], ",", Cell[BoxData[
             FormBox[
              RowBox[{"sin", "(", "x", ")"}], TraditionalForm]], "Input",
             ShowStringCharacters->True,ExpressionUUID->
             "1253124c-6e48-4349-83f8-8c0c91d87a53"]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "x", "]"}], "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"Sqrt", "[", "2", "]"}], "x"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"40", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "ee98d8bb-225e-4e48-b1eb-60fc8999fea3"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{
             RowBox[{"Sin", "[", 
              FractionBox["\[Pi]", 
               SuperscriptBox["2", "12"]], "]"}], "//", "FunctionExpand"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "11291dec-ab47-4f16-b5cb-c564af6c2da8"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"x", "^", "n"}], "]"}], ",", "x"}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "5dd40638-071c-40d6-ba58-ad77d5065ceb"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"DensityPlot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"3", "x"}], "]"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"5", "y"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"1", "/", "2"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"5", "x"}], "]"}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"3", "y"}], "]"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"2", "Pi"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y", ",", "0", ",", 
                RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "50a6598e-ea8b-445b-93ae-b56c88f07ab9"], "}"}], ",", 
          RowBox[{"{", Cell[BoxData[
            RowBox[{"ArrayPlot", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{"x", " ", "y"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}], "]"}]], 
            "Input",
            ShowStringCharacters->True,ExpressionUUID->
            "43284ec0-7907-4a71-b4dd-1a256b2ed46a"], "}"}]}], "}"}]}]}], 
      "}"}]},
    {
     TemplateBox[{"\"documentation example text\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleText\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleText\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"BasicExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "{", Cell[
           "The argument is given in radians:", "ExampleText",ExpressionUUID->
            "6eb010f6-5835-4308-b88f-68e07946e302"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Use ",
            Cell[BoxData[
             ButtonBox["Degree",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "da84299e-c686-41af-bb46-d3b31dca9930"],
            " to specify an argument in degrees:"
           }], "ExampleText",ExpressionUUID->
            "6296a370-1a79-4bdc-b014-49eafec54184"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Plot over a subset of the reals:", "ExampleText",ExpressionUUID->
            "45dddf97-9941-4eab-81b4-aa94068d12b0"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Plot over a subset of the complexes:", "ExampleText",
            ExpressionUUID->"8bf09ce5-7fd2-4c4d-93cb-23aa4d750006"], "}"}], 
          ",", 
          RowBox[{"{", Cell[TextData[{
            "Series expansion at ",
            Cell[BoxData[
            "0"], "InlineFormula",ExpressionUUID->
             "c4bb9c1c-965d-4ea4-890e-3e29e5cf001b"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "0efac69d-be6b-4544-af39-f82bcb8085a3"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"Scope\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "{", Cell[
           "Evaluate numerically:", "ExampleText",ExpressionUUID->
            "2bafbbbb-e2c2-4931-83a9-8109e939f3cd"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           Cell["Evaluate to high precision:", "ExampleText",ExpressionUUID->
             "219bee5e-02c9-41d1-ad62-8771eb824448"], ",", Cell["\<\
The precision of the output tracks the precision of the input:\
\>", "ExampleText",ExpressionUUID->"c5d4e8a2-3a1d-45ff-b27f-1ce59732f92c"]}], 
           "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "371ccd3b-52c5-436f-ad02-dcce145edf89"],
            " can take complex number inputs:"
           }], "ExampleText",ExpressionUUID->
            "f5dd6ffa-18eb-46a8-abd6-ca7e04414fc6"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Evaluate ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "0ccc340c-8eec-4d8a-872d-3e08456c05fe"],
            " efficiently at high precision:"
           }], "ExampleText",ExpressionUUID->
            "4adc85d4-06d6-401a-96b9-b8be967d0f08"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "56b6eb5b-e678-412e-86e1-db2a0b612b03"],
            " can deal with real\[Hyphen]valued intervals:"
           }], "ExampleText",ExpressionUUID->
            "ec51aeef-0331-4601-98af-65285fcdd7bd"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "faf4de2c-063e-4a89-bbcc-f6d8d86f9a13"],
            " threads elementwise over lists and matrices:"
           }], "ExampleText",ExpressionUUID->
            "d245f08c-bbd0-4c9e-8e57-34ef7459f533"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Values of ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "cf044f5c-b6bb-4d31-a66b-e73cfd4dda92"],
            " at fixed points:"
           }], "ExampleText",ExpressionUUID->
            "20b1babe-1421-499b-87ed-190f083742a2"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "a729d982-5a9a-4b68-be25-add9dea73746"],
            " has exact values at rational multiples of pi:"
           }], "ExampleText",ExpressionUUID->
            "2199e33a-bd95-4a64-b0e8-cb2a42f09898"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Values at infinity:", "ExampleText",ExpressionUUID->
            "3c214653-5de4-4ca2-bea7-6c8d8e2b2abb"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           Cell["Simple exact values are generated automatically:", 
             "ExampleText",ExpressionUUID->
             "69ef8795-c977-42e4-9a1d-5f624a726de8"], ",", Cell[TextData[{
             "More complicated cases require explicit use of ",
             Cell[BoxData[
              ButtonBox["FunctionExpand",
               BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
              "75d4ecfb-cf0b-456f-a56e-be6b8b8554c4"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "92ffef74-1559-42dd-85a6-d0fa745f5ee6"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Zeros of ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "1eccf1a5-ac5d-4e19-85b6-73b22cb54ddd"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "c09bb78a-c3bd-4428-822f-8518573459a2"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[TextData[{
             "Extrema of ",
             Cell[BoxData[
             "Sin"], "InlineFormula",ExpressionUUID->
              "1a0c7b22-22ce-42f1-a40d-36b781aefc73"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "92ed37ec-dd32-433d-a449-3c15fee0464f"], ",", Cell[TextData[{
             "Find the first positive maximum as a root of ",
             Cell[BoxData[
              FormBox[
               RowBox[{
                FractionBox[
                 RowBox[{
                  StyleBox["d",
                   FontSlant->"Plain"], " ", 
                  RowBox[{"sin", "(", "x", ")"}]}], "dx"], "\[LongEqual]", 
                "0"}], TraditionalForm]], "InlineMath",ExpressionUUID->
              "834f3485-fa1a-41f4-8ca3-064779136c9e"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "60c356cc-1b77-4869-b400-bf720fe6eaa4"], ",", Cell[
            "Substitute in the result:", "ExampleText",ExpressionUUID->
             "e88db90e-df2d-4707-8e11-c1ca3dcacbff"], ",", Cell[
            "Visualize the result:", "ExampleText",ExpressionUUID->
             "4e0dfdc0-2ab3-4f85-a364-8cdf10e724fc"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Plot the ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "23be862e-44e7-4f5b-9480-37b4375bf996"],
            " function:"
           }], "ExampleText",ExpressionUUID->
            "1333ee0e-7a2c-45d9-b5b0-3cd030d7a610"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[TextData[{
             "Plot the real part of ",
             Cell[BoxData[
              FormBox[
               RowBox[{"sin", "(", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], 
               TraditionalForm]], "InlineMath",ExpressionUUID->
              "a408f046-606b-4a68-a7a3-f54a0f1db3cc"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "72479dde-bcc4-4540-a8cd-75df7b039e55"], ",", Cell[TextData[{
             "Plot the imaginary part of ",
             Cell[BoxData[
              FormBox[
               RowBox[{"sin", "(", 
                RowBox[{"x", "+", 
                 RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], 
               TraditionalForm]], "InlineMath",ExpressionUUID->
              "d4ffde19-c261-4f1a-8e9f-63dc0020ba7f"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "d93b2aa7-533e-4d99-9b98-84c952828594"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Polar plot with ",
            Cell[BoxData[
             FormBox[
              RowBox[{"r", "=", 
               RowBox[{"sin", "(", 
                RowBox[{"k", " ", "\[Phi]"}], ")"}]}], TraditionalForm]], 
             "InlineMath",ExpressionUUID->
             "cdf7e637-e10e-4d88-9061-b49d75abbfec"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "419e6810-2f25-45fe-b966-af68f8c3014b"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "9aed1a70-2485-4503-92b3-7a7b7264f4a2"],
            " is defined for all real and complex values:"
           }], "ExampleText",ExpressionUUID->
            "e9189639-4d42-4c96-b9ec-14f1a2297122"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[TextData[{
             Cell[BoxData[
             "Sin"], "InlineFormula",ExpressionUUID->
              "164a7de5-7709-4824-885f-fdcf41ae7a85"],
             " achieves all real values between ",
             Cell[BoxData[
              FormBox[
               RowBox[{"-", "1"}], TraditionalForm]], "InlineMath",
              ExpressionUUID->"b9225699-240f-4a1b-8b9e-93201ac7604a"],
             " and 1:"
            }], "ExampleText",ExpressionUUID->
             "0cdf205f-48c0-4655-9d3e-9d7bf0071f4a"], ",", Cell[
            "The range for complex values is the whole plane:", "ExampleText",
             ExpressionUUID->"5251d588-769e-4a28-a742-332ace52eba8"]}], "}"}],
           ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "e9ba4f74-25c2-463f-85d2-41af343efdcc"],
            " is a periodic function with a period ",
            Cell[BoxData[
             FormBox[
              RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]], "InlineMath",
             ExpressionUUID->"c029e042-efcc-406d-b579-a811ea77fa8e"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "414c7dff-ba18-46b5-9e3c-9e3dd21ca45a"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "209653d3-acf5-402e-b3d5-a7824463b807"],
            " is an odd function:"
           }], "ExampleText",ExpressionUUID->
            "3cf1021f-95d8-4506-bc05-31d1d42080ef"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "ae6c5373-e131-44b8-b396-39f4b6a8b2cf"],
            " has the mirror property ",
            Cell[BoxData[
             FormBox[
              RowBox[{
               RowBox[{"sin", "(", 
                TemplateBox[{"z"},
                 "Conjugate"], ")"}], "\[LongEqual]", 
               TemplateBox[{
                 RowBox[{"sin", "(", "z", ")"}]},
                "Conjugate"]}], TraditionalForm]], "InlineMath",
             ExpressionUUID->"865eebc1-7efd-4cfe-b4b0-1f79c20475d7"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "bd091fae-f997-4b27-92fe-808b0dd5afdd"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
             ButtonBox["TraditionalForm",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "80ceed2a-30bd-41f0-bf7c-3c7124a490db"],
            " formatting:"
           }], "ExampleText",ExpressionUUID->
            "fb8574bb-3a21-4cd4-88d3-44264e9beced"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "First derivative:", "ExampleText",ExpressionUUID->
            "c6572e19-5e5d-43f5-a423-24167bd9dd24"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Higher derivatives:", "ExampleText",ExpressionUUID->
            "37da0418-21b8-4dc1-a22f-0442dce97b7b"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Formula for the ",
            Cell[BoxData[
             FormBox["n", TraditionalForm]], "InlineMath",ExpressionUUID->
             "49dbc7d6-7d0e-4505-a48c-9f6df7f32f8f"],
            Cell[BoxData[
             FormBox[
              SuperscriptBox["\[Null]", "th"], TraditionalForm]],
             ExpressionUUID->"fc77d687-bf6b-4976-a7aa-a829d31ec8e1"],
            " derivative:"
           }], "ExampleText",ExpressionUUID->
            "99e1f582-9781-4d3e-80a7-81d8c7b69326"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Compute the indefinite integral using ",
            Cell[BoxData[
             ButtonBox["Integrate",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "0bebd43a-6b5b-4cb9-8703-7c0becfdfb5e"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "ec7b51ec-acc7-4037-be9e-557eb10c5ada"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Definite integral of ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "dddc8606-bfdb-49f7-82b9-2599b059c7b9"],
            " over a period is 0:"
           }], "ExampleText",ExpressionUUID->
            "5900fe23-dbc1-4d15-bf04-a3286c7fac33"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "More integrals:", "ExampleText",ExpressionUUID->
            "7d7a3f32-370c-4d83-91a5-946ec48ecafe"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{Cell[TextData[{
             "Find the Taylor expansion using ",
             Cell[BoxData[
              ButtonBox["Series",
               BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
              "5ebab663-5847-4a5c-8abc-4d035d4c27a3"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "bbacb9e7-1cd5-46db-8f3d-cc3ecf059328"], ",", Cell[TextData[{
             "Plots of the first three approximations for ",
             Cell[BoxData[
             "Sin"], "InlineFormula",ExpressionUUID->
              "3cc495b0-0faa-4de7-8ae8-342b6943fb6f"],
             " around ",
             Cell[BoxData[
              FormBox[
               RowBox[{"x", "=", "0"}], TraditionalForm]], "InlineMath",
              ExpressionUUID->"6a60b7a3-f113-41d6-90c1-18008864b407"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "7c5781f0-444b-4b32-8a6b-0b5eeb53236c"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "General term in the series expansion using ",
            Cell[BoxData[
             ButtonBox["SeriesCoefficient",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "04cab1ee-aac2-4cbe-ba0b-3428346b9152"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "c4003c30-ec4f-4b41-8d4e-e1a82adf234e"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Fourier series:", "ExampleText",ExpressionUUID->
            "f9fb9710-858b-4227-9839-9182c10879a3"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "a82bde62-16b3-4d14-8c35-62f4c8668f9a"],
            " can be applied to power series:"
           }], "ExampleText",ExpressionUUID->
            "e7e84a65-0b2a-48bc-9e93-57d6d1cde4df"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Compute the Fourier transform using ",
            Cell[BoxData[
             ButtonBox["FourierTransform",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "819f0f4f-fbac-4d6a-b419-ab05641f24cc"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "9a230300-58e7-4d46-9d3a-ac3f65e2085c"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
             ButtonBox["LaplaceTransform",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "f2ef8928-dd2c-4fe7-9331-b7a22baae9d0"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "5f5b64e1-6871-4710-8fe0-1a269d5d7f9e"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
             ButtonBox["MellinTransform",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "66bd3df3-cc85-40b8-8ff6-8c2166647d1b"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "222e7101-1021-4d3c-9983-7337b09b044b"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Double-angle formula using ",
            Cell[BoxData[
             ButtonBox["TrigExpand",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "15868d24-ba03-4e24-a5d9-35e3730244e5"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "94d4e55b-c95d-42ee-a5c1-ec02a241c7f1"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Angle sum formula:", "ExampleText",ExpressionUUID->
            "80bdad81-eb5d-4477-a428-bf2072e4cbb2"], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           Cell["Multiple\[Hyphen]angle expressions:", "ExampleText",
             ExpressionUUID->"e10f878a-f814-407b-8706-c16f855fc532"], ",", 
            Cell[TextData[{
             "Recover the original expression using ",
             Cell[BoxData[
              ButtonBox["TrigReduce",
               BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
              "cb8423c3-5d27-4f32-8005-bf6db88463e0"],
             ":"
            }], "ExampleText",ExpressionUUID->
             "21bb525e-92f0-44ea-bc66-8a9913977f02"]}], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Convert sums to products using ",
            Cell[BoxData[
             ButtonBox["TrigFactor",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "d8975451-b772-4639-bff3-c29a51ed8fa3"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "8685cae0-6b12-4227-8634-280bb4426a39"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Expand using ",
            Cell[BoxData[
             ButtonBox["ComplexExpand",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "0e0c0f6e-09ca-4a0a-9f7c-2058090529d2"],
            " assuming real variables ",
            Cell[BoxData[
             StyleBox["x", "TI"]], "InlineFormula",ExpressionUUID->
             "0296db52-c009-4858-b537-6dc241d2d282"],
            " and ",
            Cell[BoxData[
             StyleBox["y", "TI"]], "InlineFormula",ExpressionUUID->
             "52947dcd-2bef-4d84-8e50-349ade5518d5"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "fd0b1721-2685-4057-863a-8057fe2ebd16"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Convert to exponentials using ",
            Cell[BoxData[
             ButtonBox["TrigToExp",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "819b4e34-c78b-4e12-a5c1-dbd4e4e32bf4"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "d94c990c-70b2-42fc-99e6-3ac348e23a6b"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Use ",
            Cell[BoxData[
             ButtonBox["Simplify",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "aff45cdd-509c-4f21-b9d0-aea99b3c0fcf"],
            " to find a representation through ",
            Cell[BoxData[
             ButtonBox["Cos",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "4f2d0c80-2b28-45f5-80e6-a9f1bd9a24e4"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "2eff8f6f-e8ab-4dd6-9a0f-bec7e81267c1"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Representation through Bessel functions:", "ExampleText",
            ExpressionUUID->"3eeca305-f650-47c2-ab06-666644fead5d"], "}"}], 
          ",", 
          RowBox[{"{", Cell[TextData[{
            "Representation through ",
            Cell[BoxData[
             ButtonBox["SphericalHarmonicY",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "db2fc865-b471-40b0-9d56-68fe0d84673e"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "68be48ef-cb82-414c-9fc4-878d02bbdf4e"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Representation in terms of ",
            Cell[BoxData[
             ButtonBox["MeijerG",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "efe5152b-63f2-4833-9589-0a80c1480c9a"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "4be405a4-5ea2-4d12-bc33-ccba9f7459e0"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "f25f78fe-e2a4-43ba-881a-dc31b233e33e"],
            " can be represented as a ",
            Cell[BoxData[
             ButtonBox["DifferentialRoot",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "0f4f24dc-e9af-41ec-aca5-4f2479d4e23e"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "a74e101e-7fee-4984-a344-7090406ab661"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"GeneralizationsExtensions\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Options\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"Applications\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "{", Cell[
           "Draw a circle:", "ExampleText",ExpressionUUID->
            "3e843b75-2fff-4b57-84a5-785434d4e0fa"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Lissajous figure:", "ExampleText",ExpressionUUID->
            "9b797632-8d0c-4515-8343-2fdc0c244c69"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Equiangular (logarithmic) spiral:", "ExampleText",ExpressionUUID->
            "10cb9462-07f1-4c84-a841-37b4df2a229f"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Motion in a circle:", "ExampleText",ExpressionUUID->
            "ba163310-e35f-4aa4-8206-a679fa4332d4"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Play a pure tone at 440 Hz:", "ExampleText",ExpressionUUID->
            "55af728f-55db-42fe-8dd9-d8b552ae3baf"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Solve an equation for harmonic motion:", "ExampleText",
            ExpressionUUID->"9f91af74-ad08-4633-9fa9-53e8cbcaf2b0"], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
           Cell["Rotation matrix:", "ExampleText",ExpressionUUID->
             "34a03722-5ad0-446a-9309-0aae3aed7382"], ",", Cell[
            "Rotate a vector:", "ExampleText",ExpressionUUID->
             "4f32f376-4a69-4226-ace2-1e30c10b2091"]}], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Plot a sphere:", "ExampleText",ExpressionUUID->
            "3f8a2118-234f-4e8d-a980-f0e7c1574a1e"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Plot a torus:", "ExampleText",ExpressionUUID->
            "db73b230-f3d0-401f-89db-98d3f9cead09"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Waves:", "ExampleText",ExpressionUUID->
            "b8da1f64-60ea-498d-ade7-bd9144fa3555"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Triple\[Hyphen]periodic surface:", "ExampleText",ExpressionUUID->
            "82a05c7b-f5ee-40bf-9d18-bffcc8094e1a"], "}"}], ",", 
          RowBox[{"{", Cell["\<\
Approximate the almost nowhere differentiable Riemann\[Dash]Weierstrass \
function:\
\>", "ExampleText",ExpressionUUID->"62e2adc0-d64f-46cd-91ee-b9520b0e4ebb"], 
           "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"PropertiesRelations\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", Cell["\<\
Basic parity and periodicity properties are automatically applied:\
\>", "ExampleText",ExpressionUUID->"71fae737-1dc6-49c5-adf6-e8c6358c3d62"], 
           "}"}], ",", 
          RowBox[{"{", Cell["\<\
Complicated expressions containing trigonometric functions do not simplify \
automatically:\
\>", "ExampleText",ExpressionUUID->"34562ba9-0ca2-4ea2-81d3-f399522f5454"], 
           "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Compose with inverse functions:", "ExampleText",ExpressionUUID->
            "b98b341b-cebb-4fe6-9d8f-7f07c6110e73"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Solve a trigonometric equation:", "ExampleText",ExpressionUUID->
            "5f330a67-79ae-41e5-b978-392bd5b1adf5"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Numerically find a root of a transcendental equation:", 
            "ExampleText",ExpressionUUID->
            "81bc88a9-482a-4b17-ac71-85f869d66efc"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Reduce a trigonometric equation:", "ExampleText",ExpressionUUID->
            "214ab3bf-6ed7-4e32-a506-ca835ebc5234"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Fourier transform:", "ExampleText",ExpressionUUID->
            "b9cc8036-f9fe-4f51-b190-dfb38a56669c"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "5c40f648-ab55-4521-8020-e3d32fab0473"],
            " appears in special cases of many mathematical functions: "
           }], "ExampleText",ExpressionUUID->
            "83c8429a-5e24-44cc-bfce-0a26aca3ee6c"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "e3398b05-236f-4c22-8883-fec78de2a786"],
            " is a numeric function:"
           }], "ExampleText",ExpressionUUID->
            "ef806bf0-6e84-49eb-861b-582a8e2950f3"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "67fc2851-58ab-45ce-a8bd-68454d97f1a1"],
            " can be represented as a ",
            Cell[BoxData[
             ButtonBox["DifferentialRoot",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "38280079-4659-43d0-ad91-4050579e4eb9"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "32ddae7e-6e2e-48c2-9b29-6ef0e4ed599e"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "The generating function for ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "50f385b8-f941-478f-bc89-5868c48067b2"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "d8960452-3d7b-4b2b-b71c-5b9ea3a8a535"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "The exponential generating function for ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "0d75e1f1-d1ea-484f-af96-b880c27e5368"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "b6c94511-ddb0-4806-916b-5a24b0b661eb"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"PossibleIssues\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{Cell["\<\
Machine-precision input is insufficient to get a correct answer:\
\>", "ExampleText",ExpressionUUID->"5a730370-8452-451c-a4f7-894cc825c1c4"], 
            ",", Cell[
            "With exact input, the answer is correct:", "ExampleText",
             ExpressionUUID->"99136faf-d584-4905-839c-bd68414429fe"]}], "}"}],
           ",", 
          RowBox[{"{", Cell[TextData[{
            "A larger setting for ",
            Cell[BoxData[
             ButtonBox["$MaxExtraPrecision",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "4cbae1ba-e6c0-4219-9c0f-c7f44bbf4511"],
            " can be needed:"
           }], "ExampleText",ExpressionUUID->
            "e6ec56e8-2926-45c6-92ef-c31ff6dac355"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Machine\[Hyphen]number inputs can give high\[Hyphen]precision \
results:", "ExampleText",ExpressionUUID->
            "bd1c21cc-48fb-489a-b8b9-d8c37e471c5c"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Use ",
            Cell[BoxData[
             ButtonBox["FunctionExpand",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "c231fce8-c5f9-4602-81c2-b43672f9be6a"],
            " to express sine of rationals times ",
            Cell[BoxData[
             FormBox["\[Pi]", TraditionalForm]], "InlineMath",ExpressionUUID->
             "d7255416-a5d5-4f51-9713-4e2558499397"],
            " using radicals:"
           }], "ExampleText",ExpressionUUID->
            "aa1c0056-c8d6-4ece-b825-698f5133961f"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Continuous functions involving ",
            Cell[BoxData[
             RowBox[{"Sin", "[", 
              StyleBox["x", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
             "1502fc0f-62f6-4191-9cf0-982d77b3d691"],
            " can give discontinuous indefinite integrals:"
           }], "ExampleText",ExpressionUUID->
            "7e6dd441-2d38-4049-9ba7-685984849e8f"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "In ",
            Cell[BoxData[
             ButtonBox["TraditionalForm",
              BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
             "dc710dcd-922d-49e3-aa94-c8930fb0390c"],
            ", parentheses are needed around the argument:"
           }], "ExampleText",ExpressionUUID->
            "a77c0314-f58f-44f5-9dff-311dcb50c79a"], "}"}]}], "}"}]}], ",", 
       RowBox[{"\<\"InteractiveExamples\"\>", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\<\"NeatExamples\"\>", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "{", Cell[
           "Noncommensurate waves (quasiperiodic function):", "ExampleText",
            ExpressionUUID->"2c344b69-6606-4aa7-899e-e97fd5361c5b"], "}"}], 
          ",", 
          RowBox[{"{", Cell["\<\
Some arguments can be expressed as a finite sequence of nested radicals:\
\>", "ExampleText",ExpressionUUID->"6f018d1f-fa03-40d3-9f18-c99b2d7bf40c"], 
           "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Indefinite integral of ",
            Cell[BoxData[
             FormBox[
              RowBox[{"sin", "(", 
               SuperscriptBox["x", "n"], ")"}], TraditionalForm]], 
             "InlineMath",ExpressionUUID->
             "3e495375-4c6a-431a-bc84-35aed28f5e47"],
            ":"
           }], "ExampleText",ExpressionUUID->
            "54bb9cbd-5606-483c-bb92-a6c06ffbe8c2"], "}"}], ",", 
          RowBox[{
          "{", Cell[
           "Chladni figure:", "ExampleText",ExpressionUUID->
            "d04d985e-7649-422f-8b79-32698053afb0"], "}"}], ",", 
          RowBox[{"{", Cell[TextData[{
            "Plot ",
            Cell[BoxData[
            "Sin"], "InlineFormula",ExpressionUUID->
             "0cf2043c-d3fc-4410-a49d-bb064a53292f"],
            " at integer points:"
           }], "ExampleText",ExpressionUUID->
            "06586ab8-e44c-472b-b4a0-7e1be2e310c2"], "}"}]}], "}"}]}]}], 
      "}"}]},
    {
     TemplateBox[{"\"entity classes\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EntityClasses\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EntityClasses\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"eponymous people\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"equal\[Hyphen]precedence symbols\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"EqualPrecedenceSymbols\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EqualPrecedenceSymbols\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]},
    {
     TemplateBox[{"\"external links\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ExternalLinks\""}], 
         "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"ExternalLinks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"MathWorld\"\>", "\[Rule]", 
        TemplateBox[{
         "\"http://mathworld.wolfram.com/Sine.html\"", 
          "http://mathworld.wolfram.com/Sine.html"},
         "HyperlinkURL"]}], ",", 
       RowBox[{"\<\"WolframFunctionsSite\"\>", "\[Rule]", 
        TemplateBox[{
         "\"http://functions.wolfram.com/ElementaryFunctions/Sin/\"", 
          "http://functions.wolfram.com/ElementaryFunctions/Sin/"},
         "HyperlinkURL"]}]}], "}"}]},
    {
     TemplateBox[{"\"frequencies of usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Frequencies\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Frequencies\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"All\"\>", "\[Rule]", "0.0018861665535468864`"}], ",", 
       RowBox[{"\<\"StackExchange\"\>", "\[Rule]", "0.005207739129006606`"}], 
       ",", 
       RowBox[{"\<\"TypicalProductionCode\"\>", "\[Rule]", 
        "0.004242787622504972`"}], ",", 
       RowBox[{"\<\"WolframAlphaCodebase\"\>", "\[Rule]", 
        "0.001029188420496192`"}], ",", 
       RowBox[{"\<\"WolframDemonstrations\"\>", "\[Rule]", 
        "0.005307455307698076`"}], ",", 
       RowBox[{"\<\"WolframDocumentation\"\>", "\[Rule]", 
        "0.0037450820896761236`"}]}], "}"}]},
    {
     TemplateBox[{"\"full version introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"FullVersionIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionIntroduced\\\"]\""},
      "EntityProperty"], "\<\"1\"\>"},
    {
     TemplateBox[{"\"full version last modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"FullVersionLastModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionLastModified\\\"]\""},
      "EntityProperty"], "\<\"10.1\"\>"},
    {
     TemplateBox[{"\"full versions modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"FullVersionsModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionsModified\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"10\"\>", ",", "\<\"10.1\"\>"}], "}"}]},
    {
     TemplateBox[{"\"functionality areas\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}],
          "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "\<\"BasicSymbols\"\>", "}"}]},
    {
     TemplateBox[{"\"symbol background\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionEssay\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionEssay\\\"]\""},
      "EntityProperty"], 
     TagBox[GridBox[{
        {Cell[TextData[{
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "3dedd42e-63d9-453c-855e-75965d485df6"],
          
          " is the sine function, which is one of the basic functions \
encountered in trigonometry. It is defined for real numbers by letting ",
          Cell[BoxData[
           FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
           "8ed2e78c-556c-4247-b649-34c5bf5250f7"],
          " be a radian angle measured counterclockwise from the ",
          Cell[BoxData[
           FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
           "a2ac9c6d-542f-48c0-a9fa-80ee575b7420"],
          " axis along the circumference of the unit circle. ",
          Cell[BoxData[
           RowBox[{"Sin", "[", 
            StyleBox["x", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
           "c6f79bd0-582a-4ed3-bfa7-a62351d89f4d"],
          
          " then gives the vertical coordinate of the arc endpoint. The \
equivalent schoolbook definition of the sine of an angle ",
          Cell[BoxData[
           FormBox["\[Theta]", TraditionalForm]], "InlineMath",ExpressionUUID->
           "df948152-2250-4f38-8c6e-e6f348dcf183"],
          
          " in a right triangle is the ratio of the length of the leg \
opposite ",
          Cell[BoxData[
           FormBox["\[Theta]", TraditionalForm]], "InlineMath",ExpressionUUID->
           "7801d21b-1501-40c2-a602-26719584bdf4"],
          " to the length of the hypotenuse."
         }], "FunctionEssay",ExpressionUUID->
          "efc7b812-1502-48c2-b105-b7f2d82791b9"]},
        {Cell[TextData[{
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "c06d2bae-5ad2-4cd2-bd14-c9c0bc0e54b9"],
          
          " automatically evaluates to exact values when its argument is a \
simple rational multiple of ",
          Cell[BoxData[
           FormBox["\[Pi]", TraditionalForm]], "InlineMath",ExpressionUUID->
           "d01e3a70-6297-41ed-9926-724bcce9a259"],
          ". For more complicated rational multiples, ",
          Cell[BoxData[
          "FunctionExpand"], "InlineFormula",ExpressionUUID->
           "a7b99165-a9aa-4bf7-9dfd-abfe4df81217"],
          " can sometimes be used to obtain an explicit exact value. ",
          
          "To specify an argument using an angle measured in degrees, the \
symbol ",
          Cell[BoxData[
          "Degree"], "InlineFormula",ExpressionUUID->
           "38a9b397-f11c-4f18-af08-d62b6b066bd4"],
          " can be used as a multiplier (e.g. ",
          Cell[BoxData[
           RowBox[{"Sin", "[", 
            RowBox[{"30", " ", "Degree"}], "]"}]], "InlineFormula",
           ExpressionUUID->"390325a9-d242-48ec-bc76-413862254fb5"],
          "). When given exact numeric expressions as arguments, ",
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "b54d888d-e101-4617-978f-d42b6ca5907e"],
          " may be evaluated to arbitrary numeric precision. ",
          
          "Other operations useful for manipulation of symbolic expressions \
involving ",
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "20ca07e9-7cf7-4245-8955-5c62c38b8d71"],
          " include ",
          Cell[BoxData[
          "TrigToExp"], "InlineFormula",ExpressionUUID->
           "31557a77-7e57-4606-94d6-f14b5edc1eea"],
          ", ",
          Cell[BoxData[
          "TrigExpand"], "InlineFormula",ExpressionUUID->
           "fb1860b5-8556-4093-b553-08d96dd09b3d"],
          ", ",
          Cell[BoxData[
          "Simplify"], "InlineFormula",ExpressionUUID->
           "3e81048b-c1a5-4279-a02b-b594027a4e5e"],
          ", and ",
          Cell[BoxData[
          "FullSimplify"], "InlineFormula",ExpressionUUID->
           "5c1aba29-636e-4a66-b49f-d54ae45d503d"],
          "."
         }], "FunctionEssay",ExpressionUUID->
          "fb800591-a1a8-46b4-9fbd-88c941381805"]},
        {Cell[TextData[{
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "f62e6a9d-7488-4ea2-8344-53d7e54c33a9"],
          " threads element-wise over lists and matrices. ",
          "In contrast",
          ", ",
          Cell[BoxData[
          "MatrixFunction"], "InlineFormula",ExpressionUUID->
           "d9b2e959-af03-4a24-a3eb-8ab909538292"],
          
          " can be used to give the sine of a square matrix (i.e. the power \
series for the sine function with ordinary powers replaced by matrix powers)."
         }], "FunctionEssay",ExpressionUUID->
          "27bad821-3a78-4978-b5b5-a6aca19e43ff"]},
        {Cell[TextData[{
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "12629295-9899-47cf-a0e9-b8eb2597d95f"],
          " is periodic with period ",
          Cell[BoxData[
           FormBox[
            RowBox[{"2", "\[Pi]"}], TraditionalForm]], "InlineMath",
           ExpressionUUID->"c6d4e85f-8847-4d42-8a14-0602056c45cd"],
          ", as reported by ",
          Cell[BoxData[
          "FunctionPeriod"], "InlineFormula",ExpressionUUID->
           "7077d3b2-2750-44b8-84d3-33bef2152f61"],
          ". ",
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "7cfc1b26-82f2-44e3-a967-0c06f343a929"],
          " satisfies the identity ",
          Cell[BoxData[
           FormBox[
            RowBox[{
             RowBox[{
              RowBox[{
               SuperscriptBox["sin", "2"], "(", "x", ")"}], "+", 
              RowBox[{
               SuperscriptBox["cos", "2"], "(", "x", ")"}]}], "\[LongEqual]", 
             "1"}], TraditionalForm]], "InlineMath",ExpressionUUID->
           "e9ffcabe-46f9-4f5a-983a-466a085e39c1"],
          
          ", which is equivalent to the Pythagorean theorem. The definition \
of the sine function is extended to complex arguments ",
          Cell[BoxData[
           FormBox["z", TraditionalForm]], "InlineMath",ExpressionUUID->
           "cf4687aa-7e2f-4e22-bea4-9ac351834316"],
          " using the definition ",
          Cell[BoxData[
           FormBox[
            RowBox[{
             RowBox[{"sin", "(", "z", ")"}], "\[LongEqual]", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"\[ImaginaryI]", "(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "z"}]], "-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "z"}]]}], ")"}]}]}], 
            TraditionalForm]], "InlineMath",ExpressionUUID->
           "72812e1b-8d4c-450f-b9db-8e31db671920"],
          ", where ",
          Cell[BoxData[
           FormBox["\[ExponentialE]", TraditionalForm]], "InlineMath",
           ExpressionUUID->"766a134d-cdb4-467a-9644-c46b73a29081"],
          
          " is the base of the natural logarithm. The sine function is \
entire, meaning it is complex differentiable at all finite points of the \
complex plane. ",
          Cell[BoxData[
           RowBox[{"Sin", "[", 
            StyleBox["z", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
           "16a22cc2-4024-4bdc-9834-a47163e6f5c1"],
          " has series expansion ",
          Cell[BoxData[
           FormBox[
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"k", "=", "0"}], "\[Infinity]"], 
             RowBox[{
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"-", "1"}], ")"}], 
                RowBox[{"k", "-", "1"}]], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "k"}], "-", "1"}], ")"}], "!"}]], 
              SuperscriptBox["z", 
               RowBox[{
                RowBox[{"2", " ", "k"}], "-", "1"}]]}]}], TraditionalForm]], 
           "InlineMath",ExpressionUUID->
           "a2c6cdf1-a17e-4e46-9fed-cb192e306c1b"],
          " about the origin."
         }], "FunctionEssay",ExpressionUUID->
          "d28f843b-c577-4ea9-afbb-fa8693d9e659"]},
        {Cell[TextData[{
          "The inverse function of ",
          Cell[BoxData[
          "Sin"], "InlineFormula",ExpressionUUID->
           "13d164b2-e6a9-4168-8f52-68f4d6ff5d62"],
          " is ",
          Cell[BoxData[
          "ArcSin"], "InlineFormula",ExpressionUUID->
           "85c69c5f-34b3-4ae4-879d-d362cfffa508"],
          ". The hyperbolic sine is given by ",
          Cell[BoxData[
          "Sinh"], "InlineFormula",ExpressionUUID->
           "1869cbe7-5e71-46bf-a7ac-802053c57a93"],
          ". Other related mathematical functions include ",
          Cell[BoxData[
          "Cos"], "InlineFormula",ExpressionUUID->
           "5fe8a35e-1094-4957-b6a6-1cb6ddfa8615"],
          ", ",
          Cell[BoxData[
          "Tan"], "InlineFormula",ExpressionUUID->
           "cb5ccc93-2f04-4379-8b34-a2fcce98ba41"],
          ", and ",
          Cell[BoxData[
          "Csc"], "InlineFormula",ExpressionUUID->
           "71df24ce-a2a8-496a-9326-cfd1c82d6ad2"],
          "."
         }], "FunctionEssay",ExpressionUUID->
          "447b214c-5c4e-482e-be60-d819b51def34"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxItemStyle->{"Columns" -> {{
            Directive[SpanMaxSize -> DirectedInfinity[1]]}}, "Rows" -> {{
            Directive[SpanMaxSize -> DirectedInfinity[1]]}}}],
      "Column"]},
    {
     TemplateBox[{"\"keyboard shortcuts\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KeyboardShortcuts\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"KeyboardShortcuts\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"link trails\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LinkTrails\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"LinkTrails\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/FormulaManipulation\"\>", 
         ",", "\<\"guide/AlgebraicTransformations\"\>", 
         ",", "\<\"guide/TrigonometricFunctions\"\>", 
         ",", "\<\"ref/Sin\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/MathematicalFunctions\"\>", 
         ",", "\<\"guide/ElementaryFunctions\"\>", 
         ",", "\<\"guide/TrigonometricFunctions\"\>", 
         ",", "\<\"ref/Sin\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", 
         ",", "\<\"guide/MathematicalFunctions\"\>", 
         ",", "\<\"guide/ElementaryFunctions\"\>", 
         ",", "\<\"guide/TrigonometricFunctions\"\>", 
         ",", "\<\"ref/Sin\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/PhysicsAndChemistryDataAndComputation\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", 
         ",", "\<\"guide/MathematicalFunctions\"\>", 
         ",", "\<\"guide/ElementaryFunctions\"\>", 
         ",", "\<\"guide/TrigonometricFunctions\"\>", 
         ",", "\<\"ref/Sin\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"guide/WolframRoot\"\>", 
         ",", "\<\"guide/ScientificDataAnalysis\"\>", 
         ",", "\<\"guide/ScientificModels\"\>", 
         ",", "\<\"guide/MathematicalFunctions\"\>", 
         ",", "\<\"guide/ElementaryFunctions\"\>", 
         ",", "\<\"guide/TrigonometricFunctions\"\>", 
         ",", "\<\"ref/Sin\"\>"}], "}"}]}], "}"}]},
    {
     TemplateBox[{"\"memberships\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Memberships\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Memberships\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"name\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Name\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Name\\\"]\""},
      "EntityProperty"], "\<\"Sin\"\>"},
    {
     TemplateBox[{"\"option names\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"OptionNames\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"OptionNames\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"options\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Options\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Options\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"plaintext usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlaintextUsage\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PlaintextUsage\\\"]\""},
      "EntityProperty"], "\<\"Sin[z] gives the sine of z.\"\>"},
    {
     TemplateBox[{"\"precedence ranks\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PrecedenceRanks\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PrecedenceRanks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]},
    {
     TemplateBox[{"\"ranks of usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ranks\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Ranks\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"All\"\>", "\[Rule]", "30"}], ",", 
       RowBox[{"\<\"StackExchange\"\>", "\[Rule]", "20"}], ",", 
       RowBox[{"\<\"TypicalProductionCode\"\>", "\[Rule]", "29"}], ",", 
       RowBox[{"\<\"WolframAlphaCodebase\"\>", "\[Rule]", "37"}], ",", 
       RowBox[{"\<\"WolframDemonstrations\"\>", "\[Rule]", "22"}], ",", 
       RowBox[{"\<\"WolframDocumentation\"\>", "\[Rule]", "20"}]}], "}"}]},
    {
     TemplateBox[{"\"related entities\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedEntities\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedEntities\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]},
    {
     TemplateBox[{"\"related guide pages\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedGuidePages\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedGuidePages\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "\"Precollege Education\"", "paclet:guide/PrecollegeEducation"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Trigonometric Functions\"", "paclet:guide/TrigonometricFunctions"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Summary of New Features in 12\"", 
         "paclet:guide/SummaryOfNewFeaturesIn12"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Functions for Separable Coordinate Systems\"", 
         "paclet:guide/FunctionsForSeparableCoordinateSystems"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Mathematical Functions\"", "paclet:guide/MathematicalFunctions"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{
        "\"Elementary Functions\"", "paclet:guide/ElementaryFunctions"},
        "HyperlinkPaclet"], ",", 
       TemplateBox[{"\"Neural Networks\"", "paclet:guide/NeuralNetworks"},
        "HyperlinkPaclet"]}], "}"}]},
    {
     TemplateBox[{"\"related symbols\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedSymbols\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedSymbols\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"AngleVector\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AngleVector\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AngleVector\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ArcSin\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ArcSin\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ArcSin\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Cos\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cos\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cos\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Tan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tan\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tan\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Csc\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Csc\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Csc\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Degree\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Degree\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Degree\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"TrigToExp\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TrigToExp\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TrigToExp\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"TrigExpand\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TrigExpand\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TrigExpand\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Sinc\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Sinc\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Sinc\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Haversine\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Haversine\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Haversine\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"CirclePoints\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CirclePoints\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CirclePoints\\\
\"]\"", "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"relationship community graph\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"RelationshipCommunityGraph\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipCommunityGraph\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[{{
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{3.065447710932638, -0.30042776078290295`}, {
           2.71175137324055, -0.09994654338883785}, {
           2.5303706707295754`, -0.09994654338883785}, {
           2.4148898363755746`, -0.3125486771968616}, {
           2.4148898363755746`, -0.4939293797078365}, {
           2.4502563054073123`, -0.8656539534672054}, {
           2.485816990464015, -1.2063871505753836`}, {
           2.736420248712529, -1.7029734984249434`}, {
           2.9178009512235037`, -1.7029734984249434`}, {
           3.0893791311560417`, -0.8687703982640678}, {
           3.0893791311560417`, -0.6873896957530929}}, SplineClosed -> 
           True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{0.7289942603352295, -0.233727823855235}, {
           0.09994654338883785, -0.24321090868031742`}, {
           0.09994654338883785, -0.42459161119129235`}, {
           0.13390441366625444`, -1.1171139270998227`}, {
           0.3045288698829907, -1.4619280464079347`}, {
           0.48590957239396565`, -1.4619280464079347`}, {
           0.7800599420609375, -0.9427772622361268}, {
           0.9103749628462046, -0.41510852636620993`}, {
           0.9103749628462046, -0.233727823855235}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{0.6075648505252169, -2.9546486694834577`}, {
           0.7889455530361917, -2.9546486694834577`}, {
           1.2812883549670004`, -2.0842472877135942`}, {
           1.2812883549670004`, -1.9028665852026194`}, {
           1.0999076524560254`, -1.9028665852026194`}, {
           0.09994654338883785, -1.91168590224501}, {
           0.09994654338883785, -2.0930666047559847`}}, SplineClosed -> 
           True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{1.8296958409485895`, -2.5194479785985258`}, {
           2.0110765434595645`, -2.5194479785985258`}, {
           2.0110765434595645`, -2.338067276087551}, {
           1.8296958409485895`, -2.338067276087551}}, SplineClosed -> True]]}, 
        {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
         FilledCurveBox[
          BSplineCurve[{{2.559484029441154, -2.5194479785985258`}, {
           2.7408647319521284`, -2.5194479785985258`}, {
           2.7408647319521284`, -2.338067276087551}, {
           2.559484029441154, -2.338067276087551}}, SplineClosed -> True]]}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         StyleBox[{
           LineBox[{{0.819684611590717, -0.32441817511072246`}, {
            0.5310521298598494, -0.5606918409268353}}], 
           LineBox[{{0.819684611590717, -0.32441817511072246`}, {
            0.6893695908054501, -0.8520869109806393}}], 
           BezierCurveBox[{{0.819684611590717, -0.32441817511072246`}, {
            1.1556349888187691`, -0.7132539283997396}, {
            1.627500874864155, -0.7382337070035838}, {
            2.0993667609095406`, -0.7632134856074281}, {
            2.5765073417195024`, -1.115696799319896}},
            SplineDegree->2], 
           LineBox[{{0.5310521298598494, -0.5606918409268353}, {
            0.19063689464432532`, -0.3339012599358049}}], 
           LineBox[{{0.5310521298598494, -0.5606918409268353}, {
            0.6893695908054501, -0.8520869109806393}}], 
           BezierCurveBox[{{0.5310521298598494, -0.5606918409268353}, {
            1.1556349888187691`, -0.7132539283997396}, {
            1.627500874864155, -0.7382337070035838}, {
            2.0993667609095406`, -0.7632134856074281}, {
            2.5765073417195024`, -1.115696799319896}},
            SplineDegree->2], 
           LineBox[{{0.5310521298598494, -0.5606918409268353}, {
            0.2245947649217419, -1.0264235758443352`}}], 
           LineBox[{{2.9747573596771506`, -0.3911181120383904}, {
            2.5765073417195024`, -1.115696799319896}}], 
           LineBox[{{2.9747573596771506`, -0.3911181120383904}, {
            2.505580187631062, -0.40323902845234905`}}], 
           LineBox[{{2.9747573596771506`, -0.3911181120383904}, {
            2.6210610219850627`, -0.19063689464432532`}}], 
           LineBox[{{0.6982552017807043, -2.8639583182279704`}, {
            1.190598003711513, -1.993556936458107}}], 
           LineBox[{{0.6982552017807043, -2.8639583182279704`}, {
            0.19063689464432532`, -2.0023762535004974`}}], 
           LineBox[{{0.19063689464432532`, -0.3339012599358049}, {
            0.6893695908054501, -0.8520869109806393}}], 
           BezierCurveBox[{{0.6893695908054501, -0.8520869109806393}, {
            1.1556349888187691`, -0.7132539283997396}, {
            1.627500874864155, -0.7382337070035838}, {
            2.0993667609095406`, -0.7632134856074281}, {
            2.5765073417195024`, -1.115696799319896}},
            SplineDegree->2], 
           LineBox[{{0.6893695908054501, -0.8520869109806393}, {
            0.2245947649217419, -1.0264235758443352`}}], 
           LineBox[{{0.6893695908054501, -0.8520869109806393}, {
            0.3952192211384782, -1.3712376951524472`}}], 
           BezierCurveBox[{{0.6893695908054501, -0.8520869109806393}, {
            1.1556349888187691`, -0.7132539283997396}, {
            1.627500874864155, -0.7382337070035838}, {
            2.0993667609095406`, -0.7632134856074281}, {
            2.505580187631062, -0.40323902845234905`}},
            SplineDegree->2], 
           BezierCurveBox[{{0.6893695908054501, -0.8520869109806393}, {
            1.1556349888187691`, -0.7132539283997396}, {
            1.627500874864155, -0.7382337070035838}, {
            2.0993667609095406`, -0.7632134856074281}, {
            2.6210610219850627`, -0.19063689464432532`}},
            SplineDegree->2], 
           LineBox[{{2.5409466566627996`, -0.774963602211718}, {
            2.5765073417195024`, -1.115696799319896}}], 
           LineBox[{{2.5409466566627996`, -0.774963602211718}, {
            2.505580187631062, -0.40323902845234905`}}], 
           LineBox[{{2.5409466566627996`, -0.774963602211718}, {
            2.6210610219850627`, -0.19063689464432532`}}], 
           LineBox[{{2.5765073417195024`, -1.115696799319896}, {
            2.8271105999680164`, -1.6122831471694559`}}], 
           LineBox[{{2.5765073417195024`, -1.115696799319896}, {
            2.9986887799005544`, -0.7780800470085804}}], 
           LineBox[{{0.2245947649217419, -1.0264235758443352`}, {
            0.3952192211384782, -1.3712376951524472`}}], 
           LineBox[{{1.190598003711513, -1.993556936458107}, {
            0.19063689464432532`, -2.0023762535004974`}}], 
           LineBox[{{2.9986887799005544`, -0.7780800470085804}, {
            2.505580187631062, -0.40323902845234905`}}], 
           LineBox[{{2.9986887799005544`, -0.7780800470085804}, {
            2.6210610219850627`, -0.19063689464432532`}}], 
           LineBox[{{2.505580187631062, -0.40323902845234905`}, {
            2.6210610219850627`, -0.19063689464432532`}}]},
          ImageSizeMultipliers->1]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         StyleBox[{{
            {Hue[0.14, 1, 0.9], 
             DiskBox[{0.819684611590717, -0.32441817511072246}, 
              0.028847000609063256]}, 
            InsetBox["\<\"AnglePath\"\>", 
             Offset[{2, 2}, {0.8485316121997803, -0.2955711745016592}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{0.5310521298598494, -0.5606918409268353}, 
              0.028847000609063256]}, 
            InsetBox["\<\"AngleVector\"\>", Offset[{2, 2}, 
             {0.5598991304689127, -0.531844840317772}], ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{2.9747573596771506, -0.3911181120383904}, 
              0.028847000609063256]}, 
            InsetBox["\<\"ArcSin\"\>", 
             Offset[{2, 2}, {3.003604360286214, -0.36227111142932716}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{0.6982552017807043, -2.8639583182279704}, 
              0.028847000609063256]}, 
            InsetBox["\<\"AudioGenerator\"\>", 
             Offset[{2, 2}, {0.7271022023897675, -2.835111317618907}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{0.19063689464432532, -0.3339012599358049}, 
              0.028847000609063256]}, 
            InsetBox["\<\"CirclePoints\"\>", 
             Offset[{2, 2}, {0.21948389525338857, -0.30505425932674163}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{0.6893695908054501, -0.8520869109806393}, 
              0.028847000609063256]}, 
            InsetBox["\<\"Cos\"\>", 
             Offset[{2, 2}, {0.7182165914145133, -0.823239910371576}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{2.5409466566627996, -0.774963602211718}, 
              0.028847000609063256]}, 
            InsetBox["\<\"Csc\"\>", 
             Offset[{2, 2}, {2.569793657271863, -0.7461166016026548}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{2.5765073417195024, -1.115696799319896}, 
              0.028847000609063256]}, 
            InsetBox["\<\"Degree\"\>", 
             Offset[{2, 2}, {2.6053543423285657, -1.0868497987108328}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{0.2245947649217419, -1.0264235758443352}, 
              0.028847000609063256]}, 
            InsetBox["\<\"FromPolarCoordinates\"\>", 
             Offset[{2, 2}, {0.25344176553080516, -0.9975765752352719}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.14, 1, 0.9], 
             DiskBox[{0.3952192211384782, -1.3712376951524472}, 
              0.028847000609063256]}, 
            InsetBox["\<\"FromSphericalCoordinates\"\>", 
             Offset[{2, 2}, {0.42406622174754144, -1.3423906945433839}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.07, 1, 1], 
             DiskBox[{1.920386192204077, -2.4287576273430385}, 
              0.028847000609063256]}, 
            InsetBox["\<\"Haversine\"\>", 
             Offset[{2, 2}, {1.9492331928131403, -2.399910626733975}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.2, 1, 0.6], 
             DiskBox[{2.650174380696641, -2.4287576273430385}, 
              0.028847000609063256]}, 
            InsetBox["\<\"RotationMatrix\"\>", 
             Offset[{2, 2}, {2.6790213813057044, -2.399910626733975}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{2.8271105999680164, -1.6122831471694559}, 
              0.028847000609063256]}, 
            InsetBox["\<\"Sinc\"\>", 
             Offset[{2, 2}, {2.8559576005770797, -1.5834361465603926}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{1.190598003711513, -1.993556936458107}, 
              0.028847000609063256]}, 
            InsetBox["\<\"SquareWave\"\>", 
             Offset[{2, 2}, {1.2194450043205762, -1.9647099358490436}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{2.9986887799005544, -0.7780800470085804}, 
              0.028847000609063256]}, 
            InsetBox["\<\"Tan\"\>", 
             Offset[{2, 2}, {3.0275357805096177, -0.7492330463995172}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0.8, 0.6, 0.8], 
             DiskBox[{0.19063689464432532, -2.0023762535004974}, 
              0.028847000609063256]}, 
            InsetBox["\<\"TriangleWave\"\>", 
             Offset[{2, 2}, {0.21948389525338857, -1.973529252891434}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{2.505580187631062, -0.40323902845234905}, 
              0.028847000609063256]}, 
            InsetBox["\<\"TrigExpand\"\>", 
             Offset[{2, 2}, {2.5344271882401253, -0.3743920278432858}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {Hue[0, 1, 0.8], 
             DiskBox[{2.6210610219850627, -0.19063689464432532}, 
              0.028847000609063256]}, 
            InsetBox["\<\"TrigToExp\"\>", 
             Offset[{2, 2}, {2.649908022594126, -0.16178989403526206}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}},
          ImageSizeMultipliers->1]}}},
      BaseStyle->{ImageSizeMultipliers -> 1},
      FormatType->TraditionalForm,
      FrameTicks->None]},
    {
     TemplateBox[{"\"relationship graph\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelationshipGraph\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipGraph\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{
          "AnglePath", "AngleVector", "ArcSin", "AudioGenerator", 
           "CirclePoints", "Cos", "Csc", "Degree", "FromPolarCoordinates", 
           "FromSphericalCoordinates", "Haversine", "RotationMatrix", "Sinc", 
           "SquareWave", "Tan", "TriangleWave", "TrigExpand", "TrigToExp"}, {
          Null, 
           SparseArray[
           Automatic, {18, 18}, 0, {
            1, {{0, 3, 8, 11, 13, 15, 23, 26, 33, 36, 38, 38, 38, 39, 41, 44, 
              46, 51, 56}, {{2}, {6}, {8}, {1}, {5}, {6}, {8}, {9}, {8}, {
              17}, {18}, {14}, {16}, {2}, {6}, {1}, {2}, {5}, {8}, {9}, {
              10}, {17}, {18}, {8}, {17}, {18}, {1}, {2}, {3}, {6}, {7}, {
              13}, {15}, {2}, {6}, {10}, {6}, {9}, {8}, {4}, {16}, {8}, {
              17}, {18}, {4}, {14}, {3}, {6}, {7}, {15}, {18}, {3}, {6}, {
              7}, {15}, {17}}}, Pattern}]}, {
          BaseStyle -> {ImageSizeMultipliers -> 1}, GraphLayout -> 
           "RadialEmbedding", 
           VertexCoordinates -> {{0.6678475326808657, 1.5918193927552018`}, {
            0.4040939431798594, 1.4958209369959687`}, {0.18908004701778425`, 
            1.3154028560283815`}, {0.04873969333893069, 
            1.0723262331044212`}, {0., 0.7959096963776011}, {
            0.0487396933389308, 0.5194931596507804}, {0.18908004701778425`, 
            0.27641653672682065`}, {0.4040939431798592, 
            0.09599845575923338}, {0.667847532680865, 
            3.3306690738754696`*^-16}, {0.9485282400385716, 0.}, {
            1.2122818295395776`, 0.09599845575923249}, {1.427295725701653, 
            0.2764165367268193}, {1.5676360793805069`, 0.5194931596507786}, {
            1.6163757727194383`, 0.7959096963775987}, {1.5676360793805086`, 
            1.0723262331044188`}, {1.427295725701656, 1.315402856028379}, {
            1.2122818295395816`, 1.4958209369959672`}, {0.9485282400385762, 
            1.5918193927552011`}}, VertexLabels -> {"Name"}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
            StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmVmYGCQAWImKP7R/OkkY/xT+wtRE+aIV/y0Z2Wfd33NnZv2+2UD
3z98990eXV7hxIWdGV9W2Au4pMltmP8AQ54Rql/j4ufLUZN3YJjHAAWXwOpf
Ysijm48uT8j8T1D3QGzZYeNhp5R6zPiEfaF/9d3H3F8x9KPLB7duW9iY+tl+
B9Q8dHmLLs+n4VHv7M9C/SsAde9xi9hee42P9hxg83/a74H6D13eY/9PLpNr
3+zToOahhwe6/9H56O5Hl0f3P7o8P9T9MHvR5dH9jy6P7n9Y+DTphvw5t+Ei
zvCFyeMKX5g8uvno5h1pOD+RU/SnPQOO8DgDld8DDW/08ED3P3p8occPunno
7keXR3c/unp0eQD3zLpy
              "]],
             ImageSizeMultipliers->1]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
            
            StyleBox[{{
               DiskBox[{0.6678475326808657, 1.5918193927552018}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"AnglePath\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.685324367734493, 1.6126474737175385},
                 ImageScaled[{0.01790929273509473, -0.07453333233923287}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.4040939431798594, 1.4958209369959687}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"AngleVector\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.38661710812623207, 1.5166490179583054},
                 ImageScaled[{0.9820907072649044, -0.07453333233923365}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.18908004701778425, 1.3154028560283815}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"ArcSin\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.1655335708472611, 1.3289974203839001},
                 ImageScaled[{1.1495190528383286, 0.12499999999999911}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.04873969333893069, 1.0723262331044212}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"AudioGenerator\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.021550564627893405, 1.0723262331044212},
                 ImageScaled[{1.25, 0.4999999999999985}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0., 0.7959096963776011}, 0.01942080622216949], 
               InsetBox[
                StyleBox["\<\"CirclePoints\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {-0.02677606475227634, 0.8006310390306244},
                 ImageScaled[{1.2386058147591559, 0.3697638667498022}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.0487396933389308, 0.5194931596507804}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"Cos\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.02409797426537596, 0.5080025373366777},
                 ImageScaled[{1.1797308402774873, 0.8169636963055247}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.18908004701778425, 0.27641653672682065}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"Csc\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.1623039822655079, 0.2716951940737975},
                 ImageScaled[{1.2386058147591563, 0.6302361332501961}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.4040939431798592, 0.09599845575923338}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"Degree\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.3993726005268359, 0.06922239100695704},
                 ImageScaled[{0.6302361332501991, 1.2386058147591559}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.667847532680865, 3.3306690738754696*^-16}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"FromPolarCoordinates\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.658548302982216, -0.025549423615359675},
                 ImageScaled[{0.7565151074942521, 1.2047694655894312}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.9485282400385716, 0.}, 0.01942080622216949], 
               InsetBox[
                StyleBox["\<\"FromSphericalCoordinates\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.97479092165486, -0.0070370643301602455},
                 ImageScaled[{-0.22444436971680082, 0.6941142838268919}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.2122818295395776, 0.09599845575923249}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"Haversine\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], 
                Offset[{2, 2}, {1.231702635761747, 0.11541926198140198}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.427295725701653, 0.2764165367268193}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"RotationMatrix\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], 
                Offset[{2, 2}, {1.4467165319238224, 0.2958373429489888}], 
                ImageScaled[{0, 0}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.5676360793805069, 0.5194931596507786}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"Sinc\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.5931855029958668, 0.5287923893494275},
                 ImageScaled[{-0.20476946558943177, 0.24348489250574978}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.6163757727194383, 0.7959096963775987}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"SquareWave\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.637203853681775, 0.7784328613239713},
                 ImageScaled[{-0.0745333323392321, 0.9820907072649063}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.5676360793805086, 1.0723262331044188}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"Tan\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.594721745248178, 1.0699565443969465},
                 ImageScaled[{-0.24714602356880888, 0.5653668070607465}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.427295725701656, 1.315402856028379}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"TriangleWave\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.4408902900571747, 1.338949332198902},
                 ImageScaled[{0.12499999999999784, -0.14951905283832767}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{1.2122818295395816, 1.4958209369959672}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"TrigExpand\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {1.2278768730931484, 1.5180929673620498},
                 ImageScaled[{0.06981767273671335, -0.11436403321674238}],
                BaseStyle->"Graphics"]}, {
               DiskBox[{0.9485282400385762, 1.5918193927552011}, 
                0.01942080622216949], InsetBox[
                StyleBox["\<\"TrigToExp\"\>",
                 StripOnInput->False,
                 ImageSizeMultipliers->1], {0.9485282400385763, 1.6190085214662384},
                 ImageScaled[{0.499999999999997, -0.25}],
                BaseStyle->"Graphics"]}},
             ImageSizeMultipliers->1]}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      BaseStyle->{ImageSizeMultipliers -> 1},
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None]},
    {
     TemplateBox[{"\"short notations\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShortNotations\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"ShortNotations\\\"]\""},
      "EntityProperty"], 
     RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]},
    {
     TemplateBox[{"\"subject classifications\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SubjectClassifications\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SubjectClassifications\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"\<\"Mathematics Subject Classification 2010\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"33B10\"\>", ",", "\<\"51Nxx\"\>"}], "}"}]}], "}"}]},
    {
     TemplateBox[{"\"symbols linking to\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SymbolsLinkingTo\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsLinkingTo\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"AnglePath\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AnglePath\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AnglePath\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"AngleVector\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AngleVector\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AngleVector\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"ArcSin\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ArcSin\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ArcSin\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"AudioGenerator\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AudioGenerator\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AudioGenerator\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"CirclePoints\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CirclePoints\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CirclePoints\\\
\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Cos\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cos\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cos\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Csc\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Csc\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Csc\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Degree\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Degree\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Degree\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"FromPolarCoordinates\"", 
         RowBox[{"Entity", "[", 
           
           RowBox[{"\"WolframLanguageSymbol\"", ",", 
             "\"FromPolarCoordinates\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FromPolarCoordinates\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"FromSphericalCoordinates\"", 
         RowBox[{"Entity", "[", 
           
           RowBox[{"\"WolframLanguageSymbol\"", ",", 
             "\"FromSphericalCoordinates\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FromSphericalCoordinates\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Haversine\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Haversine\""}], "]"}],
          "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Haversine\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"RotationMatrix\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotationMatrix\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RotationMatrix\
\\\"]\"", "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"Sinc\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Sinc\""}], "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Sinc\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"SquareWave\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SquareWave\""}], 
           "]"}], 
         "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SquareWave\\\"]\"", 
         "\"Wolfram Language symbol\""},
        "Entity"], ",", 
       TemplateBox[{"\"TriangleWave\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TriangleWave\""}], 
           "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TriangleWave\\\
\"]\"", "\"Wolfram Language symbol\""},
        "Entity"]}], "}"}]},
    {
     TemplateBox[{"\"symbols using as attribute\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsAttribute\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsAttribute\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"symbols using as option\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsOption\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsOption\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", "}"}]},
    {
     TemplateBox[{"\"text strings\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TextStrings\""}], "]"}],
        "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"TextStrings\\\"]\
\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"\<\"Sin[z] gives the sine of z.\"\>", 
       ",", "\<\"Mathematical function, suitable for both symbolic and \
numerical manipulation.\"\>", 
       ",", "\<\"Unless explicitly given as a Quantity object, the argument \
of Sin is assumed to be in radians. (Multiply by Degree to convert from \
degrees.)19487\"\>", 
       ",", "\<\"Sin is automatically evaluated when its argument is a simple \
rational multiple of \[Pi]; for more complicated rational multiples, \
FunctionExpand can sometimes be used.3266\"\>", 
       ",", "\<\"For certain special arguments, Sin automatically evaluates \
to exact values.\"\>", 
       ",", "\<\"Sin can be evaluated to arbitrary numerical precision.\"\>", 
       ",", "\<\"Sin automatically threads over lists.\"\>", 
       ",", "\<\"The argument is given in radians:\"\>", 
       ",", "\<\"Use Degree to specify an argument in degrees:\"\>", 
       ",", "\<\"Plot over a subset of the reals:\"\>", 
       ",", "\<\"Plot over a subset of the complexes:\"\>", 
       ",", "\<\"Series expansion at 0:\"\>", 
       ",", "\<\"Evaluate numerically:\"\>", 
       ",", "\<\"Evaluate to high precision:\"\>", 
       ",", "\<\"The precision of the output tracks the precision of the \
input:\"\>", ",", "\<\"Sin can take complex number inputs:\"\>", 
       ",", "\<\"Evaluate Sin efficiently at high precision:\"\>", 
       ",", "\<\"Sin can deal with real\[Hyphen]valued intervals:\"\>", 
       ",", "\<\"Sin threads elementwise over lists and matrices:\"\>", 
       ",", "\<\"Values of Sin at fixed points:\"\>", 
       ",", "\<\"Sin has exact values at rational multiples of pi:\"\>", 
       ",", "\<\"Values at infinity:\"\>", 
       ",", "\<\"Simple exact values are generated automatically:\"\>", 
       ",", "\<\"More complicated cases require explicit use of \
FunctionExpand:\"\>", ",", "\<\"Zeros of Sin:\"\>", 
       ",", "\<\"Extrema of Sin:\"\>", 
       ",", "\<\"Find the first positive maximum as a root of (d sin(x))/dx\
\[LongEqual]0:\"\>", ",", "\<\"Substitute in the result:\"\>", 
       ",", "\<\"Visualize the result:\"\>", 
       ",", "\<\"Plot the Sin function:\"\>", 
       ",", "\<\"Plot the real part of sin(x+\[ImaginaryI] y):\"\>", 
       ",", "\<\"Plot the imaginary part of sin(x+\[ImaginaryI] y):\"\>", 
       ",", "\<\"Polar plot with r=sin(k \[Phi]):\"\>", 
       ",", "\<\"Sin is defined for all real and complex values:\"\>", 
       ",", "\<\"Sin achieves all real values between -1 and 1:\"\>", 
       ",", "\<\"The range for complex values is the whole plane:\"\>", 
       ",", "\<\"Sin is a periodic function with a period 2 \[Pi]:\"\>", 
       ",", "\<\"Sin is an odd function:\"\>", 
       ",", "\<\"Sin has the mirror property \
sin(z^*)\[LongEqual]sin(z)^*:\"\>", 
       ",", "\<\"TraditionalForm formatting:\"\>", 
       ",", "\<\"First derivative:\"\>", ",", "\<\"Higher derivatives:\"\>", 
       ",", "\<\"Formula for the n\[Null]^th derivative:\"\>", 
       ",", "\<\"Compute the indefinite integral using Integrate:\"\>", 
       ",", "\<\"Definite integral of Sin over a period is 0:\"\>", 
       ",", "\<\"More integrals:\"\>", 
       ",", "\<\"Find the Taylor expansion using Series:\"\>", 
       ",", "\<\"Plots of the first three approximations for Sin around \
x=0:\"\>", 
       ",", "\<\"General term in the series expansion using \
SeriesCoefficient:\"\>", ",", "\<\"Fourier series:\"\>", 
       ",", "\<\"Sin can be applied to power series:\"\>", 
       ",", "\<\"Compute the Fourier transform using FourierTransform:\"\>", 
       ",", "\<\"LaplaceTransform:\"\>", ",", "\<\"MellinTransform:\"\>", 
       ",", "\<\"Double-angle formula using TrigExpand:\"\>", 
       ",", "\<\"Angle sum formula:\"\>", 
       ",", "\<\"Multiple\[Hyphen]angle expressions:\"\>", 
       ",", "\<\"Recover the original expression using TrigReduce:\"\>", 
       ",", "\<\"Convert sums to products using TrigFactor:\"\>", 
       ",", "\<\"Expand using ComplexExpand assuming real variables x and \
y:\"\>", ",", "\<\"Convert to exponentials using TrigToExp:\"\>", 
       ",", "\<\"Use Simplify to find a representation through Cos:\"\>", 
       ",", "\<\"Representation through Bessel functions:\"\>", 
       ",", "\<\"Representation through SphericalHarmonicY:\"\>", 
       ",", "\<\"Representation in terms of MeijerG:\"\>", 
       ",", "\<\"Sin can be represented as a DifferentialRoot:\"\>", 
       ",", "\<\"Draw a circle:\"\>", ",", "\<\"Lissajous figure:\"\>", 
       ",", "\<\"Equiangular (logarithmic) spiral:\"\>", 
       ",", "\<\"Motion in a circle:\"\>", 
       ",", "\<\"Play a pure tone at 440 Hz:\"\>", 
       ",", "\<\"Solve an equation for harmonic motion:\"\>", 
       ",", "\<\"Rotation matrix:\"\>", ",", "\<\"Rotate a vector:\"\>", 
       ",", "\<\"Plot a sphere:\"\>", ",", "\<\"Plot a torus:\"\>", 
       ",", "\<\"Waves:\"\>", ",", "\<\"Triple\[Hyphen]periodic surface:\"\>",
        ",", "\<\"Approximate the almost nowhere differentiable \
Riemann\[Dash]Weierstrass function:\"\>", 
       ",", "\<\"Basic parity and periodicity properties are automatically \
applied:\"\>", 
       ",", "\<\"Complicated expressions containing trigonometric functions \
do not simplify automatically:\"\>", 
       ",", "\<\"Compose with inverse functions:\"\>", 
       ",", "\<\"Solve a trigonometric equation:\"\>", 
       ",", "\<\"Numerically find a root of a transcendental equation:\"\>", 
       ",", "\<\"Reduce a trigonometric equation:\"\>", 
       ",", "\<\"Fourier transform:\"\>", 
       ",", "\<\"Sin appears in special cases of many mathematical functions:\
\"\>", ",", "\<\"Sin is a numeric function:\"\>", 
       ",", "\<\"Sin can be represented as a DifferentialRoot:\"\>", 
       ",", "\<\"The generating function for Sin:\"\>", 
       ",", "\<\"The exponential generating function for Sin:\"\>", 
       ",", "\<\"Machine-precision input is insufficient to get a correct \
answer:\"\>", ",", "\<\"With exact input, the answer is correct:\"\>", 
       ",", "\<\"A larger setting for $MaxExtraPrecision can be needed:\"\>", 
       ",", "\<\"Machine\[Hyphen]number inputs can give \
high\[Hyphen]precision results:\"\>", 
       ",", "\<\"Use FunctionExpand to express sine of rationals times \[Pi] \
using radicals:\"\>", 
       ",", "\<\"Continuous functions involving Sin[x] can give discontinuous \
indefinite integrals:\"\>", 
       ",", "\<\"In TraditionalForm, parentheses are needed around the \
argument:\"\>", 
       ",", "\<\"Noncommensurate waves (quasiperiodic function):\"\>", 
       ",", "\<\"Some arguments can be expressed as a finite sequence of \
nested radicals:\"\>", ",", "\<\"Indefinite integral of sin(x^n):\"\>", 
       ",", "\<\"Chladni figure:\"\>", 
       ",", "\<\"Plot Sin at integer points:\"\>", 
       ",", "\<\"Sin is the sine function, which is one of the basic \
functions encountered in trigonometry. It is defined for real numbers by \
letting x be a radian angle measured counterclockwise from the x axis along \
the circumference of the unit circle. Sin[x] then gives the vertical \
coordinate of the arc endpoint. The equivalent schoolbook definition of the \
sine of an angle \[Theta] in a right triangle is the ratio of the length of \
the leg opposite \[Theta] to the length of the hypotenuse.\"\>", 
       ",", "\<\"Sin automatically evaluates to exact values when its \
argument is a simple rational multiple of \[Pi]. For more complicated \
rational multiples, FunctionExpand can sometimes be used to obtain an \
explicit exact value. To specify an argument using an angle measured in \
degrees, the symbol Degree can be used as a multiplier (e.g. Sin[30 Degree]). \
When given exact numeric expressions as arguments, Sin may be evaluated to \
arbitrary numeric precision. Other operations useful for manipulation of \
symbolic expressions involving Sin include TrigToExp, TrigExpand, Simplify, \
and FullSimplify.\"\>", 
       ",", "\<\"Sin threads element-wise over lists and matrices. In \
contrast, MatrixFunction can be used to give the sine of a square matrix \
(i.e. the power series for the sine function with ordinary powers replaced by \
matrix powers).\"\>", ",", 
       "\"\<Sin is periodic with period 2\[Pi], as reported by \
FunctionPeriod. Sin satisfies the identity sin^2(x)+cos^2(x)\[LongEqual]1, \
which is equivalent to the Pythagorean theorem. The definition of the sine \
function is extended to complex arguments z using the definition sin(z)\
\[LongEqual]1/2 \[ImaginaryI](\[ExponentialE]^(-\[ImaginaryI] z)-\
\[ExponentialE]^(\[ImaginaryI] z)), where \[ExponentialE] is the base of the \
natural logarithm. The sine function is entire, meaning it is complex \
differentiable at all finite points of the complex plane. Sin[z] has series \
expansion \\!\\(\>\"", 
       ",", "\<\"\\*UnderoverscriptBox[\\(\[Sum]\\), \\(k = 0\\), \\(\
\[Infinity]\\)]\\(\"\>", ",", "\<\"\\*FractionBox[\"\>", 
       ",", "\<\"SuperscriptBox[\\((\\(-1\\))\\), \\(k - 1\\)], \\(\\((2\\\\ \
k - 1)\\)!\\)]\"\>", 
       ",", "\<\"\\*SuperscriptBox[\\(z\\), \\(2\\\\ k - 1\\)]\\)\\) about \
the origin.\"\>", 
       ",", "\<\"The inverse function of Sin is ArcSin. The hyperbolic sine \
is given by Sinh. Other related mathematical functions include Cos, Tan, and \
Csc.\"\>"}], "}"}]},
    {
     TemplateBox[{"\"timeline\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Timeline\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Timeline\\\"]\""},
      "EntityProperty"], 
     GraphicsBox[{
       {AbsolutePointSize[0], Opacity[0], 
        PointBox[
         NCache[{{2.7769824*^9, 1}, {3.803195232*^9, Rational[21, 4]}}, {{
           2.7769824*^9, 1}, {3.803195232*^9, 5.25}}]], 
        PointBox[
         NCache[{{2.7769824*^9, Rational[-1, 2]}, {3.803195232*^9, 0}}, {{
           2.7769824*^9, -0.5}, {3.803195232*^9, 0}}]]}, {}, {
        {PointSize[0], Opacity[0], 
         PointBox[
          NCache[{{2.7533277762336*^9, 1}, {
            3.7378469852352*^9, Rational[19, 4]}}, {{2.7533277762336*^9, 1}, {
            3.7378469852352*^9, 4.75}}]]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
         AbsoluteThickness[1.6], Opacity[1], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               Directive[
                EdgeForm[
                 Directive[
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  Thickness[Large], 
                  Opacity[0.2]]], 
                FaceForm[{
                  RGBColor[
                  0.24561133333333335`, 0.3378526666666667, 
                   0.4731986666666667], 
                  Opacity[1]}], 
                CapForm["Round"], 
                AbsoluteThickness[2.5], 
                AbsolutePointSize[10], 
                FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{{
                 Directive[
                  Opacity[0.2]], {
                  Directive[
                   Opacity[0.2]], 
                  EdgeForm[], 
                  
                  RectangleBox[{2792016000, 1}, {3636662400, 
                   1}]}}, {{}, {{{{}, {{{
                    GrayLevel[1], 
                    AbsoluteThickness[2], 
                    LineBox[{{
                    Offset[{0, -1}, {2792016000, 1}], 
                    Offset[{0, -1}, {3636662400, 1}]}, {
                    Offset[{0, 1}, {2792016000, 1}], 
                    Offset[{0, 1}, {3636662400, 1}]}}]}, {
                    AbsolutePointSize[10], 
                    GrayLevel[1], 
                    PointBox[{{2792016000, 1}, {3636662400, 1}}]}, 
                    PointBox[{{2792016000, 1}, {3636662400, 1}}], 
                    LineBox[{{2792016000, 1}, {3636662400, 1}}]}}, {}, {{
                    AbsolutePointSize[4], 
                    GrayLevel[1], 
                    
                    PointBox[{{2792016000, 1}, {3636662400, 
                    1}}]}}}, {}}, {{}, {}}}}}, {{
                 CapForm["Butt"], 
                 LineBox[{{2792016000, 3}, 
                   Offset[{0, 3}, {2792016000, 1}]}], 
                 PolygonBox[
                  NCache[{
                    Offset[{0, 
                    Rational[-16, 3]}, {2792016000, 3}], 
                    Offset[{
                    Rational[16, 3], 1.5}, {2792016000, 3}], 
                    Offset[{
                    Rational[-16, 3], 1.5}, {2792016000, 3}]}, {
                    Offset[{0, -5.333333333333333}, {2792016000, 3}], 
                    Offset[{5.333333333333333, 1.5}, {2792016000, 3}], 
                    Offset[{-5.333333333333333, 1.5}, {2792016000, 3}]}]], 
                 InsetBox[
                  BoxData[
                   FormBox[
                    FrameBox[
                    StyleBox["\"Sin\"", {
                    GrayLevel[0.3]}, StripOnInput -> False], RoundingRadius -> 
                    5, FrameMargins -> 5, Background -> GrayLevel[1], 
                    StripOnInput -> False], TraditionalForm]], 
                  Offset[{0, 0}, {2792016000, 3}], {Center, Bottom}, {
                  Automatic, Automatic}]}, {
                 EdgeForm[], 
                 FaceForm[], 
                 RectangleBox[{2.7533277762336*^9, 3}, 
                  NCache[{2.8307042237664*^9, 
                    Rational[17, 4]}, {2.8307042237664*^9, 4.25}]]}}}},
             
             ImageSizeCache->{{19.339155312267167`, 
              482.9107983438664}, {-46.677274534342615`, 
              23.910798343866418`}}],
            "DelayedMouseEffectStyle"],
           StyleBox[
            TagBox[
             GridBox[{{"\"start: \"", 
                TemplateBox[{
                  RowBox[{
                    StyleBox[
                    "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                    Plain], "\"06/23/1988\""}], 
                  RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1988", ",", "6", ",", "23"}], "}"}], ",", 
                    "\"Day\"", ",", "\"Gregorian\"", ",", 
                    RowBox[{"-", "3.`"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
                 Editable -> False]}, {"\"end: \"", 
                TemplateBox[{
                  RowBox[{
                    StyleBox[
                    "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                    Plain], "\"03/30/2015\""}], 
                  RowBox[{"DateObject", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2015", ",", "3", ",", "30"}], "}"}], ",", 
                    "\"Day\"", ",", "\"Gregorian\"", ",", 
                    RowBox[{"-", "3.`"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
                 Editable -> False]}}, RowSpacings -> 1, ColumnSpacings -> 0, 
              RowAlignments -> Baseline, ColumnAlignments -> Right], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, TableAlignments -> Right, 
               TableSpacing -> {1, 0}]]], {}, StripOnInput -> False]],
          Annotation[#, 
           Style[
            TableForm[{{"start: ", 
               
               DateObject[{1988, 6, 23}, "Day", "Gregorian", -3., {
                "Month", "/", "Day", "/", "Year"}]}, {"end: ", 
               
               DateObject[{2015, 3, 30}, "Day", "Gregorian", -3., {
                "Month", "/", "Day", "/", "Year"}]}}, TableAlignments -> 
             Right, TableSpacing -> {1, 0}], {}], "Tooltip"]& ]}, {{{{}, 
           InsetBox[
            StyleBox["\<\"V10.1\"\>",
             StripOnInput->False,
             LineColor->GrayLevel[0],
             FrontFaceColor->GrayLevel[0],
             BackFaceColor->GrayLevel[0],
             GraphicsColor->GrayLevel[0],
             FontColor->GrayLevel[0]], Offset[{6, 0}, {3636662400, 1}], 
            ImageScaled[{0, 0.5}]]}, InsetBox[
           StyleBox["\<\"V1\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontColor->GrayLevel[0]], Offset[{-6, 0}, {2792016000, 1}], 
           ImageScaled[{1, 0.5}]]}, {}}}, {}, {}},
      AspectRatio->NCache[
        Rational[181, 1200], 0.15083333333333335`],
      Axes->{False, False},
      AxesOrigin->{0, 0},
      Frame->{{None, None}, {True, None}},
      FrameTicks->
       FrontEndValueCache[{{None, None}, {
         Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 7, {{0.01, 0}, {0.005, 0}}, Automatic]& , 
          Automatic}}, {{None, None}, {{{2.5245216*^9, 
            FormBox["\"1980\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {2.8401408*^9, 
            FormBox["\"1990\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.1556736*^9, 
            FormBox["\"2000\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.4712928*^9, 
            FormBox["\"2010\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {3.7868256*^9, 
            FormBox["\"2020\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {4.1024448*^9, 
            FormBox["\"2030\"", TraditionalForm], {0.006666666666666666, 
            0.}}, {2.5245216*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.58768*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.650752*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.7139104*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.7769824*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.8401408*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.9032128*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {2.9663712*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.0294432*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.0926016*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.1556736*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.218832*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.281904*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.3450624*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.4081344*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.4712928*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.5343648*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.5975232*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.6605952*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.7237536*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.7868256*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}, {3.849984*^9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
            0.006666666666666666, 0.}}}, Automatic}}],
      GridLines->{None, None},
      ImagePadding->All,
      ImageSize->{600, Automatic},
      PlotRange->{{2.7769824*^9, 3.803195232*^9}, {0, All}},
      PlotRangePadding->{{
         Scaled[0.06], 
         Scaled[0.06]}, {None, 
         Scaled[0.05]}},
      Ticks->{{{2.5245216*^9, 
          FormBox["\"1980\"", TraditionalForm], {0.006666666666666666, 0}}, {
         2.8401408*^9, 
          FormBox["\"1990\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.1556736*^9, 
          FormBox["\"2000\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.4712928*^9, 
          FormBox["\"2010\"", TraditionalForm], {0.006666666666666666, 0}}, {
         3.7868256*^9, 
          FormBox["\"2020\"", TraditionalForm], {0.006666666666666666, 0}}, {
         4.1024448*^9, 
          FormBox["\"2030\"", TraditionalForm], {0.006666666666666666, 0}}, {
         2.5245216*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.58768*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.650752*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.7139104*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.7769824*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.8401408*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.9032128*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {2.9663712*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.0294432*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.0926016*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.1556736*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.218832*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.281904*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.3450624*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.4081344*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.4712928*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.5343648*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.5975232*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.6605952*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.7237536*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.7868256*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}, {3.849984*^9, 
          FormBox[
           TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
          0.006666666666666666, 0}}}, None}]},
    {
     TemplateBox[{"\"timeline events\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TimelineEvents\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TimelineEvents\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
       RowBox[{"Interval", "[", 
         RowBox[{"{", 
           RowBox[{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"Thu 23 Jun 1988\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1988", ",", "6", ",", "23"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "3.`"}]}], "]"}]}, "DateObject", Editable -> 
              False], ",", 
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"Mon 30 Mar 2015\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2015", ",", "3", ",", "30"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "3.`"}]}], "]"}]}, "DateObject", Editable -> 
              False]}], "}"}], "]"}], "\"Sin\""},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]},
    {
     TemplateBox[{"\"translations\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Translations\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Translations\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"Simplified Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"SimplifiedChinese::zzc7y\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \
\\\"SimplifiedChinese::zzc7y\\\"]\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6b63\:5f26\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Traditional Chinese\"", 
          RowBox[{"Entity", "[", 
            
            RowBox[{"\"WritingScript\"", ",", 
              "\"TraditionalChinese::bjw79\""}], "]"}], 
          "\"Entity[\\\"WritingScript\\\", \\\"TraditionalChinese::bjw79\\\"]\
\"", "\"writing script\""},
         "Entity"], "\[Rule]", "\<\"\:6b63\:5f26\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"French\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"French\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"French\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"sinus\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"German\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"German\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"German\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"Sinus\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Modern Greek\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Greek\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Greek\\\"]\"", "\"language\""},
         "Entity"], 
        "\[Rule]", \
"\<\"\[Eta]\[Mu]\:03af\[Tau]\[Omicron]\[Nu]\[Omicron]\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Japanese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Japanese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Japanese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:6b63\:5f26\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Korean\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Korean\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Korean\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:c0ac\:c778\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Lithuanian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Lithuanian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Lithuanian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"sinusas\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Polish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Polish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Polish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"sinus\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Portuguese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Portuguese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Portuguese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"seno\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Russian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Russian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Russian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0441\:0438\:043d\:0443\:0441\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Spanish\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Spanish\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Spanish\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"seno\"\>"}], ",", 
       RowBox[{
        TemplateBox[{"\"Ukrainian\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Ukrainian\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Ukrainian\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"\:0441\:0438\:043d\:0443\:0441\"\>"}], 
       ",", 
       RowBox[{
        TemplateBox[{"\"Vietnamese\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"Language\"", ",", "\"Vietnamese\""}], "]"}], 
          "\"Entity[\\\"Language\\\", \\\"Vietnamese\\\"]\"", "\"language\""},
         "Entity"], "\[Rule]", "\<\"sin\"\>"}]}], "}"}]},
    {
     TemplateBox[{"\"typeset usage\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TypesetUsage\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TypesetUsage\\\"]\""},
      "EntityProperty"], 
     InterpretationBox[Cell[BoxData[
       FormBox[
        TagBox[GridBox[{
           {"\<\"\\!\\(\\*RowBox[{\\\"Sin\\\", \\\"[\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives the sine of \\!\\(\\*StyleBox[\\\"z\\\", \\\
\"TI\\\"]\\). \"\>"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {None, {
               GrayLevel[0.84]}, None}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{0.8}}}],
         "Grid"], TextForm]], "InlineText",ExpressionUUID->
       "be667809-2154-4d6d-993e-ab043fc02af3"],
      Text[
       Grid[{{
         "\!\(\*RowBox[{\"Sin\", \"[\", StyleBox[\"z\", \"TI\"], \"]\"}]\) \
gives the sine of \!\(\*StyleBox[\"z\", \"TI\"]\). "}}, 
        Dividers -> {None, {None, {
            GrayLevel[0.84]}, None}}, Alignment -> Left, 
        Spacings -> {Automatic, 0.8}]]]},
    {
     TemplateBox[{"\"URL\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"URL\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"URL\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{
      "\"http://reference.wolfram.com/language/ref/Sin.html\"", 
       "http://reference.wolfram.com/language/ref/Sin.html"},
      "HyperlinkURL"]},
    {
     TemplateBox[{"\"version introduced\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionIntroduced\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionIntroduced\\\"]\""},
      "EntityProperty"], "1"},
    {
     TemplateBox[{"\"version last modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"VersionLastModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionLastModified\\\"]\""},
      "EntityProperty"], "10.1`"},
    {
     TemplateBox[{"\"versions modified\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionsModified\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionsModified\\\"]\""},
      "EntityProperty"], 
     RowBox[{"{", 
      RowBox[{"4", ",", "10", ",", "10.1`"}], "}"}]},
    {
     TemplateBox[{"\"Wolfram documentation link\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", "\"WolframDocumentationLink\""}], 
         "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"WolframDocumentationLink\\\"]\""},
      "EntityProperty"], 
     TemplateBox[{"\"Sin\"", "paclet:ref/Sin"},
      "HyperlinkPaclet"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803213189140237*^9, 3.8032132066818542`*^9}, {
   3.80321323715899*^9, 3.803213328619986*^9}, 3.803213396130488*^9},
 CellLabel->
  "Out[562]=",ExpressionUUID->"01e6bbbf-b41b-4e52-b37a-124754aa01e1"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"numericFunctionSymbols", "=", 
   RowBox[{"Select", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"wlSymbols", ",", 
         RowBox[{"EntityValue", "[", 
          RowBox[{"wlSymbols", ",", 
           TemplateBox[{"\"attributes\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Attributes\""}], 
               "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Attributes\\\"]\""},
            "EntityProperty"]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{
         RowBox[{"Last", "@", "#"}], ",", 
         TemplateBox[{"\"NumericFunction\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"WolframLanguageSymbol\"", ",", 
               "\"NumericFunction\""}], "]"}], 
           "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"NumericFunction\\\"]\"", "\"Wolfram Language symbol\""},
          "Entity"]}], "]"}], ">", "0"}], "&"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8032137069164877`*^9, 3.803213839060267*^9}, 
   3.803213913892661*^9, {3.8032140127722692`*^9, 3.8032140210816402`*^9}, {
   3.803214166441154*^9, 3.803214204790757*^9}, {3.8032955497976427`*^9, 
   3.803295565345871*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"54ba7959-696d-404c-890b-85bd89dc1e3c"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with triangles", "Subsection",
 CellChangeTimes->{{3.803298347260371*^9, 
  3.803298359468196*^9}},ExpressionUUID->"6d32df38-2cda-45ea-a037-\
15cb64d8121d"],

Cell[CellGroupData[{

Cell["TrianglePointsQ", "Subsubsection",
 CellChangeTimes->{{3.803316262455061*^9, 3.803316279202623*^9}, 
   3.803486324327113*^9, {3.803502371055654*^9, 3.803502372339592*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"d5efb665-5eb1-4ee9-bf9f-9f28260885c9"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TrianglePointsQ"}]], "Input",
 CellChangeTimes->{{3.803559194112567*^9, 3.8035592035664473`*^9}, 
   3.803559262858386*^9},
 CellLabel->
  "In[127]:=",ExpressionUUID->"29350de8-6dea-4ddc-920c-12caa9149c18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TrianglePointsQ", "[", 
    RowBox[{"a_List", ",", "b_List", ",", "c_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ResourceFunction", "[", "\"\<TriangleEdgesQ\>\"", "]"}], "@", 
     RowBox[{"(", 
      RowBox[{"EuclideanDistance", "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "c"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "a"}], "}"}]}], "}"}]}], ")"}]}], "/;", 
    RowBox[{
     RowBox[{
      RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
      RowBox[{"Dimensions", "[", "b", "]"}], "\[Equal]", 
      RowBox[{"Dimensions", "[", "c", "]"}]}], "&&", 
     RowBox[{"ContainsOnly", "[", 
      RowBox[{
       RowBox[{"NumericQ", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}]}], ",", 
       RowBox[{"{", "True", "}"}]}], "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrianglePointsQ", "[", "points_List", "]"}], ":=", 
  RowBox[{
   RowBox[{"TrianglePointsQ", "@@", "points"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "points", "]"}], "\[Equal]", "3"}]}]}]}], "Input",
 CellChangeTimes->{{3.803559271208342*^9, 3.803559274714995*^9}, {
  3.803561134753915*^9, 3.803561165957547*^9}, {3.8035612029248734`*^9, 
  3.803561204852294*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"69f4bd15-ff47-46ca-aec5-6b49b6ee094f"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803558445627674*^9, 3.803558454195136*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"566b57ca-9988-4076-b656-c4350b86a8f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Polygon", "@", "#"}], ",", 
       RowBox[{"TrianglePointsQ", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8035584784772243`*^9, 3.803558520116508*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"00533734-f9c9-4389-9237-8b8149f0fe02"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 1}, {0, 0}, {1, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {0, 0}, {1, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {0, 0}, {1, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 1}, {0, 0}, {1, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 3}, {0, 3}, {2, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 3}, {0, 3}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 3}, {0, 3}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 3}, {0, 3}, {2, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 3}, {1, 3}, {1, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 3}, {1, 3}, {1, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 3}, {1, 3}, {1, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 3}, {1, 3}, {1, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 2}, {3, 0}, {2, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {3, 0}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {3, 0}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 2}, {3, 0}, {2, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 2}, {2, 3}, {3, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 2}, {2, 3}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 2}, {2, 3}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 2}, {2, 3}, {3, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 3}, {3, 2}, {2, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 3}, {3, 2}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 3}, {3, 2}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 3}, {3, 2}, {2, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 2}, {1, 3}, {2, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {1, 3}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {1, 3}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 2}, {1, 3}, {2, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 2}, {2, 0}, {0, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 2}, {2, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 2}, {2, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 2}, {2, 0}, {0, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 2}, {2, 1}, {3, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {2, 1}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {2, 1}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 2}, {2, 1}, {3, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 1}, {3, 0}, {0, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {3, 0}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {3, 0}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 1}, {3, 0}, {0, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803558509423962*^9, 3.803558520841735*^9}, 
   3.803559283007052*^9, 3.803561210957842*^9, 3.803561615844853*^9, 
   3.8035617873152933`*^9, 3.803562157678935*^9, 3.80360276743559*^9, 
   3.80364182015889*^9, 3.80364210675716*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"748a8447-5fe0-4670-b9da-fc3dd6cf9904"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TrianglePolygonQ", "Subsubsection",
 CellChangeTimes->{{3.803489201081764*^9, 3.803489213877187*^9}, {
  3.8034961208962183`*^9, 3.8034961217757883`*^9}, {3.803502375321741*^9, 
  3.803502376784596*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c6b4fa2d-8e49-44e4-b492-893dc8e2b801"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TrianglePolygonQ"}]], "Input",
 CellChangeTimes->{{3.803559290206485*^9, 3.803559291211048*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"c21970be-92e9-4ead-b0df-999c120af4e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrianglePolygonQ", "[", "polygon_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TrianglePointsQ", "[", 
    RowBox[{"PolygonCoordinates", "@", "polygon"}], "]"}], "/;", 
   RowBox[{
    RowBox[{"SimplePolygonQ", "@", "polygon"}], "&&", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"PolygonCoordinates", "@", "polygon"}], "]"}], "\[Equal]", 
     "3"}]}]}]}]], "Input",
 CellChangeTimes->{{3.803561224421776*^9, 3.803561252835363*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"30c325ac-de5b-40e5-9fe5-288bb37fbb4d"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803558532577421*^9, 3.80355853472292*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"eba4c279-37d7-41dd-a240-8737b47b09e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"TrianglePolygonQ", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Polygon", "/@", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"3", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803558559043276*^9, 3.803558570092257*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"fceb9cc2-a693-4116-a099-58f215ed9bcc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 1}, {0, 2}, {3, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {0, 2}, {3, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {0, 2}, {3, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 1}, {0, 2}, {3, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 0}, {1, 1}, {2, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {1, 1}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {1, 1}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 0}, {1, 1}, {2, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 1}, {3, 2}, {0, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {3, 2}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {3, 2}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 1}, {3, 2}, {0, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 0}, {0, 0}, {2, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {0, 0}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {0, 0}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 0}, {0, 0}, {2, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 3}, {0, 0}, {0, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 0}, {0, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 0}, {0, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 3}, {0, 0}, {0, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 2}, {0, 1}, {0, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {0, 1}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {0, 1}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 2}, {0, 1}, {0, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 1}, {0, 2}, {3, 2}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {0, 2}, {3, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {0, 2}, {3, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 1}, {0, 2}, {3, 2}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 1}, {3, 0}, {1, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {3, 0}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {3, 0}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 1}, {3, 0}, {1, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 0}, {1, 0}, {0, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {1, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {1, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 0}, {1, 0}, {0, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 0}, {3, 0}, {0, 2}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 0}, {3, 0}, {0, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 0}, {3, 0}, {0, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 0}, {3, 0}, {0, 2}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803558573449705*^9, 3.8035593150476522`*^9, 
  3.80356127415044*^9, 3.8035617875029097`*^9, 3.803562174213232*^9, 
  3.8036027703147182`*^9, 3.803602801875657*^9, 3.8036418203373127`*^9, 
  3.8036421093255587`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"d5ff46ee-295d-494e-af48-64e55505faed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics", "@", "#"}], ",", 
       RowBox[{"TrianglePolygonQ", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RegularPolygon", "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"3", ",", "5"}], "]"}]}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8035585949578342`*^9, 3.8035586927716303`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"125a29fb-a66c-4fed-91cb-09a7750c3455"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      InterpretationBox[
       PolygonBox[
        NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {0, 1}, {
          Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
          0.8660254037844386, -0.5}, {0, 1}, {-0.8660254037844386, -0.5}}]],
       RegularPolygon[3]]], "True"},
    {
     GraphicsBox[
      InterpretationBox[
       PolygonBox[
        NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
           Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}, {-0.7071067811865475, 
         0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}]],
       RegularPolygon[4]]], 
     RowBox[{"TrianglePolygonQ", "[", 
      RowBox[{"RegularPolygon", "[", "4", "]"}], "]"}]},
    {
     GraphicsBox[
      InterpretationBox[
       PolygonBox[
        NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 
          1}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2], 
           Rational[1, 4] (-1 + 
            5^Rational[1, 2])}, {-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
          0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
          0.30901699437494745`}, {0, 1}, {-0.9510565162951535, 
          0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}}]],
       RegularPolygon[5]]], 
     RowBox[{"TrianglePolygonQ", "[", 
      RowBox[{"RegularPolygon", "[", "5", "]"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803558608986199*^9, 3.8035586936988697`*^9}, 
   3.803559323870923*^9, 3.80356129234101*^9, 3.8035617875854073`*^9, 
   3.803562179390163*^9, 3.803602770355847*^9, 3.803602801900136*^9, 
   3.803641820374837*^9, 3.8036421093519793`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"b99de98b-0c0c-420b-905b-e91397194d51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics", "@", "#"}], ",", 
       RowBox[{"TrianglePolygonQ", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomPolygon", "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"3", ",", "5"}], "]"}]}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8035587044982443`*^9, 3.803558708717951*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"f69955aa-112a-49db-9e41-ff005ac80593"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      PolygonBox[{{0.1562314624322929, 0.09215592245850601}, {
       0.9932809919336674, 0.41720283200206065`}, {0.5737085569334177, 
       0.7238244243862475}}, {1, 2, 3}]], "True"},
    {
     GraphicsBox[
      PolygonBox[{{0.3486668662764858, 0.9103837323393689}, {
       0.25831503306832415`, 0.4403640686499153}, {0.9530508671603755, 
       0.8543850930344095}, {0.5399069583231237, 0.9426850931350172}}, {1, 2, 
       3, 4}]], 
     RowBox[{"TrianglePolygonQ", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["Polygon",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready", Typeset`spolygon$$ = 
         Polygon[{{0.3486668662764858, 0.9103837323393689}, {
          0.25831503306832415`, 0.4403640686499153}, {0.9530508671603755, 
          0.8543850930344095}, {0.5399069583231237, 0.9426850931350172}}, {1, 
          2, 3, 4}]}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.3486668662764858, 0.9103837323393689}, {
                    0.25831503306832415`, 0.4403640686499153}, {
                    0.9530508671603755, 0.8543850930344095}, {
                    0.5399069583231237, 0.9426850931350172}}, {1, 2, 3, 4}]}, 
                  ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.3486668662764858, 0.9103837323393689}, {
                    0.25831503306832415`, 0.4403640686499153}, {
                    0.9530508671603755, 0.8543850930344095}, {
                    0.5399069583231237, 0.9426850931350172}}, {1, 2, 3, 4}]}, 
                  ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       Polygon[{{0.3486668662764858, 0.9103837323393689}, {
        0.25831503306832415`, 0.4403640686499153}, {0.9530508671603755, 
        0.8543850930344095}, {0.5399069583231237, 0.9426850931350172}}, {1, 2,
         3, 4}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{0.8075581305062725, 0.045352985416278635`}, {
       0.7138979234617027, 0.9592803133542116}, {0.24342770773964495`, 
       0.9880685013016122}, {0.2924517591975153, 0.2067054111639035}, {
       0.4190933683129099, 0.12392032720380919`}}, {1, 2, 3, 4, 5}]], 
     RowBox[{"TrianglePolygonQ", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["Polygon",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready", Typeset`spolygon$$ = 
         Polygon[{{0.8075581305062725, 0.045352985416278635`}, {
          0.7138979234617027, 0.9592803133542116}, {0.24342770773964495`, 
          0.9880685013016122}, {0.2924517591975153, 0.2067054111639035}, {
          0.4190933683129099, 0.12392032720380919`}}, {1, 2, 3, 4, 5}]}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.8075581305062725, 0.045352985416278635`}, {
                    0.7138979234617027, 0.9592803133542116}, {
                    0.24342770773964495`, 0.9880685013016122}, {
                    0.2924517591975153, 0.2067054111639035}, {
                    0.4190933683129099, 0.12392032720380919`}}, {1, 2, 3, 4, 
                    5}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.8075581305062725, 0.045352985416278635`}, {
                    0.7138979234617027, 0.9592803133542116}, {
                    0.24342770773964495`, 0.9880685013016122}, {
                    0.2924517591975153, 0.2067054111639035}, {
                    0.4190933683129099, 0.12392032720380919`}}, {1, 2, 3, 4, 
                    5}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       Polygon[{{0.8075581305062725, 0.045352985416278635`}, {
        0.7138979234617027, 0.9592803133542116}, {0.24342770773964495`, 
        0.9880685013016122}, {0.2924517591975153, 0.2067054111639035}, {
        0.4190933683129099, 0.12392032720380919`}}, {1, 2, 3, 4, 5}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803558709356072*^9, 3.80355932659622*^9, 
  3.803561294818019*^9, 3.803561787629334*^9, 3.8035621824159718`*^9, 
  3.8036027703984547`*^9, 3.803602801933721*^9, 3.8036418204214897`*^9, 
  3.803642109384555*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"430d43cb-8198-441f-bc05-b516c0c24d85"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TriangleQ", "Subsubsection",
 CellChangeTimes->{{3.803496154940793*^9, 3.803496169702861*^9}, {
  3.803502380182107*^9, 3.8035023816135483`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"517e8c94-b27b-4349-83a0-ec1536df7247"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TriangleQ"}]], "Input",
 CellChangeTimes->{{3.8035593384588757`*^9, 3.803559339379777*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"a675739d-79d4-47ff-b24d-05c27be35e33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TriangleQ", "[", 
   RowBox[{"a_List", ",", "b_List", ",", "c_List"}], "]"}], ":=", 
  RowBox[{"TrianglePointsQ", "[", 
   RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TriangleQ", "[", "list_List", "]"}], ":=", 
  RowBox[{"TrianglePointsQ", "[", "list", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TriangleQ", "[", "polygon_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TrianglePolygonQ", "[", "polygon", "]"}], "/;", 
   RowBox[{"SimplePolygonQ", "[", "polygon", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.803558297197867*^9, 3.803558298153054*^9}, {
  3.803559344576277*^9, 3.8035593489841137`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"72e814f1-aee5-4d32-a238-2a4a84034279"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.8035587438289843`*^9, 3.803558749820197*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"765c39bc-541f-4efe-aa19-ba1732738398"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Polygon", "@", "#"}], ",", 
       RowBox[{"TriangleQ", "@@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803558766268878*^9, 3.803558826839505*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"61dcd75a-6d3c-4fdc-ab0a-cc18bebe74d7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 1}, {2, 2}, {1, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {2, 2}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {2, 2}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 1}, {2, 2}, {1, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 0}, {1, 3}, {1, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 0}, {1, 3}, {1, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 0}, {1, 3}, {1, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 0}, {1, 3}, {1, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 3}, {2, 1}, {3, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 3}, {2, 1}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 3}, {2, 1}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 3}, {2, 1}, {3, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 1}, {3, 0}, {2, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {3, 0}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {3, 0}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 1}, {3, 0}, {2, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 0}, {0, 3}, {2, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 0}, {0, 3}, {2, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 0}, {0, 3}, {2, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 0}, {0, 3}, {2, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 1}, {2, 1}, {2, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 1}, {2, 1}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 1}, {2, 1}, {2, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 1}, {2, 1}, {2, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 1}, {2, 1}, {1, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {2, 1}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {2, 1}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 1}, {2, 1}, {1, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 1}, {1, 3}, {2, 2}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {1, 3}, {2, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {1, 3}, {2, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 1}, {1, 3}, {2, 2}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 2}, {1, 0}, {0, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {1, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {1, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 2}, {1, 0}, {0, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 3}, {0, 2}, {0, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 2}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 2}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 3}, {0, 2}, {0, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8035588282682943`*^9, 3.8035593570935507`*^9, 
  3.8035613298690042`*^9, 3.803561787759004*^9, 3.803562225485425*^9, 
  3.80360277325331*^9, 3.803641820635953*^9, 3.803642111869688*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"19f22eb3-a9c6-41f8-897c-f600062db995"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Polygon", "@", "#"}], ",", 
       RowBox[{"TriangleQ", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8035588444147463`*^9},
 CellLabel->
  "In[141]:=",ExpressionUUID->"a2662989-d32c-41e4-a13d-e3b185d7cdda"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 0}, {2, 3}, {3, 2}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 0}, {2, 3}, {3, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 0}, {2, 3}, {3, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 0}, {2, 3}, {3, 2}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 1}, {0, 2}, {0, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {0, 2}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 1}, {0, 2}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 1}, {0, 2}, {0, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 3}, {0, 3}, {3, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 3}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 3}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 3}, {0, 3}, {3, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 0}, {3, 0}, {1, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {3, 0}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 0}, {3, 0}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 0}, {3, 0}, {1, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 2}, {3, 3}, {0, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {3, 3}, {0, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {3, 3}, {0, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 2}, {3, 3}, {0, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 1}, {2, 2}, {3, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {2, 2}, {3, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {2, 2}, {3, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 1}, {2, 2}, {3, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 2}, {0, 2}, {0, 2}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {0, 2}, {0, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {0, 2}, {0, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 2}, {0, 2}, {0, 2}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 2}, {0, 0}, {0, 0}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 2}, {0, 0}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 2}, {0, 0}, {0, 0}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 2}, {0, 0}, {0, 0}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "False"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 1}, {2, 0}, {0, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 1}, {2, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 1}, {2, 0}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 1}, {2, 0}, {0, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{3, 2}, {1, 0}, {3, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 2}, {1, 0}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{3, 2}, {1, 0}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{3, 2}, {1, 0}, {3, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8035588458084097`*^9, 3.803559359893763*^9, 
  3.803561336642336*^9, 3.803561787896101*^9, 3.803562228205181*^9, 
  3.8036027733717413`*^9, 3.8036418207504463`*^9, 3.803642111971089*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"b47edcb9-1f69-4af6-962e-99233922b5e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Polygon", "@", "#"}], ",", 
       RowBox[{"TriangleQ", "[", 
        RowBox[{"Polygon", "@", "#"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80355887384197*^9, 3.80355888122511*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"dab6c7b9-8732-4641-9b74-f4f229594a01"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{0, 2}, {3, 1}, {1, 2}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 2}, {3, 1}, {1, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{0, 2}, {3, 1}, {1, 2}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0, 2}, {3, 1}, {1, 2}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 2}, {0, 2}, {0, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {0, 2}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {0, 2}, {0, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 2}, {0, 2}, {0, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 1}, {2, 3}, {3, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {2, 3}, {3, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 1}, {2, 3}, {3, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 1}, {2, 3}, {3, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 2}, {2, 2}, {3, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {2, 2}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 2}, {2, 2}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 2}, {2, 2}, {3, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{"TriangleQ", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["Polygon",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready", Typeset`spolygon$$ = Polygon[{{2, 2}, {2, 2}, {3, 3}}]}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   PolygonBox[{{2, 2}, {2, 2}, {3, 3}}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   PolygonBox[{{2, 2}, {2, 2}, {3, 3}}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       Polygon[{{2, 2}, {2, 2}, {3, 3}}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 0}, {2, 3}, {1, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 0}, {2, 3}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 0}, {2, 3}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 0}, {2, 3}, {1, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 3}, {1, 3}, {2, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 3}, {1, 3}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 3}, {1, 3}, {2, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 3}, {1, 3}, {2, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 1}, {3, 0}, {3, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {3, 0}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 1}, {3, 0}, {3, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 1}, {3, 0}, {3, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{2, 0}, {2, 2}, {1, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 0}, {2, 2}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{2, 0}, {2, 2}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2, 0}, {2, 2}, {1, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 3}, {0, 1}, {0, 1}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 1}, {0, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 3}, {0, 1}, {0, 1}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 3}, {0, 1}, {0, 1}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{"TriangleQ", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["Polygon",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready", Typeset`spolygon$$ = Polygon[{{1, 3}, {0, 1}, {0, 1}}]}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   PolygonBox[{{1, 3}, {0, 1}, {0, 1}}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   PolygonBox[{{1, 3}, {0, 1}, {0, 1}}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       Polygon[{{1, 3}, {0, 1}, {0, 1}}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = Polygon[{{1, 2}, {3, 2}, {1, 3}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {3, 2}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  PolygonBox[{{1, 2}, {3, 2}, {1, 3}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{1, 2}, {3, 2}, {1, 3}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "True"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803558885622074*^9, 3.8035593628669157`*^9, 
  3.803561339344083*^9, 3.803561788049389*^9, 3.803562230676826*^9, 
  3.8036027735208387`*^9, 3.803641820885618*^9, 3.8036421120929213`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"4bab8233-8036-4743-a1ed-330b9772bdba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics", "@", 
        RowBox[{"RegularPolygon", "@", "#"}]}], ",", 
       RowBox[{"TriangleQ", "[", 
        RowBox[{"RegularPolygon", "@", "#"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"3", ",", "5"}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803558905362007*^9, 3.803558948321394*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"36167372-95fe-48d0-891d-66500a183f40"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      InterpretationBox[
       PolygonBox[
        NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {0, 1}, {
          Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
          0.8660254037844386, -0.5}, {0, 1}, {-0.8660254037844386, -0.5}}]],
       RegularPolygon[3]]], "True"},
    {
     GraphicsBox[
      InterpretationBox[
       PolygonBox[
        NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
          2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
           Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
         0.7071067811865475}, {-0.7071067811865475, 
         0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}]],
       RegularPolygon[4]]], 
     RowBox[{"TrianglePolygonQ", "[", 
      RowBox[{"RegularPolygon", "[", "4", "]"}], "]"}]},
    {
     GraphicsBox[
      InterpretationBox[
       PolygonBox[
        NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 
          1}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
            Rational[1, 2], 
           Rational[1, 4] (-1 + 
            5^Rational[1, 2])}, {-(Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
           Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
          0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
          0.30901699437494745`}, {0, 1}, {-0.9510565162951535, 
          0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}}]],
       RegularPolygon[5]]], 
     RowBox[{"TrianglePolygonQ", "[", 
      RowBox[{"RegularPolygon", "[", "5", "]"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803558919875114*^9, 3.803558948668521*^9}, 
   3.803559367590732*^9, {3.803561342187787*^9, 3.803561343471146*^9}, 
   3.803561788142482*^9, 3.803562234817862*^9, 3.803602773578561*^9, 
   3.8036418209233217`*^9, 3.803642112119656*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"c03ecda3-1605-4679-b63f-92e0f258da8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics", "@", 
        RowBox[{"RandomPolygon", "@", "#"}]}], ",", 
       RowBox[{"TriangleQ", "[", 
        RowBox[{"RandomPolygon", "@", "#"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"3", ",", "5"}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803558960494067*^9, 3.803558969111808*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"7e929af0-8b75-4904-8da0-2db15e206e2c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      PolygonBox[{{0.2845101335283873, 0.34183602990503825`}, {
       0.46491056725145063`, 0.8343395428473568}, {0.17191987238872075`, 
       0.12602828707427638`}}, {1, 2, 3}]], "True"},
    {
     GraphicsBox[
      PolygonBox[{{0.6092886265224229, 0.5730366864512655}, {
       0.11877322716270045`, 0.4796579252664641}, {0.010524696759447894`, 
       0.2027669310110367}, {0.7681511065034592, 0.5823803583255855}}, {1, 2, 
       3, 4}]], 
     RowBox[{"TrianglePolygonQ", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["Polygon",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready", Typeset`spolygon$$ = 
         Polygon[{{0.4183802282385949, 0.37579381264559375`}, {
          0.21225303559962172`, 0.5486616197272765}, {0.1782894988438284, 
          0.36280089437805674`}, {0.6668018825340181, 0.2491110892846662}}, {
          1, 2, 3, 4}]}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.4183802282385949, 0.37579381264559375`}, {
                    0.21225303559962172`, 0.5486616197272765}, {
                    0.1782894988438284, 0.36280089437805674`}, {
                    0.6668018825340181, 0.2491110892846662}}, {1, 2, 3, 4}]}, 
                  ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.4183802282385949, 0.37579381264559375`}, {
                    0.21225303559962172`, 0.5486616197272765}, {
                    0.1782894988438284, 0.36280089437805674`}, {
                    0.6668018825340181, 0.2491110892846662}}, {1, 2, 3, 4}]}, 
                  ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       Polygon[{{0.4183802282385949, 0.37579381264559375`}, {
        0.21225303559962172`, 0.5486616197272765}, {0.1782894988438284, 
        0.36280089437805674`}, {0.6668018825340181, 0.2491110892846662}}, {1, 
        2, 3, 4}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{0.7308406503065576, 0.18625322341641226`}, {
       0.5471195012945798, 0.6182550756029903}, {0.4099072371929877, 
       0.42131322393702564`}, {0.4073638053898849, 0.3284427402165766}, {
       0.50615941460657, 0.23897680511303254`}}, {1, 2, 3, 4, 5}]], 
     RowBox[{"TrianglePolygonQ", "[", 
      InterpretationBox[
       RowBox[{
        TagBox["Polygon",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready", Typeset`spolygon$$ = 
         Polygon[{{0.5613646255466069, 0.8460521635656855}, {
          0.07922997898039652, 0.5191306749401192}, {0.077059624062499, 
          0.18311867144559701`}, {0.309245772592349, 0.21037660065433283`}, {
          0.7651581225936757, 0.9652751165976663}}, {1, 2, 3, 4, 5}]}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.5613646255466069, 0.8460521635656855}, {
                    0.07922997898039652, 0.5191306749401192}, {
                    0.077059624062499, 0.18311867144559701`}, {
                    0.309245772592349, 0.21037660065433283`}, {
                    0.7651581225936757, 0.9652751165976663}}, {1, 2, 3, 4, 
                    5}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{
                   Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                   
                   PolygonBox[{{0.5613646255466069, 0.8460521635656855}, {
                    0.07922997898039652, 0.5191306749401192}, {
                    0.077059624062499, 0.18311867144559701`}, {
                    0.309245772592349, 0.21037660065433283`}, {
                    0.7651581225936757, 0.9652751165976663}}, {1, 2, 3, 4, 
                    5}]}, ImageSize -> 
                  Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       Polygon[{{0.5613646255466069, 0.8460521635656855}, {
        0.07922997898039652, 0.5191306749401192}, {0.077059624062499, 
        0.18311867144559701`}, {0.309245772592349, 0.21037660065433283`}, {
        0.7651581225936757, 0.9652751165976663}}, {1, 2, 3, 4, 5}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803558969779463*^9, 3.803559370744302*^9, 
  3.80356134560427*^9, 3.803561788187821*^9, 3.8035622388907347`*^9, 
  3.8036027736197033`*^9, 3.803641820975893*^9, 3.8036421121579857`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"ab755abc-9619-480a-b7f1-b33d421ebd72"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TrianglePolygonAngles", "Subsubsection",
 CellChangeTimes->{{3.803486894883646*^9, 3.803486911615438*^9}, {
  3.8034872062065287`*^9, 3.803487213150172*^9}, {3.8035023856650057`*^9, 
  3.8035023872585297`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"26114da0-0133-4219-84d9-41ddc0d9e337"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TrianglePolygonQ"}]], "Input",
 CellChangeTimes->{{3.803561577513287*^9, 3.803561583953849*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"c34ec18a-225d-4069-89b8-fc7e07b99978"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrianglePolygonAngles", "[", "polygon_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"N", "@*", "PlanarAngle"}], ")"}], "/@", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{
      RowBox[{"Permutations", "[", 
       RowBox[{
        RowBox[{"PolygonCoordinates", "@", "polygon"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[Equal]", 
        RowBox[{
        "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       "&"}]}], "]"}]}], "/;", 
   RowBox[{"TrianglePolygonQ", "@", "polygon"}]}]}]], "Input",
 CellChangeTimes->{{3.803560543878222*^9, 3.803560564967167*^9}, {
  3.8035606068986464`*^9, 3.80356060945754*^9}, {3.803560785917852*^9, 
  3.803560786947321*^9}, {3.803561561608871*^9, 3.803561562732728*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"6a88cc62-7cf8-4af7-ba1f-0a88ae5b2d17"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803558978119906*^9, 3.803558987617289*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"3e2a5eb4-ab90-41c0-98df-fca7beb61244"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"TrianglePolygonAngles", "@", "#"}], "]"}], "\[Equal]", 
        "Pi"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Polygon", "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.803559053275568*^9, 3.8035591055128393`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"cfb433b1-396d-4955-abfd-6c06fd43eb7a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{7.568636836026393, 5.14477882035016}, {3.997105526203079, 
         0.9135829383752672}, {5.772984274784749, 4.694248195504695}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{7.568636836026393, 5.14477882035016}, {
                   3.997105526203079, 0.9135829383752672}, {5.772984274784749,
                    4.694248195504695}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{7.568636836026393, 5.14477882035016}, {
                   3.997105526203079, 0.9135829383752672}, {5.772984274784749,
                    4.694248195504695}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{7.568636836026393, 5.14477882035016}, {3.997105526203079, 
       0.9135829383752672}, {5.772984274784749, 4.694248195504695}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{7.568636836026393, 5.14477882035016}, {3.997105526203079,
             0.9135829383752672}, {5.772984274784749, 4.694248195504695}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{7.568636836026393, 5.14477882035016}, {
                    3.997105526203079, 0.9135829383752672}, {
                    5.772984274784749, 4.694248195504695}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{7.568636836026393, 5.14477882035016}, {
                    3.997105526203079, 0.9135829383752672}, {
                    5.772984274784749, 4.694248195504695}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{7.568636836026393, 5.14477882035016}, {3.997105526203079, 
          0.9135829383752672}, {5.772984274784749, 4.694248195504695}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{2.0855828400499536`, 1.1289835826178223`}, {
         7.1489792855024845`, 4.938822762522966}, {1.1961617476732869`, 
         8.960210724304346}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{2.0855828400499536`, 1.1289835826178223`}, {
                   7.1489792855024845`, 4.938822762522966}, {
                   1.1961617476732869`, 8.960210724304346}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{2.0855828400499536`, 1.1289835826178223`}, {
                   7.1489792855024845`, 4.938822762522966}, {
                   1.1961617476732869`, 8.960210724304346}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{2.0855828400499536`, 1.1289835826178223`}, {
       7.1489792855024845`, 4.938822762522966}, {1.1961617476732869`, 
       8.960210724304346}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{2.0855828400499536`, 1.1289835826178223`}, {
            7.1489792855024845`, 4.938822762522966}, {1.1961617476732869`, 
            8.960210724304346}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.0855828400499536`, 1.1289835826178223`}, {
                    7.1489792855024845`, 4.938822762522966}, {
                    1.1961617476732869`, 8.960210724304346}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.0855828400499536`, 1.1289835826178223`}, {
                    7.1489792855024845`, 4.938822762522966}, {
                    1.1961617476732869`, 8.960210724304346}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{2.0855828400499536`, 1.1289835826178223`}, {
          7.1489792855024845`, 4.938822762522966}, {1.1961617476732869`, 
          8.960210724304346}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{0.6572791296688418, 6.564400321571004}, {
         1.8850658358860812`, 6.682665654644275}, {1.9581254119714373`, 
         0.5611080293788504}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{0.6572791296688418, 6.564400321571004}, {
                   1.8850658358860812`, 6.682665654644275}, {
                   1.9581254119714373`, 0.5611080293788504}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{0.6572791296688418, 6.564400321571004}, {
                   1.8850658358860812`, 6.682665654644275}, {
                   1.9581254119714373`, 0.5611080293788504}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0.6572791296688418, 6.564400321571004}, {1.8850658358860812`, 
       6.682665654644275}, {1.9581254119714373`, 0.5611080293788504}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{0.6572791296688418, 6.564400321571004}, {
            1.8850658358860812`, 6.682665654644275}, {1.9581254119714373`, 
            0.5611080293788504}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6572791296688418, 6.564400321571004}, {
                    1.8850658358860812`, 6.682665654644275}, {
                    1.9581254119714373`, 0.5611080293788504}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6572791296688418, 6.564400321571004}, {
                    1.8850658358860812`, 6.682665654644275}, {
                    1.9581254119714373`, 0.5611080293788504}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{0.6572791296688418, 6.564400321571004}, {
          1.8850658358860812`, 6.682665654644275}, {1.9581254119714373`, 
          0.5611080293788504}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{5.257025200358951, 8.421354715365801}, {7.476607492440216, 
         3.6886153198110705`}, {5.812251874888531, 6.390998480258531}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{5.257025200358951, 8.421354715365801}, {
                   7.476607492440216, 3.6886153198110705`}, {
                   5.812251874888531, 6.390998480258531}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{5.257025200358951, 8.421354715365801}, {
                   7.476607492440216, 3.6886153198110705`}, {
                   5.812251874888531, 6.390998480258531}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{5.257025200358951, 8.421354715365801}, {7.476607492440216, 
       3.6886153198110705`}, {5.812251874888531, 6.390998480258531}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{5.257025200358951, 8.421354715365801}, {
            7.476607492440216, 3.6886153198110705`}, {5.812251874888531, 
            6.390998480258531}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{5.257025200358951, 8.421354715365801}, {
                    7.476607492440216, 3.6886153198110705`}, {
                    5.812251874888531, 6.390998480258531}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{5.257025200358951, 8.421354715365801}, {
                    7.476607492440216, 3.6886153198110705`}, {
                    5.812251874888531, 6.390998480258531}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{5.257025200358951, 8.421354715365801}, {7.476607492440216, 
          3.6886153198110705`}, {5.812251874888531, 6.390998480258531}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{9.739962730003235, 7.061505598063569}, {0.9207774508707516, 
         3.634098199790719}, {7.980875285455603, 8.71278939428634}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{9.739962730003235, 7.061505598063569}, {
                   0.9207774508707516, 3.634098199790719}, {7.980875285455603,
                    8.71278939428634}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{9.739962730003235, 7.061505598063569}, {
                   0.9207774508707516, 3.634098199790719}, {7.980875285455603,
                    8.71278939428634}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{9.739962730003235, 7.061505598063569}, {0.9207774508707516, 
       3.634098199790719}, {7.980875285455603, 8.71278939428634}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{9.739962730003235, 7.061505598063569}, {
            0.9207774508707516, 3.634098199790719}, {7.980875285455603, 
            8.71278939428634}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{9.739962730003235, 7.061505598063569}, {
                    0.9207774508707516, 3.634098199790719}, {
                    7.980875285455603, 8.71278939428634}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{9.739962730003235, 7.061505598063569}, {
                    0.9207774508707516, 3.634098199790719}, {
                    7.980875285455603, 8.71278939428634}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{9.739962730003235, 7.061505598063569}, {0.9207774508707516,
           3.634098199790719}, {7.980875285455603, 8.71278939428634}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{0.791257854155706, 0.006358991281905091}, {5.81399829248242,
          2.0235060849784183`}, {8.76326157213321, 4.995641460578984}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{0.791257854155706, 0.006358991281905091}, {
                   5.81399829248242, 2.0235060849784183`}, {8.76326157213321, 
                   4.995641460578984}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{0.791257854155706, 0.006358991281905091}, {
                   5.81399829248242, 2.0235060849784183`}, {8.76326157213321, 
                   4.995641460578984}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{0.791257854155706, 0.006358991281905091}, {5.81399829248242, 
       2.0235060849784183`}, {8.76326157213321, 4.995641460578984}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{0.791257854155706, 0.006358991281905091}, {
            5.81399829248242, 2.0235060849784183`}, {8.76326157213321, 
            4.995641460578984}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.791257854155706, 0.006358991281905091}, {
                    5.81399829248242, 2.0235060849784183`}, {8.76326157213321,
                     4.995641460578984}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.791257854155706, 0.006358991281905091}, {
                    5.81399829248242, 2.0235060849784183`}, {8.76326157213321,
                     4.995641460578984}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{0.791257854155706, 0.006358991281905091}, {
          5.81399829248242, 2.0235060849784183`}, {8.76326157213321, 
          4.995641460578984}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{4.868323900308763, 9.195682443221393}, {5.248270005494671, 
         7.1359892441983135`}, {7.108626980829772, 0.06717971512063592}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{4.868323900308763, 9.195682443221393}, {
                   5.248270005494671, 7.1359892441983135`}, {
                   7.108626980829772, 0.06717971512063592}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{4.868323900308763, 9.195682443221393}, {
                   5.248270005494671, 7.1359892441983135`}, {
                   7.108626980829772, 0.06717971512063592}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{4.868323900308763, 9.195682443221393}, {5.248270005494671, 
       7.1359892441983135`}, {7.108626980829772, 0.06717971512063592}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{4.868323900308763, 9.195682443221393}, {
            5.248270005494671, 7.1359892441983135`}, {7.108626980829772, 
            0.06717971512063592}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{4.868323900308763, 9.195682443221393}, {
                    5.248270005494671, 7.1359892441983135`}, {
                    7.108626980829772, 0.06717971512063592}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{4.868323900308763, 9.195682443221393}, {
                    5.248270005494671, 7.1359892441983135`}, {
                    7.108626980829772, 0.06717971512063592}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{4.868323900308763, 9.195682443221393}, {5.248270005494671, 
          7.1359892441983135`}, {7.108626980829772, 0.06717971512063592}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{9.307562845143387, 4.8322939992152705`}, {7.312728594496367,
          7.956996545536224}, {1.7748253644149141`, 3.55233194502331}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{9.307562845143387, 4.8322939992152705`}, {
                   7.312728594496367, 7.956996545536224}, {
                   1.7748253644149141`, 3.55233194502331}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{9.307562845143387, 4.8322939992152705`}, {
                   7.312728594496367, 7.956996545536224}, {
                   1.7748253644149141`, 3.55233194502331}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{9.307562845143387, 4.8322939992152705`}, {7.312728594496367, 
       7.956996545536224}, {1.7748253644149141`, 3.55233194502331}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{9.307562845143387, 4.8322939992152705`}, {
            7.312728594496367, 7.956996545536224}, {1.7748253644149141`, 
            3.55233194502331}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{9.307562845143387, 4.8322939992152705`}, {
                    7.312728594496367, 7.956996545536224}, {
                    1.7748253644149141`, 3.55233194502331}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{9.307562845143387, 4.8322939992152705`}, {
                    7.312728594496367, 7.956996545536224}, {
                    1.7748253644149141`, 3.55233194502331}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{9.307562845143387, 4.8322939992152705`}, {
          7.312728594496367, 7.956996545536224}, {1.7748253644149141`, 
          3.55233194502331}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{5.917019957697342, 6.439837283549924}, {3.141647894505004, 
         0.48171350613184494`}, {1.2935627713381432`, 2.389332324051603}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{5.917019957697342, 6.439837283549924}, {
                   3.141647894505004, 0.48171350613184494`}, {
                   1.2935627713381432`, 2.389332324051603}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{5.917019957697342, 6.439837283549924}, {
                   3.141647894505004, 0.48171350613184494`}, {
                   1.2935627713381432`, 2.389332324051603}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{5.917019957697342, 6.439837283549924}, {3.141647894505004, 
       0.48171350613184494`}, {1.2935627713381432`, 2.389332324051603}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{5.917019957697342, 6.439837283549924}, {
            3.141647894505004, 0.48171350613184494`}, {1.2935627713381432`, 
            2.389332324051603}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{5.917019957697342, 6.439837283549924}, {
                    3.141647894505004, 0.48171350613184494`}, {
                    1.2935627713381432`, 2.389332324051603}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{5.917019957697342, 6.439837283549924}, {
                    3.141647894505004, 0.48171350613184494`}, {
                    1.2935627713381432`, 2.389332324051603}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{5.917019957697342, 6.439837283549924}, {3.141647894505004, 
          0.48171350613184494`}, {1.2935627713381432`, 2.389332324051603}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["Polygon",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready", Typeset`spolygon$$ = 
        Polygon[{{9.975092612329824, 0.2536666783677326}, {
         5.1041365830003205`, 5.034211298841624}, {7.6888599264565975`, 
         0.5955218840838512}}]}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{9.975092612329824, 0.2536666783677326}, {
                   5.1041365830003205`, 5.034211298841624}, {
                   7.6888599264565975`, 0.5955218840838512}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Directive[
                   Hue[0.6, 0.3, 0.85], 
                   EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                  
                  PolygonBox[{{9.975092612329824, 0.2536666783677326}, {
                   5.1041365830003205`, 5.034211298841624}, {
                   7.6888599264565975`, 0.5955218840838512}}]}, ImageSize -> 
                 Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Polygon[{{9.975092612329824, 0.2536666783677326}, {5.1041365830003205`, 
       5.034211298841624}, {7.6888599264565975`, 0.5955218840838512}}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"TrianglePolygonAngles", "[", 
        InterpretationBox[
         RowBox[{
          TagBox["Polygon",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready", Typeset`spolygon$$ = 
           Polygon[{{9.975092612329824, 0.2536666783677326}, {
            5.1041365830003205`, 5.034211298841624}, {7.6888599264565975`, 
            0.5955218840838512}}]}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{9.975092612329824, 0.2536666783677326}, {
                    5.1041365830003205`, 5.034211298841624}, {
                    7.6888599264565975`, 0.5955218840838512}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{9.975092612329824, 0.2536666783677326}, {
                    5.1041365830003205`, 5.034211298841624}, {
                    7.6888599264565975`, 0.5955218840838512}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         Polygon[{{9.975092612329824, 0.2536666783677326}, {
          5.1041365830003205`, 5.034211298841624}, {7.6888599264565975`, 
          0.5955218840838512}}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "]"}], "]"}], "\[Equal]", "\[Pi]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803559093226964*^9, 3.803559105968445*^9}, 
   3.803559405268442*^9, 3.803560917695709*^9, 3.8035613573849907`*^9, 
   3.803561594907199*^9, 3.8035617884053183`*^9, 3.803562246955246*^9, 
   3.803602776285795*^9, 3.803641821225911*^9, 3.803642114349674*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"be0c4c03-bcd1-491e-804e-8f59c2fd25c6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TriangleTypeQ", "Subsubsection",
 CellChangeTimes->{{3.803316832441471*^9, 3.803316862874778*^9}, {
  3.8034990849867897`*^9, 3.803499089483042*^9}, {3.803502390038046*^9, 
  3.803502391693535*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"23f0342a-1ce8-40d5-9002-9f788e44c651"],

Cell[TextData[{
 StyleBox["Right-angled triangle",
  FontWeight->"Bold"],
 "\nA right-angled triangle has one 90\[Degree] angle.That 90 \[Degree] angle \
is shown as a small square where two sides of the triangle join. It is \
possible for a triangle to be a right-angled triangle and an isosceles \
triangle at the same time. In this case the angles would be 90\[Degree], 45\
\[Degree] and 45\[Degree]. [1]"
}], "Text",
 CellChangeTimes->{{3.803301115146051*^9, 3.803301124811077*^9}, {
  3.803301339539495*^9, 3.803301340083241*^9}, {3.8033017145289507`*^9, 
  3.803301761602851*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"d5125a68-818c-4c31-a233-dc99fc8d2003"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TriangleRightQ"}]], "Input",
 CellChangeTimes->{{3.803559428581687*^9, 3.803559429623527*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"4809b558-0cb9-4ed3-a00f-7f927c87b389"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleRightQ", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ContainsAny", "[", 
    RowBox[{
     RowBox[{"TrianglePolygonAngles", "@", "triangle"}], ",", 
     RowBox[{"{", 
      RowBox[{"N", "[", 
       RowBox[{"Pi", "/", "2"}], "]"}], "}"}]}], "]"}], "/;", 
   RowBox[{"TrianglePolygonQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.803299781074338*^9, 3.8032998099106007`*^9}, {
   3.8032998466690617`*^9, 3.803299885090231*^9}, {3.803299951380385*^9, 
   3.803299952235013*^9}, 3.803299982689795*^9, {3.803383690011613*^9, 
   3.80338369910375*^9}, {3.8034990961793957`*^9, 3.8034991991983*^9}, 
   3.8034992411803627`*^9, {3.803499291868164*^9, 3.8034992945132313`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"f459580a-3847-4918-a646-4467559c262b"],

Cell[TextData[{
 StyleBox["Equilateral",
  FontWeight->"Bold"],
 "\nAn equilateral triangle has three equal sides and angles. It will always \
have angles of 60\[Degree] in each corner. [1]"
}], "Text",
 CellChangeTimes->{{3.803301151211838*^9, 3.803301156417238*^9}, {
  3.8033013430115232`*^9, 3.8033013435876827`*^9}, {3.8033018927356987`*^9, 
  3.803301897548984*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"4ef502e6-6251-455d-8182-8214b7ec57d5"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TriangleEquilateralQ"}]], "Input",
 CellChangeTimes->{{3.8035594337803383`*^9, 3.803559434754572*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"ad3cebc8-861f-4c0a-a30e-e34711309ed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleEquilateralQ", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ContainsOnly", "[", 
    RowBox[{
     RowBox[{"TrianglePolygonAngles", "@", "triangle"}], ",", 
     RowBox[{"{", 
      RowBox[{"N", "[", 
       RowBox[{"Pi", "/", "3"}], "]"}], "}"}]}], "]"}], "/;", 
   RowBox[{"TrianglePolygonQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.803300764294094*^9, 3.8033007990044203`*^9}, 
   3.803383706319311*^9, {3.803499425970159*^9, 3.8034994695012703`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"d2c52703-12b3-4d19-bf8a-b7e551e1f821"],

Cell[TextData[{
 StyleBox["Isosceles",
  FontWeight->"Bold"],
 "\nAn isosceles triangle can be drawn in many different ways. It can be \
drawn to have two equal sides and two equal angles or with two acute angles \
and one obtuse angle. It is easy to work out the missing angles of an \
isosceles triangle by looking for the angles that should be equal. [1]"
}], "Text",
 CellChangeTimes->{{3.8033010462558126`*^9, 3.803301053108931*^9}, {
  3.803301346003191*^9, 3.803301346387453*^9}, {3.803301911249344*^9, 
  3.80330192658385*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"93f0963e-568b-4871-be67-52df8780b40c"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TriangleIsoscelesQ"}]], "Input",
 CellChangeTimes->{{3.8035594386193247`*^9, 3.8035594395523043`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"fd24f0c8-1863-44e7-b481-070fa3d154eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleIsoscelesQ", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sides", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"N", "@*", "EuclideanDistance"}], ")"}], "@@@", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"PolygonCoordinates", "@", "triangle"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"DeleteDuplicates", "@", "sides"}], "]"}], "\[LessEqual]", 
      "2"}]}], "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"TrianglePolygonQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.80330123905107*^9, 3.803301248847972*^9}, {
   3.803302347792303*^9, 3.803302393673929*^9}, {3.803302548141115*^9, 
   3.803302560184423*^9}, {3.803307182336684*^9, 3.803307212353579*^9}, 
   3.803307371829949*^9, {3.80330741152275*^9, 3.803307416484722*^9}, 
   3.803307540478196*^9, {3.803499653100841*^9, 3.8034997206601048`*^9}, {
   3.803499759021104*^9, 3.803499774837667*^9}, {3.8034999511414547`*^9, 
   3.80349995304468*^9}, {3.803500665265274*^9, 3.80350067056662*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"3afec626-c57a-41f7-a472-525ae305d80a"],

Cell[TextData[{
 StyleBox["Scalene",
  FontWeight->"Bold"],
 "\nA scalene triangle has three different angles and none of its sides are \
equal in length. [1]"
}], "Text",
 CellChangeTimes->{{3.8033010707822123`*^9, 3.803301093911718*^9}, {
  3.80330134915553*^9, 3.803301351099537*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"38190a06-9247-40c0-b944-5bf97fa8e106"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TriangleScaleneQ"}]], "Input",
 CellChangeTimes->{{3.8035594434470654`*^9, 3.803559444330415*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"14b790a6-ab7c-4070-a70c-5884d94d1d9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleScaleneQ", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sides", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"N", "@*", "EuclideanDistance"}], ")"}], "@@@", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"PolygonCoordinates", "@", "triangle"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"DeleteDuplicates", "@", "sides"}], "]"}], "\[Equal]", "3"}]}],
     "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"TrianglePolygonQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.803302573795936*^9, 3.803302615457708*^9}, {
  3.803307703538425*^9, 3.8033077105733423`*^9}, {3.803499993496784*^9, 
  3.803500032524736*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"32917686-7288-466f-bd06-a9e61b4457e8"],

Cell[TextData[{
 StyleBox["Obtuse",
  FontWeight->"Bold"],
 "\nAn obtuse triangle has three different angles, with one angle greater \
than 90\[Degree]. None of its sides are equal in length. [1]"
}], "Text",
 CellChangeTimes->{{3.80330109593311*^9, 3.803301102556437*^9}, {
  3.8033013536998672`*^9, 3.80330135417973*^9}, {3.803301973952042*^9, 
  3.8033019753383617`*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"854e642e-ce06-4488-8bb2-c87e091a4251"],

Cell[BoxData[
 RowBox[{"Clear", "@", "TriangleObtuseQ"}]], "Input",
 CellChangeTimes->{{3.803559447366824*^9, 3.803559449378091*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"079f0341-ba18-4133-b05b-80943aba8f41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleObtuseQ", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"angles", "=", 
        RowBox[{"TrianglePolygonAngles", "@", "triangle"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sides", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N", "@*", "EuclideanDistance"}], ")"}], "@@@", 
         RowBox[{"Subsets", "[", 
          RowBox[{
           RowBox[{"PolygonCoordinates", "@", "triangle"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"angles", ",", 
          RowBox[{
           RowBox[{"#", ">", 
            RowBox[{"N", "[", 
             RowBox[{"Pi", "/", "2"}], "]"}]}], "&"}]}], "]"}], "]"}], ">", 
       "0"}], "&&", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"DeleteDuplicates", "@", "angles"}], "]"}], "\[Equal]", "3"}],
       "&&", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"DeleteDuplicates", "@", "sides"}], "]"}], "\[Equal]", 
       "3"}]}]}], "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"TrianglePolygonQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.803302771494207*^9, 3.803302785460039*^9}, {
   3.803307807342485*^9, 3.803307851186886*^9}, {3.803307935090651*^9, 
   3.803307981720858*^9}, {3.8033090411593037`*^9, 3.803309093804841*^9}, {
   3.8033092820872183`*^9, 3.8033092830398493`*^9}, {3.803309315044347*^9, 
   3.803309334859316*^9}, 3.803383723328116*^9, {3.803500149290511*^9, 
   3.8035002447535954`*^9}, {3.803500318881205*^9, 3.803500365610721*^9}, {
   3.8035597116738443`*^9, 3.803559719332426*^9}, {3.8035623113623466`*^9, 
   3.8035623465456867`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"b534dc2f-16e0-440f-899e-03a67194dcac"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.8033056907695017`*^9, 3.803305697706031*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"a40578e7-5f30-450e-8ea8-f897e77d5397"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"triangles", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Triangle", "[", "]"}], ",", 
      RowBox[{"AASTriangle", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "6"}], ",", 
        RowBox[{"Pi", "/", "3"}], ",", "1"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"SSSTriangle", "[", 
       RowBox[{"3", ",", "4", ",", "5"}], "]"}], ",", 
      RowBox[{"SASTriangle", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Pi", "/", "2"}], ",", "2"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ASATriangle", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "6"}], ",", "1", ",", 
        RowBox[{"Pi", "/", "3"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "20"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"RandomPolygon", "@", "3"}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"triangleQs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "TrianglePolygonQ", ",", "\[IndentingNewLine]", "TriangleRightQ", ",", 
     "\[IndentingNewLine]", "TriangleEquilateralQ", ",", 
     "\[IndentingNewLine]", "TriangleIsoscelesQ", ",", "\[IndentingNewLine]", 
     "TriangleScaleneQ", ",", "\[IndentingNewLine]", "TriangleObtuseQ"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8033006451868343`*^9, 3.803300650803001*^9}, {
   3.803300722270267*^9, 3.80330072277565*^9}, {3.803302837349814*^9, 
   3.80330292319133*^9}, 3.803303055825151*^9, {3.803303112367258*^9, 
   3.803303112776087*^9}, {3.803308083314457*^9, 3.803308113315608*^9}, 
   3.8033088839746532`*^9, {3.8033864098714523`*^9, 3.8033864619012117`*^9}, {
   3.803500594317453*^9, 3.803500649846334*^9}, {3.803500682523505*^9, 
   3.803500695769122*^9}, {3.803560322956348*^9, 3.80356032623372*^9}, {
   3.80356041288488*^9, 3.803560413630479*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"b69298d7-b684-4201-bec3-b78d937953dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"triangleTests", "=", 
   RowBox[{
    RowBox[{"Function", "[", "\[IndentingNewLine]", 
     RowBox[{"triangle", ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "@", "triangle"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"#", "/", "Degree"}], "]"}], "&"}], "/@", 
             RowBox[{"PolygonAngle", "[", "triangle", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"N", "@*", "EuclideanDistance"}], "@@", "#"}], "&"}], "/@", 
             RowBox[{"Subsets", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"List", "@@", "triangle"}], "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"answer", "=", 
                RowBox[{"#", "[", "triangle", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"TextString", "[", 
                 RowBox[{"answer", ",", 
                  RowBox[{"BooleanStrings", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Yes\>\"", ",", "\"\<No\>\""}], " ", 
                    "}"}]}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{"answer", ",", "Blue", ",", "Red"}], "]"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
           "triangleQs"}]}], "}"}], ",", "\[IndentingNewLine]", "1"}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "/@", 
    "triangles"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"triangleTests", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graphics\>\"", ",", "\"\<Interior angles\>\"", ",", 
        "\"\<Side lengths\>\"", ",", " ", "\"\<Triangle?\>\"", ",", " ", 
        "\"\<Right?\>\"", ",", " ", "\"\<Equilateral?\>\"", ",", 
        "\"\<Isosceles?\>\"", ",", "\"\<Scalene?\>\"", ",", 
        "\"\<Obtuse?\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8033031843261766`*^9, 3.803303195964562*^9}, {
   3.8033033222480087`*^9, 3.803303406201956*^9}, {3.803303649195582*^9, 
   3.803303687385906*^9}, {3.8033037196839113`*^9, 3.803303855470484*^9}, {
   3.8033040186469812`*^9, 3.803304020770604*^9}, {3.803304078607716*^9, 
   3.803304155348802*^9}, {3.803304332494733*^9, 3.8033043803493757`*^9}, {
   3.803304456417631*^9, 3.803304502104887*^9}, {3.8033045399675217`*^9, 
   3.803304546199272*^9}, {3.803304578588788*^9, 3.803304580132443*^9}, {
   3.8033046167600594`*^9, 3.803304672494276*^9}, {3.803304782147171*^9, 
   3.8033049761217833`*^9}, {3.803305104852265*^9, 3.8033051697191067`*^9}, {
   3.803305219358206*^9, 3.803305243329076*^9}, {3.8033052768013973`*^9, 
   3.803305279481616*^9}, {3.803305324513562*^9, 3.8033054925987797`*^9}, {
   3.8033055251236553`*^9, 3.803305526297183*^9}, {3.8033072361900253`*^9, 
   3.8033072647707253`*^9}, {3.803307302093609*^9, 3.8033073043439417`*^9}, 
   3.803307339986188*^9, {3.803307455968318*^9, 3.803307459373412*^9}, {
   3.803307549693421*^9, 3.803307552582533*^9}, {3.8033076185433617`*^9, 
   3.8033076213538322`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"28dd884d-c5d8-4e51-9c97-2b88ebc97d42"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Interior angles\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Side lengths\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Triangle?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Right?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Equilateral?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Isosceles?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Scalene?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Obtuse?\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      TagBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}}],
       "Triangle"]], 
     RowBox[{"{", 
      RowBox[{"90.`", ",", "45.`", ",", "45.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "1.`", ",", "1.4142135623730951`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Triangle[{{0, 0}, {1, 0}, {0, 1}}]]\"\>", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Triangle[{{0, 0}, {1, 0}, {0, 1}}]]\"\>", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Triangle[{{0, 0}, {1, 0}, {0, 1}}]]\"\
\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Triangle[{{0, 0}, {1, 0}, {0, \
1}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Triangle[{{0, 0}, {1, 0}, {0, 1}}]]\"\>", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Triangle[{{0, 0}, {1, 0}, {0, 1}}]]\"\>", 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {2, 0}, {
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
          0}, {1.5, 0.8660254037844386}}]],
       "Triangle"]], 
     RowBox[{"{", 
      RowBox[{"29.999999999999996`", ",", "59.99999999999999`", ",", "90.`"}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{"2.`", ",", "1.7320508075688772`", ",", "1.`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Triangle[{{0, 0}, {2, 0}, {1.5, \
0.866025}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "2"], ",", 
               FractionBox[
                SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Triangle[{{0, 0}, {2, 0}, {1.5, \
0.866025}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "2"], ",", 
               FractionBox[
                SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Triangle[{{0, 0}, {2, 0}, {1.5, \
0.866025}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "2"], ",", 
               FractionBox[
                SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Triangle[{{0, 0}, {2, 0}, {1.5, \
0.866025}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "2"], ",", 
               FractionBox[
                SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Triangle[{{0, 0}, {2, 0}, {1.5, \
0.866025}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "2"], ",", 
               FractionBox[
                SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Triangle[{{0, 0}, {2, 0}, {1.5, \
0.866025}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "2"], ",", 
               FractionBox[
                SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {5, 0}, {Rational[16, 5], Rational[12, 5]}}, {{0, 
          0}, {5, 0}, {3.2, 2.4}}]],
       "Triangle"]], 
     RowBox[{"{", 
      RowBox[{"36.86989764584401`", ",", "53.13010235415599`", ",", "90.`"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{"5.`", ",", "4.`", ",", "3.`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Triangle[{{0, 0}, {5, 0}, {3.2, 2.4}}]]\"\
\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["16", "5"], ",", 
               FractionBox["12", "5"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Triangle[{{0, 0}, {5, 0}, {3.2, \
2.4}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["16", "5"], ",", 
               FractionBox["12", "5"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Triangle[{{0, 0}, {5, 0}, {3.2, \
2.4}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["16", "5"], ",", 
               FractionBox["12", "5"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Triangle[{{0, 0}, {5, 0}, {3.2, 2.4}}]]\
\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["16", "5"], ",", 
               FractionBox["12", "5"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Triangle[{{0, 0}, {5, 0}, {3.2, 2.4}}]]\"\
\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["16", "5"], ",", 
               FractionBox["12", "5"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Triangle[{{0, 0}, {5, 0}, {3.2, \
2.4}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["16", "5"], ",", 
               FractionBox["12", "5"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {5^Rational[1, 2], 0}, {
          4 5^Rational[-1, 2], 2 5^Rational[-1, 2]}}, {{0, 0}, {
          2.23606797749979, 0}, {1.7888543819998317`, 0.8944271909999159}}]],
       "Triangle"]], 
     RowBox[{"{", 
      RowBox[{"26.565051177077994`", ",", "63.43494882292201`", ",", "90.`"}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{"2.23606797749979`", ",", "2.`", ",", "1.`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Triangle[{{0, 0}, {2.23607, 0}, {1.78885, \
0.894427}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["5"], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["4", 
                SqrtBox["5"]], ",", 
               FractionBox["2", 
                SqrtBox["5"]]}], "}"}]}], "}"}], "]"}], "]"}], ",", "Blue", 
         ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Triangle[{{0, 0}, {2.23607, 0}, {1.78885, \
0.894427}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["5"], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["4", 
                SqrtBox["5"]], ",", 
               FractionBox["2", 
                SqrtBox["5"]]}], "}"}]}], "}"}], "]"}], "]"}], ",", "Blue", 
         ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Triangle[{{0, 0}, {2.23607, 0}, \
{1.78885, 0.894427}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["5"], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["4", 
                SqrtBox["5"]], ",", 
               FractionBox["2", 
                SqrtBox["5"]]}], "}"}]}], "}"}], "]"}], "]"}], ",", "Blue", 
         ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Triangle[{{0, 0}, {2.23607, 0}, \
{1.78885, 0.894427}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["5"], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["4", 
                SqrtBox["5"]], ",", 
               FractionBox["2", 
                SqrtBox["5"]]}], "}"}]}], "}"}], "]"}], "]"}], ",", "Blue", 
         ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Triangle[{{0, 0}, {2.23607, 0}, {1.78885, \
0.894427}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["5"], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["4", 
                SqrtBox["5"]], ",", 
               FractionBox["2", 
                SqrtBox["5"]]}], "}"}]}], "}"}], "]"}], "]"}], ",", "Blue", 
         ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Triangle[{{0, 0}, {2.23607, 0}, {1.78885, \
0.894427}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["5"], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["4", 
                SqrtBox["5"]], ",", 
               FractionBox["2", 
                SqrtBox["5"]]}], "}"}]}], "}"}], "]"}], "]"}], ",", "Blue", 
         ",", "Red"}], "]"}]}], "]"}]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {1, 0}, {
          Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
          0}, {0.75, 0.4330127018922193}}]],
       "Triangle"]], 
     RowBox[{"{", 
      RowBox[{"29.999999999999996`", ",", "59.99999999999999`", ",", "90.`"}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.8660254037844386`", ",", "0.5`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Triangle[{{0, 0}, {1, 0}, {0.75, \
0.433013}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "4"], ",", 
               FractionBox[
                SqrtBox["3"], "4"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Triangle[{{0, 0}, {1, 0}, {0.75, \
0.433013}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "4"], ",", 
               FractionBox[
                SqrtBox["3"], "4"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Triangle[{{0, 0}, {1, 0}, {0.75, \
0.433013}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "4"], ",", 
               FractionBox[
                SqrtBox["3"], "4"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Triangle[{{0, 0}, {1, 0}, {0.75, \
0.433013}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "4"], ",", 
               FractionBox[
                SqrtBox["3"], "4"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Triangle[{{0, 0}, {1, 0}, {0.75, \
0.433013}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "4"], ",", 
               FractionBox[
                SqrtBox["3"], "4"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Triangle[{{0, 0}, {1, 0}, {0.75, \
0.433013}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          RowBox[{"Triangle", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               FractionBox["3", "4"], ",", 
               FractionBox[
                SqrtBox["3"], "4"]}], "}"}]}], "}"}], "]"}], "]"}], ",", 
         "Blue", ",", "Red"}], "]"}]}], "]"}]},
    {
     GraphicsBox[
      PolygonBox[
       NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 0}, {
         0, 1.7320508075688772`}, {-1, 0}}]]], 
     RowBox[{"{", 
      RowBox[{
      "59.99999999999999`", ",", "59.99999999999999`", ",", 
       "59.99999999999999`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2.`", ",", "2.`", ",", "2.`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{1, 0}, {0, 1.73205}, {-1, 0}}]]\
\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{1, 0}, {0, 1.73205}, {-1, 0}}]]\"\
\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{1, 0}, {0, 1.73205}, {-1, \
0}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{1, 0}, {0, 1.73205}, {-1, \
0}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{1, 0}, {0, 1.73205}, {-1, 0}}]]\
\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{1, 0}, {0, 1.73205}, {-1, \
0}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[
                    
                    NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 
                    0}, {0, 1.7320508075688772`}, {-1, 0}}]]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]], 
     RowBox[{"{", 
      RowBox[{
      "18.434948822922017`", ",", "135.`", ",", "26.565051177077994`"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
      "14.142135623730951`", ",", "22.360679774997898`", ",", "10.`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{0, 0}, {10, 10}, {10, \
20}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0, 0}, {10, 10}, {10, 20}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{0, 0}, {10, 10}, {10, 20}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{0, 0}, {10, 10}, {10, 20}}]]\"\>",
        ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0, 0}, {10, 10}, {10, 20}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{0, 0}, {10, 10}, {10, 20}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{0, 0}, {10, 10}, {10, \
20}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0, 0}, {10, 10}, {10, 20}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{0, 0}, {10, 10}, {10, 20}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{0, 0}, {10, 10}, {10, \
20}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0, 0}, {10, 10}, {10, 20}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{0, 0}, {10, 10}, {10, 20}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{0, 0}, {10, 10}, {10, \
20}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0, 0}, {10, 10}, {10, 20}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{0, 0}, {10, 10}, {10, 20}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{0, 0}, {10, 10}, {10, \
20}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0, 0}, {10, 10}, {10, 20}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{0, 0}, {10, 10}, {10, 20}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
       0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
       0.2157380237165567}}, {1, 2, 3}]], 
     RowBox[{"{", 
      RowBox[{
      "305.9232824225417`", ",", "261.5478308071366`", ",", 
       "332.5288867703216`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "0.53058060131619`", ",", "0.6480807366184459`", ",", 
       "0.302243209817063`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{0.645924, 0.554355}, {0.116654, \
0.517081}, {0.093341, 0.215738}}, {1, 2, 3}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0.6459236020928605, 0.554354507253269}, {
              0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081,
               0.2157380237165567}}, {1, 2, 3}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{0.6459236020928605, 0.554354507253269}, {
            0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
            0.2157380237165567}}, {1, 2, 3}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{0.645924, 0.554355}, {0.116654, \
0.517081}, {0.093341, 0.215738}}, {1, 2, 3}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0.6459236020928605, 0.554354507253269}, {
              0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081,
               0.2157380237165567}}, {1, 2, 3}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{0.6459236020928605, 0.554354507253269}, {
            0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
            0.2157380237165567}}, {1, 2, 3}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{0.645924, 0.554355}, \
{0.116654, 0.517081}, {0.093341, 0.215738}}, {1, 2, 3}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0.6459236020928605, 0.554354507253269}, {
              0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081,
               0.2157380237165567}}, {1, 2, 3}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{0.6459236020928605, 0.554354507253269}, {
            0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
            0.2157380237165567}}, {1, 2, 3}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{0.645924, 0.554355}, \
{0.116654, 0.517081}, {0.093341, 0.215738}}, {1, 2, 3}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0.6459236020928605, 0.554354507253269}, {
              0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081,
               0.2157380237165567}}, {1, 2, 3}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{0.6459236020928605, 0.554354507253269}, {
            0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
            0.2157380237165567}}, {1, 2, 3}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{0.645924, 0.554355}, {0.116654, \
0.517081}, {0.093341, 0.215738}}, {1, 2, 3}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0.6459236020928605, 0.554354507253269}, {
              0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081,
               0.2157380237165567}}, {1, 2, 3}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{0.6459236020928605, 0.554354507253269}, {
            0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
            0.2157380237165567}}, {1, 2, 3}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{0.645924, 0.554355}, {0.116654, \
0.517081}, {0.093341, 0.215738}}, {1, 2, 3}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{0.6459236020928605, 0.554354507253269}, {
              0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081,
               0.2157380237165567}}, {1, 2, 3}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
                    0.11665387389553983`, 0.5170807992678264}, {
                    0.09334101256154081, 0.2157380237165567}}, {1, 2, 3}]}, 
                    ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{0.6459236020928605, 0.554354507253269}, {
            0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
            0.2157380237165567}}, {1, 2, 3}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8035602280676517`*^9, 3.803560467419273*^9, 3.8035617888330297`*^9, 
   3.80356226190351*^9, {3.8035623231007357`*^9, 3.803562351290145*^9}, 
   3.803602778853559*^9, 3.8036418215313187`*^9, 3.803642117576817*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"bc58a2c0-2243-40ba-8ced-d25e72435763"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"triangleTests2", "=", 
   RowBox[{
    RowBox[{"Function", "[", "\[IndentingNewLine]", 
     RowBox[{"triangle", ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "@", "triangle"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"#", "/", "Degree"}], "]"}], "&"}], "/@", 
             RowBox[{"PolygonAngle", "[", "triangle", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"N", "@*", "EuclideanDistance"}], "@@", "#"}], "&"}], "/@", 
             RowBox[{"Subsets", "[", 
              RowBox[{
               RowBox[{"First", "[", 
                RowBox[{"List", "@@", "triangle"}], "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"answer", "=", 
                RowBox[{"#", "[", "triangle", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"TextString", "[", 
                 RowBox[{"answer", ",", 
                  RowBox[{"BooleanStrings", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Yes\>\"", ",", "\"\<No\>\""}], " ", 
                    "}"}]}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{"answer", ",", "Blue", ",", "Red"}], "]"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
           "triangleQs"}]}], "}"}], ",", "\[IndentingNewLine]", "1"}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "/@", 
    RowBox[{"Polygon", "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"50", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"triangleTests2", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graphics\>\"", ",", "\"\<Interior angles\>\"", ",", 
        "\"\<Side lengths\>\"", ",", " ", "\"\<Triangle?\>\"", ",", " ", 
        "\"\<Right?\>\"", ",", " ", "\"\<Equilateral?\>\"", ",", 
        "\"\<Isosceles?\>\"", ",", "\"\<Scalene?\>\"", ",", 
        "\"\<Obtuse?\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803318630175872*^9, 3.8033186576983337`*^9}, {
   3.803318702576593*^9, 3.8033187056388617`*^9}, 3.803318792791709*^9, {
   3.8033188263509693`*^9, 3.80331888079598*^9}, {3.803500816459*^9, 
   3.8035008172883*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"607cc14e-51dc-42a7-9bdc-223518723f7f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Interior angles\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Side lengths\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Triangle?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Right?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Equilateral?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Isosceles?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Scalene?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Obtuse?\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
       12.546527969299213`, 38.439387358387066`}, {41.746416730155204`, 
       16.750679821869525`}}]], 
     RowBox[{"{", 
      RowBox[{
      "358.98862121746976`", ",", "348.16535931562163`", ",", 
       "192.84601946690861`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "39.43182145600646`", ",", "3.130503439429819`", ",", 
       "36.3735279874108`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{44.6116, 15.4895}, {12.5465, \
38.4394}, {41.7464, 16.7507}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.61163257750725, 15.489493898872993`}, {
              12.546527969299213`, 38.439387358387066`}, {41.746416730155204`,
               16.750679821869525`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.61163257750725, 15.489493898872993`}, {
            12.546527969299213`, 38.439387358387066`}, {41.746416730155204`, 
            16.750679821869525`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{44.6116, 15.4895}, {12.5465, \
38.4394}, {41.7464, 16.7507}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.61163257750725, 15.489493898872993`}, {
              12.546527969299213`, 38.439387358387066`}, {41.746416730155204`,
               16.750679821869525`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.61163257750725, 15.489493898872993`}, {
            12.546527969299213`, 38.439387358387066`}, {41.746416730155204`, 
            16.750679821869525`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{44.6116, 15.4895}, \
{12.5465, 38.4394}, {41.7464, 16.7507}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.61163257750725, 15.489493898872993`}, {
              12.546527969299213`, 38.439387358387066`}, {41.746416730155204`,
               16.750679821869525`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.61163257750725, 15.489493898872993`}, {
            12.546527969299213`, 38.439387358387066`}, {41.746416730155204`, 
            16.750679821869525`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{44.6116, 15.4895}, {12.5465, \
38.4394}, {41.7464, 16.7507}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.61163257750725, 15.489493898872993`}, {
              12.546527969299213`, 38.439387358387066`}, {41.746416730155204`,
               16.750679821869525`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.61163257750725, 15.489493898872993`}, {
            12.546527969299213`, 38.439387358387066`}, {41.746416730155204`, 
            16.750679821869525`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{44.6116, 15.4895}, {12.5465, \
38.4394}, {41.7464, 16.7507}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.61163257750725, 15.489493898872993`}, {
              12.546527969299213`, 38.439387358387066`}, {41.746416730155204`,
               16.750679821869525`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.61163257750725, 15.489493898872993`}, {
            12.546527969299213`, 38.439387358387066`}, {41.746416730155204`, 
            16.750679821869525`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{44.6116, 15.4895}, {12.5465, \
38.4394}, {41.7464, 16.7507}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.61163257750725, 15.489493898872993`}, {
              12.546527969299213`, 38.439387358387066`}, {41.746416730155204`,
               16.750679821869525`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.61163257750725, 15.489493898872993`}, {
                    12.546527969299213`, 38.439387358387066`}, {
                    41.746416730155204`, 16.750679821869525`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.61163257750725, 15.489493898872993`}, {
            12.546527969299213`, 38.439387358387066`}, {41.746416730155204`, 
            16.750679821869525`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
       7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
       0.9259930254086299}}]], 
     RowBox[{"{", 
      RowBox[{
      "61.66041681251143`", ",", "64.09731476557246`", ",", 
       "54.24226842191612`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "33.3444874603465`", ",", "32.62581509807129`", ",", 
       "30.0808973150112`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{40.2893, 28.8037}, {7.04573, \
26.2115}, {23.3401, 0.925993}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.28930128400202, 28.803707118856153`}, {
              7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
              0.9259930254086299}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.28930128400202, 28.803707118856153`}, {
            7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
            0.9259930254086299}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{40.2893, 28.8037}, {7.04573, \
26.2115}, {23.3401, 0.925993}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.28930128400202, 28.803707118856153`}, {
              7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
              0.9259930254086299}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.28930128400202, 28.803707118856153`}, {
            7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
            0.9259930254086299}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{40.2893, 28.8037}, \
{7.04573, 26.2115}, {23.3401, 0.925993}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.28930128400202, 28.803707118856153`}, {
              7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
              0.9259930254086299}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           Polygon[{{40.28930128400202, 28.803707118856153`}, {
            7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
            0.9259930254086299}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{40.2893, 28.8037}, {7.04573, \
26.2115}, {23.3401, 0.925993}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.28930128400202, 28.803707118856153`}, {
              7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
              0.9259930254086299}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.28930128400202, 28.803707118856153`}, {
            7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
            0.9259930254086299}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{40.2893, 28.8037}, {7.04573, \
26.2115}, {23.3401, 0.925993}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.28930128400202, 28.803707118856153`}, {
              7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
              0.9259930254086299}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.28930128400202, 28.803707118856153`}, {
            7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
            0.9259930254086299}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{40.2893, 28.8037}, {7.04573, \
26.2115}, {23.3401, 0.925993}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.28930128400202, 28.803707118856153`}, {
              7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
              0.9259930254086299}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.28930128400202, 28.803707118856153`}, {
                    7.045728396345339, 26.211467612895646`}, {
                    23.340057414804377`, 0.9259930254086299}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.28930128400202, 28.803707118856153`}, {
            7.045728396345339, 26.211467612895646`}, {23.340057414804377`, 
            0.9259930254086299}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
       36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
       33.729540678634464`}}]], 
     RowBox[{"{", 
      RowBox[{
      "345.3357536634989`", ",", "337.91750603444825`", ",", 
       "216.74674030205287`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "16.241087216224184`", ",", "24.1184647570512`", ",", 
       "38.382526343668395`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{22.3879, 12.1319}, {36.8815, \
4.80325}, {11.6528, 33.7295}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{22.387906632625615`, 12.131926697410542`}, {
              36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
              33.729540678634464`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{22.387906632625615`, 12.131926697410542`}, {
            36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
            33.729540678634464`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{22.3879, 12.1319}, {36.8815, \
4.80325}, {11.6528, 33.7295}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{22.387906632625615`, 12.131926697410542`}, {
              36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
              33.729540678634464`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{22.387906632625615`, 12.131926697410542`}, {
            36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
            33.729540678634464`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{22.3879, 12.1319}, \
{36.8815, 4.80325}, {11.6528, 33.7295}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{22.387906632625615`, 12.131926697410542`}, {
              36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
              33.729540678634464`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{22.387906632625615`, 12.131926697410542`}, {
            36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
            33.729540678634464`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{22.3879, 12.1319}, {36.8815, \
4.80325}, {11.6528, 33.7295}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{22.387906632625615`, 12.131926697410542`}, {
              36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
              33.729540678634464`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{22.387906632625615`, 12.131926697410542`}, {
            36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
            33.729540678634464`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{22.3879, 12.1319}, {36.8815, \
4.80325}, {11.6528, 33.7295}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{22.387906632625615`, 12.131926697410542`}, {
              36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
              33.729540678634464`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{22.387906632625615`, 12.131926697410542`}, {
            36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
            33.729540678634464`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{22.3879, 12.1319}, {36.8815, \
4.80325}, {11.6528, 33.7295}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{22.387906632625615`, 12.131926697410542`}, {
              36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
              33.729540678634464`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{22.387906632625615`, 12.131926697410542`}, {
                    36.88146990378124, 4.803247575630863}, {
                    11.652758168111411`, 33.729540678634464`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{22.387906632625615`, 12.131926697410542`}, {
            36.88146990378124, 4.803247575630863}, {11.652758168111411`, 
            33.729540678634464`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
       44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
       23.663077132711663`}}]], 
     RowBox[{"{", 
      RowBox[{
      "358.5100646062703`", ",", "183.77672625873458`", ",", 
       "357.7132091349951`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "42.61986957548505`", ",", "25.817981917699075`", ",", 
       "16.824014813670566`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{2.74592, 17.3328}, {44.3226, \
26.7048}, {27.7758, 23.6631}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{2.7459222587923406`, 17.33281055613712}, {
              44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
              23.663077132711663`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{2.7459222587923406`, 17.33281055613712}, {
            44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
            23.663077132711663`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{2.74592, 17.3328}, {44.3226, \
26.7048}, {27.7758, 23.6631}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{2.7459222587923406`, 17.33281055613712}, {
              44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
              23.663077132711663`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{2.7459222587923406`, 17.33281055613712}, {
            44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
            23.663077132711663`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{2.74592, 17.3328}, \
{44.3226, 26.7048}, {27.7758, 23.6631}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{2.7459222587923406`, 17.33281055613712}, {
              44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
              23.663077132711663`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{2.7459222587923406`, 17.33281055613712}, {
            44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
            23.663077132711663`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{2.74592, 17.3328}, {44.3226, \
26.7048}, {27.7758, 23.6631}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{2.7459222587923406`, 17.33281055613712}, {
              44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
              23.663077132711663`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{2.7459222587923406`, 17.33281055613712}, {
            44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
            23.663077132711663`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{2.74592, 17.3328}, {44.3226, \
26.7048}, {27.7758, 23.6631}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{2.7459222587923406`, 17.33281055613712}, {
              44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
              23.663077132711663`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{2.7459222587923406`, 17.33281055613712}, {
            44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
            23.663077132711663`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{2.74592, 17.3328}, {44.3226, \
26.7048}, {27.7758, 23.6631}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{2.7459222587923406`, 17.33281055613712}, {
              44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
              23.663077132711663`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{2.7459222587923406`, 17.33281055613712}, {
                    44.32258248050742, 26.704822476712692`}, {
                    27.77582268552476, 23.663077132711663`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{2.7459222587923406`, 17.33281055613712}, {
            44.32258248050742, 26.704822476712692`}, {27.77582268552476, 
            23.663077132711663`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{36.2333081878276, 3.405730089675316}, {32.118232371563664`,
        17.691126020770042`}, {17.121150116454544`, 24.601634256417228`}}]], 
     RowBox[{"{", 
      RowBox[{
      "23.219514490249168`", ",", "25.971033107352447`", ",", 
       "130.80945240239836`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "14.86628352621253`", ",", "28.540163622356083`", ",", 
       "16.5126497038318`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{36.2333, 3.40573}, {32.1182, \
17.6911}, {17.1212, 24.6016}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{36.2333081878276, 3.405730089675316}, {
              32.118232371563664`, 17.691126020770042`}, {17.121150116454544`,
               24.601634256417228`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{36.2333081878276, 3.405730089675316}, {
            32.118232371563664`, 17.691126020770042`}, {17.121150116454544`, 
            24.601634256417228`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{36.2333, 3.40573}, {32.1182, \
17.6911}, {17.1212, 24.6016}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{36.2333081878276, 3.405730089675316}, {
              32.118232371563664`, 17.691126020770042`}, {17.121150116454544`,
               24.601634256417228`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{36.2333081878276, 3.405730089675316}, {
            32.118232371563664`, 17.691126020770042`}, {17.121150116454544`, 
            24.601634256417228`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{36.2333, 3.40573}, \
{32.1182, 17.6911}, {17.1212, 24.6016}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{36.2333081878276, 3.405730089675316}, {
              32.118232371563664`, 17.691126020770042`}, {17.121150116454544`,
               24.601634256417228`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{36.2333081878276, 3.405730089675316}, {
            32.118232371563664`, 17.691126020770042`}, {17.121150116454544`, 
            24.601634256417228`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{36.2333, 3.40573}, {32.1182, \
17.6911}, {17.1212, 24.6016}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{36.2333081878276, 3.405730089675316}, {
              32.118232371563664`, 17.691126020770042`}, {17.121150116454544`,
               24.601634256417228`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{36.2333081878276, 3.405730089675316}, {
            32.118232371563664`, 17.691126020770042`}, {17.121150116454544`, 
            24.601634256417228`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{36.2333, 3.40573}, {32.1182, \
17.6911}, {17.1212, 24.6016}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{36.2333081878276, 3.405730089675316}, {
              32.118232371563664`, 17.691126020770042`}, {17.121150116454544`,
               24.601634256417228`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{36.2333081878276, 3.405730089675316}, {
            32.118232371563664`, 17.691126020770042`}, {17.121150116454544`, 
            24.601634256417228`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{36.2333, 3.40573}, {32.1182, \
17.6911}, {17.1212, 24.6016}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{36.2333081878276, 3.405730089675316}, {
              32.118232371563664`, 17.691126020770042`}, {17.121150116454544`,
               24.601634256417228`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{36.2333081878276, 3.405730089675316}, {
                    32.118232371563664`, 17.691126020770042`}, {
                    17.121150116454544`, 24.601634256417228`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{36.2333081878276, 3.405730089675316}, {
            32.118232371563664`, 17.691126020770042`}, {17.121150116454544`, 
            24.601634256417228`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
       2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
       39.807870724794185`}}]], 
     RowBox[{"{", 
      RowBox[{
      "31.016260587456262`", ",", "135.09121444855307`", ",", 
       "13.892524963990658`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "14.243167320273471`", ",", "30.567244245766716`", ",", 
       "41.879780440025186`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{16.3366, 18.2469}, {2.09339, \
18.2593}, {38.0041, 39.8079}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{16.336550649384364`, 18.24690752948696}, {
              2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
              39.807870724794185`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{16.336550649384364`, 18.24690752948696}, {
            2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
            39.807870724794185`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{16.3366, 18.2469}, {2.09339, \
18.2593}, {38.0041, 39.8079}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{16.336550649384364`, 18.24690752948696}, {
              2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
              39.807870724794185`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{16.336550649384364`, 18.24690752948696}, {
            2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
            39.807870724794185`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{16.3366, 18.2469}, \
{2.09339, 18.2593}, {38.0041, 39.8079}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{16.336550649384364`, 18.24690752948696}, {
              2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
              39.807870724794185`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{16.336550649384364`, 18.24690752948696}, {
            2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
            39.807870724794185`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{16.3366, 18.2469}, {2.09339, \
18.2593}, {38.0041, 39.8079}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{16.336550649384364`, 18.24690752948696}, {
              2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
              39.807870724794185`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{16.336550649384364`, 18.24690752948696}, {
            2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
            39.807870724794185`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{16.3366, 18.2469}, {2.09339, \
18.2593}, {38.0041, 39.8079}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{16.336550649384364`, 18.24690752948696}, {
              2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
              39.807870724794185`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{16.336550649384364`, 18.24690752948696}, {
            2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
            39.807870724794185`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{16.3366, 18.2469}, {2.09339, \
18.2593}, {38.0041, 39.8079}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{16.336550649384364`, 18.24690752948696}, {
              2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
              39.807870724794185`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{16.336550649384364`, 18.24690752948696}, {
                    2.0933887554022803`, 18.259340353900882`}, {
                    38.00406750921317, 39.807870724794185`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{16.336550649384364`, 18.24690752948696}, {
            2.0933887554022803`, 18.259340353900882`}, {38.00406750921317, 
            39.807870724794185`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
       38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
       34.09867987491417}}]], 
     RowBox[{"{", 
      RowBox[{
      "16.600243739234507`", ",", "30.568558770769958`", ",", 
       "132.83119748999556`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "17.701249847450775`", ",", "45.438321263803914`", ",", 
       "31.51048337269699`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{44.1751, 4.4852}, {38.4825, \
21.2461}, {9.7123, 34.0987}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.175072933512354`, 4.485199917217464}, {
              38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
              34.09867987491417}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.175072933512354`, 4.485199917217464}, {
            38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
            34.09867987491417}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{44.1751, 4.4852}, {38.4825, \
21.2461}, {9.7123, 34.0987}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.175072933512354`, 4.485199917217464}, {
              38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
              34.09867987491417}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.175072933512354`, 4.485199917217464}, {
            38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
            34.09867987491417}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{44.1751, 4.4852}, {38.4825, \
21.2461}, {9.7123, 34.0987}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.175072933512354`, 4.485199917217464}, {
              38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
              34.09867987491417}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.175072933512354`, 4.485199917217464}, {
            38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
            34.09867987491417}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{44.1751, 4.4852}, {38.4825, \
21.2461}, {9.7123, 34.0987}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.175072933512354`, 4.485199917217464}, {
              38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
              34.09867987491417}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.175072933512354`, 4.485199917217464}, {
            38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
            34.09867987491417}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{44.1751, 4.4852}, {38.4825, \
21.2461}, {9.7123, 34.0987}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.175072933512354`, 4.485199917217464}, {
              38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
              34.09867987491417}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.175072933512354`, 4.485199917217464}, {
            38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
            34.09867987491417}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{44.1751, 4.4852}, {38.4825, \
21.2461}, {9.7123, 34.0987}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{44.175072933512354`, 4.485199917217464}, {
              38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
              34.09867987491417}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{44.175072933512354`, 4.485199917217464}, {
                    38.482460544081846`, 21.24611905506842}, {
                    9.71229817482888, 34.09867987491417}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{44.175072933512354`, 4.485199917217464}, {
            38.482460544081846`, 21.24611905506842}, {9.71229817482888, 
            34.09867987491417}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{40.85772684407924, 41.9635587276526}, {47.3326770446924, 
       18.80823284060837}, {20.065462693852822`, 44.178318309197905`}}]], 
     RowBox[{"{", 
      RowBox[{
      "36.85573492003871`", ",", "31.44148719253728`", ",", 
       "111.70277788742402`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "24.04358744105465`", ",", "20.90988781645749`", ",", 
       "37.24435816520631`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{40.8577, 41.9636}, {47.3327, \
18.8082}, {20.0655, 44.1783}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.85772684407924, 41.9635587276526}, {
              47.3326770446924, 18.80823284060837}, {20.065462693852822`, 
              44.178318309197905`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.85772684407924, 41.9635587276526}, {47.3326770446924, 
            18.80823284060837}, {20.065462693852822`, 44.178318309197905`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{40.8577, 41.9636}, {47.3327, \
18.8082}, {20.0655, 44.1783}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.85772684407924, 41.9635587276526}, {
              47.3326770446924, 18.80823284060837}, {20.065462693852822`, 
              44.178318309197905`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.85772684407924, 41.9635587276526}, {47.3326770446924, 
            18.80823284060837}, {20.065462693852822`, 44.178318309197905`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{40.8577, 41.9636}, \
{47.3327, 18.8082}, {20.0655, 44.1783}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.85772684407924, 41.9635587276526}, {
              47.3326770446924, 18.80823284060837}, {20.065462693852822`, 
              44.178318309197905`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.85772684407924, 41.9635587276526}, {47.3326770446924, 
            18.80823284060837}, {20.065462693852822`, 44.178318309197905`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{40.8577, 41.9636}, {47.3327, \
18.8082}, {20.0655, 44.1783}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.85772684407924, 41.9635587276526}, {
              47.3326770446924, 18.80823284060837}, {20.065462693852822`, 
              44.178318309197905`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.85772684407924, 41.9635587276526}, {47.3326770446924, 
            18.80823284060837}, {20.065462693852822`, 44.178318309197905`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{40.8577, 41.9636}, {47.3327, \
18.8082}, {20.0655, 44.1783}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.85772684407924, 41.9635587276526}, {
              47.3326770446924, 18.80823284060837}, {20.065462693852822`, 
              44.178318309197905`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.85772684407924, 41.9635587276526}, {47.3326770446924, 
            18.80823284060837}, {20.065462693852822`, 44.178318309197905`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{40.8577, 41.9636}, {47.3327, \
18.8082}, {20.0655, 44.1783}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{40.85772684407924, 41.9635587276526}, {
              47.3326770446924, 18.80823284060837}, {20.065462693852822`, 
              44.178318309197905`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{40.85772684407924, 41.9635587276526}, {
                    47.3326770446924, 18.80823284060837}, {
                    20.065462693852822`, 44.178318309197905`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{40.85772684407924, 41.9635587276526}, {47.3326770446924, 
            18.80823284060837}, {20.065462693852822`, 44.178318309197905`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
       1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
       20.675078748553517`}}]], 
     RowBox[{"{", 
      RowBox[{
      "27.284574011788234`", ",", "6.178067063685908`", ",", 
       "146.53735892452585`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "7.2979308457107575`", ",", "31.086084193763536`", ",", 
       "37.39151153143779`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{8.62191, 27.1519}, {1.82885, \
24.4847}, {39.0258, 20.6751}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{8.621913292106221, 27.151940738728143`}, {
              1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
              20.675078748553517`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{8.621913292106221, 27.151940738728143`}, {
            1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
            20.675078748553517`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{8.62191, 27.1519}, {1.82885, \
24.4847}, {39.0258, 20.6751}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{8.621913292106221, 27.151940738728143`}, {
              1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
              20.675078748553517`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{8.621913292106221, 27.151940738728143`}, {
            1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
            20.675078748553517`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{8.62191, 27.1519}, \
{1.82885, 24.4847}, {39.0258, 20.6751}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{8.621913292106221, 27.151940738728143`}, {
              1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
              20.675078748553517`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{8.621913292106221, 27.151940738728143`}, {
            1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
            20.675078748553517`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{8.62191, 27.1519}, {1.82885, \
24.4847}, {39.0258, 20.6751}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{8.621913292106221, 27.151940738728143`}, {
              1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
              20.675078748553517`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{8.621913292106221, 27.151940738728143`}, {
            1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
            20.675078748553517`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{8.62191, 27.1519}, {1.82885, \
24.4847}, {39.0258, 20.6751}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{8.621913292106221, 27.151940738728143`}, {
              1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
              20.675078748553517`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{8.621913292106221, 27.151940738728143`}, {
            1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
            20.675078748553517`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{8.62191, 27.1519}, {1.82885, \
24.4847}, {39.0258, 20.6751}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{8.621913292106221, 27.151940738728143`}, {
              1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
              20.675078748553517`}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{8.621913292106221, 27.151940738728143`}, {
                    1.8288450397923128`, 24.48472902081346}, {
                    39.02577635688775, 20.675078748553517`}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{8.621913292106221, 27.151940738728143`}, {
            1.8288450397923128`, 24.48472902081346}, {39.02577635688775, 
            20.675078748553517`}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]},
    {
     GraphicsBox[
      PolygonBox[{{48.96042712913578, 48.6057667965745}, {10.436318071806546`,
        3.7984816173812774`}, {49.778833306401, 8.260579698155368}}]], 
     RowBox[{"{", 
      RowBox[{
      "42.841287443233`", ",", "95.30855652713265`", ",", 
       "41.85015602963434`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "59.091452713489325`", ",", "40.35348697048907`", ",", 
       "39.59474490720636`"}], "}"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TrianglePolygonQ[Polygon[{{48.9604, 48.6058}, {10.4363, \
3.79848}, {49.7788, 8.26058}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrianglePolygonQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{48.96042712913578, 48.6057667965745}, {
              10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
              8.260579698155368}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{48.96042712913578, 48.6057667965745}, {
            10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
            8.260579698155368}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleRightQ[Polygon[{{48.9604, 48.6058}, {10.4363, \
3.79848}, {49.7788, 8.26058}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleRightQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{48.96042712913578, 48.6057667965745}, {
              10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
              8.260579698155368}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{48.96042712913578, 48.6057667965745}, {
            10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
            8.260579698155368}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleEquilateralQ[Polygon[{{48.9604, 48.6058}, \
{10.4363, 3.79848}, {49.7788, 8.26058}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleEquilateralQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{48.96042712913578, 48.6057667965745}, {
              10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
              8.260579698155368}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{48.96042712913578, 48.6057667965745}, {
            10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
            8.260579698155368}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleIsoscelesQ[Polygon[{{48.9604, 48.6058}, {10.4363, \
3.79848}, {49.7788, 8.26058}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleIsoscelesQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{48.96042712913578, 48.6057667965745}, {
              10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
              8.260579698155368}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{48.96042712913578, 48.6057667965745}, {
            10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
            8.260579698155368}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleScaleneQ[Polygon[{{48.9604, 48.6058}, {10.4363, \
3.79848}, {49.7788, 8.26058}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleScaleneQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{48.96042712913578, 48.6057667965745}, {
              10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
              8.260579698155368}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{48.96042712913578, 48.6057667965745}, {
            10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
            8.260579698155368}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}], 
     RowBox[{"Style", "[", 
      RowBox[{"\<\"TriangleObtuseQ[Polygon[{{48.9604, 48.6058}, {10.4363, \
3.79848}, {49.7788, 8.26058}}]]\"\>", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TriangleObtuseQ", "[", 
          InterpretationBox[
           RowBox[{
            TagBox["Polygon",
             "SummaryHead"], "[", 
            
            DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
             "Ready", Typeset`spolygon$$ = 
             Polygon[{{48.96042712913578, 48.6057667965745}, {
              10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
              8.260579698155368}}]}, 
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{
                    Directive[
                    Hue[0.6, 0.3, 0.85], 
                    EdgeForm[
                    Hue[0.6, 0.3, 0.85]]], 
                    
                    PolygonBox[{{48.96042712913578, 48.6057667965745}, {
                    10.436318071806546`, 3.7984816173812774`}, {
                    49.778833306401, 8.260579698155368}}]}, ImageSize -> 
                    Dynamic[{5.25, 3.5} CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Number of points: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Embedding dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                    TrackedSymbols :> {}, CachedValue :> 
                    AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]},
              "SummaryPanel"],
             DynamicModuleValues:>{}], "]"}],
           
           Polygon[{{48.96042712913578, 48.6057667965745}, {
            10.436318071806546`, 3.7984816173812774`}, {49.778833306401, 
            8.260579698155368}}],
           Editable->False,
           SelectWithContents->True,
           Selectable->False], "]"}], ",", "Blue", ",", "Red"}], "]"}]}], 
      "]"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.803383753897081*^9, 3.803500818516005*^9, 3.803559462497656*^9, 
   3.803561789485498*^9, 3.803562262060502*^9, {3.8035623232265472`*^9, 
   3.803562351417768*^9}, 3.803602779252792*^9, 3.803641822033422*^9, 
   3.803642117989937*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"82a0ef77-00db-4909-adc2-d017129de738"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TriangleCharacteristics", "Subsubsection",
 CellChangeTimes->{3.803386983523633*^9, 3.803501931843246*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"5cfb6d02-5695-4c9b-8e4a-08664ecbc606"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleCharacteristics", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rules", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"TriangleRightQ", "\[Rule]", " ", "\"\<Right\>\""}], ",", 
         RowBox[{
         "TriangleEquilateralQ", "\[Rule]", " ", "\"\<Equilateral\>\""}], ",", 
         RowBox[{"TriangleIsoscelesQ", "\[Rule]", " ", "\"\<Isosceles\>\""}], 
         ",", 
         RowBox[{"TriangleScaleneQ", "\[Rule]", " ", "\"\<Scalene\>\""}], ",", 
         RowBox[{"TriangleObtuseQ", "\[Rule]", " ", "\"\<Obtuse\>\""}]}], 
        "|>"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Keys", "@", "rules"}], ",", 
        RowBox[{
         RowBox[{"#", "@", "triangle"}], "&"}]}], "]"}], "/.", "rules"}]}], 
    "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"TriangleQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.803386945473207*^9, 3.803386969037682*^9}, {
   3.803387033400853*^9, 3.803387100828545*^9}, {3.803387135883623*^9, 
   3.8033872998146276`*^9}, 3.803387361397603*^9, {3.803501928017981*^9, 
   3.803501990750227*^9}, {3.803502028281662*^9, 3.803502029350548*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"f6318ef7-9f0a-44ad-a6cc-f2286c2f9213"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TriangleCharacteristics", "/@", "triangles"}]], "Input",
 CellChangeTimes->{{3.803387326146502*^9, 3.803387332847156*^9}, 
   3.803502034817812*^9},
 CellLabel->
  "In[183]:=",ExpressionUUID->"e340d372-73cc-410a-af79-133bc20febbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Isosceles\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Equilateral\"\>", ",", "\<\"Isosceles\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Scalene\"\>", ",", "\<\"Obtuse\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Scalene\"\>", ",", "\<\"Obtuse\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8033873337188673`*^9, 3.803502036624641*^9, 
  3.803561790163952*^9, 3.803562443852152*^9, 3.803602781370694*^9, 
  3.803641822145114*^9, 3.803642123294298*^9, 3.80364217615009*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"0d35d64c-dbd1-4d4d-b266-55a9666bb67d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TriangleGreatestSide", "Subsubsection",
 CellChangeTimes->{{3.803516754947209*^9, 3.803516771425804*^9}, {
   3.803596519146295*^9, 3.803596522345318*^9}, 3.803596906204825*^9},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"764cdf9d-bca4-4ae3-a478-8071f1beb97c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleGreatestSide", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "coordinates", ",", "sides", ",", "lengths", ",", 
       "greatestSideCoordinate"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coordinates", "=", 
       RowBox[{"PolygonCoordinates", "@", "triangle"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sides", "=", 
       RowBox[{"Subsets", "[", 
        RowBox[{"coordinates", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lengths", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"N", "@*", "EuclideanDistance"}], "@@", "#"}]}], "}"}], 
         "&"}], "/@", "sides"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"greatestSideCoordinate", "=", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"lengths", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "@", "#1"}], ">", 
            RowBox[{"Last", "@", "#2"}]}], "&"}]}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", "greatestSideCoordinate"}]}], 
    "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"TrianglePolygonQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.803516865873831*^9, 3.803517059722172*^9}, 
   3.803517142074423*^9, {3.8035171745581627`*^9, 3.80351727486038*^9}, {
   3.803517355691044*^9, 3.803517375530106*^9}, {3.803517452952804*^9, 
   3.803517593828306*^9}, {3.8035176929504147`*^9, 3.80351773056859*^9}, {
   3.803517800579816*^9, 3.803517812877452*^9}, {3.803517904884763*^9, 
   3.8035179501460323`*^9}, {3.803517992739291*^9, 3.803518021263606*^9}, {
   3.8035183782493973`*^9, 3.803518378848991*^9}, {3.803518514566259*^9, 
   3.80351851613239*^9}, {3.803518703096383*^9, 3.803518767256588*^9}, {
   3.8035206811344433`*^9, 3.803520684944766*^9}, {3.803520956655237*^9, 
   3.8035209639996157`*^9}, {3.8035807521182632`*^9, 3.803580752938377*^9}, {
   3.803596296222474*^9, 3.8035963046990547`*^9}, {3.803596427421998*^9, 
   3.803596464024602*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"e4aa06af-b07f-498a-8c95-7d1694fae701"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803596533978627*^9, 3.803596535468951*^9}, 
   3.803596695678783*^9},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6429722e-85af-4cac-9475-5daccfb3b760"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sideTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"side", "=", 
         RowBox[{"TriangleGreatestSide", "@", "#"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"side", ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Pink", ",", "#", ",", "Black", ",", "Thick", ",", 
             RowBox[{"Line", "@", "side"}]}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    RowBox[{"Polygon", "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"sideTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803580773871606*^9, 3.8035809784091682`*^9}, {
   3.8035810115230722`*^9, 3.8035810474816504`*^9}, {3.803581365088725*^9, 
   3.8035813834505873`*^9}, {3.803581434590345*^9, 3.803581435126645*^9}, {
   3.8035814798864*^9, 3.803581498040309*^9}, {3.803581542055098*^9, 
   3.803581586159856*^9}, {3.8035820365551767`*^9, 3.803582037169187*^9}, {
   3.803587885397213*^9, 3.803587899134253*^9}, {3.80358792996642*^9, 
   3.8035879345793133`*^9}, {3.8035895852310667`*^9, 3.80358962038122*^9}, 
   3.8035898535599546`*^9, 3.8035900713018293`*^9, {3.803596104814485*^9, 
   3.803596104944394*^9}, {3.80359655415583*^9, 3.8035965950013723`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"69f9e9ac-82f2-4ac8-9c22-f22f5b75a6c2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.3043510489937535`", ",", "1.6941380465658522`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"9.33112934165274`", ",", "8.136486691435508`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{8.333664232057739, 6.318053154683664}, {9.33112934165274,
          8.136486691435508}, {4.3043510489937535`, 1.6941380465658522`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{4.3043510489937535`, 1.6941380465658522`}, {
         9.33112934165274, 8.136486691435508}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.1270643186936944`", ",", "1.5345403510779771`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"8.701717285081912`", ",", "6.452880150252135`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{6.838873861036035, 0.21554183566972895`}, {
         1.1270643186936944`, 1.5345403510779771`}, {8.701717285081912, 
         6.452880150252135}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{1.1270643186936944`, 1.5345403510779771`}, {
         8.701717285081912, 6.452880150252135}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.7440926287580663`", ",", "3.2775116799912105`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"9.455604787600265`", ",", "8.181106267547982`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{2.492914763369633, 4.7893756508552805`}, {
         9.455604787600265, 8.181106267547982}, {0.7440926287580663, 
         3.2775116799912105`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.7440926287580663, 3.2775116799912105`}, {
         9.455604787600265, 8.181106267547982}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.827823867841714`", ",", "5.056313880452709`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.101872611915429`", ",", "9.563789179785669`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{7.101872611915429, 9.563789179785669}, {
         7.655540784487009, 5.413858364910258}, {4.827823867841714, 
         5.056313880452709}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{4.827823867841714, 5.056313880452709}, {7.101872611915429, 
         9.563789179785669}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8.681446196417763`", ",", "6.204567751634038`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9.474658171999625`", ",", "0.8079780943708634`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{6.754477319204852, 3.259421807570721}, {
         8.681446196417763, 6.204567751634038}, {9.474658171999625, 
         0.8079780943708634}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{8.681446196417763, 6.204567751634038}, {9.474658171999625, 
         0.8079780943708634}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.34437076812536205`", ",", "3.102804044442891`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"6.930118198171815`", ",", "2.984435897861985`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{4.913166399668423, 6.60029538342965}, {6.930118198171815,
          2.984435897861985}, {0.34437076812536205`, 3.102804044442891}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.34437076812536205`, 3.102804044442891}, {
         6.930118198171815, 2.984435897861985}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.098092419983285`", ",", "8.013099398092429`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.225770769615744`", ",", "3.4964578450075567`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{3.2179399752246063`, 5.781944991539712}, {
         4.098092419983285, 8.013099398092429}, {4.225770769615744, 
         3.4964578450075567`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{4.098092419983285, 8.013099398092429}, {4.225770769615744, 
         3.4964578450075567`}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.8665722943273781`", ",", "0.6649666518131703`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"4.0801432042167605`", ",", "7.945491542074464`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{4.0801432042167605`, 7.945491542074464}, {
         4.9751632719142584`, 2.2845945772863843`}, {1.8665722943273781`, 
         0.6649666518131703}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{1.8665722943273781`, 0.6649666518131703}, {
         4.0801432042167605`, 7.945491542074464}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.6810965117774472`", ",", "3.337344351072675`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"9.87236320710916`", ",", "4.956999603623725`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{0.6810965117774472, 3.337344351072675}, {
         9.87236320710916, 4.956999603623725}, {5.102438513158056, 
         1.8503744018416768`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.6810965117774472, 3.337344351072675}, {9.87236320710916, 
         4.956999603623725}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.3552773054002607`", ",", "0.8955845599415291`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"8.425807984734483`", ",", "0.9125405635726764`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{5.062051199643108, 4.460329650870172}, {
         1.3552773054002607`, 0.8955845599415291}, {8.425807984734483, 
         0.9125405635726764}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{1.3552773054002607`, 0.8955845599415291}, {
         8.425807984734483, 0.9125405635726764}}]}},
      Axes->True]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803596715274436*^9, 3.8036027839139357`*^9, 
  3.803641822258789*^9, 3.803642123382646*^9, 3.803642183349806*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"c857b125-aade-4e30-ba3a-15327b04b935"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sideTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"side", "=", 
         RowBox[{"TriangleGreatestSide", "@", "#"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"side", ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Pink", ",", "#", ",", "Black", ",", "Thick", ",", 
             RowBox[{"Line", "@", "side"}]}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", "triangles"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"sideTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803599149363646*^9, 3.803599238664747*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"ff113470-d226-4681-a081-4731e369e010"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        TagBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}}],
         "Triangle"]}, 
       {GrayLevel[0], Thickness[Large], LineBox[{{0, 1}, {1, 0}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}]}], "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        TagBox[
         PolygonBox[
          NCache[{{0, 0}, {2, 0}, {
            Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
            0}, {1.5, 0.8660254037844386}}]],
         "Triangle"]}, 
       {GrayLevel[0], Thickness[Large], LineBox[{{0, 0}, {2, 0}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "0"}], "}"}]}], "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        TagBox[
         PolygonBox[
          NCache[{{0, 0}, {5, 0}, {Rational[16, 5], Rational[12, 5]}}, {{0, 
            0}, {5, 0}, {3.2, 2.4}}]],
         "Triangle"]}, 
       {GrayLevel[0], Thickness[Large], LineBox[{{0, 0}, {5, 0}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         SqrtBox["5"], ",", "0"}], "}"}]}], "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        TagBox[
         PolygonBox[
          NCache[{{0, 0}, {5^Rational[1, 2], 0}, {
            4 5^Rational[-1, 2], 2 5^Rational[-1, 2]}}, {{0, 0}, {
            2.23606797749979, 0}, {1.7888543819998317`, 0.8944271909999159}}]],
         "Triangle"]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[NCache[{{0, 0}, {5^Rational[1, 2], 0}}, {{0, 0}, {
           2.23606797749979, 0}}]]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        TagBox[
         PolygonBox[
          NCache[{{0, 0}, {1, 0}, {
            Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
            0}, {0.75, 0.4330127018922193}}]],
         "Triangle"]}, 
       {GrayLevel[0], Thickness[Large], LineBox[{{0, 0}, {1, 0}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SqrtBox["3"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 0}, {
           0, 1.7320508075688772`}, {-1, 0}}]]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[NCache[{{0, 3^Rational[1, 2]}, {1, 0}}, {{
           0, 1.7320508075688772`}, {1, 0}}]]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "20"}], "}"}]}], "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}, 
       {GrayLevel[0], Thickness[Large], LineBox[{{0, 0}, {10, 20}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.09334101256154081`", ",", "0.2157380237165567`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"0.6459236020928605`", ",", "0.554354507253269`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
         0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
         0.2157380237165567}}, {1, 2, 3}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.09334101256154081, 0.2157380237165567}, {
         0.6459236020928605, 0.554354507253269}}]}},
      Axes->True]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8035991891130247`*^9, {3.803599219763031*^9, 3.80359923975797*^9}, 
   3.803602783960558*^9, 3.803641822309299*^9, 3.803642123423089*^9, 
   3.803642183430936*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"0d0a4659-9d4f-46ed-8cdb-a49a79427e14"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["AngleOrientation", "Subsubsection",
 CellChangeTimes->{{3.803597131895967*^9, 3.803597141235929*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"5069f8d7-8f8c-46d4-a3b9-dca8105d182d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"orientationRules", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0.`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
     RowBox[{"0.19634954084936207`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
     RowBox[{"3.141592653589793`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
     RowBox[{"3.3379421944391554`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
     RowBox[{"6.283185307179586`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
     RowBox[{"1.5707963267948966`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
     RowBox[{"1.7671458676442586`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
     RowBox[{"4.71238898038469`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
     RowBox[{"4.908738521234052`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
     RowBox[{"0.39269908169872414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"0.5890486225480862`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"0.7853981633974483`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"0.9817477042468103`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"1.1780972450961724`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"1.3744467859455345`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"1.9634954084936207`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"2.1598449493429825`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"2.356194490192345`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"2.552544031041707`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"2.748893571891069`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"2.945243112740431`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"3.5342917352885173`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"3.730641276137879`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"3.9269908169872414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"4.123340357836604`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"4.319689898685965`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"4.516039439535327`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"5.105088062083414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"5.301437602932776`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"5.497787143782138`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"5.6941366846315`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"5.890486225480862`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
     RowBox[{"6.086835766330224`", "\[Rule]", "\"\<Diagonal\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orientationColors", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Horizontal\>\"", "\[Rule]", " ", "Blue"}], ",", 
     RowBox[{"\"\<Vertical\>\"", "\[Rule]", " ", "Purple"}], ",", 
     RowBox[{"\"\<Diagonal\>\"", "\[Rule]", " ", "Pink"}]}], "|>"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regionsGraph", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"orientationColors", "@", 
         RowBox[{"orientationRules", "@", "#"}]}], ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "-", 
             RowBox[{"N", "[", 
              RowBox[{"Pi", "/", "16"}], "]"}]}], ",", "#"}], "}"}]}], 
         "]"}]}], "}"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2.", "Pi"}], ",", 
       RowBox[{"Pi", "/", "16."}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Regions to define the orientation of the greatest side of a \
triangle.\>\"", ",", "Bold"}], "]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "regionsGraph", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Red = Horizontal\>\"", ",", "Blue", ",", "Bold"}], "]"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Red = Vertical\>\"", ",", "Purple", ",", "Bold"}], "]"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Red = Diagonal\>\"", ",", "Pink", ",", "Bold"}], "]"}], 
      "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 Editable->False,
 Evaluatable->False,
 CellOpen->False,
 CellChangeTimes->{{3.803590205467023*^9, 3.803590281262086*^9}, {
  3.80359119720938*^9, 3.803591203103978*^9}, {3.803643547785575*^9, 
  3.8036437869402447`*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"b5a892ba-f183-4888-ad8c-1818c45719d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Regions to define the orientation of the greatest side of \
a triangle.\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[{
       {RGBColor[0, 0, 1], DiskBox[{0, 0}, 1, {-0.19634954084936207`, 0.}]}, 
       {RGBColor[0, 0, 1], DiskBox[{0, 0}, 1, {0., 0.19634954084936207`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.19634954084936207`, 0.39269908169872414`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.39269908169872414`, 0.5890486225480862}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.5890486225480862, 0.7853981633974483}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.7853981633974483, 0.9817477042468103}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.9817477042468103, 1.1780972450961724`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {1.1780972450961724`, 1.3744467859455345`}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {1.3744467859455345`, 1.5707963267948966`}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {1.5707963267948966`, 1.7671458676442586`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {1.7671458676442586`, 1.9634954084936207`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {1.9634954084936205`, 2.1598449493429825`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.1598449493429825`, 2.356194490192345}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.356194490192345, 2.552544031041707}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.552544031041707, 2.748893571891069}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.7488935718910685`, 2.945243112740431}]}, 
       {RGBColor[0, 0, 1], 
        DiskBox[{0, 0}, 1, {2.945243112740431, 3.141592653589793}]}, 
       {RGBColor[0, 0, 1], 
        DiskBox[{0, 0}, 1, {3.141592653589793, 3.3379421944391554`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.3379421944391554`, 3.5342917352885173`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.534291735288517, 3.730641276137879}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.730641276137879, 3.9269908169872414`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.9269908169872414`, 4.123340357836604}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {4.123340357836603, 4.319689898685965}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {4.319689898685965, 4.516039439535327}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {4.516039439535327, 4.71238898038469}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {4.71238898038469, 4.908738521234052}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {4.908738521234052, 5.105088062083414}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.105088062083413, 5.301437602932776}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.301437602932776, 5.497787143782138}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.497787143782138, 5.6941366846315}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.694136684631499, 5.890486225480862}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.890486225480862, 6.086835766330224}]}, 
       {RGBColor[0, 0, 1], 
        DiskBox[{0, 0}, 1, {6.086835766330224, 6.283185307179586}]}},
      ImageSize->{502.1796875, Automatic}]},
    {
     StyleBox["\<\"Red = Horizontal\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]]},
    {
     StyleBox["\<\"Red = Vertical\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0.5, 0, 0.5],
      FrontFaceColor->RGBColor[0.5, 0, 0.5],
      BackFaceColor->RGBColor[0.5, 0, 0.5],
      GraphicsColor->RGBColor[0.5, 0, 0.5],
      FontWeight->Bold,
      FontColor->RGBColor[0.5, 0, 0.5]]},
    {
     StyleBox["\<\"Red = Diagonal\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0.5, 0.5],
      FrontFaceColor->RGBColor[1, 0.5, 0.5],
      BackFaceColor->RGBColor[1, 0.5, 0.5],
      GraphicsColor->RGBColor[1, 0.5, 0.5],
      FontWeight->Bold,
      FontColor->RGBColor[1, 0.5, 0.5]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.803598010393161*^9, 3.803602786367754*^9, 3.8036418223572273`*^9, 
   3.803642123454772*^9, {3.803643560000875*^9, 3.803643655767322*^9}, {
   3.803643690507491*^9, 3.803643723996839*^9}, 3.80364378731633*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"e69aad06-48aa-4fb8-af8f-2ed9f2dd3d6b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Angle", "[", 
   RowBox[{"a_List", ",", "b_List"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
         "a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"N", "@", 
      RowBox[{"PlanarAngle", "[", 
       RowBox[{"{", 
        RowBox[{"b", ",", "a", ",", "c"}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
    RowBox[{"Dimensions", "[", "b", "]"}], "\[Equal]", 
    RowBox[{"{", "2", "}"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Angle", "[", "points_List", "]"}], ":=", 
  RowBox[{"Angle", "[", 
   RowBox[{
    RowBox[{"First", "[", "points", "]"}], ",", 
    RowBox[{"Last", "[", "points", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8035683032478113`*^9, 3.803568303497998*^9}, {
  3.803568433252232*^9, 3.803568434999205*^9}, {3.803568641145693*^9, 
  3.80356867945826*^9}, {3.803581942941194*^9, 3.8035819640391893`*^9}, {
  3.8036022286566973`*^9, 3.803602230776271*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"2e18989d-cc98-4954-a751-834628a74146"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AngleOrientation", "[", "angle_Real", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"normalized", ",", "possibilities", ",", 
      RowBox[{"orientations", "=", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"0.`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
         RowBox[{"0.19634954084936207`", "\[Rule]", "\"\<Horizontal\>\""}], 
         ",", 
         RowBox[{"3.141592653589793`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
         RowBox[{"3.3379421944391554`", "\[Rule]", "\"\<Horizontal\>\""}], 
         ",", 
         RowBox[{"6.283185307179586`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
         RowBox[{"1.5707963267948966`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
         RowBox[{"1.7671458676442586`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
         RowBox[{"4.71238898038469`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
         RowBox[{"4.908738521234052`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
         RowBox[{"0.39269908169872414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"0.5890486225480862`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"0.7853981633974483`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"0.9817477042468103`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"1.1780972450961724`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"1.3744467859455345`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"1.9634954084936207`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"2.1598449493429825`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"2.356194490192345`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"2.552544031041707`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"2.748893571891069`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"2.945243112740431`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"3.5342917352885173`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"3.730641276137879`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"3.9269908169872414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"4.123340357836604`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"4.319689898685965`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"4.516039439535327`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"5.105088062083414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"5.301437602932776`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"5.497787143782138`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"5.6941366846315`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"5.890486225480862`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
         RowBox[{"6.086835766330224`", "\[Rule]", "\"\<Diagonal\>\""}]}], 
        "\[RightAssociation]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"angle", ">", 
        RowBox[{"2.", "Pi"}]}], ",", 
       RowBox[{"normalized", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{"angle", ",", 
          RowBox[{"2.", "Pi"}]}], "]"}]}], ",", 
       RowBox[{"normalized", "=", "angle"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"orientations", "@", 
      RowBox[{"First", "@", 
       RowBox[{"Nearest", "[", 
        RowBox[{
         RowBox[{"Keys", "@", "orientations"}], ",", "normalized"}], 
        "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8035884823732433`*^9, 3.803588505726779*^9}, {
   3.8035895102328157`*^9, 3.8035895161455603`*^9}, {3.803589835942565*^9, 
   3.803589867448956*^9}, 3.8035900217680902`*^9, {3.803590055811829*^9, 
   3.803590061059906*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"b908e66e-4d23-4cae-9d4d-7501fb34885e"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803597771103711*^9, 3.8035977780602713`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"20464487-275f-400c-b13c-df3758661796"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sideTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"side", "=", 
         RowBox[{"TriangleGreatestSide", "@", "#"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
           "Pink", ",", "#", ",", "\[IndentingNewLine]", "Black", ",", 
            "Thick", ",", 
            RowBox[{"Line", "@", "side"}], ",", "\[IndentingNewLine]", "Blue",
             ",", 
            RowBox[{"Opacity", "@", ".5"}], ",", 
            RowBox[{"Triangle", "[", 
             RowBox[{"Append", "[", 
              RowBox[{"side", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Last", "[", "side", "]"}], "\[LeftDoubleBracket]", 
                  "1", "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                  RowBox[{"First", "[", "side", "]"}], "\[LeftDoubleBracket]",
                   "2", "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "]"}], 
            ",", "\[IndentingNewLine]", "Red", ",", 
            RowBox[{"Opacity", "@", "1."}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{
              RowBox[{"First", "@", "side"}], ",", "0.1"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Angle", "@", "side"}], "/", "Degree"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AngleOrientation", "@", 
          RowBox[{"Angle", "@", "side"}]}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], "&"}], "/@", 
    RowBox[{"Polygon", "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"10", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"sideTests", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803580773871606*^9, 3.8035809784091682`*^9}, {
   3.8035810115230722`*^9, 3.8035810474816504`*^9}, {3.803581365088725*^9, 
   3.8035813834505873`*^9}, {3.803581434590345*^9, 3.803581435126645*^9}, {
   3.8035814798864*^9, 3.803581498040309*^9}, {3.803581542055098*^9, 
   3.803581586159856*^9}, {3.8035820365551767`*^9, 3.803582037169187*^9}, {
   3.803587885397213*^9, 3.803587899134253*^9}, {3.80358792996642*^9, 
   3.8035879345793133`*^9}, {3.8035895852310667`*^9, 3.80358962038122*^9}, 
   3.8035898535599546`*^9, 3.8035900713018293`*^9, {3.803596104814485*^9, 
   3.803596104944394*^9}, 3.8035980571140223`*^9, {3.803598161548311*^9, 
   3.803598189229863*^9}, {3.8035982596825457`*^9, 3.803598386141363*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"fa20634e-f42d-428e-bbb7-19e08826dd26"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{2.777903248175285, 1.3916436513088932`}, {
         0.5623959530735263, 4.0928804552235025`}, {3.254755844367118, 
         8.050009726373958}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{2.777903248175285, 1.3916436513088932`}, {3.254755844367118,
          8.050009726373958}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{2.777903248175285, 1.3916436513088932`}, {
           3.254755844367118, 8.050009726373958}, {3.254755844367118, 
           1.3916436513088932`}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{2.777903248175285, 1.3916436513088932}, 0.1]}}}], 
     "85.90363864046688`", "\<\"Vertical\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{5.577378501197627, 2.9635478625215903`}, {
         9.376461431958646, 7.3766542478677195`}, {2.7774946336056576`, 
         2.458223932389016}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{2.7774946336056576`, 2.458223932389016}, {9.376461431958646,
          7.3766542478677195`}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{2.7774946336056576`, 2.458223932389016}, {
           9.376461431958646, 7.3766542478677195`}, {9.376461431958646, 
           2.458223932389016}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{2.7774946336056576, 2.458223932389016}, 0.1]}}}], 
     "36.698392791705224`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{8.175915589617475, 0.017247027709936802`}, {
         9.06341554554162, 6.111150274597772}, {9.68766267492268, 
         3.8864003030350514`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{8.175915589617475, 0.017247027709936802`}, {
         9.06341554554162, 6.111150274597772}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{8.175915589617475, 0.017247027709936802`}, {
           9.06341554554162, 6.111150274597772}, {9.06341554554162, 
           0.017247027709936802`}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{8.175915589617475, 0.017247027709936802}, 0.1]}}}], 
     "81.71385018670507`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{0.8067307902170384, 8.329669871150664}, {
         5.6633629176261895`, 2.480904475941985}, {5.967111672425894, 
         2.688288084124217}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.8067307902170384, 8.329669871150664}, {5.967111672425894, 
         2.688288084124217}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{0.8067307902170384, 8.329669871150664}, {
           5.967111672425894, 2.688288084124217}, {5.967111672425894, 
           8.329669871150664}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{0.8067307902170384, 8.329669871150664}, 0.1]}}}], 
     "47.54968826922831`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{2.2262989909906423`, 7.0588666809267835`}, {
         8.670365752035632, 8.681087679200193}, {0.8875313056538996, 
         2.0644556642378102`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.8875313056538996, 2.0644556642378102`}, {
         8.670365752035632, 8.681087679200193}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{0.8875313056538996, 2.0644556642378102`}, {
           8.670365752035632, 8.681087679200193}, {8.670365752035632, 
           2.0644556642378102`}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{0.8875313056538996, 2.0644556642378102}, 0.1]}}}], 
     "40.3697620324606`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{2.845840175343831, 1.649357063459572}, {
         7.1196776973693545`, 5.024049535821309}, {9.067916055094038, 
         2.658070725834987}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{2.845840175343831, 1.649357063459572}, {9.067916055094038, 
         2.658070725834987}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{2.845840175343831, 1.649357063459572}, {
           9.067916055094038, 2.658070725834987}, {9.067916055094038, 
           1.649357063459572}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{2.845840175343831, 1.649357063459572}, 0.1]}}}], 
     "9.20858944910108`", "\<\"Horizontal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{2.9673081145475813`, 4.052634193322904}, {
         3.383043308897822, 3.122364099918798}, {5.147480175115087, 
         6.206130863994595}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{3.383043308897822, 3.122364099918798}, {5.147480175115087, 
         6.206130863994595}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{3.383043308897822, 3.122364099918798}, {
           5.147480175115087, 6.206130863994595}, {5.147480175115087, 
           3.122364099918798}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{3.383043308897822, 3.122364099918798}, 0.1]}}}], 
     "60.223132477107995`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{3.41873279339649, 3.668506752075844}, {1.895392645876564,
          0.7754604619173548}, {4.801773497498164, 2.1487766944893867`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{1.895392645876564, 0.7754604619173548}, {3.41873279339649, 
         3.668506752075844}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{1.895392645876564, 0.7754604619173548}, {
           3.41873279339649, 3.668506752075844}, {3.41873279339649, 
           0.7754604619173548}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{1.895392645876564, 0.7754604619173548}, 0.1]}}}], 
     "62.230849343692874`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{5.194018022129033, 5.986445107664778}, {5.76423635359761,
          3.4850397956829564`}, {0.4797480551496882, 4.325621763617384}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.4797480551496882, 4.325621763617384}, {5.76423635359761, 
         3.4850397956829564`}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{0.4797480551496882, 4.325621763617384}, {
           5.76423635359761, 3.4850397956829564`}, {5.76423635359761, 
           4.325621763617384}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{0.4797480551496882, 4.325621763617384}, 0.1]}}}], 
     "9.038086107690535`", "\<\"Horizontal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{0.00784497052593025, 3.431339302341705}, {
         3.288580981661065, 3.204339610169491}, {8.411027253987172, 
         2.440702372543843}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.00784497052593025, 3.431339302341705}, {8.411027253987172,
          2.440702372543843}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{0.00784497052593025, 3.431339302341705}, {
           8.411027253987172, 2.440702372543843}, {8.411027253987172, 
           3.431339302341705}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{0.00784497052593025, 3.431339302341705}, 0.1]}}}], 
     "6.723470204806316`", "\<\"Horizontal\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803596105429125*^9, 3.803596122753674*^9}, {
   3.803598298083254*^9, 3.803598327670475*^9}, {3.803598362613368*^9, 
   3.8035983871046333`*^9}, 3.803602786622189*^9, 3.803641822657854*^9, 
   3.8036421236886883`*^9, 3.8036422083001747`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"989e3a03-23c8-4e63-a3b0-0d2037259a77"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TriangleDescription", "Subsubsection",
 CellChangeTimes->{{3.803598734542948*^9, 3.8035987517107286`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"43c5923f-dfbc-46f0-b6a7-5206d662447c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringList", "[", "list_List", "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"str", "=", 
      RowBox[{"Row", "[", 
       RowBox[{
        RowBox[{"ToLowerCase", "@", "list"}], ",", "\"\<, \>\""}], "]"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{
       "rest__", "~~", "\"\<, \>\"", "~~", "s__", "~~", "EndOfString"}], 
       "\[RuleDelayed]", " ", 
       RowBox[{"rest", "<>", "\"\< and \>\"", "<>", "s"}]}], "]"}], "@", 
     RowBox[{"ToString", "[", "str", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.803633468571108*^9, 3.8036335381422443`*^9}, {
   3.803633626458288*^9, 3.803633629221271*^9}, {3.803633663042775*^9, 
   3.803633670276528*^9}, {3.803633794390999*^9, 3.803633799529252*^9}, {
   3.803633914589604*^9, 3.803633978545228*^9}, {3.8036340200264797`*^9, 
   3.803634058375574*^9}, 3.8036341566668673`*^9, {3.803634522005252*^9, 
   3.803634618494022*^9}, {3.80363487150776*^9, 3.8036349046187363`*^9}, {
   3.803634939796625*^9, 3.803634965687455*^9}, {3.80363527785189*^9, 
   3.8036353456052313`*^9}, {3.803635451762629*^9, 3.8036354521441727`*^9}, {
   3.8036356123728724`*^9, 3.803635622130171*^9}, {3.8036356611065483`*^9, 
   3.803635709975769*^9}, {3.8036360843118887`*^9, 3.803636101531837*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"570e9d69-254b-415c-8e75-cb0586e356ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleDescription", "[", "triangle_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"characteristics", ",", "side", ",", "sidestr"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"characteristics", "=", 
       RowBox[{"StringList", "@", 
        RowBox[{"TriangleCharacteristics", "@", "triangle"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"side", "=", 
       RowBox[{"AngleOrientation", "@", 
        RowBox[{"Angle", "@", 
         RowBox[{"TriangleGreatestSide", "@", "triangle"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sidestr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"TriangleEquilateralQ", "@", "triangle"}], "]"}], ",", 
         RowBox[{"\"\< triangle, with its greatest side as a \>\"", "<>", 
          RowBox[{"ToLowerCase", "[", "side", "]"}], "<>", "\"\< line\>\""}], 
         ",", "\"\< triangle\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"characteristics", "<>", "sidestr"}]}]}], "\[IndentingNewLine]",
     "]"}], "/;", 
   RowBox[{"SimplePolygonQ", "@", "triangle"}]}]}]], "Input",
 CellChangeTimes->{{3.803632755414569*^9, 3.803632785193493*^9}, {
   3.8036328968038483`*^9, 3.8036329057019453`*^9}, {3.803632943549905*^9, 
   3.803632956922063*^9}, 3.8036329943488417`*^9, {3.803633033062276*^9, 
   3.803633058441001*^9}, {3.803633093738409*^9, 3.803633131123123*^9}, {
   3.803633297436277*^9, 3.803633321011416*^9}, {3.803633394456882*^9, 
   3.803633440944379*^9}, 3.803636007145406*^9, {3.803636120439864*^9, 
   3.803636122294991*^9}, {3.803636280520335*^9, 3.803636314441552*^9}, {
   3.803636360721361*^9, 3.803636578659875*^9}, {3.803636690438486*^9, 
   3.803636720636353*^9}, {3.803636774750597*^9, 3.803636782107854*^9}, {
   3.803636823146401*^9, 3.803636837104328*^9}, {3.803637025728997*^9, 
   3.803637040433752*^9}, {3.803637118284255*^9, 3.803637118427032*^9}, {
   3.8036424692659397`*^9, 3.803642469440543*^9}, {3.803643385215806*^9, 
   3.803643388958065*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"a4dad405-768e-4499-bbbd-f62e809b0edc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TriangleDescription", "[", "graphics_Graphics", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "primitivesAndDirectives", ",", "color", ",", "triangleDescription"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"primitivesAndDirectives", "=", 
      RowBox[{"graphics", "/.", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"arguments_List", ",", "___"}], "]"}], "\[RuleDelayed]", 
        "  ", "arguments"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"color", "=", 
      RowBox[{"ToLowerCase", "[", 
       RowBox[{"Description", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"primitivesAndDirectives", ",", "ColorQ"}], "]"}], "//", 
         "First"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"triangleDescription", "=", 
      RowBox[{"TriangleDescription", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"primitivesAndDirectives", ",", "TrianglePolygonQ"}], "]"}], 
        "//", "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<A graphic consisting of a \>\"", "<>", "color", "<>", "\"\<, \>\"", 
      "<>", "triangleDescription", "<>", "\"\<.\>\""}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.803637054407402*^9, 3.803637218609466*^9}, {
   3.803637307697234*^9, 3.80363733709177*^9}, {3.80363742722167*^9, 
   3.8036374959465103`*^9}, {3.803637574498941*^9, 3.8036375770458803`*^9}, {
   3.803637616433446*^9, 3.8036376531761103`*^9}, {3.803637692449256*^9, 
   3.803637701306795*^9}, {3.8036377903871*^9, 3.8036379451868267`*^9}, {
   3.80364202817999*^9, 3.8036420838189697`*^9}, {3.803642252808691*^9, 
   3.803642257350013*^9}, {3.8036424239937897`*^9, 3.803642429166391*^9}, 
   3.803642819595566*^9, 3.803642896983169*^9, 3.803643391207349*^9},
 CellLabel->
  "In[207]:=",ExpressionUUID->"e2a4a647-a4df-472a-8af0-796a92787cab"],

Cell["Some tests", "Text",
 CellChangeTimes->{{3.803643317605474*^9, 3.803643320522534*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"e6b41ea3-1b2f-4c45-b93c-71dffa59125b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"triangleDescriptionTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"color", ",", "polygon", ",", "graphics"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"color", "=", 
         RowBox[{"RGBColor", "@", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"polygon", "=", 
         RowBox[{"Polygon", "@", "#"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"graphics", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"color", ",", "polygon"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"graphics", ",", 
          RowBox[{"ToString", "@", "graphics"}], ",", 
          RowBox[{"TextString", "@", "graphics"}], ",", 
          RowBox[{"SpokenString", "@", "graphics"}], ",", 
          RowBox[{"TriangleDescription", "@", "graphics"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"10", ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"triangleDescriptionTests", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graphics\>\"", ",", "\"\<ToString\>\"", ",", "\"\<TextString\>\"",
         ",", "\"\<SpokenString\>\"", ",", "\"\<TriangleDescription\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803637993195705*^9, 3.803638123634808*^9}, {
  3.803641714511045*^9, 3.8036417154121532`*^9}, {3.803641892147613*^9, 
  3.8036420107078867`*^9}, {3.803642548294961*^9, 3.803642560627859*^9}, {
  3.803642825275069*^9, 3.803642880353271*^9}, {3.8036429659774427`*^9, 
  3.803643023596017*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"120cf98b-bb38-41a0-92cb-e786dcced35c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TriangleDescription\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      {RGBColor[0.3207922106205072, 0.8767125743329753, 0.07836969213766487], 
       PolygonBox[{{8.497726168754124, 3.3637324384998095`}, {
        3.200401192529066, 9.130758312941953}, {2.1587580800959767`, 
        4.490183389297204}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light green, scalene triangle, \
with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.04000662768082175, 0.5018366550212172, 0.5323558031029978], 
       PolygonBox[{{8.238472118839269, 7.092009121195268}, {9.330671967123031,
         0.5009535697946887}, {2.816746523254359, 
        1.1242317489815985`}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a gray, scalene triangle, with \
its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.011874739032284864`, 0.5653893173449243, 0.30158105864279894`], 
       PolygonBox[{{4.760237143537108, 4.076804179080934}, {4.637971294360199,
         2.696186183050955}, {2.9629224377613195`, 
        0.9560117282052403}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a green, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.15191759437158803`, 0.005771922187516987, 0.8669020287130986], 
       PolygonBox[{{2.607560278950494, 0.35505168233426865`}, {
        0.9707638307640654, 0.4517673860133371}, {1.0483594478805713`, 
        6.255300239901157}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a blue, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.9495179386488442, 0.6496002365220281, 0.12686265915507056`],
        PolygonBox[{{0.46147571528241116`, 5.561709490924439}, {
        1.2545654634854273`, 1.573224106355834}, {2.47780683459869, 
        6.5221266756623955`}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a orange, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.23299993627597915`, 0.9549500470665511, 0.8462640214659061],
        PolygonBox[{{6.901311973674165, 1.9677626059540732`}, {
        9.64196463916607, 4.887901118994888}, {4.710860926581793, 
        1.9137374056240795`}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a cyan, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.7786042814487764, 0.3843243974620556, 0.48010602443452144`],
        PolygonBox[{{8.147920072867684, 1.8517499190992392`}, {
        0.4643517484298503, 3.6798231557096948`}, {5.8023384971728404`, 
        2.135891042924243}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light pink, scalene and obtuse \
triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.2686745226031173, 0.8979265325827712, 0.3790982265382603], 
       PolygonBox[{{0.7218494539080567, 7.073732846062249}, {
        4.725927947049733, 6.257678796692712}, {6.953464492934646, 
        8.148060943302927}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light green, scalene and obtuse \
triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.8336698643537674, 0.5770884567880861, 0.9187093063419394], 
       PolygonBox[{{0.1263360506274367, 3.3350760844236156`}, {
        0.8990361920923071, 1.3068587361345685`}, {3.5136441688743254`, 
        0.9879172422381348}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light pink, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.19379532231965557`, 0.3304855862149827, 0.11776441204051835`], 
       PolygonBox[{{1.9774497635178712`, 8.674908441142826}, {
        8.050077877900648, 3.8847239759786962`}, {0.25998882776109156`, 
        8.248361257339123}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a green, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.803638124836224*^9, 3.8036418229419937`*^9, {3.803641926395732*^9, 
   3.803641948937512*^9}, {3.803642013246426*^9, 3.8036420333825502`*^9}, {
   3.8036420669988747`*^9, 3.803642088245166*^9}, 3.8036421340292387`*^9, {
   3.803642235631688*^9, 3.803642266305914*^9}, 3.803642433434353*^9, 
   3.803642473110588*^9, 3.803642561470089*^9, {3.8036428832933493`*^9, 
   3.803642899797701*^9}, 3.8036430252866793`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"eb870bf9-0de8-4cce-9591-43e711faa682"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"triangles", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Triangle", "[", "]"}], ",", 
     RowBox[{"AASTriangle", "[", 
      RowBox[{
       RowBox[{"Pi", "/", "6"}], ",", 
       RowBox[{"Pi", "/", "3"}], ",", "1"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SSSTriangle", "[", 
      RowBox[{"3", ",", "4", ",", "5"}], "]"}], ",", 
     RowBox[{"SASTriangle", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Pi", "/", "2"}], ",", "2"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ASATriangle", "[", 
      RowBox[{
       RowBox[{"Pi", "/", "6"}], ",", "1", ",", 
       RowBox[{"Pi", "/", "3"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "20"}], "}"}]}], "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RandomPolygon", "@", "3"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[111]:=",ExpressionUUID->"7fefd0b4-8a5e-474b-bc4d-5d9ad472b5d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"triangleDescriptionTests2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"color", ",", "graphics"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"color", "=", 
         RowBox[{"RGBColor", "@", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"graphics", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"color", ",", "#"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"graphics", ",", 
          RowBox[{"ToString", "@", "graphics"}], ",", 
          RowBox[{"TextString", "@", "graphics"}], ",", 
          RowBox[{"SpokenString", "@", "graphics"}], ",", 
          RowBox[{"TriangleDescription", "@", "graphics"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", "triangles"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"triangleDescriptionTests2", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graphics\>\"", ",", "\"\<ToString\>\"", ",", "\"\<TextString\>\"",
         ",", "\"\<SpokenString\>\"", ",", "\"\<TriangleDescription\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803642650883883*^9, 3.80364267173108*^9}, {
  3.803642718672279*^9, 3.803642784975471*^9}, {3.8036430575932302`*^9, 
  3.803643068633659*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"626009b6-4ece-4634-a055-9a1361a792b6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TriangleDescription\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      {RGBColor[0.2681479305612049, 0.275035903915539, 0.18316605423616328`], 
       TagBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}}],
        "Triangle"]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", \
"\<\"a graphic consisting of RGB color 0.268, 0.275, 0.183 and Triangle of \
the list the list 0, 0, the list 1, 0, the list 0, 1\"\>", "\<\"A graphic \
consisting of a gray, right and isosceles triangle, with its greatest side as \
a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.6079029976229964, 0.49994851804368445`, 0.5790122309098533], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", \
"\<\"a graphic consisting of RGB color 0.608, 0.5, 0.579 and Triangle of the \
list the list 0, 0, the list 2, 0, the list 3 halves, 1 half times square \
root of 3\"\>", "\<\"A graphic consisting of a gray, right and scalene \
triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.37930176520474923`, 0.38077657253176467`, 0.43951015150462047`], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {5, 0}, {Rational[16, 5], Rational[12, 5]}}, {{0, 
           0}, {5, 0}, {3.2, 2.4}}]],
        "Triangle"]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>",
      "\<\"a graphic consisting of RGB color 0.379, 0.381, 0.44 and Triangle \
of the list the list 0, 0, the list 5, 0, the list 16 fifths, 12 fifths\"\>", \
"\<\"A graphic consisting of a gray, right and scalene triangle, with its \
greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.8865030455136871, 0.43656210096507464`, 0.5757827949870487], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {5^Rational[1, 2], 0}, {
           4 5^Rational[-1, 2], 2 5^Rational[-1, 2]}}, {{0, 0}, {
           2.23606797749979, 0}, {1.7888543819998317`, 0.8944271909999159}}]],
        "Triangle"]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", \
"\<\"a graphic consisting of RGB color 0.887, 0.437, 0.576 and Triangle of \
the list the list 0, 0, the list square root of 5, 0, the list 4 times one \
over square root of 5, 2 times one over square root of 5\"\>", "\<\"A graphic \
consisting of a light pink, right and scalene triangle, with its greatest \
side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.28437487247530346`, 0.4275826028374785, 0.07777745293205629], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", \
"\<\"a graphic consisting of RGB color 0.284, 0.428, 0.078 and Triangle of \
the list the list 0, 0, the list 1, 0, the list 3 fourths, 1 fourth times \
square root of 3\"\>", "\<\"A graphic consisting of a green, right and \
scalene triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.28498480640041124`, 0.9757944579837279, 0.8124748276398364],
        PolygonBox[
        NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 0}, {
          0, 1.7320508075688772`}, {-1, 
          0}}]]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\<\
\"a graphic consisting of a polygon with 3 vertices\"\>", "\<\"A graphic \
consisting of a cyan, equilateral and isosceles triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.4017901902948935, 0.6156088634135024, 0.13992310393132712`],
        PolygonBox[{{0, 0}, {10, 10}, {10, 
        20}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", \
"\<\"a graphic consisting of a polygon with 3 vertices\"\>", "\<\"A graphic \
consisting of a green, scalene and obtuse triangle, with its greatest side as \
a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.5947494661560304, 0.3740785032936398, 0.5894289413770217], 
       PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
        0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
        0.2157380237165567}}, {1, 2, 
        3}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\<\"a \
graphic consisting of a polygon with 3 vertices\"\>", "\<\"A graphic \
consisting of a purple, scalene and obtuse triangle, with its greatest side \
as a diagonal line.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8036432617137547`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"31a21848-c572-4af1-9178-93c0161c3abd"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\"\<Graphics\>\"",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\"\<ToString\>\"",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\"\<TextString\>\"",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\"\<SpokenString\>\"",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\"\<TriangleDescription\>\"",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      {RGBColor[0.778127171276285, 0.9482205130986212, 0.8702196969419504], 
       TagBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}}],
        "Triangle"]}], "\"\<-Graphics-\>\"", "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of RGB color 0.778, 0.948, 0.87 and Triangle \
of the list the list 0, 0, the list 1, 0, the list 0, 1\>\"", 
     "\"\<A graphic consisting of a light cyan, right and isosceles triangle, \
with its greatest side as a diagonal line.\>\""},
    {
     GraphicsBox[
      {RGBColor[0.9609784781817527, 0.6103657409837397, 0.5129597043139067], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]}], "\"\<-Graphics-\>\"", "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of RGB color 0.961, 0.61, 0.513 and Triangle \
of the list the list 0, 0, the list 2, 0, the list 3 halves, 1 half times \
square root of 3\>\"", 
     "\"\<A graphic consisting of a light pink, right and scalene triangle, \
with its greatest side as a horizontal line.\>\""},
    {
     GraphicsBox[
      {RGBColor[0.6519443481483216, 0.11582402343777409`, 0.7321864299296272], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {5, 0}, {Rational[16, 5], Rational[12, 5]}}, {{0, 
           0}, {5, 0}, {3.2, 2.4}}]],
        "Triangle"]}], "\"\<-Graphics-\>\"", "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of RGB color 0.652, 0.116, 0.732 and Triangle \
of the list the list 0, 0, the list 5, 0, the list 16 fifths, 12 fifths\>\"", 
     "\"\<A graphic consisting of a purple, right and scalene triangle, with \
its greatest side as a horizontal line.\>\""},
    {
     GraphicsBox[
      {RGBColor[0.6341000161703558, 0.8124270039108283, 0.3057332967263364], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {5^Rational[1, 2], 0}, {
           4 5^Rational[-1, 2], 2 5^Rational[-1, 2]}}, {{0, 0}, {
           2.23606797749979, 0}, {1.7888543819998317`, 0.8944271909999159}}]],
        "Triangle"]}], "\"\<-Graphics-\>\"", "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of RGB color 0.634, 0.812, 0.306 and Triangle \
of the list the list 0, 0, the list square root of 5, 0, the list 4 times one \
over square root of 5, 2 times one over square root of 5\>\"", 
     "\"\<A graphic consisting of a light green, right and scalene triangle, \
with its greatest side as a horizontal line.\>\""},
    {
     GraphicsBox[
      {RGBColor[0.23227753617451063`, 0.5814309063547503, 0.7226979314713582], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]}], "\"\<-Graphics-\>\"", "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of RGB color 0.232, 0.581, 0.723 and Triangle \
of the list the list 0, 0, the list 1, 0, the list 3 fourths, 1 fourth times \
square root of 3\>\"", 
     "\"\<A graphic consisting of a light blue, right and scalene triangle, \
with its greatest side as a horizontal line.\>\""},
    {
     GraphicsBox[
      {RGBColor[0.9127072160746892, 0.8415263413127261, 0.9414702187425996], 
       PolygonBox[
        NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 0}, {
          0, 1.7320508075688772`}, {-1, 0}}]]}], "\"\<-Graphics-\>\"", 
     "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of a polygon with 3 vertices\>\"", 
     "\"\<A graphic consisting of a white, equilateral and isosceles \
triangle.\>\""},
    {
     GraphicsBox[
      {RGBColor[0.51554789018494, 0.7732900487571526, 0.3126636336775177], 
       PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]}], "\"\<-Graphics-\>\"", 
     "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of a polygon with 3 vertices\>\"", 
     "\"\<A graphic consisting of a light green, scalene and obtuse triangle, \
with its greatest side as a diagonal line.\>\""},
    {
     GraphicsBox[
      {RGBColor[0.2371896344906128, 0.5541517766399706, 0.7062843129131491], 
       PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
        0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
        0.2157380237165567}}, {1, 2, 3}]}], "\"\<-Graphics-\>\"", 
     "\"\<Graphics[\[Ellipsis]]\>\"", 
     "\"\<a graphic consisting of a polygon with 3 vertices\>\"", 
     "\"\<A graphic consisting of a gray, scalene and obtuse triangle, with \
its greatest side as a diagonal line.\>\""}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Input",
 CellChangeTimes->{{3.803643257229189*^9, 
  3.803643258016309*^9}},ExpressionUUID->"cd675e46-e2d9-4059-bcd0-\
57e6cfc36deb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.80218634588871*^9}},
 CellTags->"Keywords",
 CellID->442466898,ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490"],

Cell[CellGroupData[{

Cell["<Keyword1>", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186392723897*^9}, {
  3.802186726368737*^9, 3.80218672773493*^9}}],

Cell["Keyword2", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.802186395898718*^9}}],

Cell["....", "Item",
 CellChangeTimes->{{3.802186390571724*^9, 3.8021864027417173`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Acknowledgment", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186368848865*^9}},
 CellTags->"Keywords",
 CellID->1836614011],

Cell[TextData[{
 StyleBox["Mentor",
  FontWeight->"Bold"],
 ": <Mentor first name and last name>"
}], "Text",
 CellChangeTimes->{{3.8021864691325283`*^9, 3.8021864869063177`*^9}}],

Cell["<text>", "Text",
 CellChangeTimes->{{3.802186374730517*^9, 3.802186375456683*^9}, {
  3.802186730191574*^9, 3.802186731523522*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.802186344523418*^9, 3.802186360670889*^9}},
 CellTags->"Keywords",
 CellID->1137237116],

Cell[CellGroupData[{

Cell["\<\
[1] https://www.bbc.co.uk/bitesize/topics/zwckjxs/articles/ztf9h39\
\>", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186383585804*^9}, {
  3.802186733203268*^9, 3.8021867345244904`*^9}, {3.8033013628610687`*^9, 
  3.803301366666731*^9}},ExpressionUUID->"bac34aab-5f3c-4c18-85c2-\
373b47cd99f0"],

Cell["<Ref2>", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186385191455*^9}, {
  3.802186737059086*^9, 3.802186738383222*^9}}],

Cell["...", "Item",
 CellChangeTimes->{{3.802186382533594*^9, 3.802186386161345*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{Full, Full},
WindowMargins->{{120, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontWeight -> Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2020", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontSize -> 40]}], CellFrameMargins -> 10, 
   Background -> 
   RGBColor[0.3176470588235294, 0.49019607843137253`, 0.0784313725490196]]},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e6895e13-bec2-4574-bfc4-189faddadc5a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Keywords"->{
  Cell[3715895, 83069, 190, 3, 67, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
   CellTags->"Keywords",
   CellID->442466898],
  Cell[3716483, 83090, 143, 3, 53, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
   CellTags->"Keywords",
   CellID->1836614011],
  Cell[3716985, 83109, 139, 3, 53, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
   CellTags->"Keywords",
   CellID->1137237116]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Keywords", 3718668, 83159}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 345, 5, 98, "Title",ExpressionUUID->"7f5a763c-439b-409d-85d9-b001eb779415"],
Cell[928, 29, 405, 6, 31, "Author",ExpressionUUID->"17c07b4e-577f-4fd8-bb63-78ea3b522bfe"],
Cell[1336, 37, 332, 5, 31, "Affiliation",ExpressionUUID->"96c2b484-c964-462d-9af7-4e5a7606bcb7"],
Cell[1671, 44, 1196, 27, 200, "Abstract",ExpressionUUID->"bd44fc5d-a918-4ecb-a444-9098256d0564"],
Cell[2870, 73, 185, 2, 67, "Section",ExpressionUUID->"dde3b2d2-a587-4e33-b62b-89e06e4d8b0b"],
Cell[CellGroupData[{
Cell[3080, 79, 208, 3, 53, "Section",ExpressionUUID->"caacebfb-419d-440c-b7aa-51a88439c458"],
Cell[CellGroupData[{
Cell[3313, 86, 185, 3, 54, "Subsection",ExpressionUUID->"b3dc356f-ccd5-49db-af46-d9134c1928e6"],
Cell[CellGroupData[{
Cell[3523, 93, 209, 3, 30, "Input",ExpressionUUID->"30f38725-fcc6-4450-bdc8-c71611c60c81"],
Cell[3735, 98, 15489, 343, 144, "Output",ExpressionUUID->"8fcd09c7-7c6a-4539-b55c-9b03ab7a9e9d"]
}, Closed]],
Cell[19239, 444, 261, 5, 26, "Input",ExpressionUUID->"ac58b9f9-568a-4c6b-8d3d-60fa4a0bd0eb"],
Cell[CellGroupData[{
Cell[19525, 453, 209, 3, 30, "Input",ExpressionUUID->"6d304a63-7964-4a4c-8082-279c56e2c600"],
Cell[19737, 458, 341, 5, 34, "Output",ExpressionUUID->"14be82fa-8048-4972-9692-e1f7fed1179f"]
}, Closed]],
Cell[20093, 466, 382, 7, 26, "Input",ExpressionUUID->"97ee1644-8aba-44bd-9a19-38e3535ffd62"],
Cell[20478, 475, 1118, 25, 40, "Input",ExpressionUUID->"74eb2e28-3ea5-44f2-8f37-38c201523192"],
Cell[CellGroupData[{
Cell[21621, 504, 244, 4, 45, "Subsubsection",ExpressionUUID->"44ae5e13-3614-4aed-8b51-fe8edee06676"],
Cell[21868, 510, 502, 12, 30, "Input",ExpressionUUID->"e4481b9a-87d4-430a-abd5-18819deed004"]
}, Closed]],
Cell[CellGroupData[{
Cell[22407, 527, 224, 5, 37, "Subsubsection",ExpressionUUID->"3296d3ed-5195-4056-a979-a920641804f8"],
Cell[22634, 534, 1010, 24, 40, "Input",ExpressionUUID->"aa5e39a8-816e-4353-82d7-0355b791ea59"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23693, 564, 223, 5, 54, "Subsection",ExpressionUUID->"bd9edf12-1dd9-4a81-906c-a029dbe4e068"],
Cell[CellGroupData[{
Cell[23941, 573, 163, 3, 45, "Subsubsection",ExpressionUUID->"8d62c640-1c32-4136-9082-ea0db1828192"],
Cell[CellGroupData[{
Cell[24129, 580, 327, 8, 30, "Input",ExpressionUUID->"ceeef140-6552-497b-9e16-9012304fb134"],
Cell[24459, 590, 510, 10, 119, "Output",ExpressionUUID->"80b65c7d-15a0-4c9e-8250-5585c57a5c5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25006, 605, 599, 16, 30, "Input",ExpressionUUID->"63c9727e-3621-4277-872e-7abb537cc3e6"],
Cell[25608, 623, 57296, 975, 132, "Output",ExpressionUUID->"84c7d8ca-9006-45cf-ac42-40c93dd8bc05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82941, 1603, 540, 14, 30, "Input",ExpressionUUID->"413ef0ec-46e7-469f-aaab-7f9bbf419c6e"],
Cell[83484, 1619, 17087, 274, 156, "Output",ExpressionUUID->"d77fc546-b48b-4b64-954a-1a9d0c1039a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100608, 1898, 566, 9, 94, "Input",ExpressionUUID->"1267f36b-abb0-4ad0-a619-e9e8a27c3577"],
Cell[101177, 1909, 18143, 424, 95, "Output",ExpressionUUID->"2004445b-2c53-4b02-baa1-280a5d0aecb5"],
Cell[119323, 2335, 353, 6, 82, "Output",ExpressionUUID->"959e7108-8a13-4ce6-9f8f-6e5e769dd494"],
Cell[119679, 2343, 463, 7, 56, "Output",ExpressionUUID->"36784e5e-2128-44b9-9416-a037d22147a7"],
Cell[120145, 2352, 350, 6, 34, "Output",ExpressionUUID->"98231cc0-8cd2-4039-85cc-7918b8e1aa14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120532, 2363, 254, 5, 30, "Input",ExpressionUUID->"e0400f49-0bd2-4d48-adf2-25b45e7071de"],
Cell[120789, 2370, 330, 6, 34, "Output",ExpressionUUID->"799b80af-2d45-4d98-beca-0f0119fcd173"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[121168, 2382, 212, 4, 37, "Subsubsection",ExpressionUUID->"95e43bed-63bd-4d33-beb2-bb47b2ebebd8"],
Cell[CellGroupData[{
Cell[121405, 2390, 558, 9, 94, "Input",ExpressionUUID->"3d824142-bef4-4064-b175-38399fcb9253"],
Cell[121966, 2401, 17834, 416, 70, "Output",ExpressionUUID->"20f2f1f4-926f-4ee4-b8b9-cdffd643e8f7"],
Cell[139803, 2819, 407, 7, 70, "Output",ExpressionUUID->"4df93f5e-cd7a-40fe-9ab7-4b7bba350827"],
Cell[140213, 2828, 374, 6, 70, "Output",ExpressionUUID->"0cf7e3b4-e3cb-4a0a-a170-bd4e41edf0ee"],
Cell[140590, 2836, 374, 6, 70, "Output",ExpressionUUID->"e382c4dd-07de-4bc2-bdc9-f27e48f112d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141001, 2847, 223, 4, 30, "Input",ExpressionUUID->"a8404de3-643b-4d8e-91c1-14506021eb8e"],
Cell[141227, 2853, 277, 5, 70, "Output",ExpressionUUID->"8cf1ea7e-808a-4cbb-830f-4c6c5696caae"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[141553, 2864, 159, 3, 37, "Subsubsection",ExpressionUUID->"9832a9d3-c6eb-47a0-be51-e0ca4647a732"],
Cell[CellGroupData[{
Cell[141737, 2871, 548, 9, 94, "Input",ExpressionUUID->"3277bc4b-793c-41a8-b75e-0392fbe21463"],
Cell[142288, 2882, 18193, 418, 70, "Output",ExpressionUUID->"89836212-89ad-46c5-87f4-0038f3436063"],
Cell[160484, 3302, 332, 5, 70, "Output",ExpressionUUID->"e2d738be-114f-436b-ba2f-a6ce79cd9197"],
Cell[160819, 3309, 330, 5, 70, "Output",ExpressionUUID->"6baa144d-61d2-4d73-bce7-a558610dd98b"],
Cell[161152, 3316, 328, 5, 70, "Output",ExpressionUUID->"bb23baae-64c0-4ebf-8176-6dd6053f0f58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161517, 3326, 274, 5, 30, "Input",ExpressionUUID->"5fb0b431-9dde-4f4c-bfc0-7c427acfc1fc"],
Cell[161794, 3333, 327, 6, 70, "Output",ExpressionUUID->"13091859-1cdb-4a2a-b892-77a82c5a480f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[162170, 3345, 348, 6, 53, "Subsubsection",ExpressionUUID->"15d67b75-09dc-48e2-8ce2-c6b2f9266f60"],
Cell[162521, 3353, 214, 4, 30, "Input",ExpressionUUID->"25831599-9fc0-4065-aaff-bf113a43e3bc"],
Cell[162738, 3359, 1385, 28, 136, "Input",ExpressionUUID->"f1ef1d98-f7cf-414d-8c37-012ada8f65e1"],
Cell[164126, 3389, 224, 4, 30, "Input",ExpressionUUID->"09b4e2bb-07b5-4574-847f-b16db6beef16"],
Cell[164353, 3395, 1848, 42, 220, "Input",ExpressionUUID->"9b431b30-6a86-4e56-859b-c9cfd7a5a614"],
Cell[166204, 3439, 180, 3, 51, "Text",ExpressionUUID->"8c720917-632d-4443-bc6c-5f085d35a048"],
Cell[CellGroupData[{
Cell[166409, 3446, 661, 13, 30, "Input",ExpressionUUID->"b5e6c0be-2326-44d4-8ace-09e3f702e912"],
Cell[167073, 3461, 731, 13, 70, "Output",ExpressionUUID->"fa992eee-6685-4866-8074-692b897a2b52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167841, 3479, 213, 4, 30, "Input",ExpressionUUID->"b93f1839-0d69-4ff6-857d-9122332fa75b"],
Cell[168057, 3485, 729, 13, 70, "Output",ExpressionUUID->"98bb6dc2-6f6a-441c-8799-92bc2874e367"]
}, Open  ]],
Cell[168801, 3501, 1583, 38, 157, "Input",ExpressionUUID->"c26a6c14-c025-4bc9-b533-e455e0fc77e1"],
Cell[CellGroupData[{
Cell[170409, 3543, 288, 6, 30, "Input",ExpressionUUID->"64d8e0be-3b32-486a-8a7b-6cb916fc7fc7"],
Cell[170700, 3551, 2608, 46, 70, "Output",ExpressionUUID->"aaf9e47e-a0b2-4f83-a71d-1725be3508d8"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173369, 3604, 287, 4, 54, "Subsection",ExpressionUUID->"07889918-12f3-4f6f-9000-3c13d7bf55a7"],
Cell[173659, 3610, 370, 8, 35, "Text",ExpressionUUID->"e4339a94-e6a5-446e-acbd-1a5a3d16f9ca"],
Cell[CellGroupData[{
Cell[174054, 3622, 239, 3, 30, "Input",ExpressionUUID->"a78885b6-ba66-403f-bea7-62b65f32449b"],
Cell[174296, 3627, 7649, 188, 39, "Output",ExpressionUUID->"2b03614d-2b83-4ec7-b240-428ef8ea5205"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181982, 3820, 297, 6, 30, "Input",ExpressionUUID->"f3c9cd6e-5acd-4ef1-9c56-a4f9b330735e"],
Cell[182282, 3828, 435, 10, 43, "Output",ExpressionUUID->"5af6c396-bb56-453b-960d-2147b4d687f5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[182766, 3844, 214, 4, 38, "Subsection",ExpressionUUID->"821c7ed0-db3b-4d32-898c-7fc1e42761a3"],
Cell[CellGroupData[{
Cell[183005, 3852, 165, 3, 45, "Subsubsection",ExpressionUUID->"4af503c2-09c5-4bbd-9e34-3e1c7b219078"],
Cell[CellGroupData[{
Cell[183195, 3859, 346, 5, 30, "Input",ExpressionUUID->"617f7c0a-2901-4754-87b5-73a69b5ac0b7"],
Cell[183544, 3866, 500, 10, 43, "Output",ExpressionUUID->"5bfaba88-9f52-43f0-bee6-186e6f8f01ce"]
}, Open  ]],
Cell[184059, 3879, 492, 12, 30, "Input",ExpressionUUID->"fec91c96-0fe1-462b-9691-1287df327330"],
Cell[CellGroupData[{
Cell[184576, 3895, 655, 14, 30, "Input",ExpressionUUID->"af85f2ca-3c68-4aa9-bde4-f2db1378dea9"],
Cell[185234, 3911, 96165, 2025, 5079, "Output",ExpressionUUID->"543a1832-ed08-4347-8e0c-81f9f3fb5f7b"]
}, Closed]],
Cell[CellGroupData[{
Cell[281436, 5941, 1199, 27, 26, "Input",ExpressionUUID->"0c21b466-31b3-4dc0-aea2-e317a09cfe70"],
Cell[282638, 5970, 19631, 436, 226, "Output",ExpressionUUID->"ab88ef34-c9f8-4131-9d4f-601fbdcf7d48"]
}, Closed]],
Cell[CellGroupData[{
Cell[302306, 6411, 854, 16, 26, "Input",ExpressionUUID->"aecf5cb3-d289-4f59-aac8-fb445f30c3f5"],
Cell[303163, 6429, 5053, 117, 75, "Output",ExpressionUUID->"c9fadc2c-398a-4a9f-9c37-d490e22e0848"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308253, 6551, 1071, 22, 30, "Input",ExpressionUUID->"440dc8fe-cde9-47df-b918-f5fb061bbc83"],
Cell[309327, 6575, 119498, 2727, 1817, "Output",ExpressionUUID->"eb88e242-4482-4534-a810-7f35c775b210"]
}, Closed]],
Cell[CellGroupData[{
Cell[428862, 9307, 560, 13, 26, "Input",ExpressionUUID->"b30b8df1-cd64-4a8b-b330-ce98b9f6dd64"],
Cell[429425, 9322, 37596, 966, 77, "Output",ExpressionUUID->"006b7cfd-7327-4bbb-accd-564b5739b6af"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[467070, 10294, 216, 3, 53, "Subsubsection",ExpressionUUID->"09bf1b0e-ed43-41c3-9e5c-0f03e59a91c9"],
Cell[467289, 10299, 868, 21, 30, "Input",ExpressionUUID->"a4b75e64-4203-493c-99a9-5ee0aebc6bd7"],
Cell[468160, 10322, 182, 3, 51, "Text",ExpressionUUID->"bb32a078-364a-4232-9b0d-761c7e04f37a"],
Cell[CellGroupData[{
Cell[468367, 10329, 605, 12, 115, "Input",ExpressionUUID->"bad75431-9793-414d-8a3a-8a96511b1497"],
Cell[468975, 10343, 296, 5, 34, "Output",ExpressionUUID->"a918f0e9-eef0-44bc-865d-99579b438beb"],
Cell[469274, 10350, 314, 5, 34, "Output",ExpressionUUID->"47c1c126-3858-4137-aae3-e2142ad10875"],
Cell[469591, 10357, 312, 5, 34, "Output",ExpressionUUID->"bfef0dfa-eeb4-4c6d-9024-4cfb179cd3cb"],
Cell[469906, 10364, 312, 5, 34, "Output",ExpressionUUID->"e077d1e7-1648-439c-9b40-660c03b2e7b8"],
Cell[470221, 10371, 3460, 92, 57, "Output",ExpressionUUID->"2a4db870-80a7-46e3-8fd1-30854fe15c43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473718, 10468, 1837, 37, 94, "Input",ExpressionUUID->"22c478e5-a7d2-4f92-8182-16fb73fbe471"],
Cell[475558, 10507, 2130, 53, 34, "Output",ExpressionUUID->"2d7b4604-37d2-434b-adc8-c805a714212c"],
Cell[477691, 10562, 2028, 52, 34, "Output",ExpressionUUID->"fdec1249-8281-4f63-8289-343e5f0c7c68"],
Cell[479722, 10616, 363, 6, 34, "Output",ExpressionUUID->"ce638e45-89a7-425d-afac-e3dc8a23427a"],
Cell[480088, 10624, 358, 6, 34, "Output",ExpressionUUID->"9870b2a2-0abb-42f8-9d06-bbcd3bca3ba1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[480495, 10636, 294, 4, 53, "Subsubsection",ExpressionUUID->"bf782785-d161-46b3-bef6-d8dfcd7f9541"],
Cell[480792, 10642, 47148, 1087, 324, "Input",ExpressionUUID->"80ae5861-4723-4779-8dde-130f1c5d9141"],
Cell[527943, 11731, 210, 4, 51, "Text",ExpressionUUID->"6b965e2f-4ff0-45a9-a7f8-8a192d0b07cc"],
Cell[CellGroupData[{
Cell[528178, 11739, 466, 9, 52, "Input",ExpressionUUID->"52445881-614b-4dd9-a1bd-0080a2d7c99a"],
Cell[528647, 11750, 2372, 55, 34, "Output",ExpressionUUID->"3f3c0644-f554-403f-b3ec-609efe43e155"],
Cell[531022, 11807, 615, 8, 34, "Output",ExpressionUUID->"41bd6a0a-72fc-4a68-a3d3-b3b73fdff2d6"]
}, Open  ]],
Cell[531652, 11818, 948, 22, 30, "Input",ExpressionUUID->"a05382e6-e2fd-45f4-8543-de640e8b773f"],
Cell[CellGroupData[{
Cell[532625, 11844, 740, 16, 30, "Input",ExpressionUUID->"e5d1cf71-5628-47eb-bd13-7813178be778"],
Cell[533368, 11862, 281256, 6851, 403, "Output",ExpressionUUID->"8c38a736-7aec-4577-a969-055022018b27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[814661, 18718, 1466, 39, 136, "Input",ExpressionUUID->"49114a5a-6bbc-4714-b63a-328b145d5760"],
Cell[816130, 18759, 23100, 576, 231, "Output",ExpressionUUID->"c8385df1-5238-4450-8479-2cd88b4882f7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[839279, 19341, 226, 3, 61, "Subsubsection",ExpressionUUID->"a21feaaf-9446-4d8b-ac52-a10cb9ad26cd"],
Cell[839508, 19346, 218, 3, 30, "Input",ExpressionUUID->"ec730fc2-4c9a-4d91-8bb8-d26b64cbb466"],
Cell[839729, 19351, 46885, 1087, 387, "Input",ExpressionUUID->"96724890-613a-480b-acc6-050283d22502"],
Cell[886617, 20440, 182, 3, 51, "Text",ExpressionUUID->"e739b809-9ebd-41db-a1e0-dc531eff56fb"],
Cell[CellGroupData[{
Cell[886824, 20447, 544, 11, 52, "Input",ExpressionUUID->"2fe8319c-cd97-42c0-a024-bb890945e195"],
Cell[887371, 20460, 2463, 56, 34, "Output",ExpressionUUID->"d219f2ae-82b0-41f5-8731-15f3f42707eb"],
Cell[889837, 20518, 700, 9, 34, "Output",ExpressionUUID->"05985714-28f0-4390-b55c-b3f32bb5ffb2"]
}, Open  ]],
Cell[890552, 20530, 1002, 24, 30, "Input",ExpressionUUID->"ad7da5be-c961-41eb-8dfd-d9e94abcd1ca"],
Cell[CellGroupData[{
Cell[891579, 20558, 729, 15, 30, "Input",ExpressionUUID->"816b25fe-0415-4f5f-81e3-ffd62cd15b81"],
Cell[892311, 20575, 338510, 8024, 842, "Output",ExpressionUUID->"516ef6d3-a312-471b-8b1d-1d1e74176268"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230870, 28605, 234, 4, 45, "Subsubsection",ExpressionUUID->"20342d76-0496-4924-bf6b-98d097668ca7"],
Cell[1231107, 28611, 1175, 27, 30, "Input",ExpressionUUID->"dae87412-e074-47da-8e6f-17ff959ab699"],
Cell[CellGroupData[{
Cell[1232307, 28642, 753, 19, 52, "Input",ExpressionUUID->"5a067d6e-7d8e-4799-8c2e-5e243c6cb18d"],
Cell[1233063, 28663, 451, 7, 34, "Output",ExpressionUUID->"360b2b61-f427-416f-b294-f55d0153439f"],
Cell[1233517, 28672, 185430, 4734, 195, "Output",ExpressionUUID->"e95d0917-cb32-4e50-a2d1-da18dee2c3e0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1418996, 33412, 211, 4, 37, "Subsubsection",ExpressionUUID->"c79c556b-b93f-4524-a0ae-f946b79f2f66"],
Cell[1419210, 33418, 464, 10, 30, "Input",ExpressionUUID->"c5eeb76e-fa7b-4d5f-b985-7d6786d1c283"],
Cell[CellGroupData[{
Cell[1419699, 33432, 321, 6, 30, "Input",ExpressionUUID->"c8b47aeb-70b7-4e20-8599-0be248ed600f"],
Cell[1420023, 33440, 402, 7, 34, "Output",ExpressionUUID->"8056c56c-fb63-4815-9356-1ad6b8deda8b"]
}, Open  ]],
Cell[1420440, 33450, 981, 22, 40, "Input",ExpressionUUID->"99aa0ccd-b4c7-43d4-885b-6c0e0ae72db7"],
Cell[CellGroupData[{
Cell[1421446, 33476, 265, 6, 30, "Input",ExpressionUUID->"7572bd21-ad9a-4689-abf7-20df4c10d7b3"],
Cell[1421714, 33484, 2769, 66, 106, "Output",ExpressionUUID->"1b77ab87-0615-4b89-b0b7-3b6a0f0ac960"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1424520, 33555, 592, 14, 39, "Input",ExpressionUUID->"7b481afd-c826-40bb-ad2c-3b7dd200be83"],
Cell[1425115, 33571, 325, 6, 45, "Output",ExpressionUUID->"9fd21316-f5c9-47b2-9d3c-00a7e22e028f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1425477, 33582, 248, 5, 30, "Input",ExpressionUUID->"d09004f6-846f-4690-8712-eddb67f21eef"],
Cell[1425728, 33589, 338, 7, 34, "Output",ExpressionUUID->"fce3b99c-c471-4614-b069-4cccf4c4717e"]
}, Open  ]],
Cell[1426081, 33599, 966, 23, 30, "Input",ExpressionUUID->"83c093e0-ce18-442a-bb0e-15879c319906"],
Cell[CellGroupData[{
Cell[1427072, 33626, 290, 7, 30, "Input",ExpressionUUID->"d46531ce-46ba-4277-b1ef-68b894feb647"],
Cell[1427365, 33635, 9272, 242, 37, "Output",ExpressionUUID->"8453ec42-3bfe-46f0-b317-b2a59517df65"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1436686, 33883, 296, 5, 53, "Subsubsection",ExpressionUUID->"cba37de9-6e1e-4373-864d-8f7a5a7eea5c"],
Cell[1436985, 33890, 1042, 22, 94, "Input",ExpressionUUID->"a8440a0e-895e-47ae-b165-a99229b4e08a"],
Cell[1438030, 33914, 180, 3, 51, "Text",ExpressionUUID->"7b7777ad-047b-426b-8964-2553bad21c82"],
Cell[CellGroupData[{
Cell[1438235, 33921, 499, 11, 52, "Input",ExpressionUUID->"c838b7ae-ed5c-49f2-b2c6-166e1d2ea9e8"],
Cell[1438737, 33934, 2243, 54, 34, "Output",ExpressionUUID->"6e98be50-a2f9-406b-ba8e-2dc5a6521ce6"],
Cell[1440983, 33990, 504, 7, 34, "Output",ExpressionUUID->"7a186afe-ea38-49d8-860b-68a3212c1f41"]
}, Open  ]],
Cell[1441502, 34000, 985, 23, 30, "Input",ExpressionUUID->"04ce71fb-433f-4197-b2bc-d409304582c6"],
Cell[CellGroupData[{
Cell[1442512, 34027, 765, 17, 30, "Input",ExpressionUUID->"5693edb1-ef48-4eb2-8a89-28613a5d16a6"],
Cell[1443280, 34046, 283211, 6841, 819, "Output",ExpressionUUID->"de6e7ac6-93dc-48bb-b580-e3f4b4eb18fb"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1726552, 40894, 171, 3, 54, "Subsection",ExpressionUUID->"ebd4d8e3-16cd-4dd2-818a-e814a6b54295"],
Cell[CellGroupData[{
Cell[1726748, 40901, 201, 3, 45, "Subsubsection",ExpressionUUID->"48c4d369-e3fc-4b59-ae33-d8480e3fc8cd"],
Cell[CellGroupData[{
Cell[1726974, 40908, 200, 4, 30, "Input",ExpressionUUID->"549b39fc-d2bf-4886-9bb0-0a9ea3c75644"],
Cell[1727177, 40914, 12641, 305, 182, "Output",ExpressionUUID->"9b96ae24-b886-4711-8af9-e47855238c28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1739855, 41224, 204, 4, 30, "Input",ExpressionUUID->"f38157a5-868b-408a-aa87-a99300ef679e"],
Cell[1740062, 41230, 12851, 309, 182, "Output",ExpressionUUID->"d3f21275-abac-4655-a39b-f218ccffb20a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1752950, 41544, 200, 4, 30, "Input",ExpressionUUID->"baa892cf-28d3-4297-aad9-dec7fc497477"],
Cell[1753153, 41550, 21296, 492, 95, "Output",ExpressionUUID->"3476a795-0972-43ca-8d9f-bfc26c6f2109"]
}, Open  ]],
Cell[1774464, 42045, 286, 6, 30, "Input",ExpressionUUID->"ac9e4740-aa3f-484d-924a-3b5dcd1ccb81"],
Cell[CellGroupData[{
Cell[1774775, 42055, 648, 16, 30, "Input",ExpressionUUID->"ef4905d5-9593-44a1-8e06-85f8e9f9c08d"],
Cell[1775426, 42073, 240258, 5201, 10473, "Output",ExpressionUUID->"c691a9a2-88fa-41ea-8c94-5b8c2da86e8f"]
}, Closed]],
Cell[2015699, 47277, 549, 13, 26, "Input",ExpressionUUID->"bfd4eaab-312b-484b-8890-828d4a7d9167"],
Cell[CellGroupData[{
Cell[2016273, 47294, 185, 3, 30, "Input",ExpressionUUID->"197036a1-76ad-4167-9266-80a02b9a2ebf"],
Cell[2016461, 47299, 3066, 70, 240, "Output",ExpressionUUID->"11702827-1bb0-4f42-8402-291a3db73b9d"]
}, Open  ]],
Cell[2019542, 47372, 389, 8, 30, "Input",ExpressionUUID->"cd72e5af-3feb-4c1b-b35d-957b1db74806"],
Cell[2019934, 47382, 294, 6, 30, "Input",ExpressionUUID->"a1031b33-b94d-4916-a14a-3a5516c1fb0e"],
Cell[CellGroupData[{
Cell[2020253, 47392, 195, 3, 30, "Input",ExpressionUUID->"c4a21e9b-c83a-43b7-bd1a-42c97efae3cd"],
Cell[2020451, 47397, 24290, 536, 1978, "Output",ExpressionUUID->"88370358-a486-4459-8a45-bf6258a358aa"]
}, Closed]],
Cell[CellGroupData[{
Cell[2044778, 47938, 196, 3, 26, "Input",ExpressionUUID->"fb3fbddc-b155-4547-89b3-401e84438e0a"],
Cell[2044977, 47943, 5557, 89, 765, "Output",ExpressionUUID->"a5dc781b-c090-4dba-b201-91c610658d42"]
}, Closed]],
Cell[2050549, 48035, 716, 14, 113, "Input",ExpressionUUID->"ce233e06-4d1a-42f7-81cb-c223edd53c5e"],
Cell[CellGroupData[{
Cell[2051290, 48053, 267, 5, 30, "Input",ExpressionUUID->"1c8831d5-cfea-4d85-aa4a-a9b2238564d9"],
Cell[2051560, 48060, 3155, 86, 109, "Output",ExpressionUUID->"55a52a90-264c-4f16-9bc7-498bc6117f47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2054752, 48151, 266, 5, 30, "Input",ExpressionUUID->"b4d8d586-a0bd-41e4-b87a-3d9469fd8b4e"],
Cell[2055021, 48158, 633, 14, 99, "Output",ExpressionUUID->"f1654c96-2cb4-4a61-b9b9-2bcb2f737ce0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2055703, 48178, 224, 5, 37, "Subsubsection",ExpressionUUID->"6317a4e2-766b-4ce9-bd7a-68a1cb3096bc"],
Cell[2055930, 48185, 618, 15, 30, "Input",ExpressionUUID->"3f5eabe9-dcea-4f0a-b416-fac63ba8c017"],
Cell[CellGroupData[{
Cell[2056573, 48204, 328, 5, 30, "Input",ExpressionUUID->"be05fbdb-1ee1-452a-aa6a-5674e48a2d5e"],
Cell[2056904, 48211, 14139, 314, 70, "Output",ExpressionUUID->"1427c735-8eda-48c8-9759-4d49a36ff5fc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2071092, 48531, 261, 4, 53, "Subsubsection",ExpressionUUID->"3ba80b64-96b2-4de7-a926-801cc2fb3fe0"],
Cell[2071356, 48537, 1623, 37, 178, "Input",ExpressionUUID->"486389d3-a2ef-47bc-a1a4-54014a8f5526"],
Cell[2072982, 48576, 180, 3, 51, "Text",ExpressionUUID->"3c0a366e-715e-478a-8ddb-5eca41eef499"],
Cell[CellGroupData[{
Cell[2073187, 48583, 426, 7, 30, "Input",ExpressionUUID->"c35b94ea-0f91-4216-8bb4-13e997887e62"],
Cell[2073616, 48592, 1237, 20, 77, "Output",ExpressionUUID->"faa89d3a-a518-4ba2-a6dd-6de745e2a878"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2074890, 48617, 549, 10, 30, "Input",ExpressionUUID->"75998bd8-358d-4430-892d-da1cffe51830"],
Cell[2075442, 48629, 704, 12, 34, "Output",ExpressionUUID->"68109a08-4bf0-4ed6-8cd2-775ec489ec5e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2076195, 48647, 437, 8, 53, "Subsubsection",ExpressionUUID->"cb29b891-508e-4cda-898d-dbf330820a9b"],
Cell[2076635, 48657, 951, 21, 73, "Input",ExpressionUUID->"b91842e1-4442-4228-b9f8-29e268786d6d"],
Cell[2077589, 48680, 1885, 34, 94, "Input",ExpressionUUID->"c2b7325a-5a56-42fb-a1c8-fdb4b830b707"],
Cell[2079477, 48716, 179, 3, 51, "Text",ExpressionUUID->"20bfdcff-5bb9-4082-9f61-6287d38843b1"],
Cell[CellGroupData[{
Cell[2079681, 48723, 393, 8, 30, "Input",ExpressionUUID->"936af9e2-4f8a-4203-a161-b570a13dd9f4"],
Cell[2080077, 48733, 899, 15, 34, "Output",ExpressionUUID->"b2957d8d-e2d4-4a57-be79-0141088633a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2081013, 48753, 402, 8, 30, "Input",ExpressionUUID->"236adb57-9edd-4665-ae2b-d944e79ac8fa"],
Cell[2081418, 48763, 926, 15, 34, "Output",ExpressionUUID->"09801642-0073-4088-a0e3-35bd7f99a392"]
}, Open  ]],
Cell[2082359, 48781, 2291, 62, 136, "Input",ExpressionUUID->"2061adba-4216-406f-94ff-74275ebf7aaa"],
Cell[2084653, 48845, 1147, 24, 157, "Input",ExpressionUUID->"1e1282b4-4f02-49b1-9e7c-868bf51d648d"],
Cell[CellGroupData[{
Cell[2085825, 48873, 287, 5, 30, "Input",ExpressionUUID->"7247ac94-11c5-4f5c-b733-3def38a2a94b"],
Cell[2086115, 48880, 2551, 53, 70, "Output",ExpressionUUID->"1a7548b7-0082-4906-b8b0-db6887baf8c0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2088715, 48939, 220, 3, 53, "Subsubsection",ExpressionUUID->"85034e69-91ec-4a7b-a47d-54ef33723b7c"],
Cell[2088938, 48944, 1138, 25, 19, "Input",ExpressionUUID->"12ac63b7-b657-4617-9109-d2114d7a16ed",
 CellOpen->False],
Cell[2090079, 48971, 3349, 70, 178, "Input",ExpressionUUID->"2ea36503-f0ba-4c62-a688-2d39cfa76234"],
Cell[2093431, 49043, 1934, 52, 178, "Input",ExpressionUUID->"14091c90-e981-4ded-b2d0-40421c6b9372"]
}, Closed]],
Cell[CellGroupData[{
Cell[2095402, 49100, 269, 4, 53, "Subsubsection",ExpressionUUID->"59284484-577d-49a5-b6cd-e4c9f60c3431"],
Cell[CellGroupData[{
Cell[2095696, 49108, 451, 13, 30, "Input",ExpressionUUID->"a96e8944-7101-4a0b-8dd9-53ab1f05d893"],
Cell[2096150, 49123, 365, 7, 34, "Output",ExpressionUUID->"4c152dac-2f36-48de-9571-629141d3d165"]
}, Open  ]],
Cell[2096530, 49133, 191, 3, 48, "Item",ExpressionUUID->"0db2baf7-305c-4265-9bff-968d06aa53de"],
Cell[2096724, 49138, 1468, 39, 94, "Input",ExpressionUUID->"9e4d4049-c6a5-4d0b-8e67-4258ad2a36e3"],
Cell[CellGroupData[{
Cell[2098217, 49181, 691, 18, 73, "Input",ExpressionUUID->"2d9a7340-d79e-488e-9bc1-fe6dc3efde34"],
Cell[2098911, 49201, 6959, 190, 381, "Output",ExpressionUUID->"d6b3faf8-4fda-4054-969c-66c830436cb2"]
}, Open  ]],
Cell[2105885, 49394, 191, 3, 48, "Item",ExpressionUUID->"8d8e12ca-0af0-40a7-b89e-1b3ac46ee7de"],
Cell[2106079, 49399, 1246, 34, 73, "Input",ExpressionUUID->"25c9fab0-475d-4677-981c-a3bd7fc8dad8"],
Cell[CellGroupData[{
Cell[2107350, 49437, 565, 15, 52, "Input",ExpressionUUID->"0a1c42e3-610c-44ce-919b-7c855fdf64a1"],
Cell[2107918, 49454, 6960, 190, 381, "Output",ExpressionUUID->"31a8b7c6-e670-4e30-9606-a9a943e96e6e"]
}, Open  ]],
Cell[2114893, 49647, 195, 3, 48, "Item",ExpressionUUID->"d16c2636-8632-48db-93ad-dcabe9cb1b9c"],
Cell[2115091, 49652, 694, 20, 30, "Input",ExpressionUUID->"fe9e6c98-5934-48b4-978f-3ee344dbd789"],
Cell[CellGroupData[{
Cell[2115810, 49676, 645, 15, 52, "Input",ExpressionUUID->"a13de8d6-f369-48b7-ab4c-2bd5bd45cd9a"],
Cell[2116458, 49693, 1666, 43, 209, "Output",ExpressionUUID->"3ebfa846-dd19-4f72-8cb0-5de2d63d6416"]
}, Open  ]],
Cell[2118139, 49739, 189, 3, 48, "Item",ExpressionUUID->"1e48b0f6-fad9-46c4-8f4c-e2818dde01d5"],
Cell[2118331, 49744, 616, 18, 30, "Input",ExpressionUUID->"74ce3dde-c9aa-4475-8965-cda75ed871c1"],
Cell[CellGroupData[{
Cell[2118972, 49766, 549, 14, 52, "Input",ExpressionUUID->"9d2af677-b55d-400c-b204-c2e3140636fa"],
Cell[2119524, 49782, 1472, 40, 209, "Output",ExpressionUUID->"50b4b7c8-8ea3-4355-aea2-040f09b982d1"]
}, Open  ]],
Cell[2121011, 49825, 187, 3, 48, "Item",ExpressionUUID->"0b26a03a-972f-45de-bd21-ba497287c2f4"],
Cell[2121201, 49830, 1284, 33, 52, "Input",ExpressionUUID->"94fffe8e-9073-4e01-aca6-87b08838fe88"],
Cell[CellGroupData[{
Cell[2122510, 49867, 659, 17, 52, "Input",ExpressionUUID->"b6911215-d79e-49c4-a9af-b50b7dc654db"],
Cell[2123172, 49886, 11662, 275, 767, "Output",ExpressionUUID->"3bd1dac9-1ba7-4328-9863-a232428156c1"]
}, Open  ]],
Cell[2134849, 50164, 182, 3, 48, "Item",ExpressionUUID->"26c76089-8871-42a7-bfaf-7c14a1e4159d"],
Cell[2135034, 50169, 1111, 33, 52, "Input",ExpressionUUID->"f61efbf6-d8ed-41fc-b3ff-1afab13bcbd8"],
Cell[CellGroupData[{
Cell[2136170, 50206, 543, 15, 52, "Input",ExpressionUUID->"7771dffa-eace-47e5-bc3b-8208cba84894"],
Cell[2136716, 50223, 5217, 146, 423, "Output",ExpressionUUID->"442db79c-94a8-495f-be24-8ba6701fb7d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2141970, 50374, 124, 2, 30, "Input",ExpressionUUID->"291320f2-aa3b-458d-bbca-7dd04e68f26b"],
Cell[2142097, 50378, 13920, 311, 166, "Output",ExpressionUUID->"09176ef6-e1b9-4793-8cbc-fa0230e3449b"]
}, Open  ]],
Cell[2156032, 50692, 1075, 22, 40, "Input",ExpressionUUID->"c3270d06-d715-4f96-aa21-b2a54f2b1839"]
}, Closed]],
Cell[CellGroupData[{
Cell[2157144, 50719, 233, 4, 37, "Subsubsection",ExpressionUUID->"50419dd1-f6de-4542-a9ac-182318a2b0f1"],
Cell[CellGroupData[{
Cell[2157402, 50727, 576, 15, 30, "Input",ExpressionUUID->"3c37e0e8-d0f8-4228-a137-69a2818f9906"],
Cell[2157981, 50744, 261437, 5326, 7619, "Output",ExpressionUUID->"01e6bbbf-b41b-4e52-b37a-124754aa01e1"]
}, Closed]],
Cell[2419433, 56073, 1690, 39, 198, "Input",ExpressionUUID->"54ba7959-696d-404c-890b-85bd89dc1e3c"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2421172, 56118, 170, 3, 54, "Subsection",ExpressionUUID->"6d32df38-2cda-45ea-a037-15cb64d8121d"],
Cell[CellGroupData[{
Cell[2421367, 56125, 272, 4, 61, "Subsubsection",ExpressionUUID->"d5efb665-5eb1-4ee9-bf9f-9f28260885c9"],
Cell[2421642, 56131, 244, 5, 30, "Input",ExpressionUUID->"29350de8-6dea-4ddc-920c-12caa9149c18"],
Cell[2421889, 56138, 1559, 41, 94, "Input",ExpressionUUID->"69f4bd15-ff47-46ca-aec5-6b49b6ee094f"],
Cell[2423451, 56181, 180, 3, 51, "Text",ExpressionUUID->"566b57ca-9988-4076-b656-c4350b86a8f3"],
Cell[CellGroupData[{
Cell[2423656, 56188, 575, 16, 30, "Input",ExpressionUUID->"00533734-f9c9-4389-9237-8b8149f0fe02"],
Cell[2424234, 56206, 67815, 1393, 513, "Output",ExpressionUUID->"748a8447-5fe0-4670-b9da-fc3dd6cf9904"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2492098, 57605, 303, 5, 53, "Subsubsection",ExpressionUUID->"c6b4fa2d-8e49-44e4-b492-893dc8e2b801"],
Cell[2492404, 57612, 217, 4, 30, "Input",ExpressionUUID->"c21970be-92e9-4ead-b0df-999c120af4e8"],
Cell[2492624, 57618, 557, 14, 60, "Input",ExpressionUUID->"30c325ac-de5b-40e5-9fe5-288bb37fbb4d"],
Cell[2493184, 57634, 179, 3, 51, "Text",ExpressionUUID->"eba4c279-37d7-41dd-a240-8737b47b09e8"],
Cell[CellGroupData[{
Cell[2493388, 57641, 576, 16, 30, "Input",ExpressionUUID->"fceb9cc2-a693-4116-a099-58f215ed9bcc"],
Cell[2493967, 57659, 67795, 1393, 513, "Output",ExpressionUUID->"d5ff46ee-295d-494e-af48-64e55505faed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2561799, 59057, 546, 15, 30, "Input",ExpressionUUID->"125a29fb-a66c-4fed-91cb-09a7750c3455"],
Cell[2562348, 59074, 2492, 54, 549, "Output",ExpressionUUID->"b99de98b-0c0c-420b-905b-e91397194d51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2564877, 59133, 543, 15, 30, "Input",ExpressionUUID->"f69955aa-112a-49db-9e41-ff005ac80593"],
Cell[2565423, 59150, 17131, 345, 527, "Output",ExpressionUUID->"430d43cb-8198-441f-bc05-b516c0c24d85"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2582603, 59501, 245, 4, 53, "Subsubsection",ExpressionUUID->"517e8c94-b27b-4349-83a0-ec1536df7247"],
Cell[2582851, 59507, 212, 4, 30, "Input",ExpressionUUID->"a675739d-79d4-47ff-b24d-05c27be35e33"],
Cell[2583066, 59513, 769, 17, 73, "Input",ExpressionUUID->"72e814f1-aee5-4d32-a238-2a4a84034279"],
Cell[2583838, 59532, 182, 3, 51, "Text",ExpressionUUID->"765c39bc-541f-4efe-aa19-ba1732738398"],
Cell[CellGroupData[{
Cell[2584045, 59539, 568, 16, 30, "Input",ExpressionUUID->"61dcd75a-6d3c-4fdc-ab0a-cc18bebe74d7"],
Cell[2584616, 59557, 67769, 1392, 513, "Output",ExpressionUUID->"19f22eb3-a9c6-41f8-897c-f600062db995"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2652422, 60954, 545, 16, 30, "Input",ExpressionUUID->"a2662989-d32c-41e4-a13d-e3b185d7cdda"],
Cell[2652970, 60972, 67771, 1392, 513, "Output",ExpressionUUID->"b47edcb9-1f69-4af6-962e-99233922b5e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2720778, 62369, 605, 17, 30, "Input",ExpressionUUID->"dab6c7b9-8732-4641-9b74-f4f229594a01"],
Cell[2721386, 62388, 81493, 1672, 513, "Output",ExpressionUUID->"4bab8233-8036-4743-a1ed-330b9772bdba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2802916, 64065, 583, 16, 30, "Input",ExpressionUUID->"36167372-95fe-48d0-891d-66500a183f40"],
Cell[2803502, 64083, 2491, 54, 70, "Output",ExpressionUUID->"c03ecda3-1605-4679-b63f-92e0f258da8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2806030, 64142, 581, 16, 30, "Input",ExpressionUUID->"7e929af0-8b75-4904-8da0-2db15e206e2c"],
Cell[2806614, 64160, 17111, 344, 70, "Output",ExpressionUUID->"ab755abc-9619-480a-b7f1-b33d421ebd72"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2823774, 64510, 310, 5, 53, "Subsubsection",ExpressionUUID->"26114da0-0133-4219-84d9-41ddc0d9e337"],
Cell[2824087, 64517, 217, 4, 30, "Input",ExpressionUUID->"c34ec18a-225d-4069-89b8-fc7e07b99978"],
Cell[2824307, 64523, 1009, 25, 52, "Input",ExpressionUUID->"6a88cc62-7cf8-4af7-ba1f-0a88ae5b2d17"],
Cell[2825319, 64550, 180, 3, 51, "Text",ExpressionUUID->"3e2a5eb4-ab90-41c0-98df-fca7beb61244"],
Cell[CellGroupData[{
Cell[2825524, 64557, 666, 19, 30, "Input",ExpressionUUID->"cfb433b1-396d-4955-abfd-6c06fd43eb7a"],
Cell[2826193, 64578, 149775, 3018, 513, "Output",ExpressionUUID->"be0c4c03-bcd1-491e-804e-8f59c2fd25c6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2976017, 67602, 298, 5, 53, "Subsubsection",ExpressionUUID->"23f0342a-1ce8-40d5-9002-9f788e44c651"],
Cell[2976318, 67609, 682, 13, 97, "Text",ExpressionUUID->"d5125a68-818c-4c31-a233-dc99fc8d2003"],
Cell[2977003, 67624, 215, 4, 30, "Input",ExpressionUUID->"4809b558-0cb9-4ed3-a00f-7f927c87b389"],
Cell[2977221, 67630, 819, 17, 30, "Input",ExpressionUUID->"f459580a-3847-4918-a646-4467559c262b"],
Cell[2978043, 67649, 468, 10, 74, "Text",ExpressionUUID->"4ef502e6-6251-455d-8182-8214b7ec57d5"],
Cell[2978514, 67661, 223, 4, 30, "Input",ExpressionUUID->"ad3cebc8-861f-4c0a-a30e-e34711309ed4"],
Cell[2978740, 67667, 605, 14, 30, "Input",ExpressionUUID->"d2c52703-12b3-4d19-bf8a-b7e551e1f821"],
Cell[2979348, 67683, 631, 12, 97, "Text",ExpressionUUID->"93f0963e-568b-4871-be67-52df8780b40c"],
Cell[2979982, 67697, 223, 4, 30, "Input",ExpressionUUID->"fd24f0c8-1863-44e7-b481-070fa3d154eb"],
Cell[2980208, 67703, 1337, 29, 94, "Input",ExpressionUUID->"3afec626-c57a-41f7-a472-525ae305d80a"],
Cell[2981548, 67734, 383, 9, 74, "Text",ExpressionUUID->"38190a06-9247-40c0-b944-5bf97fa8e106"],
Cell[2981934, 67745, 219, 4, 30, "Input",ExpressionUUID->"14b790a6-ab7c-4070-a70c-5884d94d1d9c"],
Cell[2982156, 67751, 993, 25, 94, "Input",ExpressionUUID->"32917686-7288-466f-bd06-a9e61b4457e8"],
Cell[2983152, 67778, 470, 10, 74, "Text",ExpressionUUID->"854e642e-ce06-4488-8bb2-c87e091a4251"],
Cell[2983625, 67790, 216, 4, 30, "Input",ExpressionUUID->"079f0341-ba18-4133-b05b-80943aba8f41"],
Cell[2983844, 67796, 1975, 48, 115, "Input",ExpressionUUID->"b534dc2f-16e0-440f-899e-03a67194dcac"],
Cell[2985822, 67846, 182, 3, 51, "Text",ExpressionUUID->"a40578e7-5f30-450e-8ea8-f897e77d5397"],
Cell[2986007, 67851, 2695, 64, 367, "Input",ExpressionUUID->"b69298d7-b684-4201-bec3-b78d937953dc"],
Cell[CellGroupData[{
Cell[2988727, 67919, 3953, 84, 367, "Input",ExpressionUUID->"28dd884d-c5d8-4e51-9c97-2b88ebc97d42"],
Cell[2992683, 68005, 162361, 3465, 1853, "Output",ExpressionUUID->"bc58a2c0-2243-40ba-8ced-d25e72435763"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3155081, 71475, 3203, 77, 367, "Input",ExpressionUUID->"607cc14e-51dc-42a7-9bdc-223518723f7f"],
Cell[3158287, 71554, 480876, 9699, 70, "Output",ExpressionUUID->"82a0ef77-00db-4909-adc2-d017129de738"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3639212, 81259, 206, 3, 53, "Subsubsection",ExpressionUUID->"5cfb6d02-5695-4c9b-8e4a-08664ecbc606"],
Cell[3639421, 81264, 1395, 31, 115, "Input",ExpressionUUID->"f6318ef7-9f0a-44ad-a6cc-f2286c2f9213"],
Cell[CellGroupData[{
Cell[3640841, 81299, 255, 5, 30, "Input",ExpressionUUID->"e340d372-73cc-410a-af79-133bc20febbc"],
Cell[3641099, 81306, 1034, 24, 104, "Output",ExpressionUUID->"0d35d64c-dbd1-4d4d-b266-55a9666bb67d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3642182, 81336, 277, 4, 53, "Subsubsection",ExpressionUUID->"764cdf9d-bca4-4ae3-a478-8071f1beb97c"],
Cell[3642462, 81342, 2372, 52, 178, "Input",ExpressionUUID->"e4aa06af-b07f-498a-8c95-7d1694fae701"],
Cell[3644837, 81396, 206, 4, 51, "Text",ExpressionUUID->"6429722e-85af-4cac-9475-5daccfb3b760"],
Cell[CellGroupData[{
Cell[3645068, 81404, 1741, 39, 115, "Input",ExpressionUUID->"69f9e9ac-82f2-4ac8-9c22-f22f5b75a6c2"],
Cell[3646812, 81445, 6949, 185, 1711, "Output",ExpressionUUID->"c857b125-aade-4e30-ba3a-15327b04b935"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3653798, 81635, 984, 26, 115, "Input",ExpressionUUID->"ff113470-d226-4681-a081-4731e369e010"],
Cell[3654785, 81663, 4725, 141, 1120, "Output",ExpressionUUID->"0d0a4659-9d4f-46ed-8cdb-a49a79427e14"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3659559, 81810, 201, 3, 53, "Subsubsection",ExpressionUUID->"5069f8d7-8f8c-46d4-a3b9-dca8105d182d"],
Cell[CellGroupData[{
Cell[3659785, 81817, 4941, 101, 19, "Input",ExpressionUUID->"b5a892ba-f183-4888-ad8c-1818c45719d0",
 Evaluatable->False,
 CellOpen->False],
Cell[3664729, 81920, 5031, 111, 605, "Output",ExpressionUUID->"e69aad06-48aa-4fb8-af8f-2ed9f2dd3d6b"]
}, Open  ]],
Cell[3669775, 82034, 1345, 35, 52, "Input",ExpressionUUID->"2e18989d-cc98-4954-a751-834628a74146"],
Cell[3671123, 82071, 3914, 68, 304, "Input",ExpressionUUID->"b908e66e-4d23-4cae-9d4d-7501fb34885e"],
Cell[3675040, 82141, 182, 3, 51, "Text",ExpressionUUID->"20464487-275f-400c-b13c-df3758661796"],
Cell[CellGroupData[{
Cell[3675247, 82148, 2941, 65, 262, "Input",ExpressionUUID->"fa20634e-f42d-428e-bbb7-19e08826dd26"],
Cell[3678191, 82215, 8489, 190, 1623, "Output",ExpressionUUID->"989e3a03-23c8-4e63-a3b0-0d2037259a77"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3686729, 82411, 206, 3, 53, "Subsubsection",ExpressionUUID->"43c5923f-dfbc-46f0-b6a7-5206d662447c"],
Cell[3686938, 82416, 1517, 31, 94, "Input",ExpressionUUID->"570e9d69-254b-415c-8e75-cb0586e356ac"],
Cell[3688458, 82449, 2231, 44, 157, "Input",ExpressionUUID->"a4dad405-768e-4499-bbbd-f62e809b0edc"],
Cell[3690692, 82495, 2013, 42, 157, "Input",ExpressionUUID->"e2a4a647-a4df-472a-8af0-796a92787cab"],
Cell[3692708, 82539, 180, 3, 51, "Text",ExpressionUUID->"e6b41ea3-1b2f-4c45-b93c-71dffa59125b"],
Cell[CellGroupData[{
Cell[3692913, 82546, 2242, 55, 199, "Input",ExpressionUUID->"120cf98b-bb38-41a0-92cb-e786dcced35c"],
Cell[3695158, 82603, 6315, 124, 1599, "Output",ExpressionUUID->"eb870bf9-0de8-4cce-9591-43e711faa682"]
}, Open  ]],
Cell[3701488, 82730, 1610, 46, 178, "Input",ExpressionUUID->"7fefd0b4-8a5e-474b-bc4d-5d9ad472b5d1"],
Cell[CellGroupData[{
Cell[3703123, 82780, 1837, 46, 178, "Input",ExpressionUUID->"626009b6-4ece-4634-a055-9a1361a792b6"],
Cell[3704963, 82828, 5405, 115, 1219, "Output",ExpressionUUID->"31a21848-c572-4af1-9178-93c0161c3abd"]
}, Open  ]],
Cell[3710383, 82946, 5451, 116, 1277, InheritFromParent,ExpressionUUID->"cd675e46-e2d9-4059-bcd0-57e6cfc36deb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3715895, 83069, 190, 3, 67, "Section",ExpressionUUID->"366a9c7c-40b6-4e17-b612-e85b5abac490",
 CellTags->"Keywords",
 CellID->442466898],
Cell[CellGroupData[{
Cell[3716110, 83076, 140, 2, 32, "Item",ExpressionUUID->"5813e785-8d21-454e-ac75-5f3913597a2c"],
Cell[3716253, 83080, 90, 1, 32, "Item",ExpressionUUID->"995c8064-6859-4e41-b6cd-65ce27221847"],
Cell[3716346, 83083, 88, 1, 32, "Item",ExpressionUUID->"bedccd35-f9c3-46ac-ac87-d418e441e604"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3716483, 83090, 143, 3, 53, "Section",ExpressionUUID->"bd1f6cad-4ff3-4ab7-b602-0b4d3ed3e2ac",
 CellTags->"Keywords",
 CellID->1836614011],
Cell[3716629, 83095, 179, 5, 35, "Text",ExpressionUUID->"006d71ed-241c-4cf5-8ee6-00d91fa914f6"],
Cell[3716811, 83102, 137, 2, 35, "Text",ExpressionUUID->"279e8012-b716-44b0-8c1c-3c37e92e2ad2"]
}, Closed]],
Cell[CellGroupData[{
Cell[3716985, 83109, 139, 3, 53, "Section",ExpressionUUID->"5961a637-a7ed-48e9-b1ab-e1a62f6c691c",
 CellTags->"Keywords",
 CellID->1137237116],
Cell[CellGroupData[{
Cell[3717149, 83116, 315, 6, 32, "Item",ExpressionUUID->"bac34aab-5f3c-4c18-85c2-373b47cd99f0"],
Cell[3717467, 83124, 137, 2, 32, "Item",ExpressionUUID->"e5e467fd-9b3a-49e2-8d1e-d3011b1f02df"],
Cell[3717607, 83128, 85, 1, 32, "Item",ExpressionUUID->"40a463f9-c8f1-43ba-810b-4f669ff2ca85"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

