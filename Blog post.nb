(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    394379,       8965]
NotebookOptionsPosition[    385353,       8822]
NotebookOutlinePosition[    385750,       8838]
CellTagsIndexPosition[    385707,       8835]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction", "Subsection",
 CellChangeTimes->{{3.803667206388259*^9, 3.803667208654883*^9}, 
   3.803667795499217*^9},ExpressionUUID->"842357bb-ca59-4087-b7ce-\
711935ca769d"],

Cell["\<\
My main goal when I came to the Wolfram Summer school was to create a project \
related to accessibility. From this wish, and from my mentoring process, the \
project theme emerged: textually describe wolfram language expressions based \
only in the symbolic structure of it. More precisely, my challenge would be \
to describe graphics expressions. In some way, this theme is related to \
accessibility, because the automatic generated texts could be used as \
alternative texts for this graphics, helping people with visual impairment, \
for example. \
\>", "Text",
 CellChangeTimes->{{3.803667220474402*^9, 3.8036672932809963`*^9}, {
   3.803667567593359*^9, 3.803667687731567*^9}, 3.80366777680404*^9, {
   3.803667811864634*^9, 3.8036679258496523`*^9}, 3.803668074924797*^9, {
   3.803668112854938*^9, 3.803668130471085*^9}, {3.803686198860608*^9, 
   3.8036862036383743`*^9}, {3.803710947942224*^9, 
   3.803710948946484*^9}},ExpressionUUID->"c8e73ccd-8905-46c3-8168-\
4155a9adb611"],

Cell["\<\
With the theme defined, I started working to find some path to create a \
general form of describing graphics. The first steps were to explore the \
already built-in functions that make similar things,  check the symbolic \
composition of graphics expressions and explore the wolfram language symbols \
properties. After that , I was secure enough about what path to follow.\
\>", "Text",
 CellChangeTimes->{{3.803668354746334*^9, 3.803668458436138*^9}, {
  3.80366851337153*^9, 3.8036685539027443`*^9}, {3.803668643522131*^9, 
  3.8036686970353107`*^9}, {3.8036688674332933`*^9, 3.803668919417859*^9}, {
  3.80368625619131*^9, 
  3.803686256575468*^9}},ExpressionUUID->"c7768290-8b05-4de4-9a38-\
d2245220b80c"],

Cell["\<\
Initially, I created functions to describe colors, and then, graphics \
primitives symbols (the main, but not the only, functions that can be used to \
create shapes in graphics). After some iterations of the project, it was \
decided to reduce the scope of it and initially describe more precisely the \
triangle shapes. From this point, I focused in creating specific functions to \
describe more properties related to this polygon. In the next sections, I \
explain in detail each part of this process, what I discovered on each of \
them, and the output related to my project.\
\>", "Text",
 CellChangeTimes->{{3.8036690831143837`*^9, 3.8036692692362633`*^9}, 
   3.803669622224697*^9, {3.8036863057287617`*^9, 
   3.803686307132051*^9}},ExpressionUUID->"c67547a5-bf31-4ca1-bafe-\
95ffddb1ed6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Language symbols", "Subsection",
 CellChangeTimes->{{3.80368632739793*^9, 3.8036863389203653`*^9}, {
  3.803686549552038*^9, 
  3.803686549639431*^9}},ExpressionUUID->"63bd608c-8e96-40cf-ba42-\
50d81c8020dd"],

Cell[TextData[{
 "I started my work by exploring the Wolfram Language symbols. In this phase, \
I discovered the ",
 StyleBox["WolframLanguageData", "CodeText",
  FontWeight->"Bold"],
 " function. This function provides informations about every symbol of the \
Wolfram Language. In special, this function allowed me to get the ",
 Cell[BoxData[
  TemplateBox[{"\"functionality areas\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}], 
      "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
   "EntityProperty"]],
  CellChangeTimes->{3.8036874869938507`*^9},ExpressionUUID->
  "c1d46c45-36f5-44a8-a465-cdd8c97787dc"],
 ", the ",
 Cell[BoxData[
  TemplateBox[{"\"translations\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Translations\""}], "]"}], 
    "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Translations\\\"]\""},
   "EntityProperty"]],
  CellChangeTimes->{3.8036874869938507`*^9},ExpressionUUID->
  "7de98c2b-cb8d-49d6-9db6-af1031638e2a"],
 " and the ",
 Cell[BoxData[
  TemplateBox[{"\"documentation basic examples\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{
       "\"WolframLanguageSymbol\"", ",", "\"DocumentationBasicExamples\""}], 
      "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
   "EntityProperty"]],
  CellChangeTimes->{3.8036874869938507`*^9},ExpressionUUID->
  "33f64c6e-eda4-4526-aed7-54eaf30f063d"],
 " properties for each symbol. These informations were important for the next \
steps. In this phase I learned that every symbol in the Wolfram Language also \
contains its related data, and this data can be used to say things, and to do \
things, with the own symbols. And that was the approach for this project - \
use the own informations about the symbols to describe expressions formed \
with them."
}], "Text",
 CellChangeTimes->{{3.8036865517545557`*^9, 3.803686673122898*^9}, {
  3.803686714324317*^9, 3.803686733527233*^9}, {3.803686770629305*^9, 
  3.803686837231213*^9}, {3.803686915911358*^9, 3.8036869393459873`*^9}, {
  3.803686988164312*^9, 3.80368707760597*^9}, {3.803687170487341*^9, 
  3.803687191857893*^9}, {3.803687257886464*^9, 3.803687258188848*^9}, {
  3.80368763910851*^9, 3.803687674506266*^9}, {3.803691994550871*^9, 
  3.803691996143067*^9}, {3.80369206401727*^9, 3.80369207620098*^9}, {
  3.803711099926506*^9, 
  3.803711113676756*^9}},ExpressionUUID->"b08964ac-ca94-43f4-a009-\
e4afa26eb905"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Getting", " ", "every", " ", "Wolfram", " ", "Language", " ", "symbol"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"WolframLanguageData", "[", "]"}], "//", "Length"}]}]], "Input",
 CellChangeTimes->{{3.803687422788402*^9, 3.8036874468189898`*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"893c7a3b-cfaa-4002-b631-2464376cfbcb"],

Cell[BoxData["5605"], "Output",
 CellChangeTimes->{3.803687448639557*^9},
 CellLabel->
  "Out[380]=",ExpressionUUID->"df7e04dc-d015-47e3-a9ca-727a86e3d5b0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Already built-in functions to describe Wolfram Language expressions\
\>", "Subsection",
 CellChangeTimes->{{3.803686348933815*^9, 3.803686371839374*^9}, {
  3.803689031054771*^9, 
  3.8036890318217916`*^9}},ExpressionUUID->"045c27e8-0b33-4bdb-bca9-\
b9a01b9a1126"],

Cell[TextData[{
 "During the mentoring process, I saw that there are already some built-in \
functions to transform expressions into texts. The most famous one is the ",
 StyleBox["ToString", "CodeText",
  FontWeight->"Bold"],
 " function, but also there are the ",
 StyleBox["TextString", "CodeText",
  FontWeight->"Bold"],
 " and ",
 StyleBox["SpokenString", "CodeText",
  FontWeight->"Bold"],
 ". So, my next step were to check the output of each of these functions with \
a ",
 StyleBox["Graphics", "CodeText",
  FontWeight->"Bold"],
 " expression. And this was the result:"
}], "Text",
 CellChangeTimes->{{3.8036875754150467`*^9, 3.80368761914779*^9}, {
   3.8036877051591053`*^9, 3.80368783151366*^9}, {3.803687880891994*^9, 
   3.803687884323337*^9}, 
   3.8037112368575907`*^9},ExpressionUUID->"01a5e541-b5a9-461a-a441-\
de030763ab18"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     Graphics3DBox[
      {RGBColor[1, 0, 0], SphereBox[{0, 0, 0}]},
      ImageSize->{108.06640625, 109.},
      ViewAngle->0.5011114127587017,
      ViewPoint->{1.3, -2.4, 2.},
      ViewVertical->{0., 0., 
       1.}], "\<\"-Graphics3D-\"\>", "\<\"Graphics3D[{RGBColor[1, 0, 0], \
Sphere[{0, 0, 0}]}]\"\>", "\<\"a three-dimensional graphic consisting of a \
sphere\"\>"},
    {
     GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
Ybu8srmSHQX9ffq1y2VmDR12GlEZxf2Hg+5+KpkoBH7Zf/bdJ3Rg545OYWxi
eP+vvU11wPt/R/O/5Zw5EgxTl4Kvmb9Bajq7+BjC1tHiZtSrGLy/Gx2edupH
hMCfxejwG7yfteyxSinKRJBWqBvkwv3UU+0x99jfVVTqfitvNgL30/orfLr9
gkA8piYwxdCBzcsmKQpkC4Gjer5AAl8HtkE3w3l1kQC3xc3sAnA/7x59efWU
4wbK88eedOJ+vHQ3SD/NRwhcWwPlP+N+bKSIGUb1EiD2irCikAMFaUvnHzHF
1pDDytshU/w+HV94TzgmKAQlUtvE/PB5NqdTpuU4PxFWengHSvD62J64aGUu
r6Ms8dMn/9eP22/vnnK3w9fz7urH03g93QqpSuJn11Bixynyq9hhdGYy+Pcg
ExE2V4boFXA/vnHi8f7eJ0JgXRpQ0SDRgc8LZxTpJwiQYS5wrf0KBb0VrHby
J62j6++EPBfx/FPJcVz+5E4h+PZKqyiQ1IFxVnz5UCpNBFZrKrsR/ryX95mc
ilZI8EF+T2P+43R8ziFWdV5dR7zEc7df/e/3MTLTaePaQtByQuPbfnx9u7yH
F+4qEEEMad+zwOcz+epHAkLzBBDPSno0cp2CxOuYH52+LgQaL2Nu/8Hf7+fQ
Lgbt12uoYXrE1BzP/73Pijvmt+B6Nn7G9yXej1Z0duF+/zpKN5k2DsbX+2xh
JY5gLQTORWyvvuDv9+AjacGfngh8a0vPj+D54XinFsGbYx2tMslM38W/35HZ
+XuUvBBEknjSZPD92RtkXmAvSQRKhajUNF7fpbjDNsoZ66jR/MvKBbye3pAF
qYemQuAZp3xzFH9+MH9wzTshIryJ2ox+i69H86d3WLvgBroSeumVGL4/Vufo
+IqdhaCo41FLCe7PO+WmxzTZ8HwVTf+0E38+k5nR+yjNdRTVqVtwHH8+gXf/
JcF9QpA+Ou//HtfH4XXiG0kSEeSDRj2v4evPk6neeniDBLpVLF2pOa/RP36n
YP+tyyaei5r/+J2H1y1+Nb25RuN3sptO9qVIx9D4HRt98xG6ydc0fkfyNTer
RGAujd95osC94K1YQuN3zvsdJR0tqqTxOz2aWzhqzBpo/M5LUddVyU0yjd9x
HLtvacPTRuN36gy2Ghvt7KTxO+vPj//MrftG43c6giz/OznVQ+N3fN+V24zn
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
kJi+MEM2IqNSHe/pqdV8FPVD8IngrmMo5fATb5Y7rODJdWT/Mn7+e/0Tn/Ls
YIfXuiJbpfD70ZXumWDiLQ71c88IrBtULGXGRNVGTwKmbtU9GJ2jYpfCg6W/
lpIg76lu2VlNMjr1aZ3DyIINdgU+5r6B612J7J+tL7vx+cwrwbUM7/c/HmXs
zkCJAt7PfzzK29Id9KZF1MP6Tg0jrct1SO9G1w1vxutI7obRYfkn3SjjiPeb
tPIYFM8k2VufOoJCqVbBjrbpNH4lSN/iFak9l8aXjDzqOxLV+43Gl0T+tqDr
3+yh8SWKLHVFiSV96FxYc8T7ehYouzctCJX9SFuot/vvPTYQ9Fs2zMDXb3xN
/V6iIgdUcATFyXzuR6dsj5mf+sIJUaKE/QrP+tBzjsUfP1y54WeNWNTbNz3o
u87Z7Ah6HjDTvi92XOkb+seTuNx8taFHV0PjScxzbbb9PtFE40lK5OSqfZgo
mOyTPUZbrMWAf2l08GZ7K2ZrliQdt10cxKoVO5WbqdgA5bNT3W9xYOG/tWbE
04bR7U7gHq/E8/saGBIi8f05Y9UUHS4Jnt9sTKzx/D98bmRCwXkrDFc25zJ5
k7F//MiSpXPVokI5jR/Z+rrorM7uGoTpzP9QLZcBG6Gwvbx7G5DFBf+GqR0k
iC27mPnUspnGlzBaCDNtcpDR29fxFb8+FqGpFnXzVmSBWuO1Gbc1UtHgjT93
FI4GoV53pb1T3oPItM5kzv5JCo0XaZsrnBFa60bPyOekmM8zQZm3egnjfC/i
L/NI0qNjATWWxht7zPsRP/N+0lwqPhMN1N0r4xpAlYJTHzXN2UGm+uaHUeYB
JHYxJcNjlgNC7lr1zqB+9JeJLZXvCRc8mvqx0VnUi1q8M2/WSolCpgLFMpra
gtWTnossTInCzg769McsrZjM0e5MuzIx6Ciw6al3pmK6LWKvJoPFIeWh0eJP
fP5UeXt2PdpSAt47vkU1P6nYdYZxk9sKkmB3+PN/bbxU7L4/RSp+VRIs2vzv
qftTsOwG87vKkTJwY3jR5aRZHd4foS87lmRgMqtqKnymEZ0Cn2um50lAlb2n
+timhcaTtFvXhuzRISPxx20Nv3XeoY+bzG3khf3o4PYnBwLtyagztKqbN+8+
Sj0/+j0ukRmaGA5w1G/pRxpH/Cwp6qzQKn9U8OuffsQU41AtNsEG59xbZMLF
B9DuX64CAeEcIPg31oH5v370cprFpyBcDDC7bgpVloqRea2HtM6Iw6dfyW4i
U1SMtSR4dzZJAoqXptg8GNqwAwlaWaqLuJ6cOJX8xZyKtZF9k6UNSLAjusRY
YKwZcdmXhSm+J8FVs60eCjvIaPS/V8enUypQjqSkjg+bM3pAXDefs2cBkd7S
sISofvSrdHJSkJ8NcqSf/ZaUGkABT24+P1fKDtOEmPvPR/tRypusXq55Mdj9
xsfP6AUV+xTWaR/3RRxeux4KeI2fd/PYHbXeERIgfGNw//VyKtb6/oaB7y0S
OJv/ch0vb6HxI2LE64xbcX1ZcTXpnXFKRjsmJH+KtEohk18ZXkDPCtVNxaYc
Pf1Ipj3leFAeGwQsXxtXIgygeNW7992QONi321kxD1KxuRpC0xc2CUi8p61x
C58PynqKciRekCDXD9+HrWT0bEJdbO5OKZqIHtqSu3gebdrxs/n3sMKN3Jsc
rCIDKLUtV675ETvwr4Fz+99+dCd7ibH8pThsnovKfYPPc1oplXYPvSSAj3V3
065OKja11iZ1+hsJPEY82d8dISPJm2WnZlzyUDb13kNeNiO0Ld3msJ07K1yZ
tXt8YrMfjZ5S1MyUZgf3pBcujXwDiGP6gLbIVXE4ysiy7eIqFZPIm41LOSwB
fR/XdPYsUrHTkzXOGl9JkP6OrjxHg4y6pGooaYZsYPA25OIGns+n3T5VubWJ
w+HdeYuDuF7/40OC35o1B+L97NuStLHWGY0KIr4M7lFlQbuvl8RgT9kAu+4j
2oy/ftzELUF7FfeLBZLWEe42jF0tLeZgKSt8wg7+PMI/gAYPB588HSsO345F
/niB+19dwYmPpq0kYE0fqSfrk1HboPnWeb2PSPmswyZbqjaanzf4b5iJHcp+
mP+MEsbnh/sNUe/sxSEscn1L7AIV49M47CCnKgGVr1I61NepmGqG7qrqJxIY
uJ+Ub9nzv7+fszxns4MN0jZO3fXC99dsXV+IoVYcen8xTCXi9Z2rs3W6/IcE
exg5BXPx+kLt163nVtNQqV/Etuw9Koh/rx/niRY2eP4527Zs6wBa127fVBOW
AJ1l0qn/5bmFKN/bjX9ZgVnkASzh901cyjlP+b043H73xY8Oz9OCWmdCbQdJ
MFH9w77KmIxajqrp/rnIBieP3ZAswv0ltHfbjc5BcXjmnDNwHV/PPz5E7v0b
z0QTMo0PGYhZ5c8oyj08H5+vOBBah271t4mrm3uhCf6JUKML3eiHXvnObx4x
iO7l36KekBEUH3FwTGBbOo0nue34PIAnO5fGezT6CrVvo36j8R5fHTmuPF/s
ofEej1/bGBsU9qGXWnuu9VWwgOAzQb+dZf1I/y7pne5NNrjyaCMFw9ffqDTa
Zi3LAS7XytnlivqRdFTXpfA8TnDOlmZ2eNmHvod9fxDjwA22x5jpzuT0oJta
8myfVrbA/vCL2y+of0P/+I77Ge67745W0/iOsPr+F2maTTS+wyS6sSF5lYxZ
225PHzkjBseoJn9kyK2Y940H1+6QxOHahF471kDFJHM5JFwnxOFFDRcpE9eL
O1+S/SrLJICzyU3K7TGeP5ObXyqGSMLvtPX8osutWPkxDr9V+61wPaH98x1f
MvaP59iF3v8REiyn8RyJeT0RBoQalLH/LPuDUnyecXK4O7CtAdm+1W22ViZB
UIQYn/bxZhrvwZ+6dO06G36/Sr9en/xZiGZKf79aXTiFMj5+3p4ZQ0WI2SNB
pS4QHT7kY33fdhBd2evjd90uhcZveLubWwTMdSPRov++6lsygeyEfuDaZC/i
Wl0sX1lmhrxbeuYiJ/A8UviMhZjECk1fXfMR5wCqvbPP79Exdoinv1UfxjqA
EiSObqpOcsD0tfcC5rr9qEw9utA4jAtajS2XXpb3otTeO7npEqKA9nzhyClt
wSr0+j5GToqCa3zHft1NCmYl0sS2v0QM7sy7HB6yp2LWc+t/KQHisLvRhn2A
sQ1zC8n+oGYhAZ0c+cplE1RsNuRPufl2SWAMPlHvIYTP8w168zuXJEEnt95m
LYSCMdkxX0kKl4FnL7fd0tWuQ9GJd3rv/pWBVA+VRz9HG5F18MEbxbYkaKE2
306waKHxHYYbR8d3aJPRjRqpXVMf3yLxQEGfzzr7ED9it+VWISNz1syIs/r3
0fMEV86jMczgePQoxsOB6+36D83NXawAUkxanpP9iG39XZzTCJ7vCGXVlyUG
UN4r0UsGQRzw7fqVkEL/ftRdtNwZFiIG0d+bT+4hULFxNdgrZy4OR64lM1n/
xvNBcu+YKQH3w1u+wkl4/Z9IBiTuefx8fcnU/mhJxXrF4GWoHgmU7aaujfc2
I4bH53Ocs0gQ0dKQfUGJjFa3fHrjoVmBfpfscDgq5IR8zvrfzrBlAZOLwrqE
8H6kcv0EWZuTDbIS3Rcdcb15tIa5ZxWyg9Utr2LeH/2o61qKxvC0GLzT8iaL
JlGxlo9fCu4UiMPo3+2xR/HzHu1930csVAL87/34b38VFete2mc06U2C8U8D
92W/ttB4juQISZ1vuL7ktg2mzus8Q0ux8mGCi6IoPJn7jPsKCzBl5SlZd/Wj
7Yd+Ejuy2GB28OiBdFw/P5hfaDuhKQ5d2SmkmT4qtuvNtfs2zBKQzekVCrif
FXBYdVomk+C98VmlKxJklOdt5HlNtBTVeOYXxCqdR9oi3r8+trHCuyul3yaE
BlCG5uqShD9en83LhyNL/Simtfd0erI4FH3qtlzC/fbefyLCclcloEjYsjTi
GxX7ruSlE9NJAk9TR2dW3B+Nor+zzKbkIta86cpQPkPkfLacGOnECs9cCkYu
rfejn8VXuZdF2aFJVD2TV2AAkQSlY9cu4/lOtdWPboWKnYnRM9Y+KAH0PYyP
apao2DEJpzDvL7j+2v/cYrIfz2NUpXyqFhsY1R/UeI/7G1tUgpgZBc/jt5QO
/s8f//EaKnS3ilNx/1Cesg/fdIpAPqFNj960bhze18fsxP2YDSaw9PMiuF5u
V8GOji7i/TtykrMP90eTn+y3XApZwePPr/YV3gG0bHc5XfOxONzfb2lYydqG
lf6Ybg8jk8BHRPrdKj7PM6zebpm/8wFNcxQk7V8DtGQdYbZrgw3s6StbX+F5
IyD1/VjUBXG4riLBxTqP1yMeJVq3QwL+HHjJ9xSf3+Q7R6Q98nC/O1owqb6b
jGRTS7RDtrPBQ5m/PTP4vOpKVHL5USkO4bw7CFfw+iyW1kMyJ0lgnmiak4zX
9zPeoGzeJRX9SNq4inEoIuHn9b1JtWzgoFHT7I7nuQOy8rkd/BLwzr1GoANf
/379UZuVKVbI2tIjxvO/PKptwsb/ThwWuwbsffD6OT0WPzzrJ4G9v73GCdwf
+RmeyknasEHt2XPBSXi/0ug46ov7xAE7IbTtBb6ef7xG5ue65J/4+d0S/ekD
R9cDJLDrwi9P1e+HD2c9YX/zkA0YUs28/fHXv5y2z5Obwf01JXGiD/fjDK4g
9h+i+P1XHuerxtf73GWON6dEHIpnPrjN4/dHx0KzXW4c15sTI29P4fWm0PcG
L+q9QGKqb/jc0mSQ1GVL3wNf2OCpUxt/Kt4v+0eCH3rTxOGYm9+6KT5/LzXt
XRHtIUFNv3aoLj5vx16y++NtygaS5mtvAV9Pp2Hr1cBOcWCOVczpwOsJ79f+
sG+RBEmXyptt8ff7389VVlZjUNZZxS1paluQCrd35dUUNmhvsD5+Ez9/KQcX
fHaqscE9Iz7dCfw+HvhmVybZIA6Us+TPX/HnOSdg2junSTCQZnG+CH8e/Yrf
eYMccXCqy4+5jdcvxV/oRBgmgf7rKK8deP9Cn7acL73EBiyai5W1+PquFWjJ
zI7g+/86/BnCn/eP12B7+mG/Nv79/3gNuv//4x+vYTh2afHPU1karyE5ZPel
Wfr0//2/FfocuhMFnjReY9FZZ+8vlYc0XmPLK5bciM4nNF5jWj7Eah7v+z9e
Q+RWW+h7YiaN14idCnr/Kj2XxmscU3lpYulUROM1/EyiatcvlNF4DXh6c+nM
hyoar6GQer7IXKWexmvEFdil1e1rofEatXq+87zzFBqvwUQ2eP/X8f/+30r0
JXKB/PMOGq8h0nzB6bJrF43XEOyYFn/K0E3jNZQXHlTFCPTQeI3n2kVnhPJ7
aLxG3A+p+3tLemi8RtqFpcX7Gj00XsNqqODrfa5uGq9xMVhqSNKui8Zr1A1V
+ice7qDxGlPPgryuOVPRP15D53h6t9JpMvrHa9SoizO9NK5D/3iNX/+vsfsO
p/qN/weuMkrhoKxkHMmMBhF17neDSIMGqewSUZkZ2St7q6yIyCwhLXpb2eOc
Yx5HpKwyCqWi8nt/r+tz313X97q+1/X700Vn3Oe87/v1vq5Hz+deh0ZyYA2A
XmOVw96D5r/KAPQasmvmHBTcIwH0GrS7NS+etuQir0H1OsHaqPsSeY2PhkKP
1t2uQ14j0ve5D6d0M/IagYNsP+0VOpDXMONYiU0cpCKvke/PltHORkdew0dj
KaEnmY68hjVN9pylDx15jX1xCjJnSmjIaxwvyH97iELFodco/3I1duh1Gw69
huY7haivxY049BquYleXJNVrceg1Hr+743b19Qsceo209kBSb20uDr1GyTjX
6aDnzshrZEXxHx37WIy8hrxNqadX9jcK9BqPWXqdqugHkdd4dY7FYAufNfIa
b0+mKJ9Y5Y28xsxbvn0dxtEon8U2LsbYQyEV5bP83FDZYzySg/JZfmvGd3K6
liCPoY3f1/OL6kMeg2fyxcX0wwzkMUZZhvhJyf88RnDTuHztTSYg9Zt5vakm
YR2VH4272v7lsSzpCZOUopgA5rEU2WrUXn0+AGAey/lHAv1BOgwA81gmznPv
bTPrAzCP5fTmb4llH7sB9Bj+2zCr544NyGMouL1uOd/RijzGWZV+mbz1VJS3
Mr561detQTQc5q2INhu8bLCm4zBvpe5MvOFKBh2HeStlP/x9arfTcZi3skOA
q0lmPQ2HeSttvYIqBa86cJi3Ir5P+0ruqRYc+g2PdOuKDqNM5DcKAm3aJnLq
KdBvWEebbMoUU0V+Y5MBz8zmQ+bIb9hKnbpa4+uG/MZ7p3TZLP8wlL9y1Xca
T3x/F+WvCD7x99/qm43yV1L+3u3YNF+MfEZx/InyW4J9yGcsrq3/BZj9yGdU
2RwJVDEYQD7jYPoah3xdJiiyfPfyazgJW3phNlD8lonyVo6ZcD5kKWACmLfi
xn3+YeKfAQDzVl7skSh695gBYN7K2bkXtLHRPgDzVnz19EzOJfUA6DO2Ns5p
L61+i3xGn/z00lhAC/IZ2tqT36/Jd6I8lerFZKf1qjQc5qkoSm4RXr2PjsM8
lcsnA/FPD+g4zFOx22U9WHOBjsM8lefPKlp6LGk4zFORdRW38c7uxGGeyuIz
l+3iMa049BwKTZzJWsPxyHPIWz5iT7TmRZ5jJxuLm8jtE8hz3H3qaukgdA1M
v+6i1opPgp8BySNz2f7gcwHp23L1LNDLcfl4figO5a/c8novGPXyPvIZMjqb
vyg+YoAE5xlSRTQ39sq3NmaWMQB6GbVvz4qRMLegitPZKUzgcvwDJXKRhB1c
zx9p3sIElLv2jbO1vNiwqN9SyRUmylvhv/X5IueVAQDzViYkuekxjH4AfYai
Ybh2FXs7XuA8muC3RKz3hmJqrzsVjx2Z2CdaJ4axxZzVr2umoTwVyj7XjTwh
dBzmqQR7F81LJtJxmKdynJ/aGvWNhsM8lfi9+23C86k49BySV/Nl6+UfIc9R
NWfoEJebSIGeI+dm6bMTW5WQ50g9yzUQH3MBeY7QcZ5tnmyuyHMI8nLozh25
jfJUNibOXpw5fQflqQwtHbRzNMlCeSrNYp3bp4KKkNeItGtS7BvoRV7jtdy7
J+IP+5HXuG74p/+V/ADyGu3z5/68UmaCJZm0/nUOJCwrM9Ihijh/YX6Km5MC
bTtxPsP8lLI9jqV0USaA+SnnRWYNG4cYAOanPJhSF/Lb2g9gfooyJSaBc6oH
QK9xsHaoP127HnmNdsA2tbe3GXkNoca6EPniDpSPcpwzKvvXOhoO81E2C4a0
nSHTcZiPkniYe7UEsd/BfJTRFb2jftfpOMxH8U9bqRgKp+EwH8XqzuDq1euo
OMxHkcr9oxgo04ZD36Gy11Ffs/s28h0VQ/SscWlW5DuUDOYPhqjqIN/haGxV
X2xvCxQe5TXqnpsAJRH73R+x+QHD4cSGlMkZQPkRGtXuFYvyVEqswm5xfk5D
XiPX4eqx+psM0B9lO0m+yI3Vnz5QYPlqAIhRFxW/rCZhvrRC3XdhTFDL98Ak
h0nCvgaoiXYS51HA/erlnnxeLLPn7s3gW0yUn2J5ZKLEL3YAwPyUXTiJX5SP
AaDXuJny4/5P+zY8//Pms1wjW7Awtl3Uq4eoeJJMwTPZAjHMe8+wsnQeDeWj
bI39OzfgRsdhPsqnpmyBE6l0HOajrLHC5iP46DjMR9l5Jbo+nknFoe+IKVBP
0KjPRr7jgtLiegm7EQr0HfebhwQ87+0D5//Ee6kuDAGPdhW5y2xWIN/71DOj
5jFQdnH3mnhZT3DRo2rx0D3i+6pzjt/YgglM08VS+3JI2IJP53VHYr/gLLa5
9NCNF+u88uxHYRoTuD+37qzR5sNsLjUKNzIHQEaZ0qMD7mJYUmlrz1sTGr62
6dWsirY45sey4UzXKTp+tV405NEGCWzLrEDd7iw6ykeZq1NLUdCm49B3gHrR
3P33NwPLm7t+pHv2g90s96w+Tp8C0R+jTSv3krAbbdW+XPlMsC1USsKZlxf7
wXDrDSSu+6UYoQSOQV7sZZvX0ycGTBCZKl3PMyhG3A8JGP+epOHm6we2uJWK
Y6An9aFlHB2X/eDvpAgkMPbmAEXvcDrKQyktZD3R0UXDofdQ3ahwpj+8AHmP
xMkpa0buJeQ9ftr1Fm/ik0PeQ5pjb6j2EWPkPZZnwwfOMZyR9xh1uuB2SS0E
5aPEGrNavkhIQvkoPiq+v+ypD1A+irvn8U089ELkOZb5QxIlKnuR59gnBjb+
vN2PPIfGK9qtIYEB5DkiopwrZiWZIDN8+codSxJmtb+MVfQVE+Wh6NcUqS6+
ZAKYh/JISLbzlgLx+//yUOryPmp+/s4AMA+F54HJzehD/QDmobRG0asEN/UC
6Dlq+gUs9k7UIc9xRnTnrp0+zchzXJ1OIQ/Yd6C8Ezbrw/vjFqg4zDtxPp5y
1H4jHYd5J7zlh2da0ug4zDv54Jom2X6TjsO8kxy676npdBoO806cDjHufZSi
4jDvpNxoT/RupzYc+g8v9YAP6Qw/5D8m2UavxVn8oUD/4VKqfPnGFS3kP0b/
qAe5PLsCWkT5D0V9GwfLtJpWkp8PiPzVq3zVawYMHYuNPZMTg/JRlrUmF3LW
piHPcdQrbn7ChAGWUmTOMA5yY4LvLlTP5RP7xx3JGrfPPJgQfcNMsh8T2Lqy
zOzsIGFTNxoOi7Uzwdasz0m66bzY851aShlBTJSHsqHlyYUjDwcAzEPREOOS
TNrOANBzJNT8uXtIrA2XzX3+7HT3Fuxaxp2FLhkqfu/o+vnH6WKYLGYk6XiH
hvJOwisutxXdoOMw72Rr9SqVxXQ6DvNOrF1SIvwk6DjMOxF7MbuviPi8oP+Y
u/Du8XPuLOQ/nIv27YqT66ZA/yFjEx0WUKgObBx4n7+RGQLS7u8ZcqkWQGeh
ckfq5THw9UTmzoMd7uDhjTmTd148WImmWnLzWSZgY/GRv3SPhNXcvRV9oYmY
L0vi/wra8WKX+7ZdSM1mguInehPb9vJh5eF/3q5MD4Cs3piPjXZiWL+xFq1M
l4anD/fmFamLY8vb7ho1HKHjpRKxk4bsElha8lCOKbH/wLyTqbo6GwMDOg79
x1MxJ4qWmACoZLAHV2T2AbEsnpAkDgNQOiTLt06RhPHfbjmxNYsJ2j8HPFlZ
w4v1Tr5UxojXl5ZwcPutTl5snuGz/P0iE0S/CWG50ymG9TUpPSxi0PDv5MW+
2YfEPLTp2PzGSDruQPnezVSXwA6Phnndj6GjfBOBp06dwaM0HHoQv9EKUi4z
D3kQvt9TAXr2TylBN3PEzml2gFUcYRTBmZ3g9Nt9ut7eJCzpZPoXm1ommH8+
vmvFgBczEuHaMPiECRq5ebakbRHH1vKGdIco0/Gg0pnzdgvi2Kir1afuTDo+
mpOne9ZcAguz1zD2ukzHoQ8Zv7oztKOTEzhkPsmcmO4BO+7X0vWBHljqvuiR
RSLOzzCaWUQ8E2wuOdAh9ImEmaY8MRlrZQLxU0rHhsLEsYn20yQDXzrO8oOZ
rKEogek2/qJw3CPW/z8f8jFVaStX3hRlYPuqft1gOljX2Wwp5oqB5xr4er0y
EgZ2eH6cJR6PbJMv9ZOPmMdT/hy0Jeb1v38/9UxHNYJ1E16yzCUJcHXyW8GN
IyRs6/o0EVPi/fpK18eOi/Fi3c+y+RWI9WhZqLJawcWx9rrV238m0fH3wdwk
by0JbJdmntGbIDryImvXetbrqBchL5JYMuaz7ZEK8iJM5eN5xnXbkBdR0Aux
8lE+h7xIyYVTeS5HnJEXMdLd+G5baTDKOykJ5R4nqyahvBPOp/ix4fAHKO+E
76hceYxHIfIgV+xiXhcV9SIPYhg2sxb36Ece5KJ7OrNpwwDyIBkJIbVdIkzw
TbPwyeAFEsazpkqv8DkT5Zvs1Uj8ta2SCWC+iUsKfSR+FxPAfJO2Zl7uI6sG
AMw3YbxSKhs71Q9gvslSaNjQZ7leAD2IuatojcbzOuRBbmresK0xaEYehHtP
8LojxzpQfkn/pzlr6UkqDvNLnDWqyndz0XGYX8Jmbn/0EjH/wPySS2bSLx97
0nGYX+Ki3L9G9RENh/kldsGx01I7qTjML/nMlJ+Vu9uGQz8ChE4IbavwRH7E
2c/9D6P6JwX6EU2Tv0xugcPIj2z+9c709Ig1SDFqYnlSOw7wfQNFZNwb5LK7
jxpoz4Cmxlspnn+jUd5JxhulhdDkVORB5EWCjfUNGCDiAXu4yh5ubMWtYCH6
wQDIi3vtUj/Ig+1WswmvJubJym0lKu6NJEyHcWndBmK//569YrnmLi+mIev3
40coE+WbnL1t6jlTPABgvsnuzGIlMU0GgB7EKFbd33WxFZ8MZBtfbN+Cvcsr
yKAKU3HhQU2S010xTHWLE7tpFA3llyQpF7zRt6PjML/Ee7d7Hjcx38P8kkt9
t8bUZOg4zC9Zb6JN816h4tCP0OT2tl3f/QD5kZthR/snL7dToB8p3yh7+Dxj
D/iSr39mTe07EPrES2502hwIKTnNVu4eA79PWZSGS7uDpqsRvPI3eDDDot/h
rSeZ4NzT7U4FcSSs7/vuHMFGJvApfdRKu8SLlV+zBcO5TNCkQHE23kXcD/nv
LTH9PgCkbKpXRVwWw667OVx2AjTcZmo0eHKnOHZdkG3L8gE63tvRnKy0RgLj
jjFVUif2e5hf4s0+YJRpSOx3//kR0atBJUYF/MB2/Vxr7e4+sO/HZL2npD44
PPjdTlmahO2Xj6m6eZ8JJNJ2/dD6Q8Ludfj3WjUzwbUkoyWVZl7sjxvPx0uW
TMCj/1zMuFkM87Gulm2l0fBqJdZn8vfFMYuPuWvlwuh44rRSSJmqBPbn7vcf
C8T8CfNKlGfiWzOmaTj0JFu1PWds1+QhTzL81/XmbfmHlCGGR5GDRTuIW2Je
FXLdAXJvTsfW3SRh/ue1fkZVM0Hdy+WVF3q82AzvrNidUiaIF9my1CcgjmVs
CHrIKkfH27gtqkRmxLHgnFoPbmK/V+Q1OP/pogT2VFtLcdNVOg59SeMWdR/D
UxxgCz15YsG3B9xkL9elluqCSLpcV9M6EsblYrv+SDQTXLeY22T2gYSZceTc
vUbcL3022ScnEiiO7Xltu6b4Fh3fmrNJj09OAjPOHvR+k0zHoS8pdnhmu0F6
nHLbbErMUIgO5HfNjNwspwDO6eun44pI2Db9j+AQsd9rC3zs7uSRwJpj65w/
EPu9ojBP6Ex9A+CXz2gUeCwGfo/VsN7BiPNmt9e0ThET0Hud+xWFeDEh3a61
U3VMkLTSimm+FMeqFoqv1SfQcVYVnZozByWwwCcK157epiNvcs2rcrLZohB5
k4cHr65+ZO9POc7Qk9C3JWGXFaKuXSH2y4uNRwI83otjr1dN+qy7TyfmVdbl
yZ4qMC5v4J+vvQoI1OvnTHUT8wppz/I64nq2XxVWXEOWwAxP1LFUEPMr9CZa
/EeOl/UMUEpPdHzYkkHC5jUqAzyI71O0k6Ga7zoJ7K7sKgUT4vsaetx4enbX
W7Ba6/ubw/VCwHNv15WXnLyYwOsHYd8bmEBecHKptJCYlwW+UenRdBx6EivV
zXWRBa8pLBujVqkFkbClP20HxOqZYJ+h58/Xv8Sx37JZZ5yJ9cQqZsrnuGuB
6nCoplQWN2j6GxdC/0LCClWGTfcQ63+JZ3vkbNRzcGr0g3DjqjnKpTCeetZX
JEzWx+6IC/F5/315w0lCQAJbdOZWayK+TyyTT0LqGsQxBd33H//cpSNfsiit
kHOKuxj5ktrjLMtPHrEiX2Jt0GTOVSCNfMkL3Xt6OblGyJdonK+TiFhxQr7k
2+YLSzoOwSivJMFbk7SXPQnllVioCvudtXmA8krIDeteRBwvRH4k7/Vi5fTD
XuRHvhiv10l26kd+5Kzvsf3lHAPIj6i+2SC1V5AJ7m8M7PI9R8KurhP+eamC
ifJJald9CdxVxQQwn6Te1HYDzx4mgPkkd/60H51kHwAwn8QjUfx48Pl+APNJ
VutsCDyi0gugH9nBNustm1GH/Ai9zZt+XbMZ+RGJTLXBD5odKH8kMawlxeID
FYf5IyTqduOQdXQc5o8IJjbPPUih4zB/ZGS6Qifai47D/BGS/Orm5kIaDvNH
7J2cPj9Xo+Iwf4RD5Zx3ZH4bDr1Jrtvd22xqbsibmA6P8mpmLVKgN3Ebm5zI
czqEvMk3wXttmz2swervWcN4/jgIfp0Q3WPmDVSimt5oKcyA9b3i74cKo1Fe
SXLilwAzy1TkRzwOvz+8dJQBurcubv2gzI2t2X+M9XT6ANCICe343MOD9Zy+
+VPLgwmsV26f21xPwtxeCPp+I76fQ1vDdd8n8GKqfTHGghFMlE9yIt5779PS
AQDzSSIz26g9BxgA+pEe3+Zyxw+teJOTok9Tyxbs4shr9ho+Kj6w9UzG6UQx
bNi6e29DKA3lj/D4PPHktaXjMH/EnNHwM4I4T2H+yMeDoa0B8nQc5o8ItHvW
GrHRcOhNHD1uB+S/zUTepHM3pUCsvokCvckGkcwRoV+qoFT7a5Z0zDvALcTU
dLxrDvxaj7W3ixD3T/S8TB26Gzhvc85O34YH26Er9efNMSZYHc5253g0CXPy
qfa8QuwX1rt3lT624MVYVTUOuOQxQY+t2st5JT4siH9Xs8+vATBa0h9rbymG
JVAnUw9p0PDjc3YuIUri2IxS3WlWQMcnc6ydUlYR9wcLsoubiP0J5o9Qj+U1
7TGm49CbfPRmSscE8AFsq/UXnT+9oOaHheYqq5OA68LgvVpJEiasyV8bl0bM
4y6cmz/9ImFv1SK5J4j9z1Dgw3veBl7MZyxdh+cyE1DvdRZrNIhhF096crS1
0/AclYjsphRxzOhod+cDYv/OrWs1FVeRwIZG2Md5iP0d5o2IL9KOpX2l4dCf
cHc/F9l69xHyJ0UW0Z68V9IpEesvLXh9awO8ajb2PAHKQP9kfbm1MwnrsZK+
HI8T95saIeNJOrzYUdG0Q+NlTOAm8XDSlV8ce/76q32pNB3/Wplyff6TOKaN
k0Ea8XlTtXMsd1+QwEy1WZ317Yn56j+P8lFUe1CjlA18+8y93lO3B2w6eZhL
d14HnDUgsVxkJ2EPRb17BSKZQEijee/qYRJ2qDJDOZv4/nZa1Qm+8BXHfkZu
ed3sQcf3eJVK+chIYMnno0EEcT1Dj2L0OPz25ycfKabu5gcHR2ggVq/qlU72
flBer+2mkk/CZOQ/bh5uIearGd9iTW4JrGb6tyCJ+PwO5UqOXDNvAFPtdU0n
xbeAt5fydsrtJ2HkFavfTwqYwOuJ3u/OjbyYwaqm05XE+eHJdlqZ8Uwc686x
P5ocT8cF1o8lV2PEfBWgry5KzDfQp1gtXzAwWyxAPuVpOZf4oLwLZfGp1OGF
yyTscIT/Je3XTODn6r/b4J04pniDX/1GOh2XOCdX/GlDFeCUbWC5M7ZCqU6T
bY6mkbBSndw5IeI89emXDtkuKYFdX4vzXiD+HvoU/aN/ZdYY9VEuyuSy16QS
55Oso84X4n48U3eBZ4pDAstysxm3JN5vxoCd1o2OehCRd0Nr9Kog2MpXGHGR
gxdLXHOzKoOYN0lbbnzSzxPHQnxXZ3tEEd/3//yJ+dRPtaZtFZSC6UvSA34k
7Lh99gkdYr4wZy3PT1gUx45X6ovLEeep0SEWbqeCGsAdIcIj8XgDcOqzLXCd
JmGuw73P44nzNF7uFOVLfQUwP3lmueHlLIXbcmLiUQUJ+1YdYrqH+LxJcRv0
IjdKYBnn17zYQjze2MweV4s6cSyw4UozC3GeQo9yja7jfjG7CHmUEB9xyWF7
A0oT7VsSS584lnBV5r4oMW/wnegn9bSQsO7qvEVhYv2yQszU2MSI/Ukpzvo2
Mb+8MQ2/Mt1TDDitMzP9dGmUx/1nT3AkkbD0HweN3hDrUf9DsaaWlZhfeCtt
9In1u1l3viuLhRfTuyD7ofd/1vc/r3I4MzFDo6+Akmcus+HQV3Hs2IWLpTeJ
eaA+VHj+9RgJk9fQP6VEvL9Zk7Ssr7ueAZmzb+yd2yYp5vx3lWefkLBr4wH9
6cT6qADt31a8Eting4p9BcT7hz7l7NFJg0OFERT7KXd/nX7i+liwMZsjHi+3
YYfdAncpuIANKvnkD1G8Ul+a8q+XwMounHU5TrzeHTvKfs5FPQIsqSWzoWtq
KEJ52JHR3+LY3vGBsDLi8cW2vbJUXiBhazQn9KnE9fGqRC3TooqEfXjwNTWP
ePzpD/TkckEJLHbN92ob4v1An/JFfNMaBY/i/9On8I0/Pt2hRKVAn3L0YI5s
zHc+5FPiVhs+dBzcg3zK+m0577qkDJBPsYnq3f7Y5jLyKV74NpYn+q7Ip9wQ
mW/R6gtEPqUk5+34lwexyKfs2Rlf/wBLRj7FkT+/LrI+C/mUI7dM0tRXFSCf
osh2/nO27lPkUzrPNTJ0ie8p9Cm01Mo7SpmVyKe8LT1DFmLWIJ+inFLIR3v4
FvmUmmnGRRaLZuRT9g0VDa2Lakc+JYJtupX6kop8ygtvc8eqBjryKdzkSPeg
R93IpxSGibC7qfcin/Le7eEN95w+5FOScgJ0jPL/+RT1slUHdU4ykE9xkVyt
W5HAQD6lKHvhnbQlA/kUY6fRwZyCfuRTrKNT+SUd+5BP8dYxfJXT1/PPp7RZ
rAvM6kI+ZcqaduiEAg1An3Lt242TZ/rbAPQpYqEc+9l1GwD0KV9bhemXA3DU
B5Sszp55vLcE9QGFe3xzmQahqA9IxKu7/LDnQ+RTzioN0NfNPkc+JeFKsef2
vhrkUyZksnjWuDYin1I6NZqZztmGfEqAYZel38VO5FMkWiO5VSepyKcc3NhL
ybhFQz5lkX7ib4IfDfmU0g88pvZTVORTDj7TtVgu6MShTyGpRQjPbW7DoU+J
FrRzp6rEIp+it2r45xfqIgX6lKIyiV9cQduQT9HX9DLdkHQY+RTW+bPrqAMX
kE/Jer/5RH35deRTUvPMPB94eSOfsgUb9V6ZD0P9QTI37LjHshJRfxAusNmP
6+991B/EcbmHf2FXLsor8Zf6OsS2+THyJ82XVr2T/NWL/Ill0lQ5/65+5E/4
1ddzsa5lIH/SJ2d/ssSPAWAf0OZoCbt1YQwA+4C0ZP4e8RdkoDwS7pUkIROx
fgDzSFaTX0XuK+0FMI+keFl1UbOtG8A8klcBJj9yneio74dy4Pmz5Zp65E8Y
9fKazcPNyJ9EhCsU1tDbkT8paYx/v2RKRfkjDi+k7nYcouEwf0Tu6dcOixga
DvNHwp0ebmrRpeEwf6SwnLfjgQMV+ZV7hV9YHnN04NCvfA1+yWG8Rx/5Fbtb
pRnPBMco0K+op+gqp09tQX6Fvb7wwEU2gPyKjaoMw5jNEPkVPU2BLma1LfIr
wg6fiz7LeSC/0p4ldEy7OgT1B921olg6xsSj/iAW1wsKFPY01B80kvnhwOSN
h//yTX4w5A1XFyGfIiBy5cGu1F7kU/gVn/sYzvYhn2LOeSkymNmPfMoPl/Ta
MjsGgH1AXSI6I8w4BoB9QAZ7co9tIu4vYH7JjlQ+kYc2/QDml2yv5mlV3tQH
YH7J/XXiIbSzPQDml1hvNDt2n6sL9f38+JBrp3y6DvkUbg7fGJHSJuRTxnGT
2BOLbcinvLePTfBcT0V5JYyNk7dcRGg4zCt5uPHpRHcYDYd5Jbdq9fyVr9Jw
mFey67qx7bZSKvItgUJ89k8/dODQt8xwKK0t9C2nQN8yZ/xT1LyODfkW/2cB
NseP70C+Zd5Y//uH5qPItzxkvy/0y8wC+ZbOu9NXLWWdUL+QwOC5SntZf9Qv
NKvr7bPWOQr1C/Wlv74T/e4O8ivJLyqzlg36kF/JJelEeDr0A9gXtGf64vAj
JQaAfUG/+3xv8EczAOwLih108ZP1YADYF5SfJWZuOtYPYF+QVZawZH9rH+r/
cVcxvODxpwWH/T+ShiupyRkdOOz/MfPgy0/Oo+Kw/2fNvvaLqpf+5Zuo3DWP
142k4TDfBBt+ddRHnIbDfJOCQ3atbDL/PIzBVvZ3ESLtOPQw15e48lr2kJCH
4RFbRar4OECBHuZm1Vm3pF+CyMNUqSxW9T7TQB6muDVyrsXtNPIwMrE+OG/A
FeRhHMaXSPeV3JCHWRpx3N98MBj1C1nwSG/nSIxD/UIvl7NvU9JTUL/QVl+f
Ud272Sg/ZaTzxoPevwXIuyj95q62vdqLvIvZe6psaEsf8i4l48YZknX/vMvp
Nl4BW1MGgH1Bc59a4nKJ8x32BfEcI4sVn2KgfJRcOcXPxeHE5/dfPoqgqUbX
usN9AOajrEvttKy42wNgPorOfWn23nNdqA+oqm07a/OdWuRdcmYU9zttakLe
RUtodYVRQBvyLn0ZYbNSlZ0oD0X20aKlw2oaDvNQ/iQFanYG0nCYh9KYaXc8
+yYNh3kozHunArs6qcjL7K9YaNuj24lDL3Phfd9mwcZsCvQyiw4PWgRmVyjQ
y5yMjQmJ3aOAvMxAVsP+ttAjyMsM24XhuXJmyMtsG84W8a5wQP1D77fhRly9
vqh/KE98xlMyPwL1D10tjL0JXichD3MrYPir6rY+5GE0fSd3fTfoB7BPiF/R
ZoxflAFgn1CCZl+sUSgDwD6hHL2M9b/9id//1ydk2BWgHrDSD2CfUEz93peS
i32oH+h30HbpAocWHPYDPfjlkLRNswOH/UALIyvla4OpOOwH6tK5IiR59l9+
iu0vp7lP0TQc5qfYa8mKDKvScJifwrg/INp97J+vyU30eGSY0I5DXzOwlMtY
DHRBvuaZAHUHe9oXCvQ18UnDZq7OZORryAM9Sx8+HQCKOul2/WrT4IKuYef7
znNg8NWbycYrc0Byxm8wYZs96hvKM3f0857vB7BvyOrnmYdkNwaAfUMXx75J
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
y66UJPr//e//H4Rngnw=
        "], {{
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jtIlXEYwOEvlwQ1hOx4KfOoaCAZCELQkJe8NDt693TZvIxqKtSSk4Km
lUIQBIJQmi2VXbRGdTIrh8pupqCDtZRm9HzDw/t73z8H5XCyY+01bXFBEBzg
CdvxQbBFij5ChMceS/igh2jgLKnhZ9xL+aiHaaSEZbdafuv7dJLGU7cyPukb
NFHKG7c6/ugHdJHOrFs5a3qEZtbtrSQwZy9jRdezq6foZsfeSYQFewbP9Dk+
61F29VWyaLH/MNtIZN5+0JczoE+G/4f9rdnAnj7sbUxP60Bf13lcsf40u0gl
w9tdc9E9UQ/rIrPIzDUnzTPmUe/PdQUn7F/syeZNe3E47Xv6GqfsUTPTvGee
NmPeN3Q7Bfak8O+bd8xX3uL1oC4kqifC78L9ndnIX53iPq4fhr8J3a/z6bH/
MrtJY8l+jBe6kq/6FhfYtHdwiNf2Ct7rJvb1DL1k8tKtim/6NhepZNWtmX/6
EX0cZ86tmu96jEtUkcW8+3nW9TiXqSZKNjnk8h/qEVqM
             "]]]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwt0slLVWEYB+BTadehMjWFwIQyWiSCcJ2H/ggth3LVrhKjQV3mpnl2IbgQ
BLFyaLKyTdPSoqzUJmuVtgvTZjfa80GLh9/vfc/5LvfeczbvPVjTsjKKohU8
+Z9zSVH0lUw9g3TWk0Y1TVzmEzscuM86vYo9XOJjuNd+lLV6O8P8odFugkp9
NxeZDuft7rFGb2OI3zTYvaZCf0yK3swXGs0X+ECl+S6p+jOy9HbmaTVvlSdY
ZtD8i3r9FeV6vjzPan/II3OPnq0nywPM0mBfYten58hcWSA75GI473rc3KWn
yffmbbLCfIcUc7l5QN8iC2Wh7AzfWz51vVffqG+Q+bJNfuOoa/0y1y5PHmeJ
AftumWH/U6/TX1Kmb5fnSHTtoTlJ388M9eZN8hh/w33md+H76SMk62Nkhv+P
OY6Yr/GDXeZxSvUHxPR9fKbOfJa3lJlv45WKDnOV7+y0e0FJ+CzO8IZSu1vE
9ENcYYFau+cUh7OcZio8D7ub4bnpReE+TjFJsf2N8Pv1BFYR3vc4NZxkIpxz
z3X+ATNqWbo=
              "]], PolygonBox[CompressedData["
1:eJwl0klL1GEABvB/40IFZQZCZRATmqOm1kQQ1AfIPf0GWbmWtt3ay4LqUlDQ
wTY3hDqWttzMJQ2srmXbKXPJDi0Xo34vHn48z/O+ozP/YeJ1bbWtsSiKljDG
3NIomiep73Lx0EWu3CZvslJ/6269fpo/XLKfk6438oUa+zA9/KDW2Su26lso
YQ9tdDNPjftxivWLPCPNbuAz1XYrXXwPf+9sjCK9naek2vV8osoeZbV+nDkO
2Z3hOam2X7JZf0O2forfXLDz5VVSPfMTO0U/wEcqwzPI6yx3P2Jn6seY5aC9
Ubbzl/v2LZnptbN6QlbZoxTaO+0Heo5MyqS8IVfI1+63y047W64Ln1melL84
736H3atvkAlZIq/IFDngvkPP0mMyX+6XH6hw1yfjzorlNZbpw87v6mv0VfIo
M7Q4j4fvhwXu2TNU6iMU6BOs1U/wk3N2nrxMzP/rD783fR+TlNtDZOhHmKY5
vD/TVNjD4XPrZ3kcLf5g63hPmdnEHb5R7myIhH6GR/xjr7N3lOqN3GaKMmcv
yNN30xC+L75S6nyQTXouOfwHCiFgfQ==
              "]]}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0E0s1nEAB/CfstINIV2yttpEObDZpK1DdbC60BZCRXGpUJ1RobhTi/Jy
0SUHntLWOmhzMNGLO5X3zt56WS+f/+Gz7/f7+/2fZ//nOVjTUFK/I4QQR4zv
CSGsUeqwjHLmdoZwnUSm7Cc0cZF5ZzdI4r3dQzObdiuZLNgjVPDFvkky03Yv
LWzZbRxh0R6lkq92PXuZsZ+yKz6ELruAdfsu23o7WSzZMRI912ef4o9dxTe9
gRQ+2OmeGdLP8szebXfrx8nVx+WG80P6qF7KPfuHfEA2Oe7eymXnB/QXepEs
lifklDwvX7pPkv32GXla5ssJWSz/us+UY/Y5WSFPyhl5QV5yv6A3Rr/JTpVH
5Rv50d1+/Xn02ej99UnZ5zxBf6QXkqe/k5vOD+sxvYz79k/5MPpOVuwM98N6
Ca/sZHsgenf+2ZdZ1G+Rxie7nz2eexz9drbsVn7pHRxj1R7jCkv2bfbx2R6g
jd92Z/Tfsma/pppl+w7pzNqDtFPDVa5RSx3/AcsrX4U=
             "]]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwVzzsvQ2EAx+G3GERHFkWii8RURGKqmEgkXUoiEpNF3Re3T+BuZ2xdYjJJ
3GKRmCQWt2+A09oZ3J4zPPm9//ecJj3p8fn8XFUIIUGBqDaECvHlSE0I99Uh
9OmY5vRM2zWheb3VHh3Qfi1pg175/bDe2Vkd0kE90Vb98PzaOePcpTv8sel+
VE9p8+zLvnHudu7VPZLOR+5zzsek7Be7xXmFMrPxR8X/iSL13rl0V6HT3uaX
DfuTrPMudd47tJ9ptpeJmLEvKNNhb/HDun3AE032Eu9M2+dEZOLv4ps1e59H
UvYib0zZq5R4oNHdAq9M2gUm+Acj3zhn
              "]], PolygonBox[CompressedData["
1:eJwV00dsT3EAB/DXRY22JxzMtmhCJIQaEao1W6MUPUjs7aD2rHk1WmrFOCFG
0TpIiK1mIrHpsm6CluJiHHx+h8//+/2+95L/y/u/f+qcooKlsVEUxdDMxxDj
c2IUfaJQn8oUJlPAJIo5xCNS4qJoCfVMtDdykIckO7aYOvLtSj6SYW/nFxvs
AzwgyV5ELRPsCj7Q3d7GT9bbPxiol5EQH0X77fu0thdSw3j7Hzn6MVJcd8Ge
qJfT0X5vd9O38oN1dqG8SLrzTfZNvY8+QO4lXt8X7lcfpOfJMfKkbCfvOZcv
r9g9ZSuZIxfIasaFZ2o/1ofKaXKsvCQz5N9wj7LKzpTZcoQ8KpPl+fDc9cF6
vjxLB/2d41f1XnpXuYUm1obvk5WkOffd7q/vIc4us3P1E7S179ot9fm8Cfdm
/2GYfoQk15yz35Jub+Y7a+xvZOqlxLpur11FC3ser8mzy6knzd7EN1bbe7hD
oj2XV+TaZ6kj1S6mkVV2Kbdpbs/hZfgt7NGMYiQjGB7eA1ZSwi2auXY2L8i2
V7A7/N4kODaL5wyzz1BLF3sjDSy3d3GDeHsmz8iyT1ND5/B+85VldiP99BJi
PJ+d9nXi7Bk8De+E/Zss/TCtXXfKnqCfob1dbXcK/wW+UBT+o7KCVOcbwn3p
vfW+cjeRviP8T/SB+hg5Wh6XbeS18B3yst1DxobnIqfLJ/wHPv6Asw==
              "]]}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0LdPVmEAhfFXpHxYwMQyqYjiLFaai7JoxMZgQkRMiC0xgokY/UTsyo4F
pKigLqDiSrcyoYkC6qCDiSVRsAB/AL87PHnOOe+9N/fezPLK4oqEEMIMDOBH
LITvOJ0YQhxnkJIcQl1SCGvxW+9CM6oRc3bdvg5jejdakGFvt23DTLyznUWq
/Ya+HuN6D+5gmb3DVoREvLfVYJb9pr4Bf/RerLJ163sxH3dtmbZH8nYkYdiW
a3spH8BinLPNtt2Sc/BX36QPycfQp2frPXIpFuCebbntsbwDydiiD3MVRpzn
6a/kg9gv/+Il2C1/5hockSf5vOvnyPXyUc7lPfyV/znbLL+RT3AFl/N49Azu
d76ae/XjvC96T/7J1bww+n7+xKc4zod5gi9wq/tX8JPoe3knl/A3TsFWeYRP
YtS1+fpr+RCWolj/Ev3H6HnO5+oNch7+64X6W7kSA/oavU8uwyK02bJsnfIu
xPDBVmAbjN4VGbhoS7PdlvMxoT/Dfay0P43+LVLx0XYJ6fZGvQCT+nM8wGXM
c9Zk34gp/QUe4gqu4hpqMQ2M2GHt
             "]]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[{
             PolygonBox[{{2278, 2279, 1161, 1665, 1524, 1641, 1407, 1502, 
              1619, 1312, 1384, 1479, 1596, 1240, 1290, 1362, 1457, 1574, 
              1190, 1219, 1269, 1341, 1436, 1553, 1160}}], 
             PolygonBox[CompressedData["
1:eJwV1GVsVmcYBuDTIiGB4c4gwd1h/MJdAmQwKA7FobQUKRrcobgv6HDbcPiD
BXeWsAVnONuC/MD1en9cvZ/7Oe+XfHJOC8cn/ZwYG0VRDO39iUsbRY8zRNEI
mcJwhjGUIfzKIf6lSrooWkD69FGUrK/kIM+pbD+fdK4N1q8SqzdjK4XsV9gd
4BmV7OaR1j5Jv0KM3pQtFLRfbpfd3JHDVLDbb/eUivpc0tgl6gXMPTlBDbvL
dpG5CZv50W6ZXTZzBw5R3m6fXYL5AnX0J3oFcyqx+iB9rPkWrfX88jldzfEy
WR6XP8lLzo6TL/VecqgcJv+UjeU310fJh3qcbCwT5CZZQC51fbx8rfeRI2WK
/Fu2kFnlEzqZ42SSPCjLyb1e+7+5h3mgPE9t82P7++ZfzOXlHGLMCfZjzDdp
pecLr+UY1fWL4fc3X6OR/lVvZN5Ifn2JnsXcngOUtdtj94hy+myi8F70C3yh
od0G8tkv1nfzkLJ2s/jGAP08n2mg/0Ze5xfpf/CAMnYz+Up/fSG/8w+l7Wbw
hX56X/rQm170JJ4edGcBu8J3RCmvmc5nuunz2ck9StpN41P47fVzfKK+vp48
3uM8fQd3KWE3lY900c/ykXr6OnI7P1ffzh2K203hA531M3ygrr6WXM6n6pnN
7dhPGbttdrcppk/mfbg/9NO8p46+hpzOztF/CPcC+yhtt9XuFkX1SbwLz5ue
V3bnKNWcO2WXbL5KQ/2dXtu8mhz6bH2E+S+a65lkW/ZSSt/i+gDzOWrpN/Ui
5om8Dc+kPlreoKXreeSz8N2Zu8kjVDWfdO5FeNbD/xl5hQbmt+HeCPejuZZc
RXbzLPtX5t7mFDlcXpfNZEY5Ojwj4TPLNjIx3MeypNwcnn35X/guZH85RJ6V
NeUN10fKe+GzysLh/pUT5Bu+A2nWtOc=
              "]]}]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0jdMVWEYBuBf2sVJYYIJrhV0YGAwgIWYOFkGB0siKuiMolIsuwK2gE6g
gyYKooKaYGIwAY2J0QuoMSR2RBcVsWDdeP7hyfd+77l/Ts65J1mzZ2NtWghh
FgPcygrhY3YIH+iSu7nCNvuLRAh7KeST7hE9VLn2UldHks+6x9Trf9qbKSON
q/rt+lfyPubxRZeiQT9tb6GcdK7pd+hfy/uZz6TuqC6DDvtahnWN9l9yKxVk
cF2/U/9GPsACvuqO6TLptK9jRNdk/y0fZzkX7AX0y5m0yXO4JG+KzyIXMyj3
Ol8tv5XruSmXsFDuMPPolQfNFUz5fbOZxSjnXLtjLovPynp7VzzPGAP2B+Zq
xuMZ5w+af/Qp84TZb5bG/yLew37RLOQ5t+33zcp4T7ndnMtl+a5Zzub4vs0l
DMl97lEjv5MbWESnPZ8++ZvrLXKC8/YNPNEdsv+VT7KSBGd0OfGbkrdww+92
xWeRG1nMd91TDuv/2U+xiuz4PvW79e/lJor4oXvGEf1/+2kqmc1ZXS7d8tb4
HchLuSc/NNcwwQwmfWqU
             "]]]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1HmUjmUYB+BvdE7J1mKrLB3ltCKEdOrUqWStMGihVbuKtn/aCyEVxjIj
bbbRol0qhBYM7cUw0qaxte+btev3xzX3ff/e75vzve/7PE+LwcOKh9YoFApF
PO3P8L0LheqahcJT6hzKmc0sZrKKbRy6T6EwjCoG+fwM2Uq20lw2lHUMdG26
rIItNJPdwFoucO1JWZG+M2P4jVvlK+SbaWq+nkrOlz8hK+hPYDS/cot8ubyn
fhp7mUexSdbEfB1rOE/2uGyAvpx65hL2yOabm+c+6KQfxS/cbF7m+iJ9yzwX
eug7qQt4RP+RWoP7qfbZr9STWcoLrn+mNmYah5jXq214mSHm99TV6rnqY76/
Ue1CRf5HnqN6FHPpbz5RfZPZ+k/Uukxgt++eqr7Dq641y7Ono769Oj+/Uf8z
N+nf9fmF+sP1c+iun0qRfiTfuv68uVHuk4P11+Z+GGB+1PV++lnUMY9nl6yD
eSQ/cWN+j6ybvoyCeQQbZQeZr+FT+uf5yHZyvHkEP2aNyd+WfUNj89W5Z/rl
N8l20N48nB+y7uRvyb6mkfkqPqZYPlVWRilTmMwkJlLCBMYzjqV5jzT03Svz
junrfzwsW8KXNJBdwYf0ce0h2WK+oL7scj6gt2sPyrbTznwf32cf5D3KNnCg
eTDvc458rOw/2prv5bvsA/ki2eccYL4sa4ez5Q/I/uU48z1sy7qXL5StZ3/z
paziLPkY2T+0Md/NVoZkTcu66kvZk+cqq5Ltp7+ElfSSjZb9TWvzXWzJ2pC/
ITtTP4XduVfZOlk9/cVU0DP7U1asn0lt8zj+krUy38nmrA3Z67Iu+snsyrOQ
rZXV1V/ECnpkXcv66mdQK++JP2XzzE1zznCs/g42ZR2ZX3P9DP0kdua5ySpl
z+kbZr1QR38hy+mefZH3rz9S/yx99NPZN++fP1x/xdwkZxXH6NtlP3K7vjpr
MnvR5xboD9OXc7q+Y54fE/U78l70a3xurr6Bvoza+tbqSwzSL6Nb9lTuJecm
i2VHqM/QW9856ybPQF8za5Hfff6U7K2cQ/LVOZtyPnK0ua06j9uyJnMWZB/k
PrK31NNyLub3yivVFjmPkps3qB3y7ijJ/lC3Z53knMveUU9iSZ5h9r9an1Jq
mavUVrzIwKzZnFVqV/V/6izwfQ==
             
             "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
          TagBox[
           {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwd1WWgFWUUBdBHSKeUdJd0I43SqISIgJR0SUspIaKkNEh3SKiggEp3d5d0
d4Ok6/PHYu9z5j2YO3FJ36RDzfaRIiIiSkWOiAj5iz8KclAfSE0K4HBEFKLy
Fr/6mUIc0gfxCQWJxm/2hTmsD6YWhdht9wn39Xl0IjpL7IpwRB/CpxRmj10t
Hujz6UwMltoV5ag+lNpcMLcmOqvNRdirf8pD/We6cMf8FYnYbo7J7/p7HNOH
8UzvS2o+M1+UbYjBmvD5XYxh+rvhPMz7ZG0e6W87NlFfoL+W35ORNPZzZVf7
u7IbOewSy+RyhtzhWGx9tJ5X5pUZ5IJwfjKW43/oxchiPm6OL8ebC8gfzf/q
/chlTiNTydnhfsg6jl/S2xKTpHZT5dpw38Lvh3MK/5Z5f/jsPNYX8kb/gUzh
+pnvye4kYWc4b5bpxTmhD6cul83tiMU6czEO6HV4oi+iG3FYbleCk/oI6lGc
g3Z1eaovpjtxWWFXklP6SD6nBPH4074Up/VR1KdkuF4kIGG4VyTilocqsUxC
Uv7ye6X5Rx9Ng/B+kIy/7ctwRh9DQ0pzyK4ez8I7RA/eYaVdWc7qY2lEGQ7b
fc6/4V2iJ8lZZfc+5/RxNOaK+Utis95cliN6fZ6H941e3Df3CPeVXeYUrNY/
4Lw+nuf6t6TlC/NVGb4A4rAhvI+eg+F6znAe5qOyAS/CtXJskr5ED18IA/XM
fG18IHuSjBSOzZS7w33Vx+j5ZL7wLsiF4RmWKR1fo5cjq/lCuDfyJ3PBkOYX
en9ym9OFd1LOCd8Xsonj1/QO4V00xw3/vpwmN4bvCn1EeBdIp88P18L+mGzI
Sz2x/WR9qR5JHxTeLb4xP5S9eIc95lSs1ctzUZ9AU66bOxKPTeZyHNcb8Sp8
v9Cb1Kyzq8AlfSLNKM8Ju8a8Du84fUjDeruKXNYn0ZwKpGWDfSWu6JNpQUXS
kZ4MZOS25zuTzEwWNvqdylzVp9CSSmRlk30VrulTaUVlTobnhTf6MvqSjc12
VbmuT6M1VThl1yRSxP//qSwX/cjOFvOH3NCn04Yb5k7EZ7O5Kqf1pkRiRXjc
3JvB4TkJz6/5UXjuSM5e87ts1T/ipj6Dl/p3pKet+absTIJwT/190+UW+5j6
yPCMhZ/Vfw7naP+PbEZ2u8gyiZwi/3Qsij5EzyOzhfdJzpNFZX/HH4dnKLxH
5hQypZwlC8l9jseVY835ZX6ZSS6SxWUOx7fpH5PNfMucUE4wz9RfyQFkoJ35
luxCQraaY/nZUeHcwvUwn5HNicJf5qiODw2fK1wf8xPZO5wj+8052a5X47Y+
iy/Dc2TuyttsM3/MWb0FUfnbPIBc7DBX544+m/ZU45xdS95ipfl7crPTXIO7
+hw6UJ085CUfuxyvyT19Lh2pwXm7VkRjlfkHnup9SMUBczyfeZxegMz6Ylki
XHvH/gNm6AuM
             "]]},
           Annotation[#, "Charting`Private`Tag$149017#1"]& ], 
          TagBox[
           {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwV1GW4VFUYBtChG6S7UywQFItGurulW0IFpFFSQbq7u5FUQkC6u0uREKWR
xrV/rOf93r333Dkz95zJ3KRD1fZRIpFI+qiRSEEORYtEGlA0eiQSVeaW62VF
+av95HK2XkqWlh/JnXKIvYh5mDkfecyb5T/WM5uXm6vTQf9bdiMDp/W09heG
92C+Hl+fZC7MU70Qh80NicYmfShRnBuu5+dfvSO3zd3JyBl9AYU5on9BdDbr
P9GJf/QeZOKsvpAiHNUbEYMt+jC+oijHrDUmJlv14XxNMYpTgs8pSSlKc9zZ
JsTiN30E3/Cv3pPMnNMXUYYTelNis00fSWfu6L3Iwnl9MWU5qTcjDtv1UUT1
/YzQP+CO3oW75t5k5YK+hATOTdaL8Ewvxylzc+KyQ0/hzBxzGUbr0fSR5g+5
q2fRV5hr0FW/J/uQjXfs/SIvWk9nXmSuxKfmPXKp9YTmKeYSsmi4ZrldVpbP
7eeUa/Rysq4sJPeH95Pl7Z82t6CYHk++JTeE95G/208p5+qlZVn5sdwlx9iL
bh5lLkBe8xZ5z3pW80pzTb7V78u+ZOeSnt7+4nCNLNMT6VPDNfBCr8AZc0vi
s1MfSwznRodnh/t6Nx6YvyMHl/XlVOSs3ooE7NLH0Z2H+vfk5Iq+gkqc01uT
kN36eHpQmfPW2pCIPfoEelKFqlSjOjWoyY3YkUgtWZs6XPC6trzBXn0ivajL
RWvtSMw+fRK9eaT3IxdX9ZXU45L+JUnYr0+mD4/1/rzJH/oq6nNZb09SDuhT
iOl7HBP+lzzQ+/KfeQC5+VNfzRvOTdOL81JvwBVzB5JxUE/lzLxwfzFVj6WP
NX/C++at8qH1bOZV5lrh/6U/kQPD/ca74TdSXrOewbwkPC+yivxM7pXV5M/2
E8vp+ueyRHiO5A5ZRb6yn0uu1cvLerKwPBDuRdnQ/lVzx/CZ9OTybblRHrKX
2jw/vDZcv3m3nGY9tnlceO7IZ/5NPrKe3bzaXDvcU/pTOSj8Tf7SM9pfaq7K
Gj2JPiNcO6/1L/jD3IkUHNanE8e58eGz81jvxzPz4PCbwHV9LY34U/+KlBzR
Z9Cf5/oP4bvlhr6OxlzTvyYVR/WZDKAJTWlGc1pw033cUraiNX95zTek5pg+
i4G04bq1zqThuD6bQbzQf+Q9burraRueEb0LaTmhz2EwL/Uh5OGWvoF24Vr0
rqTjpD6XuL6nCXpB/tN/4JV5KHn5W99IUudm6iWJhOfH2i35Lek5padxZoG5
AvP0ePpEcyHym7fJJ9ZzhPvQXCd8Lv21/Cnc6+Ez2tskb1vPZF5mLiurhWuU
+2T18JtuP5mcFa5JlpIFwu9tuFdklPAcy3XhemR9WUQeDM+PbO/1/wOl1RB3

             "]]},
           Annotation[#, "Charting`Private`Tag$149017#2"]& ], 
          TagBox[
           {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwV1WW4VFUYhuGhQzoFpLtDEKQbRQUFRZQGaSWlQWlFuiQVpKS7Q7oEKSkB
6ZTuBu/147me733X2mdmz6w9J2PjtjXaRIlEInmiRiK1o0ciD2NEIr3RKmYk
kpE/5TPclf+xXop3yR24JTfk69yTf7eenZfKbbgmf8mXuDu/wVX5CHfiztyU
7/BPrk1i/sVcGp+bz/MjfUXzfnM7NDHf4m36t81/mBugnvkqp0S18F7Da+IL
+x5xH2TCCbm09d3hHjFbziEvC/eKePhAPspdMNh6UvlXcxk8livJB8ztsV0u
LG8MnwXeDPese8x9kRkn5TnIad9y+TPExxBdMt0Uc1k8kXegDp7I/ZAFp+S5
yGXvCrkWEmCoLrluqrkcnso7URdP5f7Iin/leRiGFPb/piuPZ/Iu1MMzeQCy
4bQ8H8OR0v5pugp4Lu9GfTyXByI7zsgLMAIN8EL3A3LgrLwQI9EQjdAYTfAV
mqIZmqMFXrrmR+TEOXkRRqElXukGIRfOy4sxGm96j9N1FfFC/hOt8DqcK+TG
BXkJxiCV/TN0lfBS3oPWiOgH6/LgorwUuXUrw3lEQozVpdbNNFfGK7myfDA8
E9grF5E3mRshFarLJ7gHvrYeRR5izhvOgvksX9KXMf9pbh2uNd/gZfo85lXm
tlyb6/BlToQPzce4M3flZnyXv+efXZuGZ4XX5Spcmy9wN35tvQofkr/ljvwV
3+bv+C/r7/DmcNa5Mdfna5waH5tPhmcf39gbVR5qzofLcll5T3htLJfzyqvD
M4nEGKd7K/xumN9DBPt0RXVbwrOONGiji6YbZs6PK/IK5NOtCc8bkmC8Lq1u
tvl9RMF+XVtE1w+XC+CqvBITkE4/R1cVUXFA1w4x9CPkgrgmr8JEtEdMayP1
hfCfvBqT0AEd8S06oTO64FJs3w13Q3fEcv0o176N6/IaTEYPxLY2Wl8YN+S1
+AXp9XPDbxOi4aCuJ+Lox8hFcFNeh1+RQT8vnA9ExyFdL8TVj5XfwS15PfLr
1oZzhaSYosuom2/+CDHwt66Ybms4I3grnBHdG+GcmYvitlxO3hvOAzbIBeR1
5rpIhqm6TLoF5mqIGb57+e9wBnHY+rvyNnNTNDD/x2nxifkU90IL8/1wzu2P
Zx4XnhsuxrX4HN+xVj6cY3NHbsON+Wb4G+F/h/WCvF5ux/XC++Qr4Vnl5OH+
+Th34W7cnO9x7/A76vrMvDDcL1cPZ5svcqxwBs2HuROO2Ftc3h6eUaRDDfnf
8DmGv2c9vjze/C7uyhXkfeG5x0a5kLwhPINIgWm6LLpF4VlEbBzVldDtCO8V
6dFHl0A3wVwc9+RNmI6s+sXhs0UcHNP1RUL9RLkE7subMQP9kMjaJH1JPJC3
YCb6YwAG4gdcdu5/5MT2T7a3FB7KWzEL2fRLwueAuDiuK6nbGb5fZEBN+XT4
ntHS/CDcDw+y939P5x9F
             "]]},
           Annotation[#, "Charting`Private`Tag$149017#3"]& ], 
          TagBox[
           {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwV1XfcTnUYB+DHCmVlizKztyIUIiPZW/Zrb8ose8te2Xvvmb33DpG9laxK
KSLp+v1xfe7v/T3P6e05zzlH+qiO1TpEi0QiUdEjkQGvRSJl4kQi+2JHIkfM
z83VZk4u8Lr9WzMJp1lm32kW5So/OL+3+Vx/whxnbjLf4zIf2xeY6TnHZvv+
0HOdDc5vbt7SHzN7muvNvGSTZ5pvhb/DWvsesxh/OG+EGYfZ+m3mB1SWl5qZ
2SEfNEsx0OfLmvt19Vgj5+INebKZlOXyWZ/rI7+Qx7NZfp+S8kIzA1vk73yu
hXxb/ooNcj6yy7PM1KyT//S5kXJc5tirsEzOwk55kOPl5ANyfeIxxZ6MFfI5
x/vK/8oTKMVGXUvdHflrcjDbnob18hPHR4Xfjrn2qgzWfWo/KDcgPj/q+ule
yhP5JPx2ula6n+Re5OQv3ehwrZhnr8YQXXn7IbkhCTiv66/7T55E6XD9dK11
P8u9ycXfuqF8pj9sb0RCLugG6F6Fe44ybNG10d2V+5Cbp7phVNAfsTcmERd1
W2mr/8Xelzw80w2nov6ovQlvckm3jXb6e/Z+5OUf3TdU0h+zR5GYy7rttNff
t/cnH8/DvUhl/XF7U5JwRbcj/P5UceyErhlJuarbGX4nqjp2UtecZFzT7QrX
nDGMZRzjmcBEJvEtk5lCNf+N753bguRc1+2mg/6BfQD5eaGbSnX9KXtLUnBD
t4eO+of2gRTgX900aoTn396KlNzUDdRFmGwvy15dJ/ujcF/zHi/Dd9DFY769
OtN1Ne1n5NakYqo9OSvlW44PkqMxxV6ORXJGtsr7HO8s/xru6/AsyvnDcyrP
Md8O75Xw/2MWD/djuIZm/PCdWeDYdrMwNeTlZlbOs8t+yPyEm8xwbq3w/tEf
NduYa83cXAzvJvs0M0X4Pqyy7zI/5Fp4Pzh/sBk9/MZMDfe0WZBP5cVmJrbJ
+332C/m38HxRkLn2d/hOfhXuAzkBC+01mamrbT8rtyU1d3RDdDGYZi/PAd2X
9t/loRQiwix9Hf05uR1p+El3kC76x/ZhfEC08J7R19X/KLfnbX7WHWIOn4fr
qOvAO9zVHWYu9Ry7oOtIWn7RHWEe81nAQhaxmNs+v8RcyjLqh2vuvE6k457u
KMtp4NglXWfSc193jK7h3wr7cAoTnRX6hvrL8hdk4IHuON30f9q/oQgxWKlv
pL8if0lGHoZ3mC4m0+2fcULX3f5EHkFRYrJK31h/Ve5CJh6Fd5guVrjH7BU4
qeth/0seyYfMs6dloxyL8XJCFsm1wneRs7FbXu38JuG+k7uyTs7Du+GZM1Oy
Wt5tfhSen/BeNF8L7w5mOrbVLBS+KxXtS8L54fdme7iPzJLcCOc4v6f5t/64
OcrcaBYIv0X4G/b5Zrpwf7IpPLtmifA35QlmIhbLO8wi1A7X28zOHnmNvxEl
X5e7kZkZ9lSskX8L72o5NrPslTil+8r+VB5NMWIzUfdmuKfkOuE59rmm4bvI
3cnC77rTfK1/Zh9DceKE66lvFt4Lcg+y8lh3hl76f+xjKUFcJukSs1SuG+4D
OQd75cNmaW6x3vn/A2oKVpA=
             "]]},
           Annotation[#, "Charting`Private`Tag$149017#4"]& ]}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->{137.9375, Automatic},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}, "AxesInFront" -> True},
      PlotRange->{{0, 10}, {-0.3461261180190739, 0.581865061766651}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{
       Automatic, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of 11 polygons, a line connecting 574 points, a line \
connecting 541 points, a line connecting 556 points and a line connecting 610 \
points\"\>"},
    {
     GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
nE2JCg==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 107, 110, 112, 118, 120, 123, 1},
           SplineDegree->7], 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{1, 103}, 0.08247256438740623]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 130, 133, 135, 141, 143, 146, 2},
           SplineDegree->7], 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{2, 24}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{2, 53}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{2, 102}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{4, 18}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{4, 44}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{4, 50}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{6, 16}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{6, 101}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{7, 15}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{7, 29}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{7, 56}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{7, 100}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{9, 23}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{9, 45}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{9, 82}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{9, 99}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{10, 11}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{11, 54}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{11, 98}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{12, 13}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{13, 33}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{13, 60}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{13, 76}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{13, 97}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{14, 15}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{15, 26}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{15, 37}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{15, 41}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{16, 35}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{16, 58}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{17, 18}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{18, 61}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{18, 74}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{18, 96}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{19, 20}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{20, 33}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{20, 38}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{20, 87}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{20, 95}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{21, 22}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{22, 46}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{22, 94}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{23, 24}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{23, 49}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{23, 75}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{23, 85}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{24, 33}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{24, 65}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{24, 93}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{25, 26}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{26, 34}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{26, 89}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{26, 92}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{27, 28}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{27, 42}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{27, 84}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{28, 35}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{28, 63}, 0.08247256438740623]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{29, 153, 156, 158, 164, 166, 169, 29},
           SplineDegree->7], 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{29, 68}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{29, 91}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{30, 31}, 0.08247256438740623]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{31, 176, 179, 181, 187, 189, 192, 31},
           SplineDegree->7], 0.08247256438740623]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{32, 199, 202, 204, 210, 212, 215, 32},
           SplineDegree->7], 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{32, 47}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{33, 70}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{33, 90}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{35, 51}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{36, 37}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{37, 64}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{37, 72}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{37, 88}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{39, 40}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{40, 54}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{40, 86}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{43, 44}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{44, 59}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{44, 77}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{44, 83}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{46, 47}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{46, 67}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{47, 54}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{48, 49}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{49, 55}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{49, 79}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{49, 81}, 0.08247256438740623]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{51, 222, 225, 227, 233, 235, 238, 51},
           SplineDegree->7], 0.08247256438740623]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{52, 245, 248, 250, 256, 258, 261, 52},
           SplineDegree->7], 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{52, 80}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{57, 58}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{58, 78}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{62, 63}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{63, 73}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{66, 67}, 0.08247256438740623]}, 
         {Arrowheads[0.], ArrowBox[{67, 71}, 0.08247256438740623]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{69, 268, 271, 273, 279, 281, 284, 69},
           SplineDegree->7], 0.08247256438740623]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08247256438740623], DiskBox[2, 0.08247256438740623], 
         DiskBox[3, 0.08247256438740623], DiskBox[4, 0.08247256438740623], 
         DiskBox[5, 0.08247256438740623], DiskBox[6, 0.08247256438740623], 
         DiskBox[7, 0.08247256438740623], DiskBox[8, 0.08247256438740623], 
         DiskBox[9, 0.08247256438740623], DiskBox[10, 0.08247256438740623], 
         DiskBox[11, 0.08247256438740623], DiskBox[12, 0.08247256438740623], 
         DiskBox[13, 0.08247256438740623], DiskBox[14, 0.08247256438740623], 
         DiskBox[15, 0.08247256438740623], DiskBox[16, 0.08247256438740623], 
         DiskBox[17, 0.08247256438740623], DiskBox[18, 0.08247256438740623], 
         DiskBox[19, 0.08247256438740623], DiskBox[20, 0.08247256438740623], 
         DiskBox[21, 0.08247256438740623], DiskBox[22, 0.08247256438740623], 
         DiskBox[23, 0.08247256438740623], DiskBox[24, 0.08247256438740623], 
         DiskBox[25, 0.08247256438740623], DiskBox[26, 0.08247256438740623], 
         DiskBox[27, 0.08247256438740623], DiskBox[28, 0.08247256438740623], 
         DiskBox[29, 0.08247256438740623], DiskBox[30, 0.08247256438740623], 
         DiskBox[31, 0.08247256438740623], DiskBox[32, 0.08247256438740623], 
         DiskBox[33, 0.08247256438740623], DiskBox[34, 0.08247256438740623], 
         DiskBox[35, 0.08247256438740623], DiskBox[36, 0.08247256438740623], 
         DiskBox[37, 0.08247256438740623], DiskBox[38, 0.08247256438740623], 
         DiskBox[39, 0.08247256438740623], DiskBox[40, 0.08247256438740623], 
         DiskBox[41, 0.08247256438740623], DiskBox[42, 0.08247256438740623], 
         DiskBox[43, 0.08247256438740623], DiskBox[44, 0.08247256438740623], 
         DiskBox[45, 0.08247256438740623], DiskBox[46, 0.08247256438740623], 
         DiskBox[47, 0.08247256438740623], DiskBox[48, 0.08247256438740623], 
         DiskBox[49, 0.08247256438740623], DiskBox[50, 0.08247256438740623], 
         DiskBox[51, 0.08247256438740623], DiskBox[52, 0.08247256438740623], 
         DiskBox[53, 0.08247256438740623], DiskBox[54, 0.08247256438740623], 
         DiskBox[55, 0.08247256438740623], DiskBox[56, 0.08247256438740623], 
         DiskBox[57, 0.08247256438740623], DiskBox[58, 0.08247256438740623], 
         DiskBox[59, 0.08247256438740623], DiskBox[60, 0.08247256438740623], 
         DiskBox[61, 0.08247256438740623], DiskBox[62, 0.08247256438740623], 
         DiskBox[63, 0.08247256438740623], DiskBox[64, 0.08247256438740623], 
         DiskBox[65, 0.08247256438740623], DiskBox[66, 0.08247256438740623], 
         DiskBox[67, 0.08247256438740623], DiskBox[68, 0.08247256438740623], 
         DiskBox[69, 0.08247256438740623], DiskBox[70, 0.08247256438740623], 
         DiskBox[71, 0.08247256438740623], DiskBox[72, 0.08247256438740623], 
         DiskBox[73, 0.08247256438740623], DiskBox[74, 0.08247256438740623], 
         DiskBox[75, 0.08247256438740623], DiskBox[76, 0.08247256438740623], 
         DiskBox[77, 0.08247256438740623], DiskBox[78, 0.08247256438740623], 
         DiskBox[79, 0.08247256438740623], DiskBox[80, 0.08247256438740623], 
         DiskBox[81, 0.08247256438740623], DiskBox[82, 0.08247256438740623], 
         DiskBox[83, 0.08247256438740623], DiskBox[84, 0.08247256438740623], 
         DiskBox[85, 0.08247256438740623], DiskBox[86, 0.08247256438740623], 
         DiskBox[87, 0.08247256438740623], DiskBox[88, 0.08247256438740623], 
         DiskBox[89, 0.08247256438740623], DiskBox[90, 0.08247256438740623], 
         DiskBox[91, 0.08247256438740623], DiskBox[92, 0.08247256438740623], 
         DiskBox[93, 0.08247256438740623], DiskBox[94, 0.08247256438740623], 
         DiskBox[95, 0.08247256438740623], DiskBox[96, 0.08247256438740623], 
         DiskBox[97, 0.08247256438740623], DiskBox[98, 0.08247256438740623], 
         DiskBox[99, 0.08247256438740623], DiskBox[100, 0.08247256438740623], 
         DiskBox[101, 0.08247256438740623], DiskBox[102, 0.08247256438740623],
          DiskBox[103, 0.08247256438740623]}}],
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->{
       118.69140625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of 103 arrows and 103 disks\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803688323929615*^9},
 TextAlignment->Center,
 CellLabel->
  "Out[387]=",ExpressionUUID->"acd56369-0cea-4514-938d-211432d5abbf"],

Cell[TextData[{
 "As it can be seen, the most human-readable version was the ",
 StyleBox["SpokenString", "CodeText",
  FontWeight->"Bold"],
 " function output. Even this, there are some cases in which it doesn\
\[CloseCurlyQuote]t bring a meaningful description, like in the second and \
third cases - it probably wouldn\[CloseCurlyQuote]t be possible to have a \
clear idea of the figure only with the texts. Also, it discards some aspects \
of the figure, like the color. Because of that, it was decided that the first \
small step would be to describe colors, for then integrate it into a more \
complete description function for graphics."
}], "Text",
 CellChangeTimes->{{3.803688402412763*^9, 3.803688496331946*^9}, {
   3.80368876935002*^9, 3.803688815475932*^9}, {3.80368885154023*^9, 
   3.80368885184212*^9}, 3.803689000186578*^9, {3.803689100859864*^9, 
   3.803689141252714*^9}, {3.80368919188514*^9, 3.803689195606748*^9}, {
   3.8036912863162537`*^9, 
   3.803691297130268*^9}},ExpressionUUID->"f43bd5d3-03d9-4ee0-a34c-\
dfc9551b424c"],

Cell[TextData[{
 "In this part I also created two functions to describe any wolfram language \
symbol - ",
 StyleBox["Description", "CodeText",
  FontWeight->"Bold"],
 ", to get the name of it; and ",
 StyleBox["TranslatedDescription", "CodeText",
  FontWeight->"Bold"],
 ", to get the translated name of it. Both of them use the ",
 StyleBox["WolframLanguageData", "CodeText",
  FontWeight->"Bold"],
 " presented previously. Here are some tests:"
}], "Text",
 CellChangeTimes->{{3.8036892575836067`*^9, 3.803689449637097*^9}, 
   3.803691318489155*^9},ExpressionUUID->"f44514da-16ff-477f-abfe-\
d402b20417d7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"someWLSymbols", "=", 
    RowBox[{"{", 
     RowBox[{
     "List", ",", "Table", ",", "Range", ",", "Graphics", ",", "Image", ",", 
      "ColorQ", ",", "Number", ",", "Grid", ",", "Entity", ",", "Values", ",",
       "Map", ",", "Thread", ",", "Function", ",", " ", "MapThread"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"symbolDescriptionTests", "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"descriptions", "=", 
         RowBox[{"Description", "@", "someWLSymbols"}]}], ",", "spanish", ",",
         "portuguese", ",", "japanese"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"spanish", "=", 
        RowBox[{"TranslatedDescription", "[", 
         RowBox[{"someWLSymbols", ",", "\"\<Spanish\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"portuguese", "=", 
        RowBox[{"TranslatedDescription", "[", 
         RowBox[{"someWLSymbols", ",", "\"\<Portuguese\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"japanese", "=", 
        RowBox[{"TranslatedDescription", "[", 
         RowBox[{"someWLSymbols", ",", "\"\<Japanese\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5"}], "}"}], 
          "&"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "someWLSymbols", ",", "descriptions", ",", "spanish", ",", 
           "portuguese", ",", "japanese"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"symbolDescriptionTests", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Original\>\"", ",", "\"\<Description\>\"", ",", "\"\<Spanish\>\"",
         ",", "\"\<Portuguese\>\"", ",", "\"\<Japanese\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803064472561564*^9, 3.803064672272832*^9}, {
  3.803065167679809*^9, 3.803065182215145*^9}, {3.8030652238434258`*^9, 
  3.803065231407126*^9}, {3.803689524529788*^9, 3.803689585689225*^9}, {
  3.8036896380195713`*^9, 3.803689682255725*^9}, {3.803720780478836*^9, 
  3.803720798305969*^9}},
 CellLabel->"",ExpressionUUID->"5d2d2ff2-6a81-4ce9-89b8-980d739d12a3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Original\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Description\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Spanish\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Portuguese\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Japanese\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {"List", "\<\"List\"\>", "\<\"lista\"\>", "\<\"lista\"\>", "\<\"\:30ea\
\:30b9\:30c8\"\>"},
    {"Table", "\<\"Table\"\>", "\<\"tabla\"\>", "\<\"tabela\"\>", "\<\"\:30ea\
\:30b9\:30c8\:3092\:4f5c\:6210\"\>"},
    {"Range", "\<\"Range\"\>", "\<\"rango\"\>", "\<\"intervalo de \
valores\"\>", "\<\"\:7bc4\:56f2\"\>"},
    {"Graphics", "\<\"Graphics\"\>", "\<\"gr\[AAcute]fico\"\>", \
"\<\"representa\[CCedilla]\[ATilde]o gr\[AAcute]fica\"\>", "\<\"\:30b0\:30e9\
\:30d5\:30a3\:30c3\:30af\:30b9\"\>"},
    {"Image", "\<\"Image\"\>", "\<\"imagen\"\>", "\<\"imagem\"\>", \
"\<\"\:753b\:50cf\"\>"},
    {"ColorQ", "\<\"Color Q\"\>", "\<\"\[DownQuestion]color?\"\>", \
"\<\"Cor?\"\>", "\<\"\:8272\:304b\:3069\:3046\:304b\"\>"},
    {"Number", "\<\"Number\"\>", "\<\"n\[UAcute]mero\"\>", \
"\<\"n\[UAcute]mero\"\>", "\<\"\:6570\"\>"},
    {"Grid", "\<\"Grid\"\>", "\<\"rejilla\"\>", "\<\"grade\"\>", "\<\"\:683c\
\:5b50\"\>"},
    {"Entity", "\<\"Entity\"\>", "\<\"entidad\"\>", "\<\"entidade\"\>", "\<\"\
\:5b9f\:4f53\"\>"},
    {"Values", "\<\"Values\"\>", "\<\"valores\"\>", "\<\"lista de valores de \
associa\[CCedilla]\[ATilde]o\"\>", "\<\"\:5024\"\>"},
    {"Map", "\<\"Map\"\>", "\<\"aplica a todos\"\>", "\<\"aplica-se ao \
primeiro n\[IAcute]vel\"\>", "\<\"\:9069\:7528\"\>"},
    {"Thread", "\<\"Thread\"\>", "\<\"atraviesa\"\>", "\<\"atrav\[EAcute]s \
das listas\"\>", "\<\"\:7e2b\:3044\:8fbc\:3080\"\>"},
    {"Function", "\<\"Function\"\>", "\<\"funci\[OAcute]n\"\>", "\<\"fun\
\[CCedilla]\[ATilde]o\"\>", "\<\"\:95a2\:6570\"\>"},
    {"MapThread", "\<\"Map Thread\"\>", "\<\"aplica a trav\[EAcute]s\"\>", \
"\<\"aplica \[AGrave] liga\[CCedilla]\[ATilde]o de elementos \
correspondentes\"\>", "\<\"\:7e2b\:8fbc\:307f\:9069\:7528\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.803689587680016*^9, {3.803689665245841*^9, 3.803689683453953*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[395]=",ExpressionUUID->"f8d251eb-ffbb-40ae-b52a-e4c04b464ee2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing colors", "Subsection",
 CellChangeTimes->{{3.803686389549945*^9, 
  3.8036864025684977`*^9}},ExpressionUUID->"fd6bfba5-1024-4e6c-8ad3-\
023c32a93bfb"],

Cell[TextData[{
 "Before starting describing colors, I discovered that the Wolfram Language \
have a set of named colors. These colors are the most common ones, and each \
has its own symbol in the Wolfram Language. Each of these symbols also have \
its own informations. My first objective was to filter, among all the \
symbols, the ones that are named colors. Once I had it, the idea was to \
create a function that would receive any ",
 StyleBox["RGBColor", "CodeText",
  FontWeight->"Bold"],
 " expression, compare it with all the named colors that I found, and return \
the name of the closest color."
}], "Text",
 CellChangeTimes->{{3.803690667871071*^9, 3.803690969939033*^9}, {
  3.803691011636088*^9, 3.803691040988755*^9}, {3.803691207674128*^9, 
  3.803691208857728*^9}, {3.80372083630612*^9, 
  3.803720838250868*^9}},ExpressionUUID->"57d1e968-4df9-47d5-a427-\
8cf8ad50b21a"],

Cell[TextData[{
 "For filtering the named colors among the Wolfram Language symbols, I saw \
that the ",
 Cell[BoxData[
  TemplateBox[{"\"functionality areas\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}], 
      "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
   "EntityProperty"]],
  CellChangeTimes->{3.8036874869938507`*^9},ExpressionUUID->
  "4a50ccd8-01dc-44da-8b5d-d01ec276d984"],
 " property for these symbols always was the value ",
 StyleBox["ColorSymbols", "CodeText",
  FontWeight->"Bold"],
 ". With that, I just filtered all the symbols that had this value for the \
cited property, and checked if they were a colors using the ",
 StyleBox["ColorQ", "CodeText",
  FontWeight->"Bold"],
 " function. "
}], "Text",
 CellChangeTimes->{{3.803691840901532*^9, 3.803691981230091*^9}, {
   3.803692134410717*^9, 3.803692168355307*^9}, 3.803692234261664*^9, {
   3.803692537093014*^9, 3.803692551973568*^9}, {3.803693604653921*^9, 
   3.8036936179629173`*^9}},ExpressionUUID->"9f1fd2f3-1d0e-4f3d-ac4f-\
20a92cd03e80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Getting", " ", "the", " ", "`functionality", " ", "areas`", " ", 
    "property", " ", "for", " ", "the", " ", "Red", " ", 
    RowBox[{"color", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"WolframLanguageData", "[", "\"\<Red\>\"", "]"}], ",", " ", 
    TemplateBox[{"\"functionality areas\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}], 
        "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
     "EntityProperty"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8036922041649303`*^9, 
  3.8036922752384453`*^9}},ExpressionUUID->"a4c844d2-ab2d-42ad-b6a3-\
7403cccacb0e"],

Cell[BoxData[
 RowBox[{"{", "\<\"ColorSymbols\"\>", "}"}]], "Output",
 CellChangeTimes->{3.803692220533304*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"b1b7c781-4bf1-4ac7-847b-f041f2a77cd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Filtering", " ", "every", " ", "named", " ", "color", " ", "among", " ", 
     "the", " ", "Wolfram", " ", "Language", " ", "symbols"}], ",", " ", 
    RowBox[{
    "based", " ", "on", " ", "the", " ", "`functionality", " ", "areas`", " ", 
     RowBox[{"property", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"functionalityAreasOfAllWLSymbols", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"WolframLanguageData", "[", "]"}], ",", 
         RowBox[{"EntityValue", "[", 
          RowBox[{
           RowBox[{"WolframLanguageData", "[", "]"}], ",", 
           TemplateBox[{"\"functionality areas\"", 
             RowBox[{"EntityProperty", "[", 
               
               RowBox[{
                "\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}], 
               "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
            "EntityProperty"]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colorSymbols", "=", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{"functionalityAreasOfAllWLSymbols", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Length", "@", 
             RowBox[{"Last", "@", "#"}]}], ")"}], "\[Equal]", "1"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"First", "@", 
              RowBox[{"Last", "@", "#"}]}], ")"}], "\[Equal]", 
            "\"\<ColorSymbols\>\""}], ")"}]}], "&"}]}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"namedColors", "=", " ", 
    RowBox[{"Select", "[", 
     RowBox[{"colorSymbols", ",", 
      RowBox[{
       RowBox[{"ColorQ", "@", 
        RowBox[{"RGBColor", "@", 
         RowBox[{"#", "[", "\"\<Name\>\"", "]"}]}]}], "&"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.80369227927346*^9, 3.803692387324726*^9}, {
   3.803692472983283*^9, 3.80369248576744*^9}, {3.803694045475751*^9, 
   3.8036940703311443`*^9}, 3.803702281572957*^9},
 CellLabel->
  "In[556]:=",ExpressionUUID->"f20ba5d3-c351-4d1b-90b2-e6518179008c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Black\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Blue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brown\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gray\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Green\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightBlue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightBlue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightCyan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightCyan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightGreen\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightPink\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightPink\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LightYellow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightYellow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Magenta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Orange\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Orange\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pink\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Purple\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Purple\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Red\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"White\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Yellow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Yellow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.803692380608954*^9, 3.8036923919524937`*^9}, 
   3.803692487780422*^9, 3.803694078977936*^9, 3.803702282787796*^9},
 CellLabel->
  "Out[558]=",ExpressionUUID->"385868a3-fc7a-417d-98e7-9e337490add2"]
}, Open  ]],

Cell[TextData[{
 "After that I needed to address the problem of calculating the similarity \
between two ",
 StyleBox["RGBColor", "CodeText",
  FontWeight->"Bold"],
 " expressions. My idea was to create a function the get the average of the \
differences of each color channel. For that, I created the ",
 StyleBox["ColorDistanceByAverage", "CodeText",
  FontWeight->"Bold"],
 " functions (I ended up not using this implementation in my final color \
description function because the built-in Nearest function uses the Euclidean \
distance by default)."
}], "Text",
 CellChangeTimes->{{3.803692829417304*^9, 3.803692909455986*^9}, 
   3.803692950558025*^9, 3.803693518944882*^9, {3.8036937036448727`*^9, 
   3.80369370717673*^9}, {3.803720937750908*^9, 3.803720937958398*^9}, {
   3.803737663115078*^9, 
   3.803737664663993*^9}},ExpressionUUID->"109a0dbc-30df-43bb-9dee-\
b8bd877b6843"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorDistanceByAverage", "[", 
   RowBox[{"color1_RGBColor", ",", "color2_RGBColor"}], "]"}], ":=", 
  RowBox[{"N", "[", 
   RowBox[{"Mean", "[", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"#1", "-", "#2"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"List", "@@", "color1"}], ",", 
        RowBox[{"List", "@@", "color2"}]}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.802727447372363*^9, 3.802727462619858*^9}, {
   3.80272930676685*^9, 3.802729328924859*^9}, {3.803223687194471*^9, 
   3.8032236888319197`*^9}, 3.803223723160591*^9, {3.803224018240612*^9, 
   3.8032240512502728`*^9}, {3.803224201581653*^9, 3.803224202900405*^9}, 
   3.803728996332765*^9},
 CellLabel->
  "In[363]:=",ExpressionUUID->"4505b83a-1983-4efe-a40f-4687ec114ce2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ColorDistanceByAverage", "[", 
    RowBox[{"Red", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Pink"}], "}"}]}]], "Input",\

 CellChangeTimes->{
  3.80369296714754*^9, {3.803693107112391*^9, 3.803693124103053*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"af895240-68c7-47d4-9f90-50ff77bb9d2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.6666666666666666`", ",", "0.6666666666666666`", ",", 
   "0.3333333333333333`"}], "}"}]], "Output",
 CellChangeTimes->{3.8036929738858433`*^9, 3.803693124901104*^9},
 CellLabel->
  "Out[424]=",ExpressionUUID->"39755a3c-0c7b-4146-b9e0-4280cc2507ac"]
}, Open  ]],

Cell[TextData[{
 "Then, I created the ",
 StyleBox["Description", "CodeText",
  FontWeight->"Bold"],
 " function for ",
 StyleBox["RBGColor", "CodeText",
  FontWeight->"Bold"],
 " expressions. I also created the ",
 StyleBox["TransletedDescription", "CodeText",
  FontWeight->"Bold"],
 " version of it, that works similar to the ",
 StyleBox["TransletedDescription", "CodeText",
  FontWeight->"Bold"],
 " for symbols."
}], "Text",
 CellChangeTimes->{{3.80369315761381*^9, 3.80369323285633*^9}, {
   3.803693302969811*^9, 3.803693319930914*^9}, 3.803693452302868*^9, 
   3.8036935088699703`*^9, {3.803693688035417*^9, 3.803693699633087*^9}, {
   3.80369379512576*^9, 
   3.803693897458661*^9}},ExpressionUUID->"7a2eba49-c955-46fa-b1f8-\
1170d03a0c2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Description", "[", "color_RGBColor", "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colors", "=", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Black\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0., 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Blue\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6470588235294118, 0.1647058823529412, 0.1647058823529412], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.43137254901960786`, 0.10980392156862748`, 
                 0.10980392156862748`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6470588235294118`", ",", "0.1647058823529412`", ",", 
                   "0.1647058823529412`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6470588235294118, 0.1647058823529412, 0.1647058823529412]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.6470588235294118, 0.1647058823529412, 0.1647058823529412],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Brown\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0., 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Cyan\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.334640522875817, 0.334640522875817, 0.334640522875817],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5019607843137255`", ",", "0.5019607843137255`", ",", 
                   "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5019607843137255, 0.5019607843137255, 0.5019607843137255]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.5019607843137255, 0.5019607843137255, 0.5019607843137255],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Gray\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0.5019607843137255, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0.334640522875817, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.5019607843137255`", ",", "0.`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0.5019607843137255, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0.5019607843137255, 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Green\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6784313725490198, 0.847058823529412, 0.901960784313726], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4522875816993465, 0.5647058823529414, 0.601307189542484],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6784313725490198`", ",", "0.847058823529412`", ",", 
                   "0.901960784313726`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6784313725490198, 0.847058823529412, 0.901960784313726]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightBlue\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightBlue\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.87843137254902, 1., 1.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5856209150326801, 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.87843137254902`", ",", "1.`", ",", "1.`"}], "]"}],
                NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.87843137254902, 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.87843137254902, 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightCyan\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightCyan\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.5647058823529411, 0.933333333333333, 0.5647058823529411], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.37647058823529406`, 0.622222222222222, 0.37647058823529406`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5647058823529411`", ",", "0.933333333333333`", ",", 
                   "0.5647058823529411`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5647058823529411, 0.933333333333333, 0.5647058823529411]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.5647058823529411, 0.933333333333333, 0.5647058823529411],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightGreen\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\
\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.7137254901960784, 0.7568627450980392], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.4758169934640523, 0.5045751633986928],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "1.`", ",", "0.7137254901960784`", ",", 
                   "0.7568627450980392`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.7137254901960784, 0.7568627450980392]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.7137254901960784, 0.7568627450980392],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightPink\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightPink\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 0.87843137254902], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.5856209150326801],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "0.87843137254902`"}], "]"}],
                NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 0.87843137254902]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 0.87843137254902],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightYellow\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightYellow\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0., 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Magenta\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], 
               "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.6470588235294118, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.43137254901960786`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.6470588235294118`", ",", "0.`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.6470588235294118, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.6470588235294118, 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Orange\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Orange\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.7529411764705882, 0.796078431372549], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.5019607843137255, 0.530718954248366],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "1.`", ",", "0.7529411764705882`", ",", 
                   "0.796078431372549`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.7529411764705882, 0.796078431372549]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.7529411764705882, 0.796078431372549],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Pink\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.5019607843137255, 0., 0.5019607843137255], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.334640522875817, 0., 0.334640522875817],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5019607843137255`", ",", "0.`", ",", 
                   "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.5019607843137255, 0., 0.5019607843137255]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.5019607843137255, 0., 0.5019607843137255],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Purple\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Purple\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Red\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"White\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Yellow\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Yellow\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}]}], "\[RightAssociation]"}]}], ",", "similar", ",", 
       "entity"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"similar", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Nearest", "[", 
         RowBox[{
          RowBox[{"Keys", "@", "colors"}], ",", "color", ",", "1"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"entity", "=", 
       RowBox[{"colors", "@", "similar"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Description", "[", "color", "]"}], "=", 
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<FromCamelCase\>\"", "]"}], "@", 
        
        RowBox[{"entity", "@", "\"\<Name\>\""}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"outputComparations", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"color", "=", 
          RowBox[{"RGBColor", "@", "#"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"color", ",", 
          RowBox[{"ToString", "@", "color"}], ",", 
          RowBox[{"TextString", "@", "color"}], ",", 
          RowBox[{"SpokenString", "@", "color"}], ",", 
          RowBox[{"Description", "@", "color"}]}], "}"}]}], "]"}], "&"}], "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "3"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"outputComparations", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<RGB color\>\"", ",", "\"\<ToString\>\"", ",", 
        "\"\<TextString\>\"", ",", "\"\<SpokenString\>\"", ",", 
        "\"\<Description\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.803693919069272*^9, 3.803693940688603*^9}, 
   3.8036959468326817`*^9, {3.803720998898962*^9, 
   3.8037210203139668`*^9}},ExpressionUUID->"d1bb1be5-d695-48ca-a5c9-\
2b4bf1d60ef6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"RGB color\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Description\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.13834638211441952`, 0.10944037874548829`, 0.09705518183954887], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.09223092140961302, 0.0729602524969922, 0.06470345455969925],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.13834638211441952`", ",", "0.10944037874548829`", ",",
                "0.09705518183954887`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.13834638211441952`, 0.10944037874548829`, 0.09705518183954887]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.13834638211441952`, 0.10944037874548829`, 
       0.09705518183954887}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.138346, 0.10944, 0.0970552}]\"\>", \
"\<\"RGBColor[{0.138346, 0.10944, 0.0970552}]\"\>", "\<\"RGB color 0.138, \
0.109, 0.097\"\>", "\<\"Black\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.6998114874500838, 0.013106753310190289`, 0.7453896078041529], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.46654099163338925`, 0.00873783554012686, 0.4969264052027686],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.6998114874500838`", ",", "0.013106753310190289`", ",",
                "0.7453896078041529`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.6998114874500838, 0.013106753310190289`, 0.7453896078041529]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.6998114874500838, 0.013106753310190289`, 
       0.7453896078041529}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.699811, 0.0131068, 0.74539}]\"\>", \
"\<\"RGBColor[{0.699811, 0.0131068, 0.74539}]\"\>", "\<\"RGB color 0.7, \
0.013, 0.745\"\>", "\<\"Purple\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.41098744104091556`, 0.8671517747586834, 0.6623246833367291], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.2739916273606104, 0.5781011831724556, 0.44154978889115276`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.41098744104091556`", ",", "0.8671517747586834`", ",", 
               "0.6623246833367291`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.41098744104091556`, 0.8671517747586834, 0.6623246833367291]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.41098744104091556`, 0.8671517747586834, 0.6623246833367291}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.410987, 0.867152, 0.662325}]\"\>", \
"\<\"RGBColor[{0.410987, 0.867152, 0.662325}]\"\>", "\<\"RGB color 0.411, \
0.867, 0.662\"\>", "\<\"Light Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.6371560959968514, 0.7985979800330758, 0.2571355735647842], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.4247707306645676, 0.5323986533553839, 0.17142371570985615`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.6371560959968514`", ",", "0.7985979800330758`", ",", 
               "0.2571355735647842`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.6371560959968514, 0.7985979800330758, 0.2571355735647842]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.6371560959968514, 0.7985979800330758, 0.2571355735647842}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.637156, 0.798598, 0.257136}]\"\>", \
"\<\"RGBColor[{0.637156, 0.798598, 0.257136}]\"\>", "\<\"RGB color 0.637, \
0.799, 0.257\"\>", "\<\"Light Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.548304732640936, 0.725850133023968, 0.1819235574702489],
            RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.3655364884272907, 0.48390008868264534`, 0.12128237164683262`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.548304732640936`", ",", "0.725850133023968`", ",", 
               "0.1819235574702489`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.548304732640936, 0.725850133023968, 0.1819235574702489]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.548304732640936, 0.725850133023968, 0.1819235574702489}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.548305, 0.72585, 0.181924}]\"\>", \
"\<\"RGBColor[{0.548305, 0.72585, 0.181924}]\"\>", "\<\"RGB color 0.548, \
0.726, 0.182\"\>", "\<\"Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.8818156401069392, 0.47620256378328363`, 0.10674904138416186`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5878770934046262, 0.31746837585552246`, 0.07116602758944124],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.8818156401069392`", ",", "0.47620256378328363`", ",", 
               "0.10674904138416186`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.8818156401069392, 0.47620256378328363`, 0.10674904138416186`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8818156401069392, 0.47620256378328363`, 
       0.10674904138416186`}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.881816, 0.476203, 0.106749}]\"\>", \
"\<\"RGBColor[{0.881816, 0.476203, 0.106749}]\"\>", "\<\"RGB color 0.882, \
0.476, 0.107\"\>", "\<\"Orange\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.29500412829881206`, 0.9079955791864953, 0.7014883513816168], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.19666941886587472`, 0.6053303861243302, 0.46765890092107787`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.29500412829881206`", ",", "0.9079955791864953`", ",", 
               "0.7014883513816168`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.29500412829881206`, 0.9079955791864953, 0.7014883513816168]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.29500412829881206`, 0.9079955791864953, 0.7014883513816168}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.295004, 0.907996, 0.701488}]\"\>", \
"\<\"RGBColor[{0.295004, 0.907996, 0.701488}]\"\>", "\<\"RGB color 0.295, \
0.908, 0.701\"\>", "\<\"Light Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.43979550971980985`, 0.3546381234991267, 0.012921790905866759`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.29319700647987323`, 0.2364254156660845, 0.00861452727057784],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.43979550971980985`", ",", "0.3546381234991267`", ",", 
               "0.012921790905866759`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.43979550971980985`, 0.3546381234991267, 0.012921790905866759`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.43979550971980985`, 0.3546381234991267, 
       0.012921790905866759`}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.439796, 0.354638, 0.0129218}]\"\>", \
"\<\"RGBColor[{0.439796, 0.354638, 0.0129218}]\"\>", "\<\"RGB color 0.44, \
0.355, 0.013\"\>", "\<\"Gray\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.10609572752463148`, 0.9630025658230474, 0.8666665284503903], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.07073048501642099, 0.6420017105486984, 0.5777776856335936],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.10609572752463148`", ",", "0.9630025658230474`", ",", 
               "0.8666665284503903`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.10609572752463148`, 0.9630025658230474, 0.8666665284503903]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.10609572752463148`, 0.9630025658230474, 0.8666665284503903}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.106096, 0.963003, 0.866667}]\"\>", \
"\<\"RGBColor[{0.106096, 0.963003, 0.866667}]\"\>", "\<\"RGB color 0.106, \
0.963, 0.867\"\>", "\<\"Cyan\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.8443134928309199, 0.9344760613670275, 0.11019104425074921`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.56287566188728, 0.6229840409113517, 0.07346069616716615],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.8443134928309199`", ",", "0.9344760613670275`", ",", 
               "0.11019104425074921`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.8443134928309199, 0.9344760613670275, 0.11019104425074921`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8443134928309199, 0.9344760613670275, 0.11019104425074921`}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.844313, 0.934476, 0.110191}]\"\>", \
"\<\"RGBColor[{0.844313, 0.934476, 0.110191}]\"\>", "\<\"RGB color 0.844, \
0.934, 0.11\"\>", "\<\"Yellow\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803644632020982*^9, 3.803644682610911*^9}, 
   3.803644761582692*^9, {3.8036959877513742`*^9, 3.803696003995997*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[435]=",ExpressionUUID->"71b46849-595b-4573-8192-37653aa9d414"]
}, Open  ]],

Cell["\<\
When compared with the built-in functions output, it can be said that the \
created function represents an improvement to describe colors. This part of \
the project was important to validate the path I was following by showing \
concrete results. Following, the version to return translated texts, and some \
examples.\
\>", "Text",
 CellChangeTimes->{{3.803695963046566*^9, 3.803695979658215*^9}, {
  3.803696023070527*^9, 3.803696213876272*^9}, {3.80369685391203*^9, 
  3.803696866836115*^9}},ExpressionUUID->"cd4f6302-78ab-4dc0-a9cf-\
8d54053a6a96"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TranslatedDescription", "[", 
    RowBox[{"color_RGBColor", ",", "language_String"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colors", "=", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Black\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Black\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Black\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0., 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Blue\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Blue\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Blue\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6470588235294118, 0.1647058823529412, 0.1647058823529412], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.43137254901960786`, 0.10980392156862748`, 
                 0.10980392156862748`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6470588235294118`", ",", "0.1647058823529412`", ",", 
                   "0.1647058823529412`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6470588235294118, 0.1647058823529412, 0.1647058823529412]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.6470588235294118, 0.1647058823529412, 0.1647058823529412],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Brown\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Brown\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Brown\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0., 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Cyan\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cyan\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cyan\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.5019607843137255, 0.5019607843137255, 0.5019607843137255], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.334640522875817, 0.334640522875817, 0.334640522875817],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5019607843137255`", ",", "0.5019607843137255`", ",", 
                   "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5019607843137255, 0.5019607843137255, 0.5019607843137255]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.5019607843137255, 0.5019607843137255, 0.5019607843137255],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Gray\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gray\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gray\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0., 0.5019607843137255, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0., 0.334640522875817, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.`", ",", "0.5019607843137255`", ",", "0.`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0., 0.5019607843137255, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0., 0.5019607843137255, 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Green\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Green\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Green\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.6784313725490198, 0.847058823529412, 0.901960784313726], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4522875816993465, 0.5647058823529414, 0.601307189542484],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.6784313725490198`", ",", "0.847058823529412`", ",", 
                   "0.901960784313726`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.6784313725490198, 0.847058823529412, 0.901960784313726]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.6784313725490198, 0.847058823529412, 0.901960784313726],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightBlue\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightBlue\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightBlue\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.87843137254902, 1., 1.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5856209150326801, 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.87843137254902`", ",", "1.`", ",", "1.`"}], "]"}],
                NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.87843137254902, 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.87843137254902, 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightCyan\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightCyan\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightCyan\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[
                 0.5647058823529411, 0.933333333333333, 0.5647058823529411], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.37647058823529406`, 0.622222222222222, 0.37647058823529406`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5647058823529411`", ",", "0.933333333333333`", ",", 
                   "0.5647058823529411`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[
                  0.5647058823529411, 0.933333333333333, 0.5647058823529411]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[
            0.5647058823529411, 0.933333333333333, 0.5647058823529411],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightGreen\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightGreen\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LightGreen\
\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.7137254901960784, 0.7568627450980392], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.4758169934640523, 0.5045751633986928],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "1.`", ",", "0.7137254901960784`", ",", 
                   "0.7568627450980392`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.7137254901960784, 0.7568627450980392]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.7137254901960784, 0.7568627450980392],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightPink\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightPink\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightPink\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 0.87843137254902], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.5856209150326801],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "0.87843137254902`"}], "]"}],
                NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 0.87843137254902]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 0.87843137254902],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"LightYellow\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LightYellow\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LightYellow\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0., 0.6666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Magenta\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Magenta\""}], 
               "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Magenta\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.6470588235294118, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.43137254901960786`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.6470588235294118`", ",", "0.`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.6470588235294118, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.6470588235294118, 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Orange\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Orange\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Orange\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.7529411764705882, 0.796078431372549], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.5019607843137255, 0.530718954248366],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "1.`", ",", "0.7529411764705882`", ",", 
                   "0.796078431372549`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.7529411764705882, 0.796078431372549]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.7529411764705882, 0.796078431372549],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Pink\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pink\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pink\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.5019607843137255, 0., 0.5019607843137255], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.334640522875817, 0., 0.334640522875817],
               
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 
                 RowBox[{
                  "0.5019607843137255`", ",", "0.`", ",", 
                   "0.5019607843137255`"}], "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.5019607843137255, 0., 0.5019607843137255]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.5019607843137255, 0., 0.5019607843137255],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Purple\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Purple\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Purple\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "0.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Red\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Red\""}], "]"}], 
             "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Red\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.6666666666666667],
               FrameTicks->None,
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "1.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 1.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 1.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"White\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"White\""}], "]"}],
              "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"White\\\"]\"", 
             "\"Wolfram Language symbol\""},
            "Entity"]}], ",", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.6666666666666667, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 1., 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 1., 0.],
            Editable->False,
            Selectable->False], "\[Rule]", 
           TemplateBox[{"\"Yellow\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Yellow\""}], 
               "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Yellow\\\"]\"", "\"Wolfram Language symbol\""},
            "Entity"]}]}], "\[RightAssociation]"}]}], ",", "similar", ",", 
       "entity", ",", "lang", ",", "translations"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"similar", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Nearest", "[", 
         RowBox[{
          RowBox[{"Keys", "@", "colors"}], ",", "color", ",", "1"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"entity", "=", 
       RowBox[{"colors", "@", "similar"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lang", "=", 
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<Language\>\"", ",", "language"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"translations", "=", 
       RowBox[{"Association", "[", 
        RowBox[{"entity", "@", "\"\<Translations\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TranslatedDescription", "[", 
        RowBox[{"color", ",", "language"}], "]"}], "=", 
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<FromCamelCase\>\"", "]"}], "@", 
        
        RowBox[{"translations", "@", "lang"}]}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorTranslationTests", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"#", ",", " ", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Description", "@", "#"}], ",", "#"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"TranslatedDescription", "[", 
           RowBox[{"#", ",", "\"\<Spanish\>\""}], "]"}], ",", "#"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"TranslatedDescription", "[", 
           RowBox[{"#", ",", "\"\<Portuguese\>\""}], "]"}], ",", "#"}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"TranslatedDescription", "[", 
           RowBox[{"#", ",", "\"\<Japanese\>\""}], "]"}], ",", "#"}], "]"}]}],
        "}"}], "&"}], "/@", 
     RowBox[{"RGBColor", "/@", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "3"}], "}"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"colorTranslationTests", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<RGB Color\>\"", ",", "\"\<English\>\"", ",", "\"\<Spanish\>\"", 
        ",", "\"\<Portuguese\>\"", ",", "\"\<Japanese\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8027410084113207`*^9, 3.802741011019272*^9}, {
   3.802741092078218*^9, 3.802741150280785*^9}, 3.802741188268867*^9, {
   3.802741227077732*^9, 3.8027412382258997`*^9}, {3.802741335480451*^9, 
   3.802741336847968*^9}, 3.802741380813092*^9, {3.802741440619529*^9, 
   3.802741441503727*^9}, {3.8027415776992073`*^9, 3.802741588790163*^9}, {
   3.802741628988495*^9, 3.802741647727867*^9}, {3.802741678648082*^9, 
   3.802741679318297*^9}, {3.8030616367618113`*^9, 3.803061747006654*^9}, {
   3.803061783683035*^9, 3.8030618146408863`*^9}, {3.8030650611218557`*^9, 
   3.803065072486032*^9}, {3.803065387748026*^9, 3.803065413593788*^9}, {
   3.8030706627357388`*^9, 3.8030708604759293`*^9}, {3.803071052467836*^9, 
   3.8030710615192623`*^9}, {3.8030725868957157`*^9, 3.803072587588675*^9}, {
   3.8032107236472273`*^9, 3.803210725094193*^9}, 3.803691701836111*^9, 
   3.803691738825247*^9, 3.80369425938328*^9, 3.803695940388186*^9, {
   3.803696332490059*^9, 3.803696609902891*^9}, {3.8037210581042337`*^9, 
   3.8037210606702538`*^9}},ExpressionUUID->"d0975e14-1da4-4a3e-8ead-\
cc0c0a60f402"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"RGB Color\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"English\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Spanish\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Portuguese\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Japanese\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.5315508423688435, 0.8963071160423999, 0.08447860222293757], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.3543672282458957, 0.5975380773615999, 0.05631906814862505],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.5315508423688435`", ",", "0.8963071160423999`", ",", 
               "0.08447860222293757`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.5315508423688435, 0.8963071160423999, 0.08447860222293757]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.5315508423688435, 0.8963071160423999, 0.08447860222293757}],
      
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Light Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]], 
     StyleBox["\<\"\:8584\:7dd1\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.8562436874347557, 0.893878676250859, 0.9084928333204632], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5708291249565038, 0.5959191175005727, 0.6056618888803088],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.8562436874347557`", ",", "0.893878676250859`", ",", 
               "0.9084928333204632`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.8562436874347557, 0.893878676250859, 0.9084928333204632]
            ; FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8562436874347557, 0.893878676250859, 0.9084928333204632}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"White\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]], 
     StyleBox["\<\"blanco\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]], 
     StyleBox["\<\"branco\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]], 
     StyleBox["\<\"\:767d\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.078990535524045, 0.2047584826132307, 0.9728208319859564], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.05266035701603, 0.13650565507548715`, 0.6485472213239709],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.078990535524045`", ",", "0.2047584826132307`", ",", 
               "0.9728208319859564`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.078990535524045, 0.2047584826132307, 0.9728208319859564]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.078990535524045, 0.2047584826132307, 0.9728208319859564}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Blue\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]], 
     StyleBox["\<\"\:9752\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.13184733619671873`, 0.3559323783015158, 0.9632163441824413], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.08789822413114583, 0.23728825220101055`, 0.6421442294549609],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.13184733619671873`", ",", "0.3559323783015158`", ",", 
               "0.9632163441824413`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.13184733619671873`, 0.3559323783015158, 0.9632163441824413}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Blue\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]], 
     StyleBox["\<\"\:9752\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.32261583418055184`, 0.6428518478739196, 0.2411705809881679], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.21507722278703456`, 0.42856789858261307`, 0.16078038732544528`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.32261583418055184`", ",", "0.6428518478739196`", ",", 
               "0.2411705809881679`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.32261583418055184`, 0.6428518478739196, 0.2411705809881679}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]], 
     StyleBox["\<\"\:7dd1\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.903279482578941, 0.29128764519587347`, 0.9627255998789606], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.602186321719294, 0.19419176346391565`, 0.6418170665859737],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.903279482578941`", ",", "0.29128764519587347`", ",", 
               "0.9627255998789606`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.903279482578941, 0.29128764519587347`, 0.9627255998789606]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.903279482578941, 0.29128764519587347`, 0.9627255998789606}],
      
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Magenta\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]], 
     StyleBox["\<\"magenta\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]], 
     StyleBox["\<\"magenta\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]], 
     StyleBox["\<\"\:30de\:30b8\:30a7\:30f3\:30bf\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.22501472267246497`, 0.09789293841154316, 0.14606113596713888`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.33752208400869743`", ",", "0.14683940761731473`", ",",
                "0.21909170395070832`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.33752208400869743`, 0.14683940761731473`, 
       0.21909170395070832`}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Black\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]], 
     StyleBox["\<\"negro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]], 
     StyleBox["\<\"preto\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]], 
     StyleBox["\<\"\:9ed2\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.4460312710483445, 0.6652266938300524, 0.7588244456181577], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.29735418069889635`, 0.44348446255336826`, 0.5058829637454385],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.4460312710483445`", ",", "0.6652266938300524`", ",", 
               "0.7588244456181577`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.4460312710483445, 0.6652266938300524, 0.7588244456181577]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.4460312710483445, 0.6652266938300524, 0.7588244456181577}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Light Blue\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]], 
     StyleBox["\<\"azul claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]], 
     StyleBox["\<\"azul claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]], 
     StyleBox["\<\"\:6c34\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.07239368375320673, 0.2816745738915191, 0.13945996020686055`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.10859052562981009`", ",", "0.42251186083727865`", ",",
                "0.2091899403102908`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.10859052562981009`, 0.42251186083727865`, 
       0.2091899403102908}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]], 
     StyleBox["\<\"\:7dd1\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.22433340366812882`, 0.9301433802623331, 0.6934793545924998], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.1495556024454192, 0.6200955868415554, 0.4623195697283332],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.22433340366812882`", ",", "0.9301433802623331`", ",", 
               "0.6934793545924998`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.22433340366812882`, 0.9301433802623331, 0.6934793545924998}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Light Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]], 
     StyleBox["\<\"\:8584\:7dd1\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803696480390135*^9, 3.803696500104021*^9}, 
   3.803696622406044*^9},
 TextAlignment->Center,
 CellLabel->
  "Out[444]=",ExpressionUUID->"e6e0a78b-f44a-4458-bc74-0fef54a17000"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing graphics", "Subsection",
 CellChangeTimes->{{3.803686412462811*^9, 
  3.8036864234970617`*^9}},ExpressionUUID->"1b166286-4832-45dc-a747-\
e0ce41ad66f7"],

Cell[TextData[{
 "The ",
 StyleBox["Graphics", "CodeText",
  FontWeight->"Bold"],
 " symbol in the Wolfram Language is a very flexible function, allowing \
dozens of configurations. It can be composed of primitives, directives, \
wrappers, options and method. For my project I decided to start with the \
primitives. This way, the first step of this sections was, as in the color \
description initial approach, to get every Wolfram Language symbol that are \
graphics primitives. The filter also is made with the ",
 Cell[BoxData[
  TemplateBox[{"\"functionality areas\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}], 
      "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
   "EntityProperty"]],
  CellChangeTimes->{{3.80369227927346*^9, 3.803692387324726*^9}, {
   3.803692472983283*^9, 3.80369248576744*^9}, {3.803694045475751*^9, 
   3.8036940703311443`*^9}},ExpressionUUID->
  "1f2f54f5-37b7-42a0-b614-ecfe284b3b28"],
 " property, but now for the values equal to ",
 StyleBox["GraphicsPrimitiveSymbols", "CodeText",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.803697199360012*^9, 3.803697421733403*^9}, {
  3.8036974711776743`*^9, 3.8036974728941*^9}, {3.8036975747805767`*^9, 
  3.803697586305819*^9}, {3.803697773549633*^9, 3.803697779760118*^9}, {
  3.803697982695718*^9, 3.803698104122094*^9}, {3.803721108027644*^9, 
  3.803721108275462*^9}},ExpressionUUID->"871d5b4a-67b4-44d6-855b-\
f9ed137c2746"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Filtering", " ", "every", " ", "garphics", " ", "primitives", " ", 
    "among", " ", "the", " ", "Wolfram", " ", "Language", " ", "symbols"}], 
   ",", " ", 
   RowBox[{
   "based", " ", "on", " ", "the", " ", "`functionality", " ", "areas`", " ", 
    
    RowBox[{"property", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.803698138379345*^9, 
  3.8036981432590237`*^9}},ExpressionUUID->"2fc82c61-80b4-4c2e-862d-\
590f1ba12d4d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graphicsPrimitiveSymbols", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"functionalityAreasOfAllWLSymbols", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{
         RowBox[{"Last", "@", "#"}], ",", 
         "\"\<GraphicsPrimitiveSymbols\>\""}], "]"}], ">", "0"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"graphicsSymbols", "=", 
  RowBox[{"graphicsPrimitiveSymbols", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{"graphicsSymbols", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.803697859026511*^9, 3.803697873070383*^9}},
 CellLabel->
  "In[450]:=",ExpressionUUID->"21e37312-dc19-4292-a8ac-41cebdb2cc0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"AASTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AASTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AASTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ASATriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ASATriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ASATriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AffineHalfSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AffineHalfSpace\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AffineHalfSpace\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AffineSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AffineSpace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AffineSpace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Annulus\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Annulus\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Annulus\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Arrow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Arrow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Arrow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BSplineCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BSplineCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BSplineCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ball\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ball\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Ball\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BezierCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BezierCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BezierCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CapsuleShape\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CapsuleShape\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CapsuleShape\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Circle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Circle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Circle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Circumsphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Circumsphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Circumsphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cone\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cone\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cone\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConicHullRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConicHullRegion\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ConicHullRegion\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cube\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cube\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cube\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cuboid\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cuboid\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cuboid\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cylinder\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Cylinder\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Cylinder\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiskSegment\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DiskSegment\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DiskSegment\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dodecahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Dodecahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Dodecahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ellipsoid\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ellipsoid\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Ellipsoid\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EmptyRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EmptyRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EmptyRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FilledCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FilledCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FilledCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FullRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FullRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FullRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GraphicsComplex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GraphicsComplex\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GraphicsComplex\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfLine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfLine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfLine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfPlane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfPlane\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfPlane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HalfSpace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HalfSpace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HalfSpace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hexahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hexahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hexahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hyperplane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hyperplane\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hyperplane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Icosahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Icosahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Icosahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InfiniteLine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InfiniteLine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"InfiniteLine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InfinitePlane\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InfinitePlane\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"InfinitePlane\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Insphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Insphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Insphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JoinedCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JoinedCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JoinedCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Octahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Octahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Octahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Parallelepiped\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Parallelepiped\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Parallelepiped\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Parallelogram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Parallelogram\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Parallelogram\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Polyhedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Polyhedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Polyhedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Prism\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Prism\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Prism\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rectangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Rectangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Rectangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RegularPolygon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RegularPolygon\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RegularPolygon\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SASTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SASTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SASTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SSSTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SSSTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SSSTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShellRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShellRegion\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ShellRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Simplex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Simplex\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Simplex\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sphere\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Sphere\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Sphere\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SphericalShell\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SphericalShell\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SphericalShell\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StadiumShape\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StadiumShape\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StadiumShape\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tetrahedron\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tetrahedron\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tetrahedron\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Triangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Triangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Triangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tube\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tube\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tube\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.803697860092739*^9, 3.803697873435755*^9}},
 CellLabel->
  "Out[451]=",ExpressionUUID->"5e75cec4-12a0-43d0-b89b-b684aa887113"],

Cell[BoxData["51"], "Output",
 CellChangeTimes->{{3.803697860092739*^9, 3.803697873473235*^9}},
 CellLabel->
  "Out[452]=",ExpressionUUID->"6089720e-1031-425e-b022-8e5268c1e542"]
}, Open  ]],

Cell[TextData[{
 "This, beyond allowing me to create the related ",
 StyleBox["Description", "CodeText",
  FontWeight->"Bold"],
 " and ",
 StyleBox["TranslatedDescription", "CodeText",
  FontWeight->"Bold"],
 " functions specifically for the graphics primitives symbols (they were \
created right after that), also allowed me to have a better notion of the \
project\[CloseCurlyQuote]s scope. After that I also created the ",
 StyleBox["GraphicsPrimtiveQ", "CodeText",
  FontWeight->"Bold"],
 " function to identify if a given string, symbol or expression represents a \
graphics primitive or not."
}], "Text",
 CellChangeTimes->{{3.8036981723269043`*^9, 3.8036984483398457`*^9}, 
   3.80369855552988*^9},ExpressionUUID->"67ebe5e7-e7c7-4666-9cb5-\
08ace919ff23"],

Cell[TextData[{
 "Here, the ",
 Cell[BoxData[
  TemplateBox[{"\"documentation basic examples\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{
       "\"WolframLanguageSymbol\"", ",", "\"DocumentationBasicExamples\""}], 
      "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
   "EntityProperty"]],ExpressionUUID->
  "ac787db1-7d96-4e87-a83c-8a95add2c863"],
 "  property was very useful. This property contains lots of ready examples \
to each symbol. The examples for the graphics primitives symbols was used for \
tests during the development. Without that I would have to create much more \
extra code for the tests."
}], "Text",
 CellChangeTimes->{{3.80369865500459*^9, 3.803698899405444*^9}, {
   3.803698942446718*^9, 3.803699006081599*^9}, 
   3.803721264911314*^9},ExpressionUUID->"630f83d3-66d0-450d-9575-\
8da71a44c044"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Getting", " ", "an", " ", "example", " ", "of", " ", "use", " ", "for", 
    " ", "the", " ", "Rectangle", " ", 
    RowBox[{"symbol", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{
     TemplateBox[{"\"Rectangle\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Rectangle\""}], "]"}], 
       "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Rectangle\\\"]\"", 
       "\"Wolfram Language symbol\""},
      "Entity"], ",", 
     TemplateBox[{"\"documentation basic examples\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{
          "\"WolframLanguageSymbol\"", ",", 
           "\"DocumentationBasicExamples\""}], "]"}], 
       "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
      "EntityProperty"]}], "]"}], "\[LeftDoubleBracket]", "4", 
   "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.803123725719708*^9, 3.80312376156106*^9}, 
   3.803124348536895*^9, 3.8031252186337967`*^9, 3.80321225621478*^9, 
   3.803212690395351*^9, {3.803297408411323*^9, 3.803297426158146*^9}, {
   3.803297457473114*^9, 3.8032974704284573`*^9}, {3.803297505185206*^9, 
   3.803297529655012*^9}, 3.803297590903604*^9, {3.8036990623801394`*^9, 
   3.803699083997912*^9}, {3.8036991475390673`*^9, 3.8036991936793013`*^9}, 
   3.803721272286148*^9},ExpressionUUID->"96caaa27-1bc9-4b6d-86de-\
9505ea194124"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  Cell["Differently styled rectangles:", "ExampleText",ExpressionUUID->
    "8a8ac875-e684-4836-b501-edecc914134d"], ",", Cell[BoxData[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Pink", ",", 
         RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Pink", ",", 
         RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EdgeForm", "[", "Dashed", "]"}], ",", "Pink", ",", 
         RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EdgeForm", "[", 
          RowBox[{"Directive", "[", 
           RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "]"}], "]"}], ",", 
         "Pink", ",", 
         RowBox[{"Rectangle", "[", "]"}]}], "}"}], "]"}]}], "}"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "b668eaa6-6862-46d7-a90e-7a4194fe6357"], ",", Cell[BoxData[
    RowBox[{"{", 
     RowBox[{
      GraphicsBox[
       {RGBColor[1, 0.5, 0.5], RectangleBox[{0, 0}]},
       ImageSize->{50.4140625, Automatic}], ",", 
      GraphicsBox[
       {RGBColor[1, 0.5, 0.5], EdgeForm[Thickness[Large]], 
        RectangleBox[{0, 0}]},
       ImageSize->{49.61328125, Automatic}], ",", 
      GraphicsBox[
       {RGBColor[1, 0.5, 0.5], EdgeForm[Dashing[{Small, Small}]], 
        RectangleBox[{0, 0}]},
       ImageSize->{50.10546875, Automatic}], ",", 
      GraphicsBox[
       {RGBColor[1, 0.5, 0.5], EdgeForm[{RGBColor[0, 0, 1], Thickness[Large], 
        Dashing[{Small, Small}]}], RectangleBox[{0, 0}]},
       ImageSize->{49.90234375, Automatic}]}], "}"}]], "Output",
    ShowStringCharacters->True,ExpressionUUID->
    "13129907-3e40-43ea-8e24-f986eead9a16"]}], "}"}]], "Output",
 CellChangeTimes->{{3.803699063337164*^9, 3.8036990844427137`*^9}, 
   3.803699197093114*^9},
 CellLabel->
  "Out[457]=",ExpressionUUID->"6a0eb2a5-97d6-4579-b70a-1205875b8b68"]
}, Open  ]],

Cell[TextData[{
 "The next step was to create a function to finally describe a ",
 StyleBox["Graphics", "CodeText",
  FontWeight->"Bold"],
 " expression. So, I did it. The created function is capable of describing a ",
 StyleBox["Graphics", "CodeText",
  FontWeight->"Bold"],
 " expression in terms of graphics primitives symbols and colors."
}], "Text",
 CellChangeTimes->{{3.80369924807288*^9, 
  3.80369936597689*^9}},ExpressionUUID->"89369d4f-6542-42c7-976a-\
d710f55cd897"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Description", "[", "graphics_Graphics", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "elements", ",", "primitives", ",", "sorted", ",", "descriptions"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"elements", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"List", "@@", "graphics"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"primitives", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"elements", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ColorQ", "@", "#"}], "||", 
           RowBox[{"GraphicsPrimitiveQ", "@", "#"}]}], ")"}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sorted", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ColorQ", "@", "#1"}], "&"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{"primitives", ",", "2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"descriptions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ToLowerCase", "[", 
         RowBox[{"Description", "[", "#", "]"}], "]"}], "&"}], "/@", 
       "sorted"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\"\<A graphic consisting of \>\"", "<>", 
      RowBox[{"ToString", "@", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"#", ",", "\"\< \>\""}], "]"}], "&"}], "/@", 
          "descriptions"}], ",", " ", "\"\<, \>\""}], "]"}]}], "<>", 
      "\"\<.\>\""}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.803644082410158*^9, 3.80364412786762*^9}, {
  3.803644162547771*^9, 3.803644162936081*^9}},
 CellLabel->
  "In[537]:=",ExpressionUUID->"f6e98846-991e-43cc-a3b7-125d4c9c6b6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"someGraphics", "=", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]}], ",", 
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Thickness[Large]], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]}], ",", 
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}, {{1, 1}}],
        AffineHalfSpace[{0, 0}, {{1, -1}}, {1, 1}]]}], ",", 
     GraphicsBox[
      {RGBColor[0, 1, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}],
        AffineSpace[{0, 0}, {{1, -1}}]]}], ",", 
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       InterpretationBox[
        FilledCurveBox[
         NCache[{{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {0, Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[-1, 2]}, {0, Rational[-1, 2]}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}, {{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, -0.5}, {0.5, -0.5}, {0.5, 0.5}, {0, 0.5}, {-0.5, 
              0.5}, {-0.5, -0.5}, {0, -0.5}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}]],
        Annulus[{0, 0}, {
          Rational[1, 2], 1}]]}], ",", 
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       {Arrowheads[Large], ArrowBox[{{0, 0}, {1, 0.5}}]}}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputForm", "/@", "someGraphics"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"ToString", "@", "#"}], ",", 
         RowBox[{"TextString", "@", "#"}], ",", 
         RowBox[{"SpokenString", "@", "#"}], ",", 
         RowBox[{"Description", "@", "#"}]}], "}"}], "&"}], "/@", 
      "someGraphics"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graphics\>\"", ",", "\"\<ToString\>\"", ",", "\"\<TextString\>\"",
         ",", "\"\<SpokenString\>\"", ",", "\"\<Description\>\""}], "}"}]}]}],
     "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803699562162758*^9, 3.803699694157588*^9}, {
   3.803699734546876*^9, 3.803699835895643*^9}, {3.803699887798234*^9, 
   3.803699908898597*^9}, {3.803701307556046*^9, 3.8037013310858097`*^9}, {
   3.803701369083921*^9, 3.803701426158476*^9}, 3.803701576372814*^9, {
   3.803701832545548*^9, 3.803701838045909*^9}, {3.803701880229534*^9, 
   3.803701890111125*^9}, {3.803702054514176*^9, 3.803702123240777*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"e9456c88-46b3-449a-a373-85cefe10f05d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
        RowBox[{"Triangle", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "0"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"3", "/", "2"}], ",", " ", 
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}]}], "}"}], 
         "]"}]}], "}"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[
     Graphics[{
       RGBColor[1, 0.5, 0.5], 
       Triangle[{{0, 0}, {2, 0}, {
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}]}]],
    AutoDelete->True,
    Editable->True], ",", 
   InterpretationBox[
    StyleBox[
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
        RowBox[{"EdgeForm", "[", 
         RowBox[{"Thickness", "[", "Large", "]"}], "]"}], ",", " ", 
        RowBox[{"Triangle", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"3", "/", "4"}], ",", " ", 
             RowBox[{
              RowBox[{"Sqrt", "[", "3", "]"}], "/", "4"}]}], "}"}]}], "}"}], 
         "]"}]}], "}"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[
     Graphics[{
       RGBColor[1, 0.5, 0.5], 
       EdgeForm[
        Thickness[Large]], 
       Triangle[{{0, 0}, {1, 0}, {
          Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}]}]],
    AutoDelete->True,
    Editable->True], ",", 
   InterpretationBox[
    StyleBox[
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
        RowBox[{"AffineHalfSpace", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", 
             RowBox[{"-", "1"}]}], "}"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "1"}], "}"}]}], "]"}]}], "}"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[
     Graphics[{
       RGBColor[1, 0, 0], 
       AffineHalfSpace[{0, 0}, {{1, -1}}, {1, 1}]}]],
    AutoDelete->True,
    Editable->True], ",", 
   InterpretationBox[
    StyleBox[
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}], ",", " ", 
        RowBox[{"AffineSpace", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", 
             RowBox[{"-", "1"}]}], "}"}], "}"}]}], "]"}]}], "}"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[
     Graphics[{
       RGBColor[0, 1, 0], 
       AffineSpace[{0, 0}, {{1, -1}}]}]],
    AutoDelete->True,
    Editable->True], ",", 
   InterpretationBox[
    StyleBox[
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
        RowBox[{"Annulus", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", " ", "1"}], "}"}]}], "]"}]}], "}"}],
       "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[
     Graphics[{
       RGBColor[1, 0.5, 0.5], 
       Annulus[{0, 0}, {
         Rational[1, 2], 1}]}]],
    AutoDelete->True,
    Editable->True], ",", 
   InterpretationBox[
    StyleBox[
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Arrowheads", "[", "Large", "]"}], ",", " ", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0.5"}], "}"}]}], "}"}], "]"}]}], 
         "}"}]}], "}"}], "]"}],
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[
     Graphics[{
       RGBColor[1, 0, 0], {
        Arrowheads[Large], 
        Arrow[{{0, 0}, {1, 0.5}}]}}]],
    AutoDelete->True,
    Editable->True]}], "}"}]], "Output",
 CellChangeTimes->{
  3.80370189202151*^9, {3.803702119076523*^9, 3.803702123702701*^9}},
 CellLabel->
  "Out[554]=",ExpressionUUID->"6a3b17f4-9230-408b-8a4c-92edcc785fe4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Description\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]},
      ImageSize->{
       90.56640625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0.5, 0.5 and Triangle of the list \
the list 0, 0, the list 2, 0, the list 3 halves, 1 half times square root of \
3\"\>", "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Thickness[Large]], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]},
      ImageSize->{
       90.44140625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0.5, 0.5, edge form thickness Large \
and Triangle of the list the list 0, 0, the list 1, 0, the list 3 fourths, 1 \
fourth times square root of 3\"\>", "\<\"A graphic consisting of light pink \
triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}, {{1, 1}}],
        AffineHalfSpace[{0, 0}, {{1, -1}}, {1, 1}]]},
      ImageSize->{
       90.3984375, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0, 0 and AffineHalfSpace of the list \
0, 0, the list the list 1, minus 1 and the list 1, 1\"\>", "\<\"A graphic \
consisting of red affine half space.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0, 1, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}],
        AffineSpace[{0, 0}, {{1, -1}}]]},
      ImageSize->{
       90.1484375, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 0, 1, 0 and AffineSpace of the list 0, \
0 and the list the list 1, minus 1\"\>", "\<\"A graphic consisting of light \
green affine space.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       InterpretationBox[
        FilledCurveBox[
         NCache[{{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {0, Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[-1, 2]}, {0, Rational[-1, 2]}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}, {{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, -0.5}, {0.5, -0.5}, {0.5, 0.5}, {0, 0.5}, {-0.5, 
              0.5}, {-0.5, -0.5}, {0, -0.5}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}]],
        Annulus[{0, 0}, {
          Rational[1, 2], 1}]]},
      ImageSize->{
       90.12890625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0.5, 0.5 and Annulus of the list 0, \
0 and the list 1 half, 1\"\>", "\<\"A graphic consisting of light pink \
annulus.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       {Arrowheads[Large], ArrowBox[{{0, 0}, {1, 0.5}}]}},
      ImageSize->{
       89.7265625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of an arrow\"\>", "\<\"A graphic consisting of red \
arrow.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.80370189202151*^9, {3.803702119076523*^9, 3.8037021237594557`*^9}},
 CellLabel->
  "Out[555]=",ExpressionUUID->"98de646e-75b0-4925-a800-b9014609e725"]
}, Open  ]],

Cell[TextData[{
 "Despite its limitation, the ",
 StyleBox["Description", "CodeText",
  FontWeight->"Bold"],
 " function for ",
 StyleBox["Graphics", "CodeText",
  FontWeight->"Bold"],
 " also presents an improvement for the generated text. From this point, the \
next steps were to continue improving the description functions to add more \
characteristics of the expressions. Because of the great amount of \
primitives, the focus was given to a single one - the triangle. This way, the \
next improvements of the project were related to describing these polygons in \
more details. "
}], "Text",
 CellChangeTimes->{{3.803702176672666*^9, 3.803702225547412*^9}, {
   3.8037025115673103`*^9, 3.803702669741441*^9}, 3.803703012404129*^9, {
   3.803721368059454*^9, 
   3.803721368154628*^9}},ExpressionUUID->"c85a9a2c-57e9-44a0-9fdf-\
f0eb60b8c9f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with triangles", "Subsection",
 CellChangeTimes->{{3.803686443335134*^9, 
  3.803686454433229*^9}},ExpressionUUID->"d0c74ab1-69e8-488d-82e4-\
b48d68439416"],

Cell["\<\
The initial goal was to identify and say the type of triangle that is being \
displayed (right, equilateral, isosceles, scalene and obtuse). To achieve \
that, initially I created some auxiliary functions:\
\>", "Text",
 CellChangeTimes->{{3.803703390605323*^9, 3.803703586250923*^9}, {
  3.803703929031918*^9, 
  3.803703930087001*^9}},ExpressionUUID->"8bf57ff4-e984-47d5-a633-\
cabbafffeca1"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["TrianglePointsQ", "CodeText",
  FontWeight->"Bold"],
 " : receives a list of points of the same dimension and returns if it forms \
a triangle or not."
}], "Item",
 CellChangeTimes->{{3.803703597602974*^9, 
  3.803703630718319*^9}},ExpressionUUID->"98cdfe30-e702-4407-b339-\
19addfe70599"],

Cell[TextData[{
 StyleBox["TrianglePolygonQ", "CodeText",
  FontWeight->"Bold"],
 ": receives a triangle Polygon expression and returns if it is a triangle or \
not."
}], "Item",
 CellChangeTimes->{{3.803703597602974*^9, 
  3.8037036642717247`*^9}},ExpressionUUID->"43a26a81-334c-4a1c-9035-\
bebe04d4c2c6"],

Cell[TextData[{
 StyleBox["TriangleQ", "CodeText",
  FontWeight->"Bold"],
 ": is a generalization of the two previous ones. It can receive both a list \
of points of the same dimension or a polygon, and return if they are a \
triangle or not."
}], "Item",
 CellChangeTimes->{{3.803703597602974*^9, 3.803703724813692*^9}, 
   3.803721413619666*^9},ExpressionUUID->"d430d22d-9534-46d4-916c-\
ab6185cf1a01"]
}, Open  ]],

Cell[TextData[{
 "Later on, I created a TriangleTypeQ function for each triangle type. All of \
them receives a triangle polygon and returns if it is of the given type or \
not. The name of the created functions are: ",
 StyleBox["TriangleRightQ", "CodeText",
  FontWeight->"Bold"],
 ", ",
 StyleBox["TriangleEquilateralQ", "CodeText",
  FontWeight->"Bold"],
 ", ",
 StyleBox["TriangleIsoscelesQ", "CodeText",
  FontWeight->"Bold"],
 ", ",
 StyleBox["TriangleScaleneQ", "CodeText",
  FontWeight->"Bold"],
 " and ",
 StyleBox["TriangleObtuseQ", "CodeText",
  FontWeight->"Bold"],
 ". Following, some usage examples:"
}], "Text",
 CellChangeTimes->{{3.803704049900242*^9, 3.8037041581828823`*^9}, {
  3.803704222998043*^9, 
  3.803704247777932*^9}},ExpressionUUID->"8ad7fb7b-95f9-438d-aaaf-\
7ebd55c24e85"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"triangles", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Triangle", "[", "]"}], ",", 
      RowBox[{"AASTriangle", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "6"}], ",", 
        RowBox[{"Pi", "/", "3"}], ",", "1"}], "]"}], ",", 
      RowBox[{"SSSTriangle", "[", 
       RowBox[{"3", ",", "4", ",", "5"}], "]"}], ",", 
      RowBox[{"SASTriangle", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Pi", "/", "2"}], ",", "2"}], "]"}], ",", 
      RowBox[{"ASATriangle", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "6"}], ",", "1", ",", 
        RowBox[{"Pi", "/", "3"}]}], "]"}], ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "20"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"RandomPolygon", "@", "3"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"triangleQs", "=", 
    RowBox[{"{", 
     RowBox[{
     "TrianglePolygonQ", ",", "TriangleRightQ", ",", "TriangleEquilateralQ", 
      ",", "TriangleIsoscelesQ", ",", "TriangleScaleneQ", ",", 
      "TriangleObtuseQ"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"triangleTests", "=", 
    RowBox[{
     RowBox[{"Function", "[", "\[IndentingNewLine]", 
      RowBox[{"triangle", ",", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics", "@", "triangle"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"#", "/", "Degree"}], "]"}], "&"}], "/@", 
              RowBox[{"PolygonAngle", "[", "triangle", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"N", "@*", "EuclideanDistance"}], "@@", "#"}], "&"}], 
              "/@", 
              RowBox[{"Subsets", "[", 
               RowBox[{
                RowBox[{"First", "[", 
                 RowBox[{"List", "@@", "triangle"}], "]"}], ",", 
                RowBox[{"{", "2", "}"}]}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"With", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"answer", "=", 
                 RowBox[{"#", "[", "triangle", "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"TextString", "[", 
                  RowBox[{"answer", ",", 
                   RowBox[{"BooleanStrings", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Yes\>\"", ",", "\"\<No\>\""}], " ", 
                    "}"}]}]}], "]"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{"answer", ",", "Blue", ",", "Red"}], "]"}]}], 
                "]"}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
            "triangleQs"}]}], "}"}], ",", "\[IndentingNewLine]", "1"}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "/@", 
     "triangles"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"triangleTests", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graphics\>\"", ",", "\"\<Interior angles\>\"", ",", 
        "\"\<Side lengths\>\"", ",", " ", "\"\<Triangle?\>\"", ",", " ", 
        "\"\<Right?\>\"", ",", " ", "\"\<Equilateral?\>\"", ",", 
        "\"\<Isosceles?\>\"", ",", "\"\<Scalene?\>\"", ",", 
        "\"\<Obtuse?\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8033031843261766`*^9, 3.803303195964562*^9}, {
   3.8033033222480087`*^9, 3.803303406201956*^9}, {3.803303649195582*^9, 
   3.803303687385906*^9}, {3.8033037196839113`*^9, 3.803303855470484*^9}, {
   3.8033040186469812`*^9, 3.803304020770604*^9}, {3.803304078607716*^9, 
   3.803304155348802*^9}, {3.803304332494733*^9, 3.8033043803493757`*^9}, {
   3.803304456417631*^9, 3.803304502104887*^9}, {3.8033045399675217`*^9, 
   3.803304546199272*^9}, {3.803304578588788*^9, 3.803304580132443*^9}, {
   3.8033046167600594`*^9, 3.803304672494276*^9}, {3.803304782147171*^9, 
   3.8033049761217833`*^9}, {3.803305104852265*^9, 3.8033051697191067`*^9}, {
   3.803305219358206*^9, 3.803305243329076*^9}, {3.8033052768013973`*^9, 
   3.803305279481616*^9}, {3.803305324513562*^9, 3.8033054925987797`*^9}, {
   3.8033055251236553`*^9, 3.803305526297183*^9}, {3.8033072361900253`*^9, 
   3.8033072647707253`*^9}, {3.803307302093609*^9, 3.8033073043439417`*^9}, 
   3.803307339986188*^9, {3.803307455968318*^9, 3.803307459373412*^9}, {
   3.803307549693421*^9, 3.803307552582533*^9}, {3.8033076185433617`*^9, 
   3.8033076213538322`*^9}, {3.803704440514934*^9, 3.803704506698791*^9}, {
   3.803704802881625*^9, 3.803704831083559*^9}, {3.803704862289534*^9, 
   3.803704864504808*^9}, {3.803721486937295*^9, 
   3.803721493631461*^9}},ExpressionUUID->"026ea2e8-8d98-4c36-b883-\
f1a6526b87a7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Interior angles\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Side lengths\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Triangle?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Right?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Equilateral?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Isosceles?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Scalene?\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Obtuse?\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      TagBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}}],
       "Triangle"],
      ImageSize->{50.2578125, Automatic}], 
     RowBox[{"{", 
      RowBox[{"90.`", ",", "45.`", ",", "45.`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "1.`", ",", "1.4142135623730951`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {2, 0}, {
          Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
          0}, {1.5, 0.8660254037844386}}]],
       "Triangle"],
      ImageSize->{50.4453125, Automatic}], 
     RowBox[{"{", 
      RowBox[{"29.999999999999996`", ",", "59.99999999999999`", ",", "90.`"}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{"2.`", ",", "1.7320508075688772`", ",", "1.`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {5, 0}, {Rational[16, 5], Rational[12, 5]}}, {{0, 
          0}, {5, 0}, {3.2, 2.4}}]],
       "Triangle"],
      ImageSize->{50.1953125, Automatic}], 
     RowBox[{"{", 
      RowBox[{"36.86989764584401`", ",", "53.13010235415599`", ",", "90.`"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{"5.`", ",", "4.`", ",", "3.`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {5^Rational[1, 2], 0}, {
          4 5^Rational[-1, 2], 2 5^Rational[-1, 2]}}, {{0, 0}, {
          2.23606797749979, 0}, {1.7888543819998317`, 0.8944271909999159}}]],
       "Triangle"],
      ImageSize->{50.04296875, Automatic}], 
     RowBox[{"{", 
      RowBox[{"26.565051177077994`", ",", "63.43494882292201`", ",", "90.`"}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{"2.23606797749979`", ",", "2.`", ",", "1.`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]]},
    {
     GraphicsBox[
      TagBox[
       PolygonBox[
        NCache[{{0, 0}, {1, 0}, {
          Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
          0}, {0.75, 0.4330127018922193}}]],
       "Triangle"],
      ImageSize->{50.3984375, Automatic}], 
     RowBox[{"{", 
      RowBox[{"29.999999999999996`", ",", "59.99999999999999`", ",", "90.`"}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{"1.`", ",", "0.8660254037844386`", ",", "0.5`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]]},
    {
     GraphicsBox[
      PolygonBox[
       NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 0}, {
         0, 1.7320508075688772`}, {-1, 0}}]],
      ImageSize->{50.171875, Automatic}], 
     RowBox[{"{", 
      RowBox[{
      "59.99999999999999`", ",", "59.99999999999999`", ",", 
       "59.99999999999999`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2.`", ",", "2.`", ",", "2.`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]]},
    {
     GraphicsBox[PolygonBox[{{0, 0}, {10, 10}, {10, 20}}],
      ImageSize->{49.65068423202615, Automatic}], 
     RowBox[{"{", 
      RowBox[{
      "18.434948822922017`", ",", "135.`", ",", "26.565051177077994`"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
      "14.142135623730951`", ",", "22.360679774997898`", ",", "10.`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]},
    {
     GraphicsBox[
      PolygonBox[{{0.6459236020928605, 0.554354507253269}, {
       0.11665387389553983`, 0.5170807992678264}, {0.09334101256154081, 
       0.2157380237165567}}, {1, 2, 3}],
      ImageSize->{50.1015625, Automatic}], 
     RowBox[{"{", 
      RowBox[{
      "305.9232824225417`", ",", "261.5478308071366`", ",", 
       "332.5288867703216`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
      "0.53058060131619`", ",", "0.6480807366184459`", ",", 
       "0.302243209817063`"}], "}"}], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"No\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\<\"Yes\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8035602280676517`*^9, 3.803560467419273*^9, 3.8035617888330297`*^9, 
   3.80356226190351*^9, {3.8035623231007357`*^9, 3.803562351290145*^9}, 
   3.803602778853559*^9, 3.8036418215313187`*^9, 3.803642117576817*^9, 
   3.803703981613813*^9},
 TextAlignment->Center,
 CellLabel->
  "Out[560]=",ExpressionUUID->"7602e72d-5d39-430e-948d-d5428f56d03e"]
}, Open  ]],

Cell[TextData[{
 "With these functions I was already able to describe the triangles \
classification. To help me with this process, I created the ",
 StyleBox["TriangleCharacteristics", "CodeText",
  FontWeight->"Bold"],
 " function. This function receives a triangle polygon and returns a list of \
string with the name of each characteristic of the given triangle."
}], "Text",
 CellChangeTimes->{{3.803704547203977*^9, 3.803704733638447*^9}, 
   3.80372151722264*^9},ExpressionUUID->"ceaa3ac7-4d18-43e2-b8e7-\
469bfc88330f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TriangleCharacteristics", "[", "triangle_", "]"}], ":=", 
   RowBox[{
    RowBox[{"With", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rules", "=", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"TriangleRightQ", "\[Rule]", " ", "\"\<Right\>\""}], ",", 
          RowBox[{
          "TriangleEquilateralQ", "\[Rule]", " ", "\"\<Equilateral\>\""}], 
          ",", 
          RowBox[{"TriangleIsoscelesQ", "\[Rule]", " ", "\"\<Isosceles\>\""}],
           ",", 
          RowBox[{"TriangleScaleneQ", "\[Rule]", " ", "\"\<Scalene\>\""}], 
          ",", 
          RowBox[{"TriangleObtuseQ", "\[Rule]", " ", "\"\<Obtuse\>\""}]}], 
         "|>"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "@", "rules"}], ",", 
         RowBox[{
          RowBox[{"#", "@", "triangle"}], "&"}]}], "]"}], "/.", "rules"}]}], 
     "\[IndentingNewLine]", "]"}], "/;", 
    RowBox[{"TriangleQ", "@", "triangle"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TriangleCharacteristics", "/@", "triangles"}]}], "Input",
 CellChangeTimes->{{3.803386945473207*^9, 3.803386969037682*^9}, {
   3.803387033400853*^9, 3.803387100828545*^9}, {3.803387135883623*^9, 
   3.8033872998146276`*^9}, 3.803387361397603*^9, {3.803501928017981*^9, 
   3.803501990750227*^9}, {3.803502028281662*^9, 3.803502029350548*^9}, {
   3.803704783615224*^9, 3.8037047838917227`*^9}, 
   3.803721529749613*^9},ExpressionUUID->"3697dc5a-a8bf-4041-9ae4-\
ac6a053f6614"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Isosceles\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Right\"\>", ",", "\<\"Scalene\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Equilateral\"\>", ",", "\<\"Isosceles\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Scalene\"\>", ",", "\<\"Obtuse\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Scalene\"\>", ",", "\<\"Obtuse\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.803704911560864*^9},
 CellLabel->
  "Out[564]=",ExpressionUUID->"1e76e740-b79f-4ee9-9bec-f2364e90989d"]
}, Open  ]],

Cell["\<\
Now, I need to describe one more thing about triangles: the orientation of \
the greatest side (is it a vertical, horizontal or diagonal line?). For doing \
so, it was necessary to develop an algorithm composed of three steps: 1) find \
the coordinates of the greatest side of a triangle, 2) get the inclination of \
this line and 3) decide the orientation of this line. For the first step, I \
created the TriangleGreatestSide function. Bellow, its definition and some \
examples.\
\>", "Text",
 CellChangeTimes->{{3.803705242785727*^9, 3.803705511066823*^9}, {
   3.803705649726036*^9, 3.803705665732142*^9}, {3.803705745915753*^9, 
   3.803705761841888*^9}, 
   3.8037215746912327`*^9},ExpressionUUID->"02bac196-4f3d-4b19-9d5e-\
6c5df11d9ee4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TriangleGreatestSide", "[", "triangle_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "coordinates", ",", "sides", ",", "lengths", ",", 
        "greatestSideCoordinate"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"coordinates", "=", 
        RowBox[{"PolygonCoordinates", "@", "triangle"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sides", "=", 
        RowBox[{"Subsets", "[", 
         RowBox[{"coordinates", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"lengths", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"N", "@*", "EuclideanDistance"}], "@@", "#"}]}], "}"}], 
          "&"}], "/@", "sides"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"greatestSideCoordinate", "=", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"lengths", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Last", "@", "#1"}], ">", 
             RowBox[{"Last", "@", "#2"}]}], "&"}]}], "]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", "greatestSideCoordinate"}]}], 
     "\[IndentingNewLine]", "]"}], "/;", 
    RowBox[{"TrianglePolygonQ", "@", "triangle"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sideTests", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"side", "=", 
          RowBox[{"TriangleGreatestSide", "@", "#"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"side", ",", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Pink", ",", "#", ",", "Black", ",", "Thick", ",", 
              RowBox[{"Line", "@", "side"}]}], "}"}], ",", 
            RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "&"}], "/@", 
     RowBox[{"Polygon", "/@", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"10", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"sideTests", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Greatest side coordinates\>\"", ",", " ", 
        "\"\<Triangle plot with the greates side\>\""}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803516865873831*^9, 3.803517059722172*^9}, 
   3.803517142074423*^9, {3.8035171745581627`*^9, 3.80351727486038*^9}, {
   3.803517355691044*^9, 3.803517375530106*^9}, {3.803517452952804*^9, 
   3.803517593828306*^9}, {3.8035176929504147`*^9, 3.80351773056859*^9}, {
   3.803517800579816*^9, 3.803517812877452*^9}, {3.803517904884763*^9, 
   3.8035179501460323`*^9}, {3.803517992739291*^9, 3.803518021263606*^9}, {
   3.8035183782493973`*^9, 3.803518378848991*^9}, {3.803518514566259*^9, 
   3.80351851613239*^9}, {3.803518703096383*^9, 3.803518767256588*^9}, {
   3.8035206811344433`*^9, 3.803520684944766*^9}, {3.803520956655237*^9, 
   3.8035209639996157`*^9}, {3.8035807521182632`*^9, 3.803580752938377*^9}, {
   3.803596296222474*^9, 3.8035963046990547`*^9}, {3.803596427421998*^9, 
   3.803596464024602*^9}, {3.8037216212591133`*^9, 
   3.803721638918047*^9}},ExpressionUUID->"362f8c47-5c7a-4330-959f-\
0b1d615865c2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Greatest side coordinates\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Triangle plot with the greates side\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.9074938936742463`", ",", "7.262177369176353`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"9.754848947573812`", ",", "3.0032926559079947`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{9.754848947573812, 3.0032926559079947`}, {
         0.9074938936742463, 7.262177369176353}, {5.31988998962629, 
         4.867304529283254}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.9074938936742463, 7.262177369176353}, {9.754848947573812, 
         3.0032926559079947`}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.3105553191675074`", ",", "8.435682293900694`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"4.624575489078399`", ",", "3.4132704928930657`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{4.624575489078399, 3.4132704928930657`}, {
         6.73562430847015, 7.16566906768994}, {3.3105553191675074`, 
         8.435682293900694}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{3.3105553191675074`, 8.435682293900694}, {4.624575489078399,
          3.4132704928930657`}}]}},
      Axes->True,
      ImageSize->{89.73286767499516, Automatic}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0978021138291325`", ",", "7.922748962137909`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"7.113496936781662`", ",", "3.6779753594854228`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{1.0978021138291325`, 7.922748962137909}, {
         7.113496936781662, 3.6779753594854228`}, {2.7236970854364237`, 
         5.165914404411465}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{1.0978021138291325`, 7.922748962137909}, {7.113496936781662,
          3.6779753594854228`}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.223006120634217`", ",", "9.376099208579276`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.50698346870697`", ",", "7.994432164810309`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{2.9428996082425947`, 6.979244117869666}, {
         8.50698346870697, 7.994432164810309}, {2.223006120634217, 
         9.376099208579276}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{2.223006120634217, 9.376099208579276}, {8.50698346870697, 
         7.994432164810309}}]}},
      Axes->True]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.2942449970939567`", ",", "7.004791291401279`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"8.74152646379627`", ",", "7.4890346135738`"}], "}"}]}], 
      "}"}], 
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{8.74152646379627, 7.4890346135738}, {5.6137342626146065`,
          8.650589684888043}, {1.2942449970939567`, 7.004791291401279}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{1.2942449970939567`, 7.004791291401279}, {8.74152646379627, 
         7.4890346135738}}]}},
      Axes->True]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.803705837927362*^9, 3.803705898368946*^9, 
  3.803705928434066*^9},
 TextAlignment->Center,
 CellLabel->
  "Out[574]=",ExpressionUUID->"fa74f3ff-5a97-47bf-a8a2-31b9fc1d79ce"]
}, Open  ]],

Cell["\<\
To define the orientation of the greatest side I defined some angle regions \
for each possible orientation. For that, the trigonometric circle was divided \
in 32 small parts, with 4 of them to the horizontal orientation, other 4 to \
the vertical orientation and the rest to the diagonal orientation. Being \
this, any line that has the inclination that is inside of one of this regions \
is going to be considered in the respective orientation. The next figure \
illustrates each of these regions.\
\>", "Text",
 CellChangeTimes->{{3.803708306631434*^9, 3.8037083875949183`*^9}, {
  3.803708468107094*^9, 3.803708563063457*^9}, {3.80370863937307*^9, 
  3.803708706573691*^9}, {3.8037087684483347`*^9, 
  3.803708768974587*^9}},ExpressionUUID->"368bfb62-cea7-462f-bcdb-\
48431dc4b450"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Regions to define the orientation of the greatest side of \
a triangle.\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[{
       {RGBColor[0, 0, 1], DiskBox[{0, 0}, 1, {-0.19634954084936207`, 0.}]}, 
       {RGBColor[0, 0, 1], DiskBox[{0, 0}, 1, {0., 0.19634954084936207`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.19634954084936207`, 0.39269908169872414`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.39269908169872414`, 0.5890486225480862}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.5890486225480862, 0.7853981633974483}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.7853981633974483, 0.9817477042468103}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {0.9817477042468103, 1.1780972450961724`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {1.1780972450961724`, 1.3744467859455345`}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {1.3744467859455345`, 1.5707963267948966`}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {1.5707963267948966`, 1.7671458676442586`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {1.7671458676442586`, 1.9634954084936207`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {1.9634954084936205`, 2.1598449493429825`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.1598449493429825`, 2.356194490192345}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.356194490192345, 2.552544031041707}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.552544031041707, 2.748893571891069}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {2.7488935718910685`, 2.945243112740431}]}, 
       {RGBColor[0, 0, 1], 
        DiskBox[{0, 0}, 1, {2.945243112740431, 3.141592653589793}]}, 
       {RGBColor[0, 0, 1], 
        DiskBox[{0, 0}, 1, {3.141592653589793, 3.3379421944391554`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.3379421944391554`, 3.5342917352885173`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.534291735288517, 3.730641276137879}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.730641276137879, 3.9269908169872414`}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {3.9269908169872414`, 4.123340357836604}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {4.123340357836603, 4.319689898685965}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {4.319689898685965, 4.516039439535327}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {4.516039439535327, 4.71238898038469}]}, 
       {RGBColor[0.5, 0, 0.5], 
        DiskBox[{0, 0}, 1, {4.71238898038469, 4.908738521234052}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {4.908738521234052, 5.105088062083414}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.105088062083413, 5.301437602932776}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.301437602932776, 5.497787143782138}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.497787143782138, 5.6941366846315}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.694136684631499, 5.890486225480862}]}, 
       {RGBColor[1, 0.5, 0.5], 
        DiskBox[{0, 0}, 1, {5.890486225480862, 6.086835766330224}]}, 
       {RGBColor[0, 0, 1], 
        DiskBox[{0, 0}, 1, {6.086835766330224, 6.283185307179586}]}},
      ImageSize->{418.296875, Automatic}]},
    {
     StyleBox["\<\"Blue = Horizontal\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]]},
    {
     StyleBox["\<\"Purple = Vertical\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0.5, 0, 0.5],
      FrontFaceColor->RGBColor[0.5, 0, 0.5],
      BackFaceColor->RGBColor[0.5, 0, 0.5],
      GraphicsColor->RGBColor[0.5, 0, 0.5],
      FontWeight->Bold,
      FontColor->RGBColor[0.5, 0, 0.5]]},
    {
     StyleBox["\<\"Pink = Diagonal\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0.5, 0.5],
      FrontFaceColor->RGBColor[1, 0.5, 0.5],
      BackFaceColor->RGBColor[1, 0.5, 0.5],
      GraphicsColor->RGBColor[1, 0.5, 0.5],
      FontWeight->Bold,
      FontColor->RGBColor[1, 0.5, 0.5]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.803598010393161*^9, 3.803602786367754*^9, 3.8036418223572273`*^9, 
   3.803642123454772*^9, {3.803643560000875*^9, 3.803643655767322*^9}, {
   3.803643690507491*^9, 3.803643723996839*^9}, 3.80364378731633*^9, 
   3.803705086310392*^9},
 TextAlignment->Center,
 CellLabel->
  "Out[568]=",ExpressionUUID->"56798f0e-3434-423b-b77a-4956f71607e4"],

Cell[TextData[{
 "After getting the greatest side coordinates, I create another point, with \
the  x coordinate from the second point, and the y coordinate from first \
point. With this new point, and with the previous ones I create another \
triangle, and get the internal angle formed at the first point of this \
triangle. This angle gives me the inclination of the greatest side of the \
triangle. So this I can properly classify the orientation using my sectioned \
trigonometric circle. Bellow, I show the functions to each of this processes \
(",
 StyleBox["Angle", "CodeText",
  FontWeight->"Bold"],
 " and ",
 StyleBox["AngleOrientation", "CodeText",
  FontWeight->"Bold"],
 "), and also some auxiliary plots. "
}], "Text",
 CellChangeTimes->{{3.8037088458747807`*^9, 3.803709150974011*^9}, {
  3.80370923088907*^9, 3.803709237052191*^9}, {3.8037217343224287`*^9, 
  3.803721742467721*^9}, {3.803721807837644*^9, 
  3.803721816204033*^9}},ExpressionUUID->"a24355ea-e4a9-4771-8261-\
b92bcde8b4aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Angle", "[", 
   RowBox[{"a_List", ",", "b_List"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
         "a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"N", "@", 
      RowBox[{"PlanarAngle", "[", 
       RowBox[{"{", 
        RowBox[{"b", ",", "a", ",", "c"}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
    RowBox[{"Dimensions", "[", "b", "]"}], "\[Equal]", 
    RowBox[{"{", "2", "}"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Angle", "[", "points_List", "]"}], ":=", 
   RowBox[{"Angle", "[", 
    RowBox[{
     RowBox[{"First", "[", "points", "]"}], ",", 
     RowBox[{"Last", "[", "points", "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AngleOrientation", "[", "angle_Real", "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"normalized", ",", "possibilities", ",", 
       RowBox[{"orientations", "=", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"0.`", "\[Rule]", "\"\<Horizontal\>\""}], ",", 
          RowBox[{"0.19634954084936207`", "\[Rule]", "\"\<Horizontal\>\""}], 
          ",", 
          RowBox[{"3.141592653589793`", "\[Rule]", "\"\<Horizontal\>\""}], 
          ",", 
          RowBox[{"3.3379421944391554`", "\[Rule]", "\"\<Horizontal\>\""}], 
          ",", 
          RowBox[{"6.283185307179586`", "\[Rule]", "\"\<Horizontal\>\""}], 
          ",", 
          RowBox[{"1.5707963267948966`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
          RowBox[{"1.7671458676442586`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
          RowBox[{"4.71238898038469`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
          RowBox[{"4.908738521234052`", "\[Rule]", "\"\<Vertical\>\""}], ",", 
          
          RowBox[{"0.39269908169872414`", "\[Rule]", "\"\<Diagonal\>\""}], 
          ",", 
          RowBox[{"0.5890486225480862`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"0.7853981633974483`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"0.9817477042468103`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"1.1780972450961724`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"1.3744467859455345`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"1.9634954084936207`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"2.1598449493429825`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"2.356194490192345`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"2.552544031041707`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"2.748893571891069`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"2.945243112740431`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"3.5342917352885173`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"3.730641276137879`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"3.9269908169872414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"4.123340357836604`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"4.319689898685965`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"4.516039439535327`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"5.105088062083414`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"5.301437602932776`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"5.497787143782138`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"5.6941366846315`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          RowBox[{"5.890486225480862`", "\[Rule]", "\"\<Diagonal\>\""}], ",", 
          
          RowBox[{"6.086835766330224`", "\[Rule]", "\"\<Diagonal\>\""}]}], 
         "\[RightAssociation]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"angle", ">", 
         RowBox[{"2.", "Pi"}]}], ",", 
        RowBox[{"normalized", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"angle", ",", 
           RowBox[{"2.", "Pi"}]}], "]"}]}], ",", 
        RowBox[{"normalized", "=", "angle"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"orientations", "@", 
       RowBox[{"First", "@", 
        RowBox[{"Nearest", "[", 
         RowBox[{
          RowBox[{"Keys", "@", "orientations"}], ",", "normalized"}], 
         "]"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sideTests", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"side", "=", 
          RowBox[{"TriangleGreatestSide", "@", "#"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "Pink", ",", "#", ",", "\[IndentingNewLine]", "Black", ",", 
             "Thick", ",", 
             RowBox[{"Line", "@", "side"}], ",", "\[IndentingNewLine]", 
             "Blue", ",", 
             RowBox[{"Opacity", "@", ".5"}], ",", 
             RowBox[{"Triangle", "[", 
              RowBox[{"Append", "[", 
               RowBox[{"side", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Last", "[", "side", "]"}], "\[LeftDoubleBracket]",
                    "1", "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                   RowBox[{"First", "[", "side", "]"}], 
                   "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                 "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", "Red", 
             ",", 
             RowBox[{"Opacity", "@", "1."}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"First", "@", "side"}], ",", "0.1"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"Angle", "@", "side"}], "/", "Degree"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AngleOrientation", "@", 
           RowBox[{"Angle", "@", "side"}]}]}], "}"}]}], "\[IndentingNewLine]",
        "]"}], "&"}], "/@", 
     RowBox[{"Polygon", "/@", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"10", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "3", ",", "2"}], "}"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"sideTests", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Original triangle (pink)\\nAuxiliar triangle (blue)\\nGreatest \
side (black line)\\nAngle (red circle)\>\"", ",", "\"\<Angle\>\"", ",", 
        "\"\<Greatest side orientaiton\>\""}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8035884823732433`*^9, 3.803588505726779*^9}, {
   3.8035895102328157`*^9, 3.8035895161455603`*^9}, {3.803589835942565*^9, 
   3.803589867448956*^9}, 3.8035900217680902`*^9, {3.803590055811829*^9, 
   3.803590061059906*^9}, {3.8037093200396013`*^9, 3.803709588989834*^9}, {
   3.803709688666638*^9, 3.803709702910887*^9}, {3.8037217890489197`*^9, 
   3.803721795270071*^9}},ExpressionUUID->"a4bbb512-f53b-4674-a551-\
67cdebbc3069"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Original triangle (pink)\\nAuxiliar triangle \
(blue)\\nGreatest side (black line)\\nAngle (red circle)\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Angle\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Greatest side orientaiton\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{7.204956585817165, 1.640111712162902}, {
         2.6063414761129735`, 0.49811037413863346`}, {0.3565942719695965, 
         5.812212536651781}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.3565942719695965, 5.812212536651781}, {7.204956585817165, 
         1.640111712162902}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{0.3565942719695965, 5.812212536651781}, {
           7.204956585817165, 1.640111712162902}, {7.204956585817165, 
           5.812212536651781}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{0.3565942719695965, 5.812212536651781}, 0.1]}}}], 
     "31.350251999380937`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{5.4976224826835285`, 3.3804404781485857`}, {
         8.667868389416128, 0.03754819713808999}, {2.437415151053708, 
         9.711003078671126}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{2.437415151053708, 9.711003078671126}, {8.667868389416128, 
         0.03754819713808999}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{2.437415151053708, 9.711003078671126}, {
           8.667868389416128, 0.03754819713808999}, {8.667868389416128, 
           9.711003078671126}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{2.437415151053708, 9.711003078671126}, 0.1]}}}], 
     "57.215332032809584`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{1.6893726658613133`, 3.1839652355938277`}, {
         6.709724415588759, 5.783126888867741}, {0.13196221424768595`, 
         6.9808497976806585`}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{0.13196221424768595`, 6.9808497976806585`}, {
         6.709724415588759, 5.783126888867741}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{0.13196221424768595`, 6.9808497976806585`}, {
           6.709724415588759, 5.783126888867741}, {6.709724415588759, 
           6.9808497976806585`}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{0.13196221424768595, 6.9808497976806585}, 0.1]}}}], 
     "10.319737529261849`", "\<\"Horizontal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{3.291190639647702, 3.0320685239375855`}, {
         5.6297199086049226`, 6.7305928423299015`}, {1.081156537124489, 
         9.423812236949527}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{1.081156537124489, 9.423812236949527}, {3.291190639647702, 
         3.0320685239375855`}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{1.081156537124489, 9.423812236949527}, {
           3.291190639647702, 3.0320685239375855`}, {3.291190639647702, 
           9.423812236949527}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{1.081156537124489, 9.423812236949527}, 0.1]}}}], 
     "70.92646307330011`", "\<\"Diagonal\"\>"},
    {
     GraphicsBox[{
       {RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{9.71673343924392, 0.050941344946707545`}, {
         2.1898988486254467`, 1.6184621821320082`}, {7.838905061435309, 
         9.927543642929585}}]}, 
       {GrayLevel[0], Thickness[Large], 
        LineBox[{{7.838905061435309, 9.927543642929585}, {9.71673343924392, 
         0.050941344946707545`}}], 
        {RGBColor[0, 0, 1], Opacity[0.5], 
         TagBox[
          PolygonBox[{{7.838905061435309, 9.927543642929585}, {
           9.71673343924392, 0.050941344946707545`}, {9.71673343924392, 
           9.927543642929585}}],
          "Triangle"]}, 
        {RGBColor[1, 0, 0], Opacity[1.], 
         CircleBox[{7.838905061435309, 9.927543642929585}, 0.1]}}}], 
     "79.23490023558793`", "\<\"Diagonal\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.80370933795551*^9, 3.803709373424273*^9, 3.803709433643915*^9, 
   3.803709500916164*^9, {3.803709534367764*^9, 3.803709625640326*^9}, {
   3.80370967778652*^9, 3.803709703486375*^9}, {3.803709734274778*^9, 
   3.803709740129223*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[719]=",ExpressionUUID->"1d5723d8-129f-48d6-b5c1-9f270bed9dad"]
}, Open  ]],

Cell[TextData[{
 "The last step was to put all the functions related to triangles into a \
single functions capable of describing triangles in a ",
 StyleBox["Graphics", "CodeText",
  FontWeight->"Bold"],
 " expression, returning a human-readable string.  For this task I created \
the following code, that produces the results at the end."
}], "Text",
 CellChangeTimes->{{3.80370984734641*^9, 3.803709848565302*^9}, {
  3.803710011119594*^9, 3.803710062772079*^9}, {3.803710131606978*^9, 
  3.803710153272735*^9}},ExpressionUUID->"50ddc01b-818f-40df-8eb8-\
bf4e6f23390e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"StringList", "[", "list_List", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"str", "=", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"ToLowerCase", "@", "list"}], ",", "\"\<, \>\""}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{
        "rest__", "~~", "\"\<, \>\"", "~~", "s__", "~~", "EndOfString"}], 
        "\[RuleDelayed]", " ", 
        RowBox[{"rest", "<>", "\"\< and \>\"", "<>", "s"}]}], "]"}], "@", 
      RowBox[{"ToString", "[", "str", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TriangleDescription", "[", "triangle_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"characteristics", ",", "side", ",", "sidestr"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"characteristics", "=", 
        RowBox[{"StringList", "@", 
         RowBox[{"TriangleCharacteristics", "@", "triangle"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"side", "=", 
        RowBox[{"AngleOrientation", "@", 
         RowBox[{"Angle", "@", 
          RowBox[{"TriangleGreatestSide", "@", "triangle"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sidestr", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"TriangleEquilateralQ", "@", "triangle"}], "]"}], ",", 
          RowBox[{"\"\< triangle, with its greatest side as a \>\"", "<>", 
           RowBox[{"ToLowerCase", "[", "side", "]"}], "<>", "\"\< line\>\""}],
           ",", "\"\< triangle\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"characteristics", "<>", "sidestr"}]}]}], "]"}], "/;", 
    RowBox[{"SimplePolygonQ", "@", "triangle"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TriangleDescription", "[", "graphics_Graphics", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "primitivesAndDirectives", ",", "color", ",", "triangleDescription"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"primitivesAndDirectives", "=", 
       RowBox[{"graphics", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"arguments_List", ",", "___"}], "]"}], "\[RuleDelayed]", 
         "  ", "arguments"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"color", "=", 
       RowBox[{"ToLowerCase", "[", 
        RowBox[{"Description", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"primitivesAndDirectives", ",", "ColorQ"}], "]"}], "//", 
          "First"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"triangleDescription", "=", 
       RowBox[{"TriangleDescription", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"primitivesAndDirectives", ",", "TrianglePolygonQ"}], "]"}],
          "//", "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<A graphic consisting of a \>\"", "<>", "color", "<>", "\"\<, \>\"",
        "<>", "triangleDescription", "<>", "\"\<.\>\""}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"triangleDescriptionTests", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"color", ",", "graphics"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"color", "=", 
         RowBox[{"RGBColor", "@", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"graphics", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"color", ",", "#"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"graphics", ",", 
          RowBox[{"ToString", "@", "graphics"}], ",", 
          RowBox[{"TextString", "@", "graphics"}], ",", 
          RowBox[{"SpokenString", "@", "graphics"}], ",", 
          RowBox[{"TriangleDescription", "@", "graphics"}]}], "}"}]}]}], 
      "]"}], "&"}], "/@", "triangles"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PrependTo", "[", 
    RowBox[{"triangleDescriptionTests", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Bold"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Graphics\>\"", ",", "\"\<ToString\>\"", ",", "\"\<TextString\>\"",
         ",", "\"\<SpokenString\>\"", ",", "\"\<TriangleDescription\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.803633468571108*^9, 3.8036335381422443`*^9}, {
   3.803633626458288*^9, 3.803633629221271*^9}, {3.803633663042775*^9, 
   3.803633670276528*^9}, {3.803633794390999*^9, 3.803633799529252*^9}, {
   3.803633914589604*^9, 3.803633978545228*^9}, {3.8036340200264797`*^9, 
   3.803634058375574*^9}, 3.8036341566668673`*^9, {3.803634522005252*^9, 
   3.803634618494022*^9}, {3.80363487150776*^9, 3.8036349046187363`*^9}, {
   3.803634939796625*^9, 3.803634965687455*^9}, {3.80363527785189*^9, 
   3.8036353456052313`*^9}, {3.803635451762629*^9, 3.8036354521441727`*^9}, {
   3.8036356123728724`*^9, 3.803635622130171*^9}, {3.8036356611065483`*^9, 
   3.803635709975769*^9}, {3.8036360843118887`*^9, 3.803636101531837*^9}, {
   3.803710159436511*^9, 3.80371020125948*^9}, {3.803710264179941*^9, 
   3.803710303648185*^9}, {3.803723204669098*^9, 3.8037232225969467`*^9}},
 CellLabel->
  "In[750]:=",ExpressionUUID->"e7da1f51-4ef8-4884-a46d-9d0f7fdb9262"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TriangleDescription\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      {RGBColor[
       0.011490732000961401`, 0.9735460301301258, 0.15577364121282433`], 
       TagBox[PolygonBox[{{0, 0}, {1, 0}, {0, 1}}],
        "Triangle"]},
      ImageSize->{
       76.390625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 0.011, 0.974, 0.156 and Triangle of the \
list the list 0, 0, the list 1, 0, the list 0, 1\"\>", "\<\"A graphic \
consisting of a light green, right and isosceles triangle, with its greatest \
side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.9169929706310678, 0.1569322595328433, 0.1929189539605689], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]},
      ImageSize->{
       123.83203125, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 0.917, 0.157, 0.193 and Triangle of the \
list the list 0, 0, the list 2, 0, the list 3 halves, 1 half times square \
root of 3\"\>", "\<\"A graphic consisting of a red, right and scalene \
triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.4650017903937971, 0.007277819776557282, 0.0931839255429543], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {5, 0}, {Rational[16, 5], Rational[12, 5]}}, {{0, 
           0}, {5, 0}, {3.2, 2.4}}]],
        "Triangle"]},
      ImageSize->{
       119.05859375, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 0.465, 0.007, 0.093 and Triangle of the \
list the list 0, 0, the list 5, 0, the list 16 fifths, 12 fifths\"\>", "\<\"A \
graphic consisting of a brown, right and scalene triangle, with its greatest \
side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.6863968187956446, 0.2805682063385968, 0.9767584568236993], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {5^Rational[1, 2], 0}, {
           4 5^Rational[-1, 2], 2 5^Rational[-1, 2]}}, {{0, 0}, {
           2.23606797749979, 0}, {1.7888543819998317`, 0.8944271909999159}}]],
        
        "Triangle"]},
      ImageSize->{
       131.84375, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 0.686, 0.281, 0.977 and Triangle of the \
list the list 0, 0, the list square root of 5, 0, the list 4 times one over \
square root of 5, 2 times one over square root of 5\"\>", "\<\"A graphic \
consisting of a magenta, right and scalene triangle, with its greatest side \
as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.6599228519931621, 0.2753771327719494, 0.914907023810855], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]},
      ImageSize->{
       131.33203125, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 0.66, 0.275, 0.915 and Triangle of the \
list the list 0, 0, the list 1, 0, the list 3 fourths, 1 fourth times square \
root of 3\"\>", "\<\"A graphic consisting of a magenta, right and scalene \
triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.9462162023301752, 0.49126450099887164`, 0.06619614606974733], 
       PolygonBox[
        NCache[{{1, 0}, {0, 3^Rational[1, 2]}, {-1, 0}}, {{1, 0}, {
          0, 1.7320508075688772`}, {-1, 0}}]]},
      ImageSize->{
       80.75390625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of a polygon with 3 vertices\"\>", "\<\"A graphic \
consisting of a orange, equilateral and isosceles triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.3648106954845727, 0.31792450794896476`, 0.481842580042084], 
       PolygonBox[{{0, 0}, {10, 10}, {10, 20}}]},
      ImageSize->{
       51.36552798202615, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of a polygon with 3 vertices\"\>", "\<\"A graphic \
consisting of a gray, scalene and obtuse triangle, with its greatest side as \
a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.09418110925396062, 0.929349488689817, 0.3150562600825102], 
       PolygonBox[{{0.6145453004873753, 0.8582611469648322}, {
        0.1645655243143871, 0.546361147721157}, {0.7904669958795354, 
        0.2067499303719591}}, {1, 2, 3}]},
      ImageSize->{
       80.4921875, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of a polygon with 3 vertices\"\>", "\<\"A graphic \
consisting of a light green, scalene triangle, with its greatest side as a \
diagonal line.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803710286570109*^9, 3.803710307886599*^9}, 
   3.803723225076125*^9},
 TextAlignment->Center,
 CellLabel->
  "Out[754]=",ExpressionUUID->"89aedf88-a5bf-4c38-a99d-40181444683e"]
}, Open  ]],

Cell["\<\
It is important to note that for equilateral triangles the greatest side \
orientation is not being described, because all the sides are equal.\
\>", "Text",
 CellChangeTimes->{{3.803723281569995*^9, 3.8037233120607777`*^9}, {
  3.803729599521494*^9, 
  3.8037296041961718`*^9}},ExpressionUUID->"46890afe-959b-4953-9f56-\
bd3697b132aa"],

Cell["\<\
The complete implementation can be find in the link: \
https://github.com/rsg73626/wss-project \
\>", "Text",
 CellChangeTimes->{{3.8037296057634907`*^9, 
  3.803729652979178*^9}},ExpressionUUID->"55a543af-1b02-4dd8-83fe-\
72c58d534bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusion and future works", "Subsection",
 CellChangeTimes->{{3.803721996543374*^9, 
  3.803722008374714*^9}},ExpressionUUID->"eabcdc03-4c53-4d27-b226-\
d2ed903c95a4"],

Cell["\<\
This project presented a challenging task, with a very large scope of \
implementation. In this first step, some important progress was made related \
to textually describing Wolfram Language expressions, in special for \
Graphics, and for triangle figures. Following, some of the future works that \
can be done.\
\>", "Text",
 CellChangeTimes->{{3.803722811460104*^9, 3.803723013619801*^9}, {
  3.803723082379558*^9, 
  3.803723085671049*^9}},ExpressionUUID->"02a2d6dd-8725-4c57-89b9-\
030c90369e98"],

Cell[CellGroupData[{

Cell["\<\
Merge the Description and TranslatedDescription functions for symbols into a \
single one that can receive the language as an option.\
\>", "Item",
 CellChangeTimes->{{3.803665372810964*^9, 
  3.803665387751863*^9}},ExpressionUUID->"42aae935-22d3-4960-8848-\
4dc400d99bfd"],

Cell["\<\
Merge the Description and TranslatedDescription functions for colors into a \
single one that can receive the language as an option.\
\>", "Item",
 CellChangeTimes->{{3.803665273457746*^9, 
  3.803665314508679*^9}},ExpressionUUID->"cc06aae3-cab7-4687-aed8-\
93ded9b8ef92"],

Cell["\<\
Improve the Description function implementation for graphics, so this it can \
support more graphics primitives, and also the other components of the \
Graphics expressions.\
\>", "Item",
 CellChangeTimes->{{3.803665402605482*^9, 
  3.803665470426622*^9}},ExpressionUUID->"c8e2c3c2-a992-45c3-a131-\
258350f1f66e"],

Cell["\<\
Enhance the Description function implementation for graphics, so this it also \
can describe points and lines plots properly.\
\>", "Item",
 CellChangeTimes->{{3.8036656164103003`*^9, 
  3.8036656726385927`*^9}},ExpressionUUID->"c7742386-4ae5-4ac2-bdcc-\
2ed5aa8eaa6e"],

Cell["\<\
Put the TriangleDescription function inside a more generic Description \
function that supports any type of polygon.\
\>", "Item",
 CellChangeTimes->{{3.803668799776823*^9, 
  3.803668829049034*^9}},ExpressionUUID->"37f31e8b-b559-4fd8-99e9-\
f7ae9e3f91f5"],

Cell["\<\
Increase the scope of the project for other types of expressions.\
\>", "Item",
 CellChangeTimes->{{3.8036677299603043`*^9, 
  3.803667760178361*^9}},ExpressionUUID->"03483ccc-993a-4764-8323-\
b6b6017c06a0"],

Cell["\<\
Test the output quality for the description functions for graphics and \
triangles.\
\>", "Item",
 CellChangeTimes->{{3.8036655608823137`*^9, 3.803665602600396*^9}, 
   3.8036656688951178`*^9},ExpressionUUID->"018e2350-a703-4bfb-a58d-\
2628f998cad6"],

Cell["\<\
Create functions and/or applications that can be used with visually impaired \
people. For example , an application to help with the geometry teaching.\
\>", "Item",
 CellChangeTimes->{{3.803665710630068*^9, 3.803665823858418*^9}, {
  3.8036658883834867`*^9, 
  3.803665895128583*^9}},ExpressionUUID->"68419ca0-38ac-4601-954e-\
a138aedda799"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{214, Automatic}, {Automatic, 50}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"eea6933a-2e6f-4f4e-bc07-6dcb12a8e031"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 183, 3, 54, "Subsection",ExpressionUUID->"842357bb-ca59-4087-b7ce-711935ca769d"],
Cell[766, 27, 999, 16, 81, "Text",ExpressionUUID->"c8e73ccd-8905-46c3-8168-4155a9adb611"],
Cell[1768, 45, 721, 12, 58, "Text",ExpressionUUID->"c7768290-8b05-4de4-9a38-d2245220b80c"],
Cell[2492, 59, 809, 13, 81, "Text",ExpressionUUID->"c67547a5-bf31-4ca1-bafe-95ffddb1ed6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3338, 77, 222, 4, 54, "Subsection",ExpressionUUID->"63bd608c-8e96-40cf-ba42-50d81c8020dd"],
Cell[3563, 83, 2573, 52, 112, "Text",ExpressionUUID->"b08964ac-ca94-43f4-a009-e4afa26eb905"],
Cell[CellGroupData[{
Cell[6161, 139, 404, 10, 52, "Input",ExpressionUUID->"893c7a3b-cfaa-4002-b631-2464376cfbcb"],
Cell[6568, 151, 156, 3, 34, "Output",ExpressionUUID->"df7e04dc-d015-47e3-a9ca-727a86e3d5b0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6773, 160, 274, 6, 54, "Subsection",ExpressionUUID->"045c27e8-0b33-4bdb-bca9-b9a01b9a1126"],
Cell[7050, 168, 843, 21, 58, "Text",ExpressionUUID->"01a5e541-b5a9-461a-a441-de030763ab18"],
Cell[7896, 191, 76456, 1284, 361, "Output",ExpressionUUID->"acd56369-0cea-4514-938d-211432d5abbf"],
Cell[84355, 1477, 1049, 18, 81, "Text",ExpressionUUID->"f43bd5d3-03d9-4ee0-a34c-dfc9551b424c"],
Cell[85407, 1497, 610, 15, 58, "Text",ExpressionUUID->"f44514da-16ff-477f-abfe-d402b20417d7"],
Cell[CellGroupData[{
Cell[86042, 1516, 2679, 64, 262, "Input",ExpressionUUID->"5d2d2ff2-6a81-4ce9-89b8-980d739d12a3"],
Cell[88724, 1582, 2605, 57, 321, "Output",ExpressionUUID->"f8d251eb-ffbb-40ae-b52a-e4c04b464ee2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91378, 1645, 167, 3, 54, "Subsection",ExpressionUUID->"fd6bfba5-1024-4e6c-8ad3-023c32a93bfb"],
Cell[91548, 1650, 888, 16, 81, "Text",ExpressionUUID->"57d1e968-4df9-47d5-a427-8cf8ad50b21a"],
Cell[92439, 1668, 1133, 25, 66, "Text",ExpressionUUID->"9f1fd2f3-1d0e-4f3d-ac4f-20a92cd03e80"],
Cell[CellGroupData[{
Cell[93597, 1697, 794, 18, 60, "Input",ExpressionUUID->"a4c844d2-ab2d-42ad-b6a3-7403cccacb0e"],
Cell[94394, 1717, 194, 4, 34, "Output",ExpressionUUID->"b1b7c781-4bf1-4ac7-847b-f041f2a77cd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94625, 1726, 2475, 65, 104, "Input",ExpressionUUID->"f20ba5d3-c351-4d1b-90b2-e6518179008c"],
Cell[97103, 1793, 4930, 114, 75, "Output",ExpressionUUID->"385868a3-fc7a-417d-98e7-9e337490add2"]
}, Open  ]],
Cell[102048, 1910, 887, 18, 81, "Text",ExpressionUUID->"109a0dbc-30df-43bb-9dee-b8bd877b6843"],
Cell[102938, 1930, 894, 22, 30, "Input",ExpressionUUID->"4505b83a-1983-4efe-a40f-4687ec114ce2"],
Cell[CellGroupData[{
Cell[103857, 1956, 399, 11, 30, "Input",ExpressionUUID->"af895240-68c7-47d4-9f90-50ff77bb9d2e"],
Cell[104259, 1969, 305, 7, 34, "Output",ExpressionUUID->"39755a3c-0c7b-4146-b9e0-4280cc2507ac"]
}, Open  ]],
Cell[104579, 1979, 750, 20, 35, "Text",ExpressionUUID->"7a2eba49-c955-46fa-b1f8-1170d03a0c2f"],
Cell[CellGroupData[{
Cell[105354, 2003, 48157, 1122, 408, "Input",ExpressionUUID->"d1bb1be5-d695-48ca-a5c9-2b4bf1d60ef6"],
Cell[153514, 3127, 23426, 592, 231, "Output",ExpressionUUID->"71b46849-595b-4573-8192-37653aa9d414"]
}, Open  ]],
Cell[176955, 3722, 563, 10, 58, "Text",ExpressionUUID->"cd4f6302-78ab-4dc0-a9cf-8d54053a6a96"],
Cell[CellGroupData[{
Cell[177543, 3736, 49974, 1155, 513, "Input",ExpressionUUID->"d0975e14-1da4-4a3e-8ead-cc0c0a60f402"],
Cell[227520, 4893, 44001, 1043, 241, "Output",ExpressionUUID->"e6e0a78b-f44a-4458-bc74-0fef54a17000"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271570, 5942, 169, 3, 54, "Subsection",ExpressionUUID->"1b166286-4832-45dc-a747-e0ce41ad66f7"],
Cell[271742, 5947, 1538, 31, 89, "Text",ExpressionUUID->"871d5b4a-67b4-44d6-855b-f9ed137c2746"],
Cell[273283, 5980, 492, 13, 30, "Input",ExpressionUUID->"2fc82c61-80b4-4c2e-862d-590f1ba12d4d"],
Cell[CellGroupData[{
Cell[273800, 5997, 778, 19, 73, "Input",ExpressionUUID->"21e37312-dc19-4292-a8ac-41cebdb2cc0f"],
Cell[274581, 6018, 13942, 311, 166, "Output",ExpressionUUID->"5e75cec4-12a0-43d0-b89b-b684aa887113"],
Cell[288526, 6331, 178, 3, 34, "Output",ExpressionUUID->"6089720e-1031-425e-b022-8e5268c1e542"]
}, Open  ]],
Cell[288719, 6337, 762, 17, 81, "Text",ExpressionUUID->"67ebe5e7-e7c7-4666-9cb5-08ace919ff23"],
Cell[289484, 6356, 886, 19, 66, "Text",ExpressionUUID->"630f83d3-66d0-450d-9575-8da71a44c044"],
Cell[CellGroupData[{
Cell[290395, 6379, 1501, 32, 60, "Input",ExpressionUUID->"96caaa27-1bc9-4b6d-86de-9505ea194124"],
Cell[291899, 6413, 2188, 53, 153, "Output",ExpressionUUID->"6a0eb2a5-97d6-4579-b70a-1205875b8b68"]
}, Open  ]],
Cell[294102, 6469, 478, 11, 58, "Text",ExpressionUUID->"89369d4f-6542-42c7-976a-d710f55cd897"],
Cell[294583, 6482, 1934, 52, 178, "Input",ExpressionUUID->"f6e98846-991e-43cc-a3b7-125d4c9c6b6e"],
Cell[CellGroupData[{
Cell[296542, 6538, 4203, 98, 178, "Input",ExpressionUUID->"e9456c88-46b3-449a-a373-85cefe10f05d"],
Cell[300748, 6638, 5365, 167, 98, "Output",ExpressionUUID->"6a3b17f4-9230-408b-8a4c-92edcc785fe4"],
Cell[306116, 6807, 5373, 129, 557, "Output",ExpressionUUID->"98de646e-75b0-4925-a800-b9014609e725"]
}, Open  ]],
Cell[311504, 6939, 849, 18, 81, "Text",ExpressionUUID->"c85a9a2c-57e9-44a0-9fdf-f0eb60b8c9f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312390, 6962, 170, 3, 54, "Subsection",ExpressionUUID->"d0c74ab1-69e8-488d-82e4-b48d68439416"],
Cell[312563, 6967, 404, 8, 58, "Text",ExpressionUUID->"8bf57ff4-e984-47d5-a633-cabbafffeca1"],
Cell[CellGroupData[{
Cell[312992, 6979, 316, 8, 32, "Item",ExpressionUUID->"98cdfe30-e702-4407-b339-19addfe70599"],
Cell[313311, 6989, 306, 8, 32, "Item",ExpressionUUID->"43a26a81-334c-4a1c-9035-bebe04d4c2c6"],
Cell[313620, 6999, 404, 9, 32, "Item",ExpressionUUID->"d430d22d-9534-46d4-916c-ab6185cf1a01"]
}, Open  ]],
Cell[314039, 7011, 804, 23, 58, "Text",ExpressionUUID->"8ad7fb7b-95f9-438d-aaaf-7ebd55c24e85"],
Cell[CellGroupData[{
Cell[314868, 7038, 5996, 139, 472, "Input",ExpressionUUID->"026ea2e8-8d98-4c36-b883-f1a6526b87a7"],
Cell[320867, 7179, 16882, 478, 405, "Output",ExpressionUUID->"7602e72d-5d39-430e-948d-d5428f56d03e"]
}, Open  ]],
Cell[337764, 7660, 527, 10, 58, "Text",ExpressionUUID->"ceaa3ac7-4d18-43e2-b8e7-469bfc88330f"],
Cell[CellGroupData[{
Cell[338316, 7674, 1615, 37, 157, "Input",ExpressionUUID->"3697dc5a-a8bf-4041-9ae4-ac6a053f6614"],
Cell[339934, 7713, 873, 22, 56, "Output",ExpressionUUID->"1e76e740-b79f-4ee9-9bec-f2364e90989d"]
}, Open  ]],
Cell[340822, 7738, 756, 13, 81, "Text",ExpressionUUID->"02bac196-4f3d-4b19-9d5e-6c5df11d9ee4"],
Cell[CellGroupData[{
Cell[341603, 7755, 3863, 94, 325, "Input",ExpressionUUID->"362f8c47-5c7a-4330-959f-0b1d615865c2"],
Cell[345469, 7851, 3933, 107, 583, "Output",ExpressionUUID->"fa74f3ff-5a97-47bf-a8a2-31b9fc1d79ce"]
}, Open  ]],
Cell[349417, 7961, 797, 13, 81, "Text",ExpressionUUID->"368bfb62-cea7-462f-bcdb-48431dc4b450"],
Cell[350217, 7976, 5085, 113, 523, "Output",ExpressionUUID->"56798f0e-3434-423b-b77a-4956f71607e4"],
Cell[355305, 8091, 1005, 20, 104, "Text",ExpressionUUID->"a24355ea-e4a9-4771-8261-b92bcde8b4aa"],
Cell[CellGroupData[{
Cell[356335, 8115, 7993, 184, 724, "Input",ExpressionUUID->"a4bbb512-f53b-4674-a551-67cdebbc3069"],
Cell[364331, 8301, 4955, 115, 1037, "Output",ExpressionUUID->"1d5723d8-129f-48d6-b5c1-9f270bed9dad"]
}, Open  ]],
Cell[369301, 8419, 572, 11, 58, "Text",ExpressionUUID->"50ddc01b-818f-40df-8eb8-bf4e6f23390e"],
Cell[CellGroupData[{
Cell[369898, 8434, 5849, 138, 451, "Input",ExpressionUUID->"e7da1f51-4ef8-4884-a46d-9d0f7fdb9262"],
Cell[375750, 8574, 5929, 139, 829, "Output",ExpressionUUID->"89aedf88-a5bf-4c38-a99d-40181444683e"]
}, Open  ]],
Cell[381694, 8716, 346, 7, 35, "Text",ExpressionUUID->"46890afe-959b-4953-9f56-bd3697b132aa"],
Cell[382043, 8725, 247, 6, 35, "Text",ExpressionUUID->"55a543af-1b02-4dd8-83fe-72c58d534bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382327, 8736, 175, 3, 54, "Subsection",ExpressionUUID->"eabcdc03-4c53-4d27-b226-d2ed903c95a4"],
Cell[382505, 8741, 512, 10, 58, "Text",ExpressionUUID->"02a2d6dd-8725-4c57-89b9-030c90369e98"],
Cell[CellGroupData[{
Cell[383042, 8755, 283, 6, 32, "Item",ExpressionUUID->"42aae935-22d3-4960-8848-4dc400d99bfd"],
Cell[383328, 8763, 282, 6, 32, "Item",ExpressionUUID->"cc06aae3-cab7-4687-aed8-93ded9b8ef92"],
Cell[383613, 8771, 323, 7, 32, "Item",ExpressionUUID->"c8e2c3c2-a992-45c3-a131-258350f1f66e"],
Cell[383939, 8780, 279, 6, 32, "Item",ExpressionUUID->"c7742386-4ae5-4ac2-bdcc-2ed5aa8eaa6e"],
Cell[384221, 8788, 266, 6, 32, "Item",ExpressionUUID->"37f31e8b-b559-4fd8-99e9-f7ae9e3f91f5"],
Cell[384490, 8796, 217, 5, 32, "Item",ExpressionUUID->"03483ccc-993a-4764-8323-b6b6017c06a0"],
Cell[384710, 8803, 260, 6, 32, "Item",ExpressionUUID->"018e2350-a703-4bfb-a58d-2628f998cad6"],
Cell[384973, 8811, 352, 7, 32, "Item",ExpressionUUID->"68419ca0-38ac-4601-954e-a138aedda799"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

