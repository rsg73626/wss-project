(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    257452,       4879]
NotebookOptionsPosition[    255193,       4830]
NotebookOutlinePosition[    256160,       4859]
CellTagsIndexPosition[    256117,       4856]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Textually Describing Wolfram Language Expressions", "Title",
 CellChangeTimes->{{3.770055572438499*^9, 3.7700555729498453`*^9}, {
   3.770055604008165*^9, 3.7700556066618843`*^9}, {3.8026206112486477`*^9, 
   3.802620665254437*^9}, 3.802620959982905*^9, 
   3.8028772382599983`*^9},ExpressionUUID->"df8094a1-e3b6-4100-a47b-\
d72f94de3e82"],

Cell["Renan Germano", "Author",
 CellChangeTimes->{{3.549624168509506*^9, 3.549624171985794*^9}, {
  3.549624508772977*^9, 3.549624510775043*^9}, {3.5498187159613867`*^9, 
  3.5498187170087957`*^9}, {3.549819049020514*^9, 3.5498190533440437`*^9}, {
  3.77005561844785*^9, 3.7700556489651537`*^9}, {3.802620672270149*^9, 
  3.8026206745809307`*^9}},ExpressionUUID->"11b1fb68-66eb-4dd6-bf4c-\
03f7714f5e6e"],

Cell["Mackenzie Presbyterian University, Brazil", "Affiliation",
 CellChangeTimes->{{3.802186209582007*^9, 3.802186214327465*^9}, {
  3.802620699271461*^9, 3.802620702919016*^9}, {3.802696462881497*^9, 
  3.8026964650060863`*^9}, {3.8027433827476187`*^9, 3.8027433998208113`*^9}, {
  3.8036567766518927`*^9, 
  3.8036567780432158`*^9}},ExpressionUUID->"dac8094c-523a-4ea3-804c-\
03f2b0c84226"],

Cell[CellGroupData[{

Cell["Goal", "Chapter",
 CellChangeTimes->{{3.803735718117*^9, 
  3.803735724248764*^9}},ExpressionUUID->"aa1d4464-c445-4402-a18c-\
6747ec0ce84d"],

Cell["\<\
The objective of the present project is to create a function to textually \
describe Wolfram Language expressions.This is done by developing an algorithm \
that is capable of better describing the input, based on its symbolic \
structure, where the output is a human readable String.Thinking about \
accessibility for visually impaired, this text could be used as an \
automatically generated alternative description for graphics and related \
content.\
\>", "Text",
 CellChangeTimes->{{3.803662266710476*^9, 
  3.803662272846682*^9}},ExpressionUUID->"9764a4ef-8b5c-4152-a4ac-\
819078d5162a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsXQd8FNX2ng3Vgtj1qX/bUwErxS72/hB7e/aKWFARHmR3szOzJY0ASQgJ
EFLtFXt9dn32rohdikgJhE4gycz859a5Mzvb0jblfL/DMruZnZ1279zvnnO+
c8At9106JkOSpAn9zZdLb558+gMP3Oy9bEfzzRX3Trjzjntvv+38eyfefsft
Dxx/Sy/zw7XmuiP7SBJaNgAAAAAAAAAAAAAA0AOhx32bBBpWb1765dLfXvvt
u4e/+3TGp++r77467rXnbn5h3jXPPnnFk49d9Mgj5z30zNXPPDb6sccvfeKZ
f8+bd+NzL4198S3fWx9P+/ibqm9/ef7nJR8tXrdkvaHRH9ej9yLmXmnOBbc1
dT3OHwEAAAAAAAAAAAAAAOh80GMsx8aWdVuX/G/Rl7M+N1n546MeLTuiLHf7
vKAUDEoKe1VUSQ55VLLMP5lx4AzhE1n1hNQM1fxc+DAY7hOacdDM2jNqnr/l
+Y+mfPTrq7+uX7QuiZ3ShFfb0QBDBwAAAAAAAAAAAABAVwLmsTqG7WP0FtFe
4us23xFnt751s/HHb8Z77/84/aXC/aYRAq54lJCkmK/mWxnxbsrWQ+TVo8pS
gKwZZKthzs7XDIZsbF3BHF/Ga8qI0bO/KlIwb6fcxy981Hj1Nf3HH41165xB
AewwdEPTmT8dvWjOAwQCDwAAAAAAAAAAAACATg1KaalLWufM3Por+pO+aYvx
43zjxReNWTONcLahhHU1uKqg2mTQphEfuoyd6egV03DxQ+xnDxHGzVl5yQFF
hImrGZjvI9pOST1eH/vZPUpYCuGtKeSvZBLg4ZFzDTVoBFX0Om268dRTxqdf
GGvWOHabHAiac9Cb2TFpBvjcAQAAAAAAAAAAAADQxWD5oTWj2SBO6sWLjHff
NSqqjBAi6ZqiGqapCrbgpqKZzP2NHOJh7D0PSyp3phN/OguMt5zvyCnvUWcc
UMJ98WqGSvzs5ufkW5j4o68oHvSqSir5FvnrW9dXIraOTacLCloomqG98pLx
809GY6N5CBrzurN/UaAHDPQdAAAAAAAAAAAAAACdEbqV/a1R9rpwkfHKq8bU
aZQXK4qhBC1Dn4QRbc/JDvUNhYSAdkLeHanrLCSecHBF9LOTuHeevY45e8jx
XUzbeZg99bP/NKEa7wPeEzSTEKSvKtvD7LDx+JP6d98aW7fqerOhu1B2PQ6X
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
3I+xsDzUegPrvJbWNthyWJrJ773vRgYFMXNxOq6yHBeAi0MhxZB4kTOy5Zxs
riGfmLDzL86amQy7N3ueLUVzhDT2NvCzv3ZldbK6eea5mj7ddcdi0W30ldlz
bGuKsQ3J/KjqEJ0TwiSiT765WmUFhNoCegxs/oXmv5dvyAx0vAO99bapdI51
GEzxzNaAoTG3K6rdZUg3ZPpeve7arFNOPfWAA7br08ccwvbr12+gHTvuuOO2
224rcvn99z/w+uuvnzNnzvz585Nh3gsXLgQ/OwAAaBXEgd+CBckOLwUT3UCv
XHPtkbvvTnKCPJ5/SNJNRFh+hwHTLrv0O1euJNSGAwNLm6WzDbYcbCj752KU
oh6PV0bpv5ECcK2p2z57ls037eCYnF2iv8o6p6XRBNm5ZZxUnpvXaj97kEXX
o4U4AnROq2SZ7Mn45WUchECiDmLVWI/zdVfCnqS98YZhq0wNAHRl8KFIHP6z
uaFhdlXd0BPSzr5TNeLrrxtxklZXB2IUHQt2ts3b6sMP0fNFEFvmuqO8+23M
Cnx2622hW271er2ZmZPMV5/Pl+kz//dedNFFLIA+g7vgibqdSeovvGB0Xl7O
Bx980NDQIPjCLKcYxMYDAIC2gPAEmVFC+jErEj6hn8g+1GwKyHNHXbDvDjuQ
bs0jHeiRxhLmvtuuM6+79leRKGFheSvPnUnViX9NP5sD6wmWvtbXMghttmGT
i1/YnXHjzGjKr5UW1W1XbFuLdltgDTcn/edVzyIRfcqUBHvIVN1qhxe1hrOz
qHjK3Ov8xfF+15KSU405FS6c2vU8ILU6rBWfnUvFQFpg5hYqqll1+CRWtvY5
Yvz6KyftNNIyPXcjANCOICS+4b9v1Z92vpix3hVt3SR/3COFFtxOwHWNl/9N
q4E4etSgPVNMUef4/arP91JW4KEJE/Jvv/2+a/591ehRhx12BFKbZzWTXBaw
NH3fvn1POOGESZMmvfj8C3V1dfyKRuvGw+UGAAAthYa6tW++ISNPUvwoGZUq
a0zOSyMFQ1uyssJnnLZz/350TtIzTPIQYXll//2qbrt1qRrQAwEDO9kpTzcZ
OpB0sHRZultfaiDK4XSnH3kkeaFyq3wYKSXWsrrt3CI51nSBXWlN569WOrxC
ir7hXiUSnxGb+/bZHTXBJEq0JxMbH+kf0oIJGDGNYy8usqh3fNoexGnsIRVF
xSeueecIy2fXy+wzq2rxJXCeurgWoVMEU6Zo69axgR847wBdGTY/u5CyZ2hN
P8xffc1NYvXzjklRbyOzJdSvGjy86fsf7EcOLbeDgG6tggKhE8a9KK/ZQUWY
kZaIOjmzIitAhEDZOuE1kzOfv+qqSSeeeOJee/frlUH97HiAy53vgiM+g/xh
yJAht912W211zf8+/shk6wsxrP1x7F70DgMAAAAGD92xYPKAqYVs9O462nRj
69xJRESSWVK82cXdf8wJ/Xv3wp1Yb8lzoiRNkjBzP+Lwp8fdg4Tl1dh+djCw
DrO0NMDWQCcP9P99kNysWlTseqvrtmtkZaQhjwg4neVzY7sCfw9rxYV6KGTj
xYIukLC3ob9yakKJyHiSnL3q6NkoiD3+DCSec9CTjVEP0QrslTX23Y4/J8AO
mejJm6y/qto8b0lWrrdTfjL9EkGhDo7CnQBAFwZm61xfffXq9XIu0oQf5ODp
XcbbjrXrR5ivfP/XXH1j9GHrwuED2hxW98iVWnlXrIpFkdBkbJ2i+Hy+V7L8
dDXy7ODay/iB1eD3v3fzLTlnnPmvfx6087b9uZ/dXjjOCqE33+y2226DBg26
/PLLi4qKPv/880a7IGG0JB0QdgAAQIE6A/50EPJ9THz2Ca3szDuohGNIq4A7
G/Nz5eSQumT8+H8fdpjZa2VIvSTPtpJ0jiTJpnk84eOPeWXChE1ywCBsHfzs
YOmyNLTBVkLT9b+WGOHshGwxipxSXy2VlE+pbjvjjJoSouMcs6+oqbV1AuYn
Mgu/d/31uXMTqMcriJBuLp6TTIn2GJw9KITHKy9fUZ1U4Hp2tpGfj6rJJ7My
kqorMnLy8A4nHZxgRTKgOuxaMGjFairCCYzxdftREE+9qr31FrofQJIO0E2A
ByRNzVtqH1s14iQi/04I77JBw7uUhx1zdkE6nuvbNzz7YvRhQ8ttJ1DyS87v
/B9dtErsD9DvFcXrnfxNVtYXsjwvy/+ZLNfxHl7BciuKU4f5+zvvnH3Bhdce
deQBAwdiNzt2v2fY6sfthsHf9u/f//TTTw8EAq+//vratWsdewuEHQAAuMKm
Wmp2FI2Nel4ODl5V8HgyUZZlNKm3+sMQGgBjCWWzTzvzgP1YdzVAki7GzF3p
2yf7zDPe92ZuUcDPDpY+S1vzaxFQO23YguqLxaV4UQ3TWffN4DHhyddt56nf
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
nEU8LopXjmOycXBZw9vg9Wec1Djptl8/kL9YWTR7+7SZvxR/MO35bx69avXI
k7YOHGj5liikVUdk6WzV6H0MWqSPd8401nEUHuvOh/9EdZqTU9q/Xxgafg8z
DNXN5abG7dl5dWeeC4XXaTI84peD8BxThNUJWnjhne9ovmj0lv88quuthhi+
hmxffPFFdHT07Nmf0BXaJ9WTo6NjX4x+YZUsc4OxjsWbTLQuhsHCu507Ce5Q
bTtozObkFV4mSdQBvA3Rgqc1IA2TJr135x2TLrzgouOOH9i3H1OOo+TzfShs
78ND+FNOOeW++x6oLK/44YcfDA5aOk2Iv+8rg2dv/Xp47UwZQXrjEuXtobvs
I10GpSvoKjyH9RNeePzss/uTnBPQCy70SJMkyRslKWcNf/PppxpcUapA7mHA
7I7viY0mwmG9yiFgjDJwPjxHvY691cTRMK1dP+2E7TF3rpotf7Eu61UtK9dI
z4CK7TA3/uX6/NfWpL9pvDLVeGkK5qnboma++9jHT13186hTtu43sBXptWkc
ANdoEr5Gcb3GU75HEYBPyfB7sKPfO3CgeKjtvVGGCk3f+c6Muosvr4UhzpH4
lcXZNwyzibuFH9MJ78EOGlvdkNF41mjXJ3NsGqPCgtmuXbsSExNjYmK+//EH
8LzGtbS/fPsdQPExk2K3ybwY1h5jdlK9LtSUhPcUp5knsmM+CmvBK17T4XoI
ZHbHxX/1n/+kX3nljUOHHjFwIA662zPnrbXwwA477LDrr78+LS1t3rx5oLca
bUJ4YR01i+gbMDC6xrCdw+nixhWS4zPmVclcB5rgMk+jrK5++qnbTz+DTlrt
L0lXSVIsQO59orxjz/vwhYlNrlhVZMt3JWZ33lh8/l5bz65RCTmG2Vtx7Pv0
ExvlO1d9onz2R/aremoGu8MbxSV6eYmRirTXa2q0yTVLX3j5m+cmGzVVkDS+
uMTIzSE8dQkB3C+2KenvPf7+M9euHHXypkH9W6U+9KvN+QH7URFQ35OD7OYM
xgEHdE3D75nG9+aWRYs333I3h5hG1ZoUc9zrqZYIu9B3E96pjvkTNl91o9bS
itppcJEDYdQAHJg0aVJRQSH+EwD3mpoagNlzY2L2ZrBq44230Nl1UOpduPBw
ucb4Es1GC6PqfOmuYVtWFe4Vum7bFdze/+MTT5Rff/39I0eeesihFs46q/I7
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
9TmRrP1WqZqI3u83ysuhTjr7lOwnH4F3VLQygTLFkXss2gAAdqarXlSIPu4z
klOxXPuyZyoBVMdxdlWSv/pvBdkSFryjhZoa82AwJZ2ZhA92WKzbiuhtvSY7
S69GPHUmvTy/gWIem/10ubnZAeFmLar/6+dfS7xt8RXDa48YvBtcC4Lcu7yw
fcnSrm34XWjuwm3tbK3h5eZXX68/7x+1ItddeA/1bc++YAjd4SDGTktzc/O6
desaGxvJerhqp8lT2sGQkyM3Xrjw3ukhaC7wOZAhJKK4AHPnMDUlxZhcbcz6
SF+6zNjUYJurBL1+xYoVixYt6uK7TTezT+e4n9tgV0F45/iOmBj10ksP6tef
EjWMkqTnMHL/+0mTH3pwHQa28TIP29myocjdHs53dcvnvvDW2xyYHWM3mjUN
+cqChWI9Jnec4y3bSq1/H+Pqc+sKH136bdKsrZnVMOIcSvOwcLnzb7V3403L
NLPN2/DiIkwOb+nvfIQdc8XjZQrJZ91ZzTC7V/JWjaD08gDd49kAnCGv0ts+
Y5JnPyEhSauqIrwlwRxPJrBM/mCUQYr1zNjTHds5Ua2Kf/7EaUm3f/vPkXVH
/mVnn6j253BcLvceTeD0wjE7HpCTV349et311dcN199RN3SEoIIX3lMdz0S1
LFpsYDUEYaEYVXA2p4U76DbMbuG+FmR0wnun42pKFK8xM9v50DnmSlJJwS+N
vKiYkq7tPUPt4KlTjTlzjB9+MLZts/ZnkVzUMYO3PnAPbNoBSaj4iJUSwgyM
8M7xuokTHxszpm8fD5WEu1iSJqFseXX4WW8980w9hreyginlDUwsD145kbjw
o+/ugdk5m/iiHYXZhbyxRwWhj3N1BNj799evP7+u5LHFi5M/3JpdA0G6TUyt
Qy2Ev0lirjlLXJ7LRCougRnsfj/5CAm7810b0c0FElF4PWBdDwG7zh8eHiPh
Avksgs0RAR3D7IriUVDWPcp1h1Tw6KthhjwtvWfRdtvkAJaTs938nWemoACW
xifYOTPteN+iJdohR4x26De2qP5vX5iWevu314zacNTgZrcKd0JkF7T43eP2
FlcHgXT69H59w9jqw22OHt/6+7otTz6P89s3IKptzNklXHiP9C23jsd4vffN
24VkwZIQ9C+/IKyqHbzJm5idPm5EWEp473U2GGNjSJlq9zApcIAHZToYI52O
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
AoFAIBC0G6DLNm7cuBdffLFkfXakbdasWcWmJUdEo1HgMHrEBffZgTnofWf1
FHr6XrrP3tb5LBAIBAKBQCAQCATtEjTPPmfOnGLTomLu3LndfSxZsqTYtOSI
p0+fIns7dOiQj8+uTKaD941edj4+O6Ed8FkgEAgEAoFAIBAI2iUKtTbefYV2
caOctfLbyWfPYZ7dEr0/yPu2w/4UvsWRPxKqTiAQCAQCgUAgEAhaAQXx2Vva
0cvTQ7Q/nvHku3yQj89uQUv47F729ejOWPHxBQKBQCAQCAQCgSAHKD47TbYC
njx5oiRWPC+jU9bU1BSNRl1erftxz549y5L8zITpN3Mj1eioKgTzZAjw2Tt0
6IB7z9Fn19PoePDggU4Yf6q48+x6NVmeop+gRMDwEjxSUCAQCAQCgUAgEAhK
FuSzz507F7yn27dvz5kzZ+DAga+99ho4m507dx46dOj27ds93+cKyqS5uXn9
+vWVlZU9e/Z86aWXysrKPvnkk7q6us2bNwd5ZKtWraqtrR0+fPj169fBlYOX
9ujRA8h47733gJK7d+9CGshzuI8ff/wRn9q4cePwJGpqaoano9YHXsBfeIX+
XijFunXrkNSOHTsCqb1797aT+t1332H+V69eha/w95tvvikvL3/jjTdefvnl
jz76CB4/cOCA8tSxY8eAjOrqappnj0QimM/58+cxDbnJFy9eXLhw4YgRI4Bv
r7zyCu5/f/PNN+FxnjNRWFifnfi8ZcsWvdRXrlzBUi9evDgcDkOpgW8ff/yx
sdQ6tm7dOm7cuE8//bRTp07ALuA2iBxWqHjrAoFAIBAIBAKBQGAHn2f/5Zdf
unbtipPCFDkNv4K719jYyB8kf/PIkSO9evWiR/jjcDFo0CDwypWXwlPgn2Ky
3377DZxZfBH+BQAlHotnPnPmTHxq8uTJ9BZKrAAfgb/wCuWlR48eBWeTJ6ZM
IP3gwYNv3Lihs4hC6588efL48eNdunThBaTrWbNm8Xlk8H+N5AF+/vlnyvzZ
s2fg/BpZRxdQkHv37rXcPPvEiRM5nxXBOHXq1IkTJ6DUxDFe11Dq5uZmfcUF
/L1z5055eTlPzNkOlX737l1x2wUCgUAgEAgEAoHAAnLNPvjgA3Jg33333erq
6s8+++zll18mP2vKlCn64+Bck4P50ksvgUcMHu7o0aN79uxJD7722mvg19Mj
6KbV1tbir1OnTg0xRxv+/uUvf8E048ePJ8cQn507d+67Sbzzzjt0DY/AG+Ht
b7/9NuYDZZk/f75CKh+LMJLauXNnTiqxCH3zBQsWQFkgWadOneBx8DqBBu5f
A3n01IEDB/r06fPpp59S5r179+7jA1xgYsWwYcMoQbdu3cA9nz59OhA2YMAA
YD7lDDRwkgrrs3M+kxNNIwlU6rKyMiw1Mpnw1Vdf6a43ePpvvvkmshoAsgRv
mThxIjCkY8eO+OBbb7118eJFd/oFAoFAIBAIBAKB4HkD+ezoXoXDYe5G1dfX
08Q0uOQPHjzg27rhKzjL5G+ePXuW53zw4MGuXbviOECPHj2UTdDgnFK28Hfo
0KFbtmzZt28fuHUrV67ENBMmTECq+PyvBdevXwf/HbMdMmQIX8z/8OFD+glI
PXPmjE4qvqt79+5NTU1GFqEHPWbMGB5N7vTp0/gsoEuXLspqBB6D7o8//lAI
PnnyJP363XffKbsPGhoaBg0ahL+C/37z5k36qYA+O9Qj8Jx8dr3UCKXU4JJT
5b7xxhtKqaEgvXr1whl5qHplGOTcuXNQBZjtgAEDPFkkLxAIBAKBQCAQCAQB
4K7Zl19+qThfgPPnz9P8+86dO/lP4Mfh/ffffx+cYj1zcKJxihawaNEivIkO
Gvns6F8baUOfHTB79mz+rA64DwR8+OGHmB4uHj16lD+pOouGDx+uP3v8+HEc
eQDs2LGD/0Qx6EKmuPGjRo3Cn6ZOnWosF7j5r776Kg4mbN68me4Xdp6d+Mzn
2fMp9bp16/D+66+/fuvWLf3Z+/fv02iP8qxAIBAIBAKBQCAQCAjkmr388sv3
7t0zpvnss88wzbfffks3GxoayKfbtGlTUP4LFy7ENGVlZQ8ePKD75LODN4oz
yLo/zn1JeymampoGDhyIid966y3cQU8Z6qQaff8gUolFcN+44R3Qq1cvTLN0
6VJ+33jWG74daB4yZMh7773XsWPH+vp6JUOikJi/YsUK+rXlfPasSt27d2+9
1I2NjbTwYMOGDUHEbNy4EdN0797dvQgCgUAgEAgEAoFA8FyBXLP+/fvTTcWl
HT58OKbh+7X379+PN8HrVBZ188cfP37cqVMnTPnrr7/S/ZEjR+LNv/zlL/ob
ES4+Ox6dRtPo8K5Tp04puVlI5Xj06BHFbD927JjOInDMjfwBUHz4r7/+midw
OZ+dluIbmRCJRHS/uHV8dtwLQKXWgaWGZFhqxJkzZzA3YCMf+lBw9+5d4sz9
+/dlebxAIBAIBAKBQCAQ6CCHdNy4cV6A2zhlyhRMM23aNLq5YsUKvBkOh+2v
oCXrGzdu9LS18QMHDsRk7vPs/BB5uFiwYAE5iTt37tTPGUdS4dfy8nIjhZQY
SQUnFEjVV4mD+xzkWlLENjzmnuDis+uUwFPnz58HGkaNGtW5c2d8/JtvvqGi
teY8e7al3r59O97s1q3bdSveeustTHnq1Cn3UggEAoFAIBAIBALB8wNyzSxz
2RjaXfHZwcfHm5MnT7bkD+4ezhSDyzxnzhy6ST77+PHjeWLuHrrMs2/YsIE2
jNNMtOJjUlz0SZMmGSmk9OFwGFMiqXifWDR9+vQgMogbLj47j+OHFw0NDevW
rQNODh48+L333nvppZf0k+zAZ6dsW8dnxyBy2ZYa6Aw6hk8BhpSHiy1btsg8
u0AgEAgEAoFAIBDo4OezB6UxzrP3798fby5ZssT+CvCUMSU/MJ189oULFwY9
aJ9nB/z88890Gh2uE9DTIKnoGyqbzR1JDfLHOSANerjZzrNfvHixpqaGO7n8
APTu3bvjcXJF8dktpUb2GjmDDzq67VhSiwwIBAKBQCAQCAQCwfMMF5/dOM9e
VVWFNymouxHg3NFeb37CO+1nxyDtOexnv3DhAq0bHzBgQFNTU9BcLZIKXqQ9
lh0nlS8eQM9U98f5g+S90loChN1nhyJ06dKFXPWQf1pcv379gM/ff//9pUuX
PDb1v3jxYipgEX12vvXA6LOjtAC7evfuvdSKZUnw6AECgUAgEAgEAoFAICCQ
a8bjyykw+uzgpuHNmpoa+ys+/fRTTLlgwQK6SfPsysFqHBaf/datW3RYWM+e
PS2xzvInlXuv+mZ5RFZr4xGPHz+mIrzyyisrV668du2aThKuZwAXGHx2uln0
eXYqNU6U8zSrV69Ggr/44gt32gQCgUAgEAgEAoFAoINcM2WCmO+5NvrsGzZs
wJuffPKJfTMyTSWvX7+e8szHZwdvl85W69q1a0NDg50ATqolmUKqHoMu49r4
rHz2ffv20U96EDZ6+9/+9jedUa3gszvuCNDTHDx4kAYiLFH6BQKBQCAQCAQC
gUCQEe5r48EnhQu6eezYMXwQ7p85c4buK+7zjh07aHc2HpuOqK2tzc1nBzdw
6NCheL+srOz48eP8EaPzTqQCTp8+HfQ6IJWScVKRRZa18V5O8+xQKLyPh6kZ
KYdHaGM4n/ovnXl2Pc21a9eoyPv27aP7SgFv3LjRuXPnv/71r8OGDTt//rx7
KQQCgUAgEAgEAoHg+UHO+9nBBaOV5EOGDDE+2NzcDE4Zpvnss8/4TyNGjEBv
NCufHV46ceJEGgTYtm2b/pTu/CKp+LocSNXXxusg71XZYgDpKaacsvSdtsl/
8cUXxmybmppoM7uSM3nfy5YtCyq1DngKmRDks/PQBFmNVCBtREN5eTne79at
W2Njo/FZqEdM89Zbb9EJ9QKBQCAQCAQCgUAg4MjBZyfX7OTJk+SQTpkyRYkC
9/DhQ4pTB2n279/P81Ri0BlBZ7ShLwmZL1myJJQM17Zq1SrHMsKDSCrmRqQS
tQ8ePCBSAQqpGVeJUww6o4fbqVMnfHzTpk2ce2vXrsX7ZWVlZ8+eVZ6KRqMU
EA8p5wMm5LN/++23jkywPEV8njlzJt3kgQ6MAwJwEx7U97MDrl69CoXCx8Ph
8N27d730UYU1a9aQYOhB46FmJ/qYN2+ee+kEAoFAIBAIBAKBoP2hrq4uo88O
Tq7uNtLj+BM4X7169Vq2bNnhw4d/+ukn8MR79OgBN/HXGTNmKGev0352HlpN
AU3Fos9+6tQpPNEbsn3zzTcnTJgwZswYcGzLy8uHMgwZMoSuL1++7GnHrIf8
5ehA6i+//IKkdu/enX7SScWTygGWMH2WUH4ff/wx/tSxY8c+ffoMGDDg4MGD
cP/mzZsU975r167gqF68ePHWrVt79uwBGj788EP6CS+GDx9Oeerz7C6IRCI0
z84LCJzE+3yeHQUD7lvOeiPOYBqe54IFC2jA4a233oKve/fuPXHixJYtWwYN
GkTc7t+//7Nnz5TMoQYx227durmXTiAQCAQCgUAgEAjaH8DtetGHfZ4dp1N1
n725uXnhwoXgjZLnjinRs0bPix9SRnCZZ8c125DPrFmzIAfwryn/EDvHvEMS
fFYa/4KTaCT1xSSIbPj70ksvAal62DRkUchtbbx+Mtp3331H1GI+VORt27Yp
ZPMLIHXp0qUnT57Er126dKE15OCzY1bZzrMbn7LMs6NgWEptnGdHrF279tVX
X1UKxfHZZ589fPhQfxB8dkzQvXt399IJBAKBQCAQCAQCQfuDy9p4cNUxDVwY
3bezZ8/27du3rKyMu8CdOnUaMWKEEhGdHqf97HyeXclc2c++f/9+7vqR864A
7+NfcHhdSIWvOqle+myynUVB+9kRy5cv79atG1EI76L8jx8//sUXXyhF6Nq1
a11d3ZUrVzx/kfwbb7yB9/fu3YsPkved1Ty7PQadcn59zjHoOBoaGsrLy197
7TXFbe/Zs+eWLVuChgJwnj3kb4d3L51AIBAIBAKBQCAQPA9QVoa7o7m5ub6+
fseOHdu3bz9x4sT9+/dbgraC5EOkbtu2Dfx64/HuhXoXARhy5syZW7du8XP0
8OLGjRtHjhzZtGnToUOHlPDyLQedjIwpc37LtWvXDhw4AAU8evTozZs3HTMs
eBUI/n/23gPucqLe/5/kLMvaQHYXr4DS8fdXKYte7xW8V5oILkgXy6UrNnq1
wRYWpAiigAioFLlXEZEFpEtZQUUUBVGKspQFFhYWtgHbnpPMf5JJ5sxJcvLk
lOdJzvO836/ZbJ6clMnMZDKffGfmCwAAAAAA/UhPxFHPFZY+oX3aIpcYUqHX
vXpNbylLwHZ5wpzDW91pzy8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP2DV3YEAAAAAAAAAKAQftkR
AAAAAAAAAABDUqf7BAJh2AMAAAAAAEAmsV6oTxVyqvCmEQiE4Q6lVgEAAAAA
ANAPhJqdQCCUEAAAAAAAAPIpXbYQCKM2AAAAAAAA5FO6bCEQRm0AAAAAAADI
BwUBAAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAAAADVBM0O
AAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAA
AAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAA
UE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q
7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAA
AAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAA
AADVBM0OAAAAAAAAUE3Q7AAAAAAAAADVBM0OAAAAAAAAUE3Q7AAAAAAAAADV
BM0OAAAAAAAAUE3Q7AAAAAAAAADDg5+51Wu5W/uaPfsKkMRLpJSfzoUiZCV3
B1lgH+L7GSfwrf/I4uHDX2z90VEJAQAAAACA/iKpuLzmpWdt9wKpPs1JaHZL
vkVH+akTZ8k+iPAD6sGaTjnPSiy96rWRfJHEjo7wGqcJTxL+6tl7xqcOPxoU
u06UvzrOwYF1Wz9manzIRedNI/nTaejLxb6c4ck1mndAtgMAAAAAjET8hijw
bYEdSYfGr16TQbWlnT3UgcFBGaLDFo9aOqLpUvhx8MIMsZLIy5LtXuMY66PK
sqX+3x6W1/xKnnaaPOjz/l57yR13lFt92N9sM7n+enL8RG/sKnLcWDlhgtxg
fbnp++XWW8kdPubvvbc85JDgkKt/6T/0N7l0aeLMnt0HIJV3nkwKfVRk2zQ+
nviNP+Of6kqtS3maDNS6Kz393HkZDxoAAAAAAPQ9xg4eqTD9X2wwlc02U9sa
GxvcAzt7pNmFdILgq5Vo3ZHCCZfhuividRFsd6P9g/Vot3BJCIJKFleOUemj
l0K6ThScOBnHmHQWshYtn11PXHqAc9gPxMfuFOs+G+6n8sNXuRKmb10ITzh6
3Q/WRbgMtg+opSPqbnhIeKDnuJ7aotbXfbfcYXv51a/Kn1wun34mQ6d70Zce
/fnF8+1PB4WN9RDgxw+iTPapCDpfyIVSflurdd8X0q/5UjT2JKUBAAAAAEYg
XnOP6BQrV/r/eLR+3XXyzO/IQ78k99pb7rhz/cNbyfdvJtdbr6HZp4mn1hcP
v1/ct/WY2z4mrtlTXPx55/gzxe7Xifc+6o5dIZxYoStpGQl23431Zs36k5AV
gsSpWV9FapEcV38qnf7T/d2DLnU2fDrQ5q4Xi+5ArQd6XAVXhgrd09udcLtW
8W6o38PPBH4k8EPBHh7iR6JeXT76qhLsv/76/sEHy59eKefMsazqRlo2Fx/d
2QLjbzs0RpQ0vp75S0Lb+sRQqjvBUrpSBuvlxRMAAAAAAIacDDG14BV57XXy
2GPkJ3aWG20UqrVYzoUG83gltPeajvHTGvuYHcxKvSae2ljcurM4+zix50wx
4dVYuTd0es2yGhN04uplZGG3BHu48uf/EEeeLzZ4yhLakcQOJblvLOxmaQR4
c/Aa6j7U5pFdXtT1lniZfYaNNpJHHCHvvx8Lb2+J7Oxhr4VFSq0H49YDea6C
8IOlG//pRkeQAQAAAAAAI5hXX5XXXy+POVpOmiRd15ZnoQIMll6W0msaz+44
flIQunrPxE/qEn+dJL53tLPXdWKNBabbvBPKdoL5dqFHEERbItk+e2N32lTx
nicaZvFmKd2wpKswxhMb/8v5xE3i6O+KC7/iXrO3c/uO4r6txN83dZ9eV8yf
6KwcJ1asOv8V+fTT8uG/yz/cJ2+5Xf7qWvmDC+VRR/uTd/E33liOqclG1jn6
zCnh79Q32UROmypnz84oXKjJjvAa49ZDeR7a1p2m9ShEkM4AAAAAACONuS/I
73xX/vuHlIj2EtqvWDBGdrUstL+T0O+u7zp//qBzwtlineexs5ugk8IMIhBi
4Xjn/MPFVn9sVsrJBHbGLRPb3SGmn+xcv5vz2HvFylVS59Q9HJoul19G6ivk
44/JG66X06fJ7beT48bJ9HXt8OH/lOedLxcuiI9vKEkmoyuKNctcQp5Hpvbm
PwEAAAAAoI9IKqMM69uSJf6ll8mP7VBcmw+i2acW1ez54c4dxIGXibctccNT
13JVba1hek52Ke/HcfG15LqvbeuO88Ja4vjviLe+3izV4+nj1HLscvejs8TU
KWLWNmLZ2Pj2xzh+fgIW1ewJli+Xs2bJqdPkNtvIVVeV2siezsy3vlUed7x8
4YXWhRCyCNS6r23rtZRUbxUAAAAAAKCiJEej504fHWy87Tb5mc/4497kp/qr
V0Gz6/DGOHHVvuLjt2sBbiv0lqoz56eqh5yvE7M3Fl+8WKy6VOviYIB5PN5c
S3Wx17XOzD1qy97UrPfNXANF49BBkdPLZcvktTPl3nsH4t0aUO8bIa+2f/FQ
+a8nU8XVuIcfLcb3ov7WtW3dDj6aHQAAAABgxOGHNP6sS/mLa+SWW3rCjcah
O05bfeCHU7P78SD6v2wpPvVLbXM3AnNQ+3ufBT1iPR63Hm9/aJL43FWiZuzX
jbwKpPG2d4kfHSIWr26liRHpIjavt5FK7ZSruv09yPgbWLxI/uhH3g7bSzNB
fWN8vaiPqclPf0Y++FD6S5IX+w0c4RT1t+5bOt0vaGRHswMAAAAAVJpm26VZ
ifytyxUr5I8vke/ZRFvVvVitp+eFq4Jmrzev6xjO3lh84UfO2BUiZZIeEeLd
F9G8/NpEPn+ic/ClxmYdztlfD9V4Xaw1V3z762LOOlrjh77XxghjTw/OoBSz
0v6Jrxy90Oy2Tg+9j8WlLpLbXqRHveeek6efLt+5VhhhXb4in3GBt/eDDpIv
vZQ4p9dwZzYiacffeuzBTQl2YfWNT49nR7MDAAAAAPQJlpjyLEkQyIHly/2z
z5Zrv9trTBlmZnEXlbWze9FI7loUYdcJPIU7ztx3iWPPdcYtt83KblL59ltw
Yjt7oLXrjvjBYc7bFwvtYz0aJB7m3oZPiIu+JJaNbdjifTOhnBNKeDOxvDC/
Fh/X31HJi43jfhxk3AHc95ctk5dcLDfcxPiIbzibe/vb/QvOk/W61vze6PDb
Xtzf+hjpac0eCnZvULWOZgcAAAAA6Bv8eBnooJtulhtulNbCgdXTicR7T8JQ
9Y2Pbe5e8/LJjcQnbjSeyvtxrrlU0Or791uLSQ8LMdA8eb/nbP4352efFZ5r
j+s3wjz2kec2ztMQ8m2EwkXMs5Z6JVgPx2HUG4O1/WgfJcx//nO5+SRp3ZGW
8PUPTJK/+73ffLaRTXF/6yJcKajW0ewAAAAAANXGT/WNf/JJufvuLSV2bIP1
Y7N71TR7GDc3Fq6u9bUhXnHFDbu5Gz7lNAvVvg3zJ4oDLzOd4SPv6mq56UPi
xl1a3GCs3K1fdW/5zuJQsKSFGNludfZu/O/JpNk82O2mm+RmmzVmqAs/N9RV
dJu6yo98ivpb95o6xqPZAQAAAAD6GV/6Zn6rN1bI6afIceMSyrfJcNujYexD
p9nj0PJ7glbuy8Y5U6eJccuadKtRr+Ur8YLhrm2DUeqxVI8k7WpLxLnHOANj
LHmeCrGRXTQ62Efr+tfea/bmUpexLbeX+8BKee658m2rJX3DrbW2vPvutq/f
d7Tjb90Nd8DODgAAAADQT/gZa+FfRijdPUtusGFPVXO5mr1QeHJDsc2sQaR6
SRI+0Npu84h7OzKu54ppUx03NanA/j8VL7xjmGM7bMV43jy5/37SjG3XEy24
rpw2VXqe15hcPUGTib/P6MjfersBAAAAAABKwppiWv/dNPdX/JM3fbp0xwy/
ZC5ds6swMEZMmR54sHMaRmdbJpfWeT6eF65JxYdRcp3n1wr8tYnGzGzB+uZ/
E/f+Vykz6Q1bcdbF+He/k5tvbjtz91QybbetnDvXlGur432zYK/MnHVD6m8d
zQ4AAAAA0M/40SL4//l5crvtfOHWeyqE+0iz6170s7YV//aC1shjRCSWA3Vc
imZv7qBu4hP/euvHxTte0WO6RbgMrO0nz3AGTDf44Y7z8Bfh+oA86aTAwh5N
jB8mxZpryhtvTrgsbPzlyVZm+BIYYn/raHYAAAAAgP6hoQb0BF9e+F9ocL/1
ZrnmOwKvbYHwqo1OzR6P0HfnTxQ73xJY2x2/FkcusG67wy6BndBDejhCPfho
EMQnjEmw8dST7OnmAuX+zhfFb7YNvzCU5m5+uEt0rHDvulOu/U7jDy6Q7Sq3
TpmRKvjaRVo11Pqw+FtHswMAAAAA9CUNU+OA9E/8utaq2sK+MjbtjjbNrmV7
ODFd4Mbu9K87NT+hSYdVC4f29JrTcKSuB7CHET3sB4FUF3U9jjtQqR+/Vcx7
RzjIvVaif/kSi/S8l+WOH1eRqAefMpwgZVxHHn548GUqTUVU+9D7W0ezAwAA
AAD0B8YiaasVb9kyuedeoRnZSXhDG4Wavd48E77S79ft6bx5qY5cGRK44TY9
Gk0fzES3fKzY95dNuTRmwDnjG7qXQBRVfWAZ0R7WIh2Vaq+hfH15+ulylTGh
kzsRTUz3qX3liuW2bteO4OuZ5yyDIfW3jmYHAAAAAOgfrDm4ArGzeJH86Dah
6nO1ZVkP6PZib26jTbOnvdqpcM9HxeqLjPitieGbPd64YGsY953X3iK2vzMw
r2sju1qu8aq4Z5uEPA8PDA53h32i+2EvzIaGKr/nHjl+DSmsry87bC+XLM7c
uSITyA+dv3U0OwAAAABAfzL3BbnZ5s36VMvVtM+w0aLZsyR8sPLQ5mLtufbk
b8MphEXcJd4R894pJv21KY7velY8+v+JeGL51qp/JGr2CM9aNnj0Efnud9nz
yfuTtgzcw1WQIfa3jmYHAAAAAKgqrYbser7/2ONyvfVKF8UV1+wmeEI8s554
zz8LiFa/g+7oIv/wSI8rwb7x7KZ4vfcR8ey6HV1xJGn2VnjPzpHve2+TbN9k
EyPbBzGvD48buGHxt45mBwAAAACoIpboiL1Rmz8f+LOcuEbpQrh/NHvUW37+
RLHlX0Ryejcjmf1uHbgnbOL2hZwlbxNbPtAUqa3+IF6dIOIp4offnl5lzR5N
rujLBa/IrbcKZXvcT37SJLloid4rU7b3pKt8pfyto9kBAAAAACpLOG5dhhrC
j0X740/4E96u1FVZHeD7ULM3lPv8ie57/tXU4bxFp/SOgqX6LcFeEytWFdvd
YTywB8vJvxZL36SiEXqQj0avl67Wq6PZNdqN2hvL5K67BBno6DEfTv1jOySm
pOv1davlbx3NDgAAAADQB4SWP0/Ofd5ffz3j063EKeL7ULML7bz+6XXFOs/H
U7hbyjpW2d04g2s61jFCft9fht8MwrnQ1dZdbnQGxoQRSs5QV4VQdklP4w2s
VLJdWhMrevt+WtYHhuBSVfS3jmYHAAAAAKgkfuP/QC6o/xYvlptNMgo0FjDJ
adLR7OngxUvp1JSYfmhzsdpCYfqlh6F7M7e6hus0d4kPwmE/cOxYbP0HsfRN
cX/4OAJ+VYzs1dHsXqyZ9Z9Ll8qPbK1l+0CYXt7hhw/ZlcNlZfyto9kBAAAA
ACpG1CO3LiPrXkDgh/2j/xVpv4qZ16uv2RviPU66ez4q3rQsFuzdS2a/qUu8
6XvvzPiWvrJ26ybe96h4dY3w+4AeVl8tC3t1NHuz7/XI6v3qK35jSrpwiMGp
pzZ5P5Q9m3quUv7W0ewAAAAAABUk9sCuGZByz720E3atOj3Gs3cWw9j7m5J8
1+7prDIgYsXdM9lugnvzzk44ZD0aw/6uZ4NZ4uNfqzPpXAU1e4QffrOyZPiz
c+Q675Lmk5VKxJtvHqL54avjbx3NDgAAAABQdfyvHR+rzqgnfAUFe+U1u5v+
86yvZcvtDkKyS/zctcSaL2tdGVxt/ALx6HutLwMilu0182dFQtmFfRAefUSO
H9/4ErLmmnLe8z2+RMX8raPZAQAAAACqS2BkvOVWYx2ueKi2Zs+KsFPb8bbG
qPbe2L7VeT1XbHtXpNZVGDMg7vnv0sX4yNDsinvukauMkXHyettuK70ezSJf
SX/raHYAAAAAgMriybnz5Jrv8OMe3BUP/aXZvXCIwUtrirVeNE7SO5a6zT7W
p00L/YnHvSFO/3rpSnwkaXbf908/3Z5G3p82Vf/i6SHoqSP62t86mh0AAAAA
oHpoSVGXcvttS9e2I1WzG1F957bC9brvnV6LurjftW3oSTxWlDveEiaNU80Z
5/pQs3tB8OROO0mTja4r77or0OSezBje3uf+1tHsAAAAAAAVJBQmp0wLvHr3
Scf4ftTsKm3rYQ/5k6elPbYXDdq8rueBd+evKdaaa67grP2SmPeO8Er9Idgr
r9mjuRmV6p73kv9v7zSy3V97Hfny/KZ9gtWR4G8dzQ4AAAAAUDVCiXH3b/3A
mXj5wnYEa3Yvlu3eGPHR3zqxC7aOgxAHXuFoN+1KsLue+M226jLhOUVlJ4rv
K83exJ13+K4rRfRNyzvogIZvRMve3u/+1tHsAAAAAACVI/DGvsGGRlf6lpOy
Koe+0+y+5bH9qQ3FuKXdOH0Tzh8+YiZGC5Ynz3DkGMsKX13/bv2i2VPj0L2T
Tgpzzwm+kwhX/v4Pmcf1tb91NDsAAAAAQPWYNt2PpbqXdFJW3dCPmj1I4UC2
B0PQp03vQu3Wa2LSQ9FZXels/rdgi1bwVXLl1tea3WCke31Abr559J3EceQW
k3y1Jbat2/Svv3U0OwAAAABAxXhythw3rpoe2EeeZvctU/uycc4GT3aor53z
j2w4d1Ph3o+Urr5HnmbPmGBOynvvbSS7yoLzzk8f1df+1tHsAAAAAAAl0Twp
VmPzbrs1FKUbdYmnb/zQSXU73LCbvpMm5W73aXfkmGjdj2aDd9TG+e9w3r5Q
ny9Y7v/T0qX3iNTsrdh/v8aQhPGr+y+9HG0fEf7W0ewAAAAAAKWR4Sf6xptS
QpK+8cMadr7J1ZI8lOpamMcSPtTpjtTLYLY5LdvFQT/RmjHYutoS8eK/9dFE
8X2o2ZP+1l+c5731bY08PPhg6Y0cf+todgAAAACAaqAUyLLlcqONIv0bGtZj
83p/yPY+1exWH4YgnZ/YSIxbnpgvrqb3Synx0InbQ5N0r/iob/y5x5Suu0e2
Zk/4W9ece26YBcJf7a2vnXTSqfX6+JHibx3NDgAAAABQHn7zEN1zz0kpykBF
9svY9v7S7Jl943U49hzTN76FudxY2JXg/8zPwyxSYUC8/yG3vkrpunvEavbW
/tZXrvC33nrJN046beHCNfSg9ZHibx3NDgAAAABQPoHwWLlMrvUuL9aSxs6e
Iy2rFvpLs/utP4Y8t44zbvlgsj0IQsze2HFXitDCG0wTf9OuIvbs1qeh7Edh
UJL+1gOf7IG/9W+vXLla6LWtFir0EeNvHc0OAAAAAFAefmPF//FP0uKxLvpg
6rn+1ew54fM/dtI+2jIcrB96cXyEJyY96Ggh37eD2ftBs8uUv3Uzbj1Q6FFP
+Gh++BHgbx3NDgAAAABQItpc6Af/b7JxYtx6v3SJ73fN7mV9GHlik9BluzTz
wzvxekOPOy/8mxi7XDh1fZDzs8+KPjey94lml03+1qW2pFtu2vya8enW//7W
0ewAAAAAAOXjX/WLWC26iSnR+ij0l2Y36WyPPrDX97m6MUt8GGq2Hg/Wj/9O
pNbVThvPFvWa4/exhb1fNHvS37qvDevNwjyadG4E+FtHswMAAAAAlIRvLbfc
snQN21nQIjdcumnNnjkYv1/6D/xly9Ze2pU2XzBevPX1hma/6NDgJ7/IKPhK
hzKfiMEYlf7W0ewAAAAAAGUSdIy/7Tel69NiIW33d5Uq92J5ntDskTZ3auG6
2+IM1Q3qjna6rdk/exRC+/v5h0fO3dQt/tsLzvJVGzsEyj05Fr5fQhkPQdLf
uvbmZuOPXn/raHYAAAAAgLLZd9/+mmsuQ96Gy/y+8Smbe6X1u76jq/Z1wxuL
9Kwj3cDa7rtBx/j/+JMeyR7c1re/Ffac7+/Z58rS7Al/67Zg9/16oyf8KPW3
jmYHAAAAACiNQJwsWSLf8hZrDHs1Q4a+Nho89E3upu3s9eYz9I9md/XdqbD0
zeJtS5zIaB6J95p28RbL+uDWxZy1rJ7z/WphL0Gzt/a3Hjhwkwul/HZoWw+G
pY9Wf+todgAAAACA8lCa5fLL/Waf7FULJlZ29LwNGvK2scP0QK170zLs7N5Y
IT8Y7dkv49nDeLoHXCqSLt7Ub6dMcyLBLp3t7nTkGDP7HPPGt0nS33r4XCwJ
besT9RRzsVofnf7W0ewAAAAAAKWyw/aZArniQR4i/MNqSob7qzgm2radPdgS
jmQPdvgvIU8Q8kBL8mfNTVe54AYR/s3H9OzxTbLd2eQJPZohkOg//ny4sdm8
7vertb2MZyDhb/00r9ETXoQj1l3z5+jzt45mBwAAAAAoh6AT8Nx5sub2hYa1
jOOhbX1bR2p7+olC7ijkhFCkTmvqGy/fIrzthfya408RKsj/7oPbzAhObe25
kQCPlPv9/xla08Pfxy4Xi1cPf62JhpG9XwV7SZpdNvlbD+V55GDdXg/D6PO3
jmYHAAAAACiP75ydUsQVDUnN/i4nkudTXN0f3j+g2c6+t5AnO01b1okOj8eB
V/2uo84DjnP82cKN7eyBbD/igsaUgftc0xC8fuYk830Whv8hSPpbT4pQe8so
9LeOZgcAAAAAGGo8s9aYE1v//+8f8vunP3xS0n4tEuPBAHZtc5/SLNt10Mb3
r5Uf4XaCa74tqPDnDzYr8Q1nNzT7zD1KV9kV0+yeXeDzwd86mh0AAAAAoJoE
kn3BAumOMYK94kbnDM3+KT3dnJuh0wOp7jRJ+E+XH+G2QlM3ftcZvzCW7c+t
29hr7HKxbFzpKrtimj0u3vhbR7MDAAAAAPQblnTx/BtuiMSv05jGrY+C3DKa
In7wMM2RH+yzu7OD0u97XCuiseqX7xdsc+pB2GZWckr5/g89KOS+H/lsw986
mh0AAAAAoH85+mg/tufay34J8m2BGNeyfVDx7q9RfoQ7kOp66QnxvaOVnq0F
sv2Qy/TvwXxz06f1u2e3Hmt229+6XuJvHc0OAAAAANCHeErETJoUiV/H6buO
8ZGq/UoxO/tR5Ue1rWANWIhW/jpJhH3ja2K9pxo73v3Rfp9xrseaXZquJNrf
upm9AX/raHYAAAAAgErj+82Deue/EgpDt3R92pW23ckx/t0iU/v0LCP7J8uP
arfBdSa86rhPr2+mpquNW+kuG1O6xK6YZrdmn8PfOpodAAAAAKDfaOj2mdfF
tnXXLPtvSPtGKXmuXbFPdfUEdFrI++/r708TfjhD4J4zHXHFAfFfvtjuDmE8
to+g0LOiHo1bXxN/62h2AAAAAICKY5nYY0PksceUrkO7D3KMI7+VO4w9VO7+
m8uPatu3lppb4Jxjhfiq5Zl9+sml6+tqavZYrU+Q+FtHswMAAAAAVJ60o6uA
nXcuXZb2Rtvu5wTTwidmiZ9q+YD7gt6z703tN31CODvcGf/lOdfvVrq+HhbN
nva33tL9uu8vCf2tT8B0jmYHAAAAAOg7fL/e+GPDjUoXoT0J8sOxMX16s3Kf
Hq98LNyt37r9p8OTGwqx7rPhatg3/vH/N/I6xmdp9rDoyiL+1iPbehBizY6/
dTQ7AAAAAEB/4UvPX75c1soXoT0JcmJoWLdN7badfZrwNig/kj0Jr9febPrL
O25drBiBE9BlavZcf+u+H80JPwF/69UIAAAAAADQMXGn4kcfK12B9jB4xwg5
pcWQ9m8FXs37y+98q/Cw2EJb2IO72ejJ0sX1cGj2QfytLw79rU+w/K2PCWQj
HePR7AAAAAAA/Yx/3bWlK9Behk86UU/45oHtwaTxB2rX8+4I6Bv/K+fTjiOj
vybf5IzESeOTml228re+MOVvPXS57umVcE45/K2j2QEAAAAA+gfLXinlWWeV
rkB7EeJp5d7brNNtO/vWYgSodR1OFd8U2siuwlHnBArXF6VL7CHW7K38rTf3
hG/4Ww97xRs7Owb3EgIAAAAAAHRFIN4//4XSFWgPgxznWH3jXSPYg7np1ur7
6eJNOFhcHvwffIHwxIVfEbIWityRJttbl9tMf+tCpv2tl69bR3MAAAAAAIBO
MTNv77V36Qq0t0Ee4hhv7I2VrykJWPOjadb7PuwlZjZu5Vd7j8iO8ZmafTB/
63ZwGztgZC8nAAAAAABAJ5ixwJ5a/diOpSvQXoSGDV1uE0wRn5yA7lOlx7CX
YUfndvOXe9sOpYvr3gdfOEFfd90XxJP4W+/LAAAAAAAAXbPVVqUr0N4GuU7W
YPYP6pHsI6R7/IfFHxp/3fdhLXLLF9odafPM7U641CXU8xfhb70/AwAAAAAA
tI/fvL7pe0tXoL0Ngdo7MR7JPi3W76s3dvBE389Et6n4e7Tq+M4/Nitfenca
nOQWnX81Efb2D3vCz5ByPP7W+zMAAAAAAEDXrLde6Qq0V8FMCy/3sezs0xx5
VPlx621YX8yJVz3xzLtLl9490u9jQrWu8k+sJsVJwWj0CVKOwd963wYAAAAA
AOiKwOQ+fnzpCrTnwZvkyJOtjvG7Rl3iR4yvt7eL+Y2/FkwsXW73KAR3s7p0
TpbOgkDxubH0w996nwYAAAAAAGgfv/nPVcaWrkB7HuTbLME+zZHvU4qwNjJm
jNdhVWeFXnUcKVasKoIZ2/ps6ngn9kxnVlaT4lu++6ovImO6J8Ke8DXLxzr+
1vsrAAAAAABAt/hjR4Jmtwzorhf+Kb9kyfY3RRtLj2evwjixPPjfqQdLpdnL
FuDtC/ZoGX5qiDT7W6U4WYqFUoQj1pVgD1S55wsz1xz+1vstAAAAAABA10yY
ULoC7T7ENnTXGNPljtHsc/4XGruNGNk+Xrxi/nJemRBr4f6cOr45rBYq9wW6
D3yk33XA33rfBQAAAAAA6AYv6Cc/Uuag85zGMggbCjk9NLJ/rPy49Tys15iD
ztdz0PVd3/j8sIYvTgsU+uoZSpB54/smAAAAAABAx3jR/5u+v3QFOgTBlWMc
+a3Q49sG0cYRY2RX4f3G15sKf9+0dInd6yDCUJP+QimnGOUe2tnDiem0nd3P
1u/4ba9MAAAAAACArvnwR0pXoEMRAsvzfkq2CyXefdv+PiLC1uK+aDC7Cvdt
VbbEHqqgiqfv+56/QPonh8rdtfRgvI7ZvboBAAAAAAC6w5dyx4+XrkB7EtLT
wssPO3L/hFp3S49nT8KOzu3mttzffDy2TZevsnsRdOYF68bFgae0u1zo+9+U
8u2BWo/t7Np1uy+F77mN7YSqBAAAAAAAaBvfr5uO8b5SQnvuXboC7T7E/d6b
/LDL8cLfWowYnW6HvcRMvRp4Srt2bxHPxN7/If7yEHivG6NLqWd5J/Tlq1J+
Q9vcvairvKtN7T6zylcuAAAAAABA2wQ6PSAez/6FQ0pXoEMX5NuiMewjaTC7
CgeLnzT+uvArZQvtoRHvgQbXeHGhjf+SC6Wnbe7CC03tMtbskUv38uUqwRnO
ag0AAAAAYGTQ0D7m/9PPLF2BDl0wPuBGmGY/TXzT/OUc/d2y9fVQhaYSa8qw
6SWilLv8VqDc4yHtzD5XsQAAAAAAAF0RyKHrr/dGYu/xkR2uEfuYv5xdbi5d
XA+dZm8urJll+FUpwxnqMK9XLgAAAAAAQOdEGuiRR/3QHp22RI+wudZHUnhY
bNH4a+N/jTDn7NmafZDCrG3uKX/uSsgzsXxpAQAAAAAAuiHsY7xihaw17Oye
GFF9yEdk8IR4zX1Lo+P/mAGxcpXS9XWJmt1vrDQp94Y/dx3w545mBwAAAADo
HxojhTfYsHQdSsgJ6Q4PT28kxLrPxrLdcx7fpHR9XZpm9/XCi1YCf+6vSP9b
zf7cRbM/d2aYR7MDAAAAAPQFoal9551H2BRtIymEstyth4MXvEDIBjl1807C
2eE3epfA3dsNuwtZK11il6DZmwa5G6dw3mD+3GuRP/fyVe3IDgAAAAAA0D5+
JHT8yC5Zl8cda4lEd0Q6NO/foKcakLGpPbS5u989ToivXKg26M3utJNCz+Yj
Tba3U6w9s7Snmg97yxt/7lqnC21qx587mh0AAAAAoKp4TX/NvM4WifWyVSrB
BM9Jruj1PWc64vL9hRPn1fZ3hiJXlK6yy9HsUfd4a2B7kz/3ULl7J0k5XgnJ
yJ+7X2v4cyeg2QEAAAAAqkdD17z6aqJvvNc71UnoVTCyXWXWhFcd8cy6Rsc7
45Y5K1ZxypbYpWn2Bl56U/MMddornKOHtMeCHYM7mh0AAAAAoEqkXV1vsUXp
mpSQG9xgPHs4bOGvk3Q3eCHWf7rx+6xtRqud3css0a39uS+OlDtSHc0OAAAA
ANAvHHN02ZqUUCh4jvje0ZGkdQ6+VDj1aLD7tOlpzdvvlvehK++Wcg/VJT7c
0ewAAAAAAFXm+uuNJKRjfMXDHtdH9nTn8gOCDU49CNvMSun0mrXsyzBEhd3q
Ld+s3L3QJZxvVHxsiPetJQHNDgAAAAAw/CxcKF17unimjq9K0FMNND6kuGKN
BdEPYs67hfb1pv4eu1wsG5eSvX0s2IdKs2f4c18UKvc1mr2/idQKAc0OAAAA
AFAe//4hoxAJFQw6a/78QW1J12LcFRv8y3FjQT9zj37vDD/kmt1P/+WF/3xf
Lvb9k6ScqJR7MDednlVeLb1wBX/uaHYAAAAAgFLxz/qO7zpa/tE9vlIh+pDi
BssTzm5MNBco9CMvaOy4zzWi0Te+5ihFX7borpxmT6L9udcbT4Fc6Mc299AZ
XMqfu18rWwj3UQAAAAAAgN4x94W4ezwd4ysXtGyv15y15zZNDu/88T8dEXlp
d1Zd4SxaPfopPkz080x0Q1XUW/tzD/7zApu78eeupHrg0l3b3MtXwf0VAAAA
AACgN0SKZYftsbBXM2jn7HfukOXNbePZIh7Q4Pz488H/0U997/ptKIt8hif3
xBMR9JYPbO7jU0PaEe9odgAAAACAMrjs8oZILFulEvxYqptw4GV2x/i46/vU
KcGPoWx3drjLCHb6xmcRSfUWztsziOeWX6Ns/duPAQAAAAAAesrixfJNby5d
qBIyw9I3OastblbrQaiJ2RubvYL56J59V2xhrzX2KVt9V0azd0A45r2wcvcz
No7ayesAAAAAAKDXfPrTWNirE+xp/K/at3Vf9//8Y+Ogb38tFOmRTu/fweyV
0ewxgX84o9yF9PWsdCKelS6eZz6Q7cxTh2YHAAAAABgabrlVqSUPp28VCpEv
t51uE7EAb6xEwvz8w83utbXmiaWrOP0/mL1yml2Gsj0IgT93T88tLyOvcE3G
dN+I1lFrYUezAwAAAAD0mMYc2pM+gGCvVFDZ8cAHou7u2XbzBePdt70RT0Lg
iUu+qPZ0gy70/T2qvcznIQvjzz2YZ95f7MX+3GVgW489wXlmhjrXNsGPygAA
AAAAAEPA1b/wAsFUS0yARigjuNr13mevCjW7WjMa3NcqPtxPLU/4jhMY131X
LTeeLepOuFq+7h4Bmt1I9chJXOgYTv/z5EKZ9ucujfF9lAcAAAAAAOglvqbu
yU02LlurEhrhiU2CzvChAB/TLNgdJ5qSribmriXGrgx21xPI/+xzDfHr92s/
+bIfiJY0ZHsg5tVfSzx/SmBz9x3fC2R7MKQ96CHvjm6v7gAAAAAA0EsaDrB+
9COfIe2VCV/8US0en55Q300Twjtfuqhx0BYPZu7TX6HEZyGJLxsqPaJheY/s
73KxJ6fGc8sLs8yaSX6UBAAAAAAA6ClGkqxY4a3zrtK1KkGF59dxxq6wpXot
Id4jO7tan71xPF9dGG6a3NeD2aul2WPH7oMSeIXzpw4MrF62Xq5CAAAAAACA
XuIbYaLE+znntFKR2N+HLoRp65o/PUcc812RGpbesq+785mfhweFR2/2N1EP
tbw+b9kCvM81eysytPzKFf7WWy+afsrJCxfm+3Mf8VZ4AAAAAAAYMpYtlxtt
ZKy2ofe3WumSdgQH/SUknP2v8UnkyQ3FuOVtiFznwS30oYFQV6c598hI4/tG
5ttfAKrebb7sZ6A4lnL35XnfC7PAkauvtmT6jCmet4b2/hb7c28Idh1GrmwH
AAAAAIAe4Wdt/PWv/YbVljCEwcvaosLkXyectQ0+m5x7yGXBobqT/OqL3Bff
qc7Qp53kh/sp6IQmO7vv+/PmydVWl1E2Ov4hBwW95X051ZMTjLv2UKS7DfHu
OyPUHxwAAAAAAPSMaIqtaC7saFItf9ddiwhMwlCEX+8emsKV8isg1Y2od15c
s7bGouBbi5btB17RbGfvp1Dm81AA32/+1hX84R2wfyTYHVF/++rypZcjdwyh
P/cpkT/3WKQHk8yH/twjP3EpE3yfBwAAAAAA6A3ad1WMJ7UHK/Xf00/JceMa
ah2b+7AElc7LxtXWn9220Hb8WmBSP/8w4crgNNpF3O+2drWd3Rf9ZXAv6Wko
jJcQ7fLee6VK+fBriScc/7zzk0f4cqEfzS3vRl3lI3/uzkj0CgcAAAAAAL2m
SYV4gZafNjXSkq7jMQHdUAXXqHW9MmV6rK/9lHJPb2mE8Kd6TWzxYKQc1d6T
HhQDaaleYzx79/jWmjfgb7FF8JFEhI+IWq8PxD9a38RCo7u2uY+Xfk1J9SCo
m/Vize7XytbaaHYAAAAAgL7BW7ZMrr9B2ZJ2dIWnNnBWfSMS5knLeJ5gb0wO
7/x+m0A86sno1HLKKc279Ye1veyy35qwG3z8h17xppwsTR6qJP7d7wY9h/bn
Pj4hdUfQlHQAAAAAANBjYoNgsweru++WrjsU4pRgghf7ZPNdZ9u7G9O8J/R4
OLa9kH3cOeCKhoR0PXHX9oFU99Oe46obyngC2sMY0O+6Uz0iDc1+wP6FzxD6
c5fBDHUjycKOZgcAAAAAGF6mTS9d1Y6AYBy6xVsyvoRMndaj+eJeXlOs9WLj
xGp9/pr2d4DqW9vLLvS5WGNIXnpZvnMtaWZnVOvzX2r3ZIvjce5a7bqthbDb
PyPfAQAAAABguPB8uc22PpPG9ya4tmA3El7p1Lu3cV2vN5o9kOR3bS+cenBu
tXR8sfMtjSv56atUbnh72YW+ieZ5Ghs9UtT/O+1kLOye6wY292zniYNeIlLu
q1v+3J3myeSF9GteuOyH6eUBAAAAAGDIaUiVuS/Iie9QAlOHSKIkdShh8BCm
XizYre0vTXTXecHR/t16odnDTJo6rWmy/zOO78nJR6Fmb8KPfSNKecYZxrlb
sJw2VcoOJXs4kZ30PX9R6M99jYZLOG1592KpnvTnXlnxDgAAAAAAQ04421Yo
UJR4v/XmsHc38rwLwZ7S76FdvabCJ24LNjmNvutdat7Q4Vu9JraZJZy6npLO
rQ2Iez+StXMt7jNfIWt72WW/Jb5f1yv3/l6Orck4Y72PftQ3c8W3czr9X/iY
hVNJaH/uoc19ghbpcX94pdzdhkj3KqvW0ewAAAAAAMOCr+3s1pR0Jx6vjezR
0tKhuIErINgbSRQnl6sT8MwTA0kdaNVw2flg89gJu+PH3tzmriUmvirEgL6+
O36B89j77P3j7wMVUutV0+x+iPV3sHjsUTnh7V74MSR4AiZO9F94IXGcJwfF
D63r1mkj7R6tLoiVu6u9wgWy3a9JX/TDhHUAAAAAADAMNHxaBVqi7vl77O41
6dBIfjLUfdCQ+KzhhdpULWfuIcZ4kb07nh++Q83uyobkNyZ7cfPODddvKgrv
niOefVeo7sfEUr2KHeZLLPS5eJ70n39ervtuLdhX6rS98WYZPSxhF/cm7V0M
099efx/w4/VwnPs0KSfGY9vD3vL+EAltNDsAAAAAQJ+z7A35X/+tFagXL0uX
w/0b7v1vEXpjFynh3JWODvW4teWUk5ou+75HxYLx+jtCEPwqziFfdkFvycIF
8n3vlWGniYFgBIJTP/XUeJB7E3FH9wJowZ7Y1T42VO7Tg7nlmy3sFfbnDgAA
AAAAQ05DNfhxUCxcKDfbnIHtnQV7ToCHNxNvX5ipzWvd+mKLZbh2yx6sH/YD
OyLuVveJpW9yKuz0rbxS34pAgy97Q269VTiGXc/JL/zDDhvkkIJnLkLgzz1Q
7hNiXVzlIe0AAAAAAFAec1/w118vlH8o90FCq34Iz6wn1p4rhk0yO37N+dQv
m6Kw2w3OQGyO9xufDhr988PR8V3PhtcPmt2PlllG8YagXrnC/+Su0s7bffeR
nucldhtqYuUe+HNv7a49mrauPH/uAAAAAABQGoH9/Z+PygkT0lPPhZrP8YRL
n3mTIH40ObxjkuuVCeI9jw/bKPJIejvLVxXb3pWQ7WLpqnofM5peWLPWxysl
DHgf1vI8yN8BS5fKXXcJdLoewK5Wtt9OLl8e7V+wD3wP8eVCKWfIyCtckz/3
WKeX688dAAAAAABKRWmUB/7sT5wQaD/XiMBAqtct+7LndKt5+zfoieLNt4vI
u70Q8yeKD/1p+CzsTWHR28Skh1R0AuHpBFPSuVv/PhjbHgl2YYzsiegNf2yH
sSh7pkRHKwl3CeEY9o9sJWO1HqTbllvKRUs69sXeC8I55z1/kZTTY3/uoWAP
zevBnyX7cwcAAAAAgHKI+xGHouaxJ+R664Xi1NUjtT1rerrSVXOpwbUdupmV
ZzYYs8k/wxnnfNcZFvu1kduRtf2ltcTGs0U4jXzY8T2cku7Zd4X7hI7afWtO
PD89Od7I0+waz562vbFRymfnyPe/X0buDcNh7BtvLOfNk8aj+rDSmGHCa8TU
173lxwcW9sifu1u2P3cAAAAAACgRr+G9fe48uflmoT3d9RpdwRvLUR5MIqjE
eXhTd+3n9KZaKNiHzSt6s5V83jvEpIcD+Wmitt5zziPv1YI91vi2VK8Nv3If
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
aKv90BOGIn8HZdCsGba8yy/zg1Zimc9mdQpeZ68Vu4E0FLHKZCgSrXg+wlBw
5pln2s311157rYOTFCwYPS8/xU+YmGIr/0D71+9+97s6cVRBbfct//3vf18f
+6Mf/ajg5YaIthKqJyfP0Q7FE9/QKiUTO9sXbXVps/3RRx89/PDDFyxYkNjn
e9/7XpFcKxLzsp6LnNPab0DFjBkz9M1+4hOf0Cu77rrrwMBAzmmnT5+u91Tv
IHt7x+mWg3r6dtllF/302fEvUq70nyqXDzvssHQuZ1L9eqzLs1Wn2TMMPPLI
I5kPeA5tpU/xeq/7ctXqoevmnN3QwQulhzE56aSTdGrceOONxY/6zne+o4/6
6U9/2pNoFLyjzLwzG3/5y1/2KgKD3mCrCJ9yyilFSteQtiK6J+eiBVtiPbxi
8fztVVqV3oy0f80sUTpN1AvdTpPuvzMUufEO2pyJHex2o92iKJ7s5513nk6T
Sy65pOAhFXwfqY2d5WNbu0ErXn/9ddvEpnJh5syZZUcqoCdvh3yTU8FLnHvu
uVrOXHbZZcWP1TuYN8WPf/zjItfqIHrd0Epj9qqiaPeonF/b1YOJhmLihJ7n
qWxV4lSdMEezd5Br6QiUcnjB89xwww1GsH/mM5/5esi0adPyz2laI9dcc429
vSfplsD+Yqa3FE+Zer2uc1lVa20Jtx7S7nfCzvK9449FHe/fAd3XNsVbBfoB
1197hijrO6v3OkY/dOo5Vc2kLtufw8OgHwy7OefJJ5+sq4W2ut8YSXvllVcW
iW3H0UtszKwwe6LZE9iava07MgpLR2aYy3a7dBCTRPuhs3LY1s5t5e9QfNcq
TgeJMGgVpFoR6frKVGLqQch8M/akRdpD2mo35hyoGYoGUv4VhyjdBs3HYYjD
KESn5I033qgbNmeccYZeOfTQQ7s/bU/ili4M+Vs6jlWrUqfX1UPasWq4/PLL
DznkkIMPPviqq64qeEjPabeBl/MMDvp5pPh120WnpKLLlNSxWr58uflOla57
e3Wt9HWrxje/+U2dCMccc8zSpUtl/D05P7Zps5HefyjS7Zxzzkk8fUUokstF
ztAlOXVUN1+/uzx5l98w8+NTfOdefaNInEevrFixIj/r23qV9LDe6ziRO7az
DwWZd12wvd2TQm7s7L/+9a+Ln01LWtXOSYwB7KAodibfcuzsHRcM+0B1g7uE
2Hb2IumvFVYHHxDyK5N22/CDJkKr0w56YOLd1MO6rtWp2s3farYQMimSrYky
r38tWIl1kBQd1LpFMjGxg2lRKLn66quv5p85/ZOqdoo0kKr5PrJjVamX0Wjj
qKOO+kTIs88+u//++6sVVeE/+OCDpUTGLhVdPoPtXjTnp+9+97vazp5WDd1X
s23VG8VP1eVuHbdeOpMDvU3GIthqbuHChTlnKNgQ7S1Dd/KEtPnqV7+qEyE9
wDMH+yvroBcq8lPOzokvZm21/00uqzpN5fKg3yJ6RfF6zMaMj+smkh0/aL1K
mQ4aQt1cotX2ZcuWmaxPa/YefpApHqUuL9Gqc0u75+mebh7tLitPc2C7feP1
gUazp+3snUWjIPl2dr2x+6deLdMdCQpmVqvS1W77ZND6x0S1589glycp/lZq
6y2Zk7/ptB2K11PBpO75e2rQMt9BrHrewm+XfCvAoO/9YWs0DtH7yNBuPg5R
NEYhTz31lH6FHXLIIerPiy66SGfEaaedpncoPW1zntlhkE6adO/czLh1SelJ
nWDohEO7JxmKdC5ogR3qqq9XdBwf9eDrRPjTn/5kTjXo2TI/oXcZn1aHdNM3
flBj67AxDAWmm0voZlj3Sqp4TIb6+2RO1vekuHYWq24o0tW2avWSoVdFy9CN
nV3R/Vy7bZX5zLyzBzt0GRkTgczx7EUSv4idvbKlK5Mhaj8UP2dv87fvyCxR
BccLDL9BpODnZd1u1Ca8HDt78dP28KihO0+aKuTjKCGheS+++GKd8hdccIHa
8vjjj+s/P/nJT+oC2T31el01n9LRaPXgJLanjzV7mvXXXnstZwrH/GKzbNmy
QXc2qsEez653Thxe5Io5kVQVQm+nOFYnVOlvLlGwshoYGDBHdcbKlSvbPUR3
zO4JiVNl3nXazp6mrXxM33L+4ZnPhTmqS82rcrCIClO/Ks2uR8T89a9/LX6t
/Bp7UMuOHw43ziwk6WNzvphlPn02tp29S80+RPVY4hL5U//loNKzyDPbKmtU
XvTc7FWkEtDRLtheSvyZqNwSu5nGlc76glWfeZV0lhod1Hv59YCNPe1PfvQK
FoaOMamdSPYidWA9pN0rqjtKPBpGs990003F68xWU7Sp0lI8MokLvf7664OW
mRzNPmi7t0hMzIrpSJC4wUHrnx5GJp9WtVz39Y9dIXRJIrla1T/5rbW2krSz
56I4BevYIrlQ8D1l3745bdo+m3NF3YwZClHcMfktis7e+zlU532UoK18HOr3
0ShBpbB6Ij7zmc/olP/jH/+ot3/hC1/QW372s591c/4XX3zxwgsvVGfbbbfd
dt111yOOOOKCCy547LHH1E9PPPHEt0Nuvvlm+5CZM2fq7S+99JIqbD/5yU8+
//nPq5gccMABl19++aJFi8yec+bM+b//+78zzjjj8MMP33PPPfUT9NnPfnbG
jBnGXJhAvdn1yZ955hn154MPPqji89WvflXFbffdd//yl7985ZVXas/UmarB
nrn6lVdeUXH72te+tvfee6vt++yzj2o//Pa3v828rrpHfd0777xTb0k/1Oqn
b3zjGyr++muJklFTp07tYHiCPrNKujvuuCN9wnxRpo5VSaQS8NBDD1WHqDRR
WXbOOeeoU7U6RO1/esjcuXPVn2qpysyUKVP23XdfdYavfOUr6vA///nPORdV
heSHP/yhupBKQxXVT3/60yeccML555+vEiRdV5uUzIxS/qns9Pn73/+uTnLq
qafqcq5a9dOmTdNnfvLJJxPXMrmmufHGG/V2+5ZV2upbVqVI3fIDDzyQf8vt
PhdF0Cq4eA6aZ22vvfbS6XDiiSfqLd///vcHvVyr1kirdEvcvnqu1e2rSGbe
fsJLUUKz20+f2tjq6UvksiKdy0UY0npMc9ddd5177rlHHnmkyjJ1FVWnqVsu
6EKlrWN1HWge2Oeff77dB7YViVtWOaVv+cADD0zcsn4GO7tldayuLb/5zW+m
KzdTXbTK+tNOOy2d9ep1oBJBv0r0XKxFXiVd1nuyWLmyZ1fzrXnMWkkAlTIq
VY866qgOClK7XHvttQVzXHP33Xe3yvGcxp5KpR/84AfqzLpCU1W6OrnaKGPN
rmrvbuaNVwn+ve99T9XbKtP322+/U0455Re/+IXS4PknUWWm3eZHYoY3TW/n
oMu0s+fcYKKl3SoyV199tc7o++67r9Wlf/7zn6vHQe3T6vZld7Vc4h7tApNu
Ph188MGJCkGTaD+YX6+77rrMknzQQQdddtllqiTbH0Zy6p90bIvkr0oBlQ7t
PheDJpHN7Nmz9Q2qPFqyZEmr3eRgr29dvRTMwVb1VaaQt9HNGFVQVTNGN85N
MyatiFVtoAteq8KprqLvqJWcUcJn0EZXZrsx3aIo8t7PkQN6xa5bqvY+spNo
0HyUw/s+GiXce++9uo/Hpz71Kf1BRiW+qn51OVElreNvI9dcc43Ko8kp1EbV
IL///vv1n+ptYh+lCqrerh4B06/GoDWsiqcqgVpBt0KdR6tvG9Py/9vf/qbi
oCd+NOgTKv2S+ezbqkFFQ1fXaVQxTn+uz/cw8vjjj6t0TpzHuNxSwkTVselv
6Tn885//TJ/QoE+YOESdVqWJerRbHaVeiKoWykkWdRePPvqoksmJfNFGLnXj
mQVJNQYSuWDzxS9+UVdBdkrqlEmnpKo31KlMumn0VDzpU6maJH05fexf/vIX
cy29PXEtc8sqnfUt6wuZS5sYZt5yZ89FEVQOmpHpRXJQ1cCtdv7c5z436OVa
tUbyS7u6ffUSST+86vbV60DfvkrAxEeDxNNnPjMmSDx9mbmsMbk8KENXj2kW
LFig2nuJcmtQx6a1j6kE1LHqvZw+Sp9NHZvuPWI/sI888oguvWlM6S3eaEzc
ciKLE7ecGW39EKlMtBvJCUxtqSdgSRxuKreCWT8wMJD5KrHPrF8lifh0We/J
TstVjgRolaqazILUJQULuUq6QQtqq7ipVDIvCFPHqqV6/6pk/9a3vqV/0pq9
YFm1Je1tt92mGpOJXFMrqqWd+LZjdyTIb36onzKbH0NkZ8+/wVtvvVXdYLp6
US3z9MerVpEpEknT5yHT9XnOI6+WqgI0BaBgJprdMptPhkRrx3432RcyJVlp
2/zqOl3/2BVRunGVn3QmWRIZNOhz0W4qrVixQrXw9clznCyo/ffff3+92z/+
8Q97e/HqxY5b8b7x5qh2mzGqSaBLkTpt5k2ZtroSsJnpZiI5a9YsmZu2g75W
ilSJOQ2kVnVLNd9HBct2JkPxPhqpJPLapOr5559vNr788svmRZnzZTWHK6+8
0uSOUsFf//rXL7zwQlWhaYueKj9HHXWU/tU0znXETJlX+yeKnKoq9T7aw4su
kwcffLA65OKLL1ZlSV3FLnWqGCdipWeyUgfqL95q5aCDDjrvvPNmzpx55pln
6uarupDSFPfcc0/iWD1ztfpVvc3N46DqtxkzZqh7UYeY6/7gBz9IJHLOQ6qS
V71SdWtEneTwww9XkbzgggtM+kwOrZ/Fv5zoE+oDzQlVlPQ0g/oW0if861//
ai6nsl7Vmeqos88+W/e40Afus88+qjpNXM7UFf/7v/+rzQ3q6upw9Uj+z//8
j52D6bn7fvOb3xhNfeihh6oUVvuofLTvXeWv3fesVUqqU5lDzKnUzkceeaRd
VMyp/vSnPx199NFHHHGEOUol1NEhqsbLv5a5ZVXIdXlO33Kr6Qo7eC4KonJQ
36ZamhxUjTeVGuaKiRy84oor9C0bP49qZ71FNcBkR8MzZa5nQ3X75u2jblm9
f83t65aPKaWtNLvpxj85fvpUFttPvR7goyP/5z//Wd2LLgMml4855hi1UX89
HpQhrcdk2AJULQp97+q+VMTUeVSNpEqmqVI+97nPPfPMM2nrUuJYFRP17KjD
1T0mjk2npJ6Aq93Sm4+5ZVXb2LesrqVyKnHL+idVUNUt62jrW9aXTkdb06py
s7NYVW5KiZus11WrWpoH3M769KvkkksuUefUrxJTVtOvEuPIoIN6r7NypWn1
0KlUVYmmI6wLgylI5lXeKlU7xs5xnYYmxdKF3BQGneOmkCdy3C7hSnKa3FF1
l1LoKpWOP/54XQZUrbXffvtN7sLOrsWXOr+SM6ohdNFFF6mTm8pEnd/0PLQx
DuYmh9XR6aefrpofpsxMjpvH6TIz/Jpd3aBOPXWDShenbzDRuuutZrcLgMpf
UwBMTZWu5dq903SFoM6sWzuJCkHv3+qdblfX5v2iS6ZKw5zLtap/iiSdqohM
spiasNVz0Rn206Ra+Ppaqgy0GiVk2oGqlWv/lH6EW72nEudst8zbDVF15lbN
mIcfftgcohpsevvee++dbic/8cQTk+M6RCWp+jOxw4oVK3Stq56LN954Iz89
c1oUut2Y8943L8FWDovVr3bdUv33Uc63l1LeRyOSxKM6f/58k4BGqmjMF2xV
itq9xD//+U9T76nctz+nLFiwQJUE8xBNbm2f0m0tFY077rhDvTpVdv/qV7+S
oRHZaM+bbrop0ef5hRdeMI6rVKF95ZVX7F9Ny1+f4dRTT7VHbajUMCJO6ffX
XnvNjpiZudp8GTblTZ382WefNd8GVZKaY/V1VXHVt6MeQDsXlixZYiyG6tWg
ssDOoFmzZpn6sOBsOeqEpmrVJ7R/vfvuuzNP+Prrr6uddeP/oIMOUilsH/XA
Aw+YSKomSmJ0jElSnTKqdrUH+KgnVx2rU0wlaWKMjHlhJVpcKhFuv/12c1rb
LtbqnWvuOt14s09ld1lXV8mfg25Qza5vWdWW9rEq9TJvucvnIh+Tg5PD7nwm
B3Vxys9Bac1B19ZYjBzNrkt7It307etIJm5/4cKF6vbtvgqJ27fT3H769A2q
p++www5LP32azny9DXU9JsMegCbaqo2U+CA2e/ZslS86QdS1ZHPtPeix6o2v
f9XHJlLS2BPPPvtskyb6lo3lPf3A5mNuWXd3UW34O++88/7772/rlltFWw5W
uaVry0EfcD1zi673VL2ReJW8+OKL3/jGN3QOqvaSeZXYyWiyuHi912W5ynzo
7FRVZSaRqk8++WSiIPUKO8fVUud4q0Ku7qhVIc/McdW6Nl90VUZo86XOmpde
esm8bfV9dabZNapZu3TpUtPn9qmnntKFUPczVPor8aHMXNcuMxpdZvQjny4z
w6/Z7Rs0vz799NPmBg888MAiArMDzW6+MWY+8iZJcwrAoBRv7Zhx/el3euIT
a7okX3vttUUup+of8zHEbly1SjqVLEruJZLF0E2ytMIUXcW8efMSv+p0OOus
s/QO//d//yetTGzrPSWt/C1e5tUhqhmjvVYpVBEt2BBVB6p80Q/d3//+98R9
XX311fazkHa38ac//UlHXmX6oL0XdC1hpjZVByZeKznvfVWQbDkwOdWwtN9H
aWlTwfdRTtku5X00GtB94CeHPYfNRl1CVBU0OW7aqdLS1rCa4447Tp/2+OOP
t19q+iT1el0Xg3QZkFaZV6gCbx+oOfPMM3XEfvjDHybOrFHFTH8dUjH/zW9+
Y5/cFGz1k2r22z/pM6hXmxGSWl/bxxpNoW4w3ZpV73pTsO+99177p1bqT92C
vpd99tnH9GK170XVMPpA9W4tkgX6hJPDT46Jrkp6aZ/QHKXa7ZPjXgf6S2Pi
WqqNpAcOq30SY4LMp4zJlqMBG/VqM9+F7GSZM2eOPuGRRx5p4mkPVlKFRx91
+umn56ekkm96ozqV30zOqaTlCmqyNQedOSpfs+u8bnXLpiTYHTa6eS7yUTmo
27fqTWe+FduZmJODCiOUEiPyurSzJ9LN3P4JJ5yQ9hSjttiyvZVmV79mPn3q
RWCSLvH0Zc40WORpGtJ6TIbj2vQO6vFPzPapS+/ixYvNp5jEaH31TjfHJl7f
+nB1rOnlaBdC47NSLTNL7yOPPJJZegclfcvpRDbR/tSnPtUq2uaWE1dXlZsu
HnZtaaMqNx1zU7nla3b9Kpkc2kTSMVGoq2ibhaLVqySnEsis92R35SpzCGFO
qup9Eqna1ts8BzvHTc+cxMkL5ni6vJm24rHHHptOJZWzqtGij9JN3CIR9puH
e+uBGIkddL6bjsSJGen1LSeaHzY5ZWb4NbuK5ymnnJL41dygLg/2DQ5F3/gi
BUA9sLqpqWu5ItJJNlcIiX62egcVW31p0+tjUDv75BbVtVrPqX90sclsXLVK
OpUsn4gHpRZ5Lrp8ZvXhX/rSl/QzpVr+6X1Uc0hPBKQiZvc/z3nX2O+pzKjm
l/mEX2+7GWPPt2BW7GaM/qqgMR1oL7/88sRNaZ2rexKq+5oyZUpih/PPP1+/
NfKHDNh/tmpRKFQLM78gSasQJiSGKYTpuqWa76NE5pb+PhoN6OkRVIlNPDv6
U5J5ftvqJPnCCy/o/FIHJj5FGv75z39mlgHZ/J1q/vz5iQMHBgbUg6CqRFX8
nn322USczVJ3iVQn+dWvfmWXB9OBRP369NNPZ8ZNHaL32W+//eztRqnttttu
9pAlu1bRHUjUPomvea3eFLrXitr/f//3f2XWq0pVDvr7g6qpisyaZU5oKrR0
baNPqDJXn1Dl1ydiVD2QbnRpVAz1Lajbt+2Ypq7YfffdVX5lHmu+uf3iF78w
Gx944AH9BrT7npk4K1T0rrrqKvVE2zmV+Z38L3/5S7obm3376lTq0olTyea6
N+0iYVA7u3oR2EXULgnpW+7yucjBPvPtt98+aA6qnEqMuevtvPE63RJ2djuS
ShVmnvBf//qXuX11EvsuTJrrpy/xKtfop+8TKX/xnfl6G9J6TIZlz3z6vu22
2+yf7JtSP5kBtolj9flvvfXW9FHm2MmWE09N4oFNR8wuveoBzLzxTIycUVd8
+eWX0zuoNqGOttrB3HK6uOpoT071z1SVmz55orY0K3blNnv2bGll/S6pCX5X
rlypXiWqxvjkJz85Z86cdCLoFdMN0hiONeZbZbv1XpflKv3QZRaGNOonvY9d
GLrELuSZOZ5TUNOF3C6oKrNMC7PVtEt33HGHSaV2fb2ZwWiJVoThsssu0/vY
wzpUmVHKVDU/MsuMoVWZGWbNrgdJqRvMrC2VujE3OGhkOtbsBQtnZi03KInm
U5pE80nd/nnnnacjY49nVyv5JVnv2ar+Mehe1ruEMxKb1lpm0mVW/q2ei26e
2UQk9VcFdRdKvKd3Vs2/nXfeWf369a9/3a5UW+Vg/iOcc/u28wuz8cUXX7Qb
ojKrhpdxL27dj8U0RO+77z698eijj7avrt44euSpkrF6HI3KoET/eS0e1T5K
XRYUj3aLItFuHPS9L1vY2XXdoiKjntl+eR/llO1S3kcjnocfflgnmiok+mNI
IqNN/fa5z32uuPuhmTNn6qOOOeaYnN1UtZAuA9Iq8/a3ynQJTDx3ierOlKVE
m9O0V6dNm5b4iGr+XLp0qWktKBFhH6sftBNOOKHVTZlJvRL+4DJnPtE9YfQ5
E33pbZTMLOhxz/R9UudMdA+2eeqpp+xvX6pFZBI87bXE+JhQyWI+8dmTk5gk
VRVCq1vQ02yqOsF0UdMnVLWubjaoGtXuoJs43N6i56BTR9mfKPWpdDTUtfSp
MqVrzvfSdAQG1ezqlltV8jNmzEjccpfPRQ5mepCDDjoo/ZnUrLfKQWnZ2RMz
s+W/wlo15Ey9YY9nN7efeKva2aRWWt2+efpOPPHEVvFJPH3mtHZvipxilmCo
6zElKos8rYsXLzaRN19a9Bi9gsfqz1nm2CKlN/OBzUmExC23+gqnom3GPuRE
W0XVvmV9aVNb5tyy2jNRW+rGlS45rXy9pV9t9m5Tp07VMbHbObLTek92Xa7S
D103BalLcnK8eNxUuiVyXMbzk6ikS7foTDqrNoAZz17Qzq4xZmhVS7faZ+HC
hXofdfJM20HO+VXrQpfzRJkZfjt7zg0uWrTIPBpGpfZcs6sCYMa0Fn/ki9xj
ZvPJYBqEiQrBnmvFfu+YLjetSnKR+keGXf6KDIjQz4VKmfRILvsWOkiWfFQd
aMYL6K+a5loyNEnr9LRtuPYjnONMoVX1UqTM66urhqjpJZXzulHNGDP9jvn4
r17xaqPOHXvuR9We0Xuq+kE1MvVd6KP0JUz5TNTG+e+7nO5bRfSL/eEoffI+
eh9lZm5bjZMelu0RSULFGKOz6cKRwMztoBK/yOT8fnPHs7PPPjtnZzNFQ6u2
riokOVdJo54jpUZvu+22s846S3dsU4Uz0QXIjOVM+C1NYGZu0Z+J9BVNn9Jz
zz23VXwuuOACHflE5xbzYc0ez24+NP3P//yPtN4yORHLR59QRVKfsCC6X0Fm
r6EEX/7yl3WE9Zdhkyx6Y6tJO6VV0i699FL7Bs2cCZPD+UZOOOEElV/qkc9J
hFY6OnEqpeyuuuoqfapWdmeZqnsTWTCoZm/rlrt8LnIwPQAHnXoikYOGobCz
T27u+mUGyhW//Uw7u376Mr/Am4mwEk9ffm+KNMNTj82aNcvYUF7KxYzWMZOn
/fa3v90lnjbN7DZv3jzV9m51rGpz2imZ7hVsY5feQZMrfcuq7Zf5xKlo6x3s
aOffsol2orYcFB2BzrpY2K8S3dlMkXiVGLtG8UqgJ+UqYaJS51SpaiayaDdV
u8Qu5Jk5rkfYdZDj+vbVbeou960wc9e0a2fXR1155ZWt9lG3s+++++rvw0Vm
+TBlRp3c9KtPlJnh1+ytLMIadYN6t4ceeig/Mh1r9lYFQFVW9p+q4jIzViVG
Mbei3QpB02p+VLvu6v5ydoJnJp1dEyaSotVzoZOlrfZh5s7mg9JFF11k7zB/
/nx9oT333FNJ4MyopjMuM6r2JJ/Fy/w111yjI2Yaoq1uNrMZk5j7XaNabnrj
3LlzjTi1xwaqVqLeqHsad2BnT7QbB33vy8Ec66Sp7PvI9s+ut+j3kd44/O+j
EYxK2DfeeMMY3Y477rgLW2A+yh1//PEFT27mYMnXxWbsT6u27qDzZr/44os3
3nijksnqxX3ggQeaMZg2mZrd7pmZSBa9NMOf7cONash50EzBTmt2+1h9ITOZ
wFFHHZUZk0xyfjInTJgyE0clzmAediV5Wp1ZYz7x/eQnPzEbTZK2Gt9nXyLR
/WDx4sXHHnvsZGuCC416llX1cv/999fr9URsW1V3ixYt0qdKoN6w6lR//OMf
Myfe73IOuvxb1jdlVE+Xz0UOJnnNlOmtMO81W4upFDbT3fRWs9vtItO67uz2
7aev1SPQ6ulL53KRV/NQ12Pmac1kl+ZZuDXGnWvi2MyqL4E5tmDptctJTu2R
ecutiq5pIBUnfcvpyi0H1bgyiZOj2Vu9Suz0b/Uqabfe67JcpR+6/IJkY24n
0/NyB7RbyBPlOSfHzbDQ/GaASeHO5qC7/fbb7e2Jsm2muUsb8dWepszowXqm
zGhjn15PdPMbfs2euMEE6Rvs+bzxpgDYyWK25BSAQclpPuXQ6p0+aHkrUv9k
1o3ppEskS2YidJwsg/L73/9en1A1jTzPM3E2c7Wpms2+kW7eU347/tk7a8aY
w81HFXtOde28WJu8TYcBe94zM5S71RiZTIrY2XMqrnzNbtctFX8fZWZuie+j
kY2ZJSCfXWLvUWpZcFr+I444QufFzJkzc3Yzjg5btXXtKSYSqJicdtppugd7
uhmgBIjuMpcu2KbQ5ntn1n1IJjc/U7aH6FYHFtTsmosvvlhvzOnA1hadnfDE
E0/URw06dtX4ClF5ZDYWSZaEBLBRjWqVaHpekTSf/exn7ZneZa5/9pUrV7Z1
Ktm1Zm/rlrt8LnJQOaif0Jwc1K82nYNq5zPPPNN+Lw+RZrfTzXhk6Oz2u3n6
Ops3fqjrMeM7MrO4ZmIMBOaD+eSsVl9mO9AM+ezygc2h4C0bcu7d/GROpSo3
fV9tVW6D2tntV0k6AXNeJR0nY5flytjZzRQ0KlWLlyJ9aznv1rZoN8fTKZzm
/2/vzN+qOtY936d/6nu7n6dPzv3p9j3/Qfe9/8PpOzw3WwURBMFERcQZjcYY
IwZjEI0D0RijUWPiFCVGxThHxRBzVBzigIpE9Ai2oIhoiBFFht2v+w1vylrD
Xnvtea/vJ/sh27WratX4Vn1X1arioHjnKJ/tVLhfOaLI3Ty7doyI5kzOXdJe
l7YZfvD7vFRn+Hrc59mNXZ6KnPMrCYz4PLtVBbDBYeV0N9oJugcd3d10EZc7
++O3yDrX7SJ8uru75XVjtXqMGzeO764eo+Z31U+pUbWv8+rOMzIQ1VZ9GzEd
iJJ55+dCsg9Ve3s7O5OVsZzw9PR03nO+o6ODW3FhYWFIeehEs9uUl41mZ9ti
9XQr0foj02cvceyPUptp06aFlKs+s811NbjU5CGYOhtr7BBlQW+oY12q1dnZ
2WqtzsnJofZOA/VDhw7x47K5c+dytdG2yJaKfeLECZsJoxkzZnD4qveIaHZ1
tbA8j3J+3oH9/CAHSAk3nrhhA7957XOwUIcfZVDOkM2U8CMiAcgGHj9+nJzJ
7qNq9VMNu9UxGS6C8iu2lzLNxR50DpMckXZhg/MS5Fe6fIZH2THQ7JR8Ljjj
oe0qnHwqjjhq9tjYMYktdZrbX4bClL8qMppiv5RL5NfozBQ5BCeOmp3Pbedo
08BMi6HpFYm20Vo6mf1XG7jx5RfuSsQ4+F7uSngjIFlcZNWVOM/GiNQrY6PT
KpJaeUzrBl00nojkDneV3Bgrteg5bu+//z7P/lAINr3Yhg0bOHyZZ3fS5Ymk
1fZP1njjjTfYmboqT60zXG1Mhx9cneKu2f/617/avHPHCaRMlgRaRYaKg69v
f3mzYhV543XPnj1yUa0AXMpq6ZvWT4eV094gGOFfZT8cG81u6ted/fFbZGmo
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
lHJQomTHBFIiQ4YMMYYvzYF6LjnswKFfgYYTml+HDZbvHqpmH+DsuNWg0bZJ
smbcNBtutJY2Ra92Jca+wNiVqNYj/EcfzuuVWplthklqrpp2bVa5GpIEUCNj
eqq1KRw3qdLG6JnGjUbg8gBQhb1TM9+4cSNfCXWenUP4/vvv5YQyDVJ8vKpW
S7UczmKKWmf4VXG1zlDZ8X1D0uwOy0VLIHt0nsCgkamvrzcen8pkZGSQqjp0
6JBx33jBvslTttg0eXt2797NBkEdP0gF0wyC1Xtbzs11qPbH/t0HJ+3COF8T
pmaXZSFy2Ddx6dIle1/u+inn57MzNIyhIrAZiNoMYxh1FY22sTwjLxJSblNz
tk+1FbJ1m5Qa15xwznr77rvvrFLtS6T+SLw4qdtqFmlEpD9KeQoLCzkDnZ8J
znR2dkr+UyAOfd2/f59M3OLFi8eOHUt1bM6cOdSIeOmFPOuW81CczE8xVG+N
58tT1SovL79z544/YI7kKWtNTY3putBnz57RPzMzM8XmkDUoLS3VdrwRIrUH
nalHsvNUIppyp65w8+bNFE+bHDaF0tvU1GQaIOW/TYANDQ2kfHnZj2QLBbJw
4ULjPgacq2q2WBlSG1tBJXX06FGulupNs7KyZs6cST9p7m3OetOCEqyCEsjg
8CYGfHfjOjopNWOSTfNEkvyqxdGfLtqFQ7gEtXKnf1KiTHeiYHjnFl/kNDub
aKvHDpx86lsl+VTP1eRTvnHyjS3XdKtnxtj61KyjSKoP6p0/YPdHzY4J9+7d
e/fdd8kWsRfZZ4Yqc1VVlezWq9UE/ufdu3fnzp1LxlnrFjW/Qtzn2RmKdklJ
CSdZjTlH277OO7GW6kuX27dvV4teey2IT/Xln2QFF3Ulzc3N/v6uhGOoapww
7R4TUr1iqNFxJE2Xyam5aqwMVm8Kux4jaSVuOkNnjJv2bNaqogrHjx+XxRLM
8OHD+Y6UXXzFuWaniFHe8pNMUprPnz+nsuYZLllMPnv2bCoFq2JVhx/yJNxY
Z9iButeiaHYuO219qbFAw9fsWgK5hlMCi4uLTRNoMwHqDyxOXrBggSrcaKhA
LfHKlSv06+HDhzl8U83u77dUppXz2LFjLvYkl7jxaEfW93KhmA6fwlkbLzi0
P0HLV7Il1HYRKVEj5/yOGjXKiXuH/ZSKafJt8oQzzWYYE/Rcth9++EG8mD6I
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
fvmFL9bU1HB+Tp06Vc1/yi5S6+R+wYIFr732Gn0ZMmSItg0+pZpjbvoABAAA
AAAAAACAFWfPnmUxSMraqKFEfHV2dvJsOHHlyhVxIFqSvMtFYzjaS9Da5K9s
mFZRUaE6k3l2EuZGX8z8+fPZzcaNG+Xirl27WHVOmzbN6r70d9asWex32bJl
4ubGjRuijtWnExodHR0i+UXYOqG7u1u7oqZo7ty5xkcQ5MBJPotmJ41segte
o07pUsva+JTm6dOnMt0vZc3anNdjqLsFnjt3jl3u37+/rKyMv1+9elVuevPm
TX4g88YbbzjPJQAAAAAAAAAA/sDO6qyzSkpK7F2OHz+eXX777bf+l+d2fYF3
xk19Wc2lkgb829/+RkEtXrx46NChLDa3bdumuhHNrm1XrkpvXuxNfPHFF+KA
wuSL9KtNimSvNtLsEub333/PF0eNGtVqS15eHrusr6+3zzp71KzIyspihatl
Bb9iYJXPxrIwzXa1rO2PVqey5oXuXNaMuve7XFy3bh1fbG5urqys5O/qovqK
igou3O3bt4eWLwAAAAAAAADgeUiuskj85JNP7F2KZFu/fr1cFJ1oelyayt27
d/ft27dy5crZs2ePHDnS9Og3K81u9S68v39veU2z82ZuxKZNm2yiJBpWnWen
OBgjZops815VVWWfdhVeo26aFeqJb1pW2OezptmtykLySsra6omKaVnL6wDq
tvYTJkzw9c/+8xIFSo66Nd/06dPZl/ZyBAAAAAAAAACAoMycOZMllbYu3cjH
H3/MLkkb+g068csvv7Ty2NjYWFZWxpvFGU9XHz16NL8HbRSqojFNj3KzcVNU
VMQXKysr5aJxaT1pbXYm77PTr0GPkldhlzZpN80KLXz5p01WOMnnoG5CKmt+
L57ClBx7+PAhR5UiyVfa29u5TOWhx7Bhw8jN4MGDnz175g+8QcDlXlhY6CyH
AAAAAAAAAAC8gLVYaWkp67h169bZu+c3x0mRkaCTEILqRFKp2dnZqkrNyckh
8bh69epDhw7x3OvcuXNZy2ub0ss8e6ianQLkO6rTxEa+/vprlpy8bzynSBbM
k/Dfvn07udH+atBF4/FnNlmhqnU1K3hjOnmf3Wp//nA0e6hlTaxcuVK9LpPm
fDD90aNHueCOHTvGuSfnyF+4cIH+KU9FbEoQAAAAAAAAAIARVqkkplhVlZWV
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
0Oze1OyCaTvV9DvaMgApAzQ7NDsAwMtAs0OzG8FQP/GBZveUZjdd5W5sp7/+
+mtTU1NLSwt9QSsGIJWAZodmBwB4GWh2aHZTMOBPcKDZPaXZVbS2eevWrc8+
+2zcuHFDhgx5NYAvQGZm5vvvv79///7Ozs54RRUAECmg2aHZAQBeBpodmh0k
I9DsntXs/n7Zfvny5aKiIl8wcnNz9+zZE+8oAwDCApodmh0A4GWg2aHZjXR1
dd25c+fu3buYbU9YoNm9rNmJHTt2DBw4kFX5gAEDXn31Vfo7dOjQGTNmjB8/
Xn4SysvLe3t7bQKMbGOH6QAgskCzQ7P7YVoB8DDQ7NDsDOn06urq4uLiYcOG
0eCfx/lpaWljxowpKyu7du1aHOOGbbWMQLN7WbOTAJc18KzHz54929raKg6o
OdfX12/evHnQoEHibPXq1U4CNz3w3WrLu3BSEdXQAEgxoNlTUrNrdk89GUR+
+vXXX2/fvt3c3ExfgoYAAEhVoNk9qNmNfcRXX32Vk5Njv8L23XffvXnzpjp6
T9hDphIzVpEFmt2zmr26ulpa5WuvvVZTU2Pj+KeffsrPz2fHAwcObGho8Ltt
IMZj5rSfrP7pMGQAgA3Q7Cmp2f0W9lPdqETWU/FGJaWlpQcOHHjy5IlVCACA
lASa3YOaXaWjo2POnDmqNqd+YcSIETNnznzjjTdYyMuMXlZWFkmAMO9oesC0
Ey/h3C71gGb3pmZ/+PDhsGHDuD2OHj368ePH8pPV0e3kJi8vj73QYM/dfZ00
UifHz7kOHwCPA82ekprdaLdloxIZesnSR4avk1XnjUpMp+YBAKkHNLtnNTvZ
9l9++SU/P1/2mh47duzhw4efP3+umv3bt28vWrRIugxS8Y2NjVHqF2yCRU+k
Ac3uTc2+YsUKbq3UJM+fP88Xg+riQ4cOcftNT083XV2p0dXVZbpC3q+0xMeP
H/f09ITfMNG0AXACNHtKanb/y6Z1x44d8kKTjLuysrJ4oxL+SZXwvFEJrCgA
XgCa3ZuanS18WVmZ2P/169dbPa2l78eOHeNNrojCwkJjUKbhO79uvK/DyXfP
dlXQ7B7U7N3d3dnZ2TxUW7JkifaraYvgfz579iwzM3Po0KHU5FtaWtRfKysr
FwS4d+/e8+fPP//884KCAgp/5MiRGzdufPTokbhsbGzcsmXLokWLJk2alJGR
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
WnAmGA==
    "], {{0, 752.}, {1340., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "ExifTag" -> 26, "ColorSpace" -> "RGBColor", "PixelXDimension" -> 1340,
         "PixelYDimension" -> 752]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{534.95703125, Automatic},
  ImageSizeRaw->{1340., 752.},
  PlotRange->{{0, 1340.}, {0, 752.}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"5c86c008-802c-4fb5-beb4-91012ca26215"],

Cell[CellGroupData[{

Cell["Describing colors", "Section",
 CellChangeTimes->{{3.803735515552462*^9, 
  3.803735519806656*^9}},ExpressionUUID->"4f50f39c-4d55-4d30-9a0e-\
51640815aec4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"RGB color\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Description\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.13834638211441952`, 0.10944037874548829`, 0.09705518183954887], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.09223092140961302, 0.0729602524969922, 0.06470345455969925],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.13834638211441952`", ",", "0.10944037874548829`", ",",
                "0.09705518183954887`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.13834638211441952`, 0.10944037874548829`, 0.09705518183954887]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.13834638211441952`, 0.10944037874548829`, 
       0.09705518183954887}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.138346, 0.10944, 0.0970552}]\"\>", \
"\<\"RGBColor[{0.138346, 0.10944, 0.0970552}]\"\>", "\<\"RGB color 0.138, \
0.109, 0.097\"\>", "\<\"Black\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.6998114874500838, 0.013106753310190289`, 0.7453896078041529], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.46654099163338925`, 0.00873783554012686, 0.4969264052027686],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.6998114874500838`", ",", "0.013106753310190289`", ",",
                "0.7453896078041529`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.6998114874500838, 0.013106753310190289`, 0.7453896078041529]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.6998114874500838, 0.013106753310190289`, 
       0.7453896078041529}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.699811, 0.0131068, 0.74539}]\"\>", \
"\<\"RGBColor[{0.699811, 0.0131068, 0.74539}]\"\>", "\<\"RGB color 0.7, \
0.013, 0.745\"\>", "\<\"Purple\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.41098744104091556`, 0.8671517747586834, 0.6623246833367291], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.2739916273606104, 0.5781011831724556, 0.44154978889115276`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.41098744104091556`", ",", "0.8671517747586834`", ",", 
               "0.6623246833367291`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.41098744104091556`, 0.8671517747586834, 0.6623246833367291]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.41098744104091556`, 0.8671517747586834, 0.6623246833367291}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.410987, 0.867152, 0.662325}]\"\>", \
"\<\"RGBColor[{0.410987, 0.867152, 0.662325}]\"\>", "\<\"RGB color 0.411, \
0.867, 0.662\"\>", "\<\"Light Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.6371560959968514, 0.7985979800330758, 0.2571355735647842], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.4247707306645676, 0.5323986533553839, 0.17142371570985615`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.6371560959968514`", ",", "0.7985979800330758`", ",", 
               "0.2571355735647842`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.6371560959968514, 0.7985979800330758, 0.2571355735647842]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.6371560959968514, 0.7985979800330758, 0.2571355735647842}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.637156, 0.798598, 0.257136}]\"\>", \
"\<\"RGBColor[{0.637156, 0.798598, 0.257136}]\"\>", "\<\"RGB color 0.637, \
0.799, 0.257\"\>", "\<\"Light Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.548304732640936, 0.725850133023968, 0.1819235574702489],
            RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.3655364884272907, 0.48390008868264534`, 0.12128237164683262`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.548304732640936`", ",", "0.725850133023968`", ",", 
               "0.1819235574702489`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.548304732640936, 0.725850133023968, 0.1819235574702489]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.548304732640936, 0.725850133023968, 0.1819235574702489}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.548305, 0.72585, 0.181924}]\"\>", \
"\<\"RGBColor[{0.548305, 0.72585, 0.181924}]\"\>", "\<\"RGB color 0.548, \
0.726, 0.182\"\>", "\<\"Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.8818156401069392, 0.47620256378328363`, 0.10674904138416186`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5878770934046262, 0.31746837585552246`, 0.07116602758944124],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.8818156401069392`", ",", "0.47620256378328363`", ",", 
               "0.10674904138416186`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.8818156401069392, 0.47620256378328363`, 0.10674904138416186`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8818156401069392, 0.47620256378328363`, 
       0.10674904138416186`}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.881816, 0.476203, 0.106749}]\"\>", \
"\<\"RGBColor[{0.881816, 0.476203, 0.106749}]\"\>", "\<\"RGB color 0.882, \
0.476, 0.107\"\>", "\<\"Orange\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.29500412829881206`, 0.9079955791864953, 0.7014883513816168], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.19666941886587472`, 0.6053303861243302, 0.46765890092107787`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.29500412829881206`", ",", "0.9079955791864953`", ",", 
               "0.7014883513816168`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.29500412829881206`, 0.9079955791864953, 0.7014883513816168]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.29500412829881206`, 0.9079955791864953, 0.7014883513816168}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.295004, 0.907996, 0.701488}]\"\>", \
"\<\"RGBColor[{0.295004, 0.907996, 0.701488}]\"\>", "\<\"RGB color 0.295, \
0.908, 0.701\"\>", "\<\"Light Green\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.43979550971980985`, 0.3546381234991267, 0.012921790905866759`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.29319700647987323`, 0.2364254156660845, 0.00861452727057784],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.43979550971980985`", ",", "0.3546381234991267`", ",", 
               "0.012921790905866759`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.43979550971980985`, 0.3546381234991267, 0.012921790905866759`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.43979550971980985`, 0.3546381234991267, 
       0.012921790905866759`}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.439796, 0.354638, 0.0129218}]\"\>", \
"\<\"RGBColor[{0.439796, 0.354638, 0.0129218}]\"\>", "\<\"RGB color 0.44, \
0.355, 0.013\"\>", "\<\"Gray\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.10609572752463148`, 0.9630025658230474, 0.8666665284503903], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.07073048501642099, 0.6420017105486984, 0.5777776856335936],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.10609572752463148`", ",", "0.9630025658230474`", ",", 
               "0.8666665284503903`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.10609572752463148`, 0.9630025658230474, 0.8666665284503903]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.10609572752463148`, 0.9630025658230474, 0.8666665284503903}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.106096, 0.963003, 0.866667}]\"\>", \
"\<\"RGBColor[{0.106096, 0.963003, 0.866667}]\"\>", "\<\"RGB color 0.106, \
0.963, 0.867\"\>", "\<\"Cyan\"\>"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.8443134928309199, 0.9344760613670275, 0.11019104425074921`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.56287566188728, 0.6229840409113517, 0.07346069616716615],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.8443134928309199`", ",", "0.9344760613670275`", ",", 
               "0.11019104425074921`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.8443134928309199, 0.9344760613670275, 0.11019104425074921`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8443134928309199, 0.9344760613670275, 0.11019104425074921`}],
      Editable->False,
      Selectable->
       False], "\<\"RGBColor[{0.844313, 0.934476, 0.110191}]\"\>", \
"\<\"RGBColor[{0.844313, 0.934476, 0.110191}]\"\>", "\<\"RGB color 0.844, \
0.934, 0.11\"\>", "\<\"Yellow\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803644632020982*^9, 3.803644682610911*^9}, 
   3.803644761582692*^9, {3.8036959877513742`*^9, 3.803696003995997*^9}},
 TextAlignment->Center,
 CellLabel->
  "Out[435]=",ExpressionUUID->"7721d2eb-160b-4f50-8bad-981177faaaf1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"RGB Color\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"English\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Spanish\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Portuguese\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Japanese\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.5315508423688435, 0.8963071160423999, 0.08447860222293757], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.3543672282458957, 0.5975380773615999, 0.05631906814862505],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.5315508423688435`", ",", "0.8963071160423999`", ",", 
               "0.08447860222293757`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.5315508423688435, 0.8963071160423999, 0.08447860222293757]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.5315508423688435, 0.8963071160423999, 0.08447860222293757}],
      
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Light Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]], 
     StyleBox["\<\"\:8584\:7dd1\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FrontFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      BackFaceColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      GraphicsColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757],
      FontColor->RGBColor[
       0.5315508423688435, 0.8963071160423999, 0.08447860222293757]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.8562436874347557, 0.893878676250859, 0.9084928333204632], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5708291249565038, 0.5959191175005727, 0.6056618888803088],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.8562436874347557`", ",", "0.893878676250859`", ",", 
               "0.9084928333204632`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.8562436874347557, 0.893878676250859, 0.9084928333204632]
            ; FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.8562436874347557, 0.893878676250859, 0.9084928333204632}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"White\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]], 
     StyleBox["\<\"blanco\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]], 
     StyleBox["\<\"branco\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]], 
     StyleBox["\<\"\:767d\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FrontFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      BackFaceColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      GraphicsColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632],
      FontColor->RGBColor[
       0.8562436874347557, 0.893878676250859, 0.9084928333204632]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.078990535524045, 0.2047584826132307, 0.9728208319859564], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.05266035701603, 0.13650565507548715`, 0.6485472213239709],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.078990535524045`", ",", "0.2047584826132307`", ",", 
               "0.9728208319859564`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.078990535524045, 0.2047584826132307, 0.9728208319859564]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.078990535524045, 0.2047584826132307, 0.9728208319859564}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Blue\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]], 
     StyleBox["\<\"\:9752\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FrontFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      BackFaceColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      GraphicsColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564],
      FontColor->RGBColor[
       0.078990535524045, 0.2047584826132307, 0.9728208319859564]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.13184733619671873`, 0.3559323783015158, 0.9632163441824413], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.08789822413114583, 0.23728825220101055`, 0.6421442294549609],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.13184733619671873`", ",", "0.3559323783015158`", ",", 
               "0.9632163441824413`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.13184733619671873`, 0.3559323783015158, 0.9632163441824413}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Blue\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]], 
     StyleBox["\<\"azul\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]], 
     StyleBox["\<\"\:9752\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FrontFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      BackFaceColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      GraphicsColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413],
      FontColor->RGBColor[
       0.13184733619671873`, 0.3559323783015158, 0.9632163441824413]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.32261583418055184`, 0.6428518478739196, 0.2411705809881679], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.21507722278703456`, 0.42856789858261307`, 0.16078038732544528`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.32261583418055184`", ",", "0.6428518478739196`", ",", 
               "0.2411705809881679`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.32261583418055184`, 0.6428518478739196, 0.2411705809881679}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]], 
     StyleBox["\<\"\:7dd1\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FrontFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      BackFaceColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      GraphicsColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679],
      FontColor->RGBColor[
       0.32261583418055184`, 0.6428518478739196, 0.2411705809881679]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.903279482578941, 0.29128764519587347`, 0.9627255998789606], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.602186321719294, 0.19419176346391565`, 0.6418170665859737],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.903279482578941`", ",", "0.29128764519587347`", ",", 
               "0.9627255998789606`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.903279482578941, 0.29128764519587347`, 0.9627255998789606]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.903279482578941, 0.29128764519587347`, 0.9627255998789606}],
      
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Magenta\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]], 
     StyleBox["\<\"magenta\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]], 
     StyleBox["\<\"magenta\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]], 
     StyleBox["\<\"\:30de\:30b8\:30a7\:30f3\:30bf\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FrontFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      BackFaceColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      GraphicsColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606],
      FontColor->RGBColor[
       0.903279482578941, 0.29128764519587347`, 0.9627255998789606]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.22501472267246497`, 0.09789293841154316, 0.14606113596713888`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.33752208400869743`", ",", "0.14683940761731473`", ",",
                "0.21909170395070832`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.33752208400869743`, 0.14683940761731473`, 
       0.21909170395070832`}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Black\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]], 
     StyleBox["\<\"negro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]], 
     StyleBox["\<\"preto\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]], 
     StyleBox["\<\"\:9ed2\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FrontFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      BackFaceColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      GraphicsColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`],
      FontColor->RGBColor[
       0.33752208400869743`, 0.14683940761731473`, 0.21909170395070832`]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.4460312710483445, 0.6652266938300524, 0.7588244456181577], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.29735418069889635`, 0.44348446255336826`, 0.5058829637454385],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.4460312710483445`", ",", "0.6652266938300524`", ",", 
               "0.7588244456181577`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.4460312710483445, 0.6652266938300524, 0.7588244456181577]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.4460312710483445, 0.6652266938300524, 0.7588244456181577}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Light Blue\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]], 
     StyleBox["\<\"azul claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]], 
     StyleBox["\<\"azul claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]], 
     StyleBox["\<\"\:6c34\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FrontFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      BackFaceColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      GraphicsColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577],
      FontColor->RGBColor[
       0.4460312710483445, 0.6652266938300524, 0.7588244456181577]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.07239368375320673, 0.2816745738915191, 0.13945996020686055`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.10859052562981009`", ",", "0.42251186083727865`", ",",
                "0.2091899403102908`"}], "}"}], "]"}], NumberMarks -> False]],
       
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.10859052562981009`, 0.42251186083727865`, 
       0.2091899403102908}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]], 
     StyleBox["\<\"verde\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]], 
     StyleBox["\<\"\:7dd1\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FrontFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      BackFaceColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      GraphicsColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908],
      FontColor->RGBColor[
       0.10859052562981009`, 0.42251186083727865`, 0.2091899403102908]]},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
           0.22433340366812882`, 0.9301433802623331, 0.6934793545924998], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.1495556024454192, 0.6200955868415554, 0.4623195697283332],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"{", 
             
             RowBox[{"0.22433340366812882`", ",", "0.9301433802623331`", ",", 
               "0.6934793545924998`"}], "}"}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[
            0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[{0.22433340366812882`, 0.9301433802623331, 0.6934793545924998}],
      Editable->False,
      Selectable->False], 
     StyleBox["\<\"Light Green\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]], 
     StyleBox["\<\"verde claro\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]], 
     StyleBox["\<\"\:8584\:7dd1\:8272\"\>",
      StripOnInput->False,
      LineColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FrontFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      BackFaceColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      GraphicsColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998],
      FontColor->RGBColor[
       0.22433340366812882`, 0.9301433802623331, 0.6934793545924998]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.803696480390135*^9, 3.803696500104021*^9}, 
   3.803696622406044*^9},
 TextAlignment->Center,
 CellLabel->
  "Out[444]=",ExpressionUUID->"e799f1a7-0c6d-427f-9c35-6ef33832814e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing graphics", "Section",
 CellChangeTimes->{{3.803735589631027*^9, 
  3.803735600000669*^9}},ExpressionUUID->"1238e1ef-9b00-471d-8fc7-\
0043f4c0b28c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"Description\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {2, 0}, {
           Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2, 
           0}, {1.5, 0.8660254037844386}}]],
        "Triangle"]},
      ImageSize->{
       90.56640625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0.5, 0.5 and Triangle of the list \
the list 0, 0, the list 2, 0, the list 3 halves, 1 half times square root of \
3\"\>", "\<\"A graphic consisting of light pink triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], EdgeForm[Thickness[Large]], 
       TagBox[
        PolygonBox[
         NCache[{{0, 0}, {1, 0}, {
           Rational[3, 4], Rational[1, 4] 3^Rational[1, 2]}}, {{0, 0}, {1, 
           0}, {0.75, 0.4330127018922193}}]],
        "Triangle"]},
      ImageSize->{
       90.44140625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0.5, 0.5, edge form thickness Large \
and Triangle of the list the list 0, 0, the list 1, 0, the list 3 fourths, 1 \
fourth times square root of 3\"\>", "\<\"A graphic consisting of light pink \
triangle.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}, {{1, 1}}],
        AffineHalfSpace[{0, 0}, {{1, -1}}, {1, 1}]]},
      ImageSize->{
       90.3984375, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0, 0 and AffineHalfSpace of the list \
0, 0, the list the list 1, minus 1 and the list 1, 1\"\>", "\<\"A graphic \
consisting of red affine half space.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0, 1, 0], 
       InterpretationBox[ConicHullRegionBox[{0, 0}, {{1, -1}}],
        AffineSpace[{0, 0}, {{1, -1}}]]},
      ImageSize->{
       90.1484375, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 0, 1, 0 and AffineSpace of the list 0, \
0 and the list the list 1, minus 1\"\>", "\<\"A graphic consisting of light \
green affine space.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0.5, 0.5], 
       InterpretationBox[
        FilledCurveBox[
         NCache[{{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, Rational[-1, 2]}, {
              Rational[1, 2], Rational[-1, 2]}, {
              Rational[1, 2], Rational[1, 2]}, {0, Rational[1, 2]}, {
              Rational[-1, 2], Rational[1, 2]}, {
              Rational[-1, 2], Rational[-1, 2]}, {0, Rational[-1, 2]}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}, {{
           BSplineCurve[{{0, -1}, {1, -1}, {1, 1}, {0, 1}, {-1, 
             1}, {-1, -1}, {0, -1}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}, {
           BSplineCurve[{{0, -0.5}, {0.5, -0.5}, {0.5, 0.5}, {0, 0.5}, {-0.5, 
              0.5}, {-0.5, -0.5}, {0, -0.5}}, 
             SplineKnots -> {
              0, 0, 0, Rational[1, 4], Rational[1, 2], Rational[1, 2], 
               Rational[3, 4], 1, 1, 1}, 
             SplineWeights -> {2, 1, 1, 2, 1, 1, 2}, SplineDegree -> 2]}}]],
        Annulus[{0, 0}, {
          Rational[1, 2], 1}]]},
      ImageSize->{
       90.12890625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of RGB color 1, 0.5, 0.5 and Annulus of the list 0, \
0 and the list 1 half, 1\"\>", "\<\"A graphic consisting of light pink \
annulus.\"\>"},
    {
     GraphicsBox[
      {RGBColor[1, 0, 0], 
       {Arrowheads[Large], ArrowBox[{{0, 0}, {1, 0.5}}]}},
      ImageSize->{
       89.7265625, 
        Automatic}], "\<\"-Graphics-\"\>", "\<\"Graphics[\[Ellipsis]]\"\>", "\
\<\"a graphic consisting of an arrow\"\>", "\<\"A graphic consisting of red \
arrow.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.80370189202151*^9, {3.803702119076523*^9, 3.8037021237594557`*^9}},
 CellLabel->
  "Out[555]=",ExpressionUUID->"c6e994b1-bf17-47c5-a7eb-372ae39d1284"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Describing triangles", "Section",
 CellChangeTimes->{{3.8037356174186497`*^9, 
  3.80373562764475*^9}},ExpressionUUID->"31bd3544-ea5a-4ce4-82bd-\
9949cbff8e3f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Graphics\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"ToString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TextString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"SpokenString\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"TriangleDescription\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     GraphicsBox[
      {RGBColor[0.3207922106205072, 0.8767125743329753, 0.07836969213766487], 
       PolygonBox[{{8.497726168754124, 3.3637324384998095`}, {
        3.200401192529066, 9.130758312941953}, {2.1587580800959767`, 
        4.490183389297204}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light green, scalene triangle, \
with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.04000662768082175, 0.5018366550212172, 0.5323558031029978], 
       PolygonBox[{{8.238472118839269, 7.092009121195268}, {9.330671967123031,
         0.5009535697946887}, {2.816746523254359, 
        1.1242317489815985`}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a gray, scalene triangle, with \
its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.011874739032284864`, 0.5653893173449243, 0.30158105864279894`], 
       PolygonBox[{{4.760237143537108, 4.076804179080934}, {4.637971294360199,
         2.696186183050955}, {2.9629224377613195`, 
        0.9560117282052403}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a green, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.15191759437158803`, 0.005771922187516987, 0.8669020287130986], 
       PolygonBox[{{2.607560278950494, 0.35505168233426865`}, {
        0.9707638307640654, 0.4517673860133371}, {1.0483594478805713`, 
        6.255300239901157}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a blue, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.9495179386488442, 0.6496002365220281, 0.12686265915507056`],
        PolygonBox[{{0.46147571528241116`, 5.561709490924439}, {
        1.2545654634854273`, 1.573224106355834}, {2.47780683459869, 
        6.5221266756623955`}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a orange, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.23299993627597915`, 0.9549500470665511, 0.8462640214659061],
        PolygonBox[{{6.901311973674165, 1.9677626059540732`}, {
        9.64196463916607, 4.887901118994888}, {4.710860926581793, 
        1.9137374056240795`}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a cyan, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.7786042814487764, 0.3843243974620556, 0.48010602443452144`],
        PolygonBox[{{8.147920072867684, 1.8517499190992392`}, {
        0.4643517484298503, 3.6798231557096948`}, {5.8023384971728404`, 
        2.135891042924243}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light pink, scalene and obtuse \
triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.2686745226031173, 0.8979265325827712, 0.3790982265382603], 
       PolygonBox[{{0.7218494539080567, 7.073732846062249}, {
        4.725927947049733, 6.257678796692712}, {6.953464492934646, 
        8.148060943302927}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light green, scalene and obtuse \
triangle, with its greatest side as a horizontal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[0.8336698643537674, 0.5770884567880861, 0.9187093063419394], 
       PolygonBox[{{0.1263360506274367, 3.3350760844236156`}, {
        0.8990361920923071, 1.3068587361345685`}, {3.5136441688743254`, 
        0.9879172422381348}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a light pink, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"},
    {
     GraphicsBox[
      {RGBColor[
       0.19379532231965557`, 0.3304855862149827, 0.11776441204051835`], 
       PolygonBox[{{1.9774497635178712`, 8.674908441142826}, {
        8.050077877900648, 3.8847239759786962`}, {0.25998882776109156`, 
        8.248361257339123}}]}], "\<\"-Graphics-\"\>", "\<\"Graphics[\
\[Ellipsis]]\"\>", "\<\"a graphic consisting of a polygon with 3 \
vertices\"\>", "\<\"A graphic consisting of a green, scalene and obtuse \
triangle, with its greatest side as a diagonal line.\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.803638124836224*^9, 3.8036418229419937`*^9, {3.803641926395732*^9, 
   3.803641948937512*^9}, {3.803642013246426*^9, 3.8036420333825502`*^9}, {
   3.8036420669988747`*^9, 3.803642088245166*^9}, 3.8036421340292387`*^9, {
   3.803642235631688*^9, 3.803642266305914*^9}, 3.803642433434353*^9, 
   3.803642473110588*^9, 3.803642561470089*^9, {3.8036428832933493`*^9, 
   3.803642899797701*^9}, 3.8036430252866793`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"cdd5deba-5184-43dd-b0e1-854d82039470"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{214, Automatic}, {Automatic, 50}},
DockedCells->{
  Cell[
   TextData[{
     StyleBox["  WOLFRAM ", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontWeight -> Bold, FontSize -> 40], 
     StyleBox["SUMMER SCHOOL", 
      GrayLevel[1], FontFamily -> "Source Sans Pro", FontSize -> 40], 
     StyleBox[" 2020", 
      RGBColor[1., 0.8784313725490196, 0.5058823529411764], FontFamily -> 
      "Source Sans Pro", FontSize -> 40]}], CellFrameMargins -> 10, 
   Background -> 
   RGBColor[0.3176470588235294, 0.49019607843137253`, 0.0784313725490196]]},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c59cc820-e76a-4c4b-9e95-ab8849799c0b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 345, 5, 98, "Title",ExpressionUUID->"df8094a1-e3b6-4100-a47b-d72f94de3e82"],
Cell[928, 29, 405, 6, 31, "Author",ExpressionUUID->"11b1fb68-66eb-4dd6-bf4c-03f7714f5e6e"],
Cell[1336, 37, 393, 6, 31, "Affiliation",ExpressionUUID->"dac8094c-523a-4ea3-804c-03f2b0c84226"],
Cell[CellGroupData[{
Cell[1754, 47, 146, 3, 69, "Chapter",ExpressionUUID->"aa1d4464-c445-4402-a18c-6747ec0ce84d"],
Cell[1903, 52, 602, 11, 81, "Text",ExpressionUUID->"9764a4ef-8b5c-4152-a4ac-819078d5162a"],
Cell[2508, 65, 172927, 2841, 313, "Input",ExpressionUUID->"5c86c008-802c-4fb5-beb4-91012ca26215"],
Cell[CellGroupData[{
Cell[175460, 2910, 162, 3, 67, "Section",ExpressionUUID->"4f50f39c-4d55-4d30-9a0e-51640815aec4"],
Cell[175625, 2915, 23426, 592, 231, "Output",ExpressionUUID->"7721d2eb-160b-4f50-8bad-981177faaaf1"],
Cell[199054, 3509, 44001, 1043, 241, "Output",ExpressionUUID->"e799f1a7-0c6d-427f-9c35-6ef33832814e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243092, 4557, 164, 3, 67, "Section",ExpressionUUID->"1238e1ef-9b00-471d-8fc7-0043f4c0b28c"],
Cell[243259, 4562, 5373, 129, 557, "Output",ExpressionUUID->"c6e994b1-bf17-47c5-a7eb-372ae39d1284"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248669, 4696, 166, 3, 67, "Section",ExpressionUUID->"31bd3544-ea5a-4ce4-82bd-9949cbff8e3f"],
Cell[248838, 4701, 6315, 124, 1599, "Output",ExpressionUUID->"cdd5deba-5184-43dd-b0e1-854d82039470"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

